,Unnamed: 0,Unnamed: 0.1,questionid,student,model,question,score,model_de,question_de,student_de,question_ceb,model_ceb,student_ceb,question_sv,model_sv,student_sv,question_fr,model_fr,student_fr,question_nl,model_nl,student_nl,question_ru,model_ru,student_ru,question_it,model_it,student_it,question_es,model_es,student_es,question_pl,model_pl,student_pl,question_vi,model_vi,student_vi,question_ja,model_ja,student_ja,question_zh,model_zh,student_zh,question_ar,model_ar,student_ar,question_uk,model_uk,student_uk,question_pt,model_pt,student_pt,question_fa,model_fa,student_fa,question_ca,model_ca,student_ca,question_sr,model_sr,student_sr,question_id,model_id,student_id,question_no,model_no,student_no,question_ko,model_ko,student_ko,question_fi,model_fi,student_fi,question_hu,model_hu,student_hu,question_cs,model_cs,student_cs,question_sh,model_sh,student_sh
0,0,1520,9.1,"Stores a set of elements in a particular order with a First In, First Out principle","A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",What is a queue?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element das letzte ist, das entfernt wird (oder das First-In-First-Out).",Was ist eine Warteschlange?,"Speichert eine Reihe von Elementen in einer bestimmten Reihenfolge mit einem First In, First Out-Prinzip",Unsa ang pila?,"Ang usa ka istraktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang ulahi nga tangtangon (o una-sa-una-nga-out)","Nagtipig usa ka hugpong nga elemento sa usa ka piho nga han-ay nga adunay usa ka prinsipyo nga Una, Una nga Paggawas",Vad är en kö?,"En datastruktur som kan lagra element, som har den egenskapen att det senast tillagda objektet är det sista som tas bort (eller först-in-först-ut).","Lagrar en uppsättning element i en viss ordning med principen First In, First Out",Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le dernier à être supprimé (ou premier entré, premier sorti).","Stocke un ensemble d&#39;éléments dans un ordre particulier avec un principe premier entré, premier sorti",Wat is een wachtrij?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item het laatste is dat wordt verwijderd (of first-in-first-out).","Slaat een set elementen op in een bepaalde volgorde met een First In, First Out-principe",Что такое очередь?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален последним (или первым пришел - первым ушел).",Хранит набор элементов в определенном порядке по принципу «первым пришел - первым ушел».,Cos&#39;è una coda?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà l&#39;ultimo a essere rimosso (o first-in-first-out).","Memorizza un insieme di elementi in un ordine particolare con un principio First In, First Out",¿Qué es una cola?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el último en ser eliminado (o el primero en entrar, primero en salir).","Almacena un conjunto de elementos en un orden particular con un principio de primero en entrar, primero en salir",Co to jest kolejka?,"Struktura danych, która może przechowywać elementy, która ma tę właściwość, że ostatni dodany element będzie ostatnim do usunięcia (lub pierwszy na wejściu, pierwszy na wyjściu).","Przechowuje zestaw elementów w określonej kolejności z zasadą „pierwsze weszło, pierwsze wyszło”",Hàng đợi là gì?,"Một cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử cuối cùng bị xóa (hoặc nhập trước xuất trước).","Lưu trữ một tập hợp các phần tử theo một thứ tự cụ thể với nguyên tắc Nhập trước, Xuất trước",キューとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最後に削除される（または先入れ先出し）というプロパティがあります。,先入れ先出しの原則を使用して、要素のセットを特定の順序で格納します,什么是队列？,可以存储元素的数据结构，其属性为最后添加的项将是最后要删除的（或先进先出）。,使用先进先出原则按特定顺序存储一组元素,ما هو الطابور؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون آخر عنصر تتم إزالته (أو ما يرد أولاً يخرج أولاً).,يخزن مجموعة من العناصر بترتيب معين باستخدام مبدأ First In ، First Out,Що таке черга?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде останнім, який буде видалено (або перший-у-першому-вихід).","Зберігає набір елементів у певному порядку за принципом &quot;Перший вхід, перший вихід&quot;",O que é uma fila?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o último a ser removido (ou primeiro a entrar, primeiro a sair).","Armazena um conjunto de elementos em uma ordem específica com um princípio Primeiro a Entrar, Primeiro a Sair",صف چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده آخرین موردی است که حذف می شود (یا اولین بار در اولین بار).,مجموعه ای از عناصر را به ترتیب خاص با اصل First In، First Out ذخیره می کند,Què és una cua?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà l’últim que s’eliminarà (o el primer entrant-primer sortint).","Emmagatzema un conjunt d&#39;elements en un ordre concret amb un principi First In, First Out",Шта је ред?,"Структура података која може да складишти елементе, а која има својство да ће последња додата ставка бити последња која ће бити уклоњена (или прва у првом).","Чува скуп елемената у одређеном редоследу са принципом Прво улазак, први излазак",Apa itu antrian?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang item terakhir ditambahkan akan menjadi yang terakhir dihapus (atau pertama masuk pertama keluar).","Menyimpan sekumpulan elemen dalam urutan tertentu dengan prinsip First In, First Out",Hva er kø?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det siste som blir fjernet (eller først-inn-først-ut).","Lagrer et sett med elementer i en bestemt rekkefølge med et First In, First Out-prinsipp",대기열이란 무엇입니까?,마지막으로 추가 된 항목이 제거 될 마지막 항목 (또는 선입 선출)이라는 속성을 가진 요소를 저장할 수있는 데이터 구조입니다.,"First In, First Out 원칙을 사용하여 특정 순서로 요소 집합을 저장합니다.",Mikä on jono?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan viimeisenä (tai ensin sisään-sisään-ulos-lähtöön).","Tallentaa joukon elementtejä tietyssä järjestyksessä First In, First Out -periaatteella",Mi a sor?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az utolsó, amelyet eltávolítanak (vagy az első az elsőben ki-be).","Elemek halmazát tárolja egy adott sorrendben, az Első be, az első kimenet elvével",Co je to fronta?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude poslední, která bude odebrána (nebo první-první-první-ven).","Ukládá sadu prvků v určitém pořadí s principem First In, First Out",Šta je red?,"Struktura podataka koja može pohraniti elemente, koja ima svojstvo da će zadnja dodana stavka biti posljednja koja će se ukloniti (ili prva u prvom pojavljivanju).","Pohranjuje skup elemenata u određenom redoslijedu s principom First In, First Out"
1,1,2413,12.9,pointer to the child and delete it has 2 children set the node to the child and delete it. the node to th middle will then take its place,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,3.0,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,Zeiger auf das Kind und löschen es hat 2 Kinder setzen den Knoten auf das Kind und löschen es. Der Knoten zur Mitte nimmt dann seinen Platz ein,Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).",tudlo sa bata ug tangtanga kini adunay 2 nga mga bata nga gitakda ang node sa bata ug tangtanga kini. ang node sa ika tunga nga dapit puli niini,Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,pekaren till barnet och ta bort det har två barn ställer in noden till barnet och tar bort det. noden till mitten tar sedan sin plats,Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).",pointeur vers l&#39;enfant et supprimez-le a 2 enfants définissez le nœud sur l&#39;enfant et supprimez-le. le nœud au milieu prendra alors sa place,Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,wijzer naar het kind en verwijder het heeft 2 kinderen zet het knooppunt op het kind en verwijder het. het knooppunt naar het midden zal dan zijn plaats innemen,Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","указатель на дочерний элемент и удалить его имеет 2 дочерних элемента, которые устанавливают узел на дочерний элемент и удаляют его. узел до середины затем займет свое место",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).",puntatore al figlio ed eliminalo ha 2 figli imposta il nodo al figlio e cancellalo. il nodo al centro prenderà quindi il suo posto,¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).",puntero al niño y eliminar tiene 2 niños establecer el nodo en el niño y eliminarlo. el nodo al medio ocupará su lugar,Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).",wskaźnik do dziecka i usuń go ma 2 dzieci ustaw węzeł na dziecko i usuń go. węzeł do środka zajmie wtedy jego miejsce,Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).",con trỏ đến con và xóa nó có 2 con đặt nút con và xóa nó. sau đó nút đến giữa sẽ thay thế,二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,子へのポインタとそれを削除するには、2つの子がノードを子に設定して削除します。その後、中間のノードがその場所になります,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,指向子节点并删除它的指针有2个子节点，将节点设置为子节点并删除它。中间的节点将取代它的位置,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,قم بحذف المؤشر للطفل وله طفلان قم بتعيين العقدة للطفل وحذفها. ثم سوف تأخذ العقدة إلى الوسط مكانها,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).",вказівник на дочірній матеріал і видалити його має 2 дітей встановити вузол дочірнього і видалити його. тоді вузол до середини займе своє місце,Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,"ponteiro para o filho e excluí-lo tem 2 filhos, definir o nó para o filho e excluí-lo. o nó do meio irá então tomar o seu lugar",چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,اشاره گر به کودک و حذف آن 2 فرزند گره را به کودک تنظیم کرده و آن را حذف کنید. سپس گره تا وسط جای خود را می گیرد,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).",el punter al nen i suprimir-lo té 2 fills que defineixen el node al nen i el suprimeixen. el node al mig lloc ocuparà el seu lloc,Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).",показивач на дете и избриши га има 2 детета постави чвор детету и избриши га. тада ће место заузети чвор до средине,Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).",pointer ke anak dan hapus itu memiliki 2 anak mengatur node ke anak dan menghapusnya. node ke tengah akan menggantikan tempatnya,Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).",pekeren til barnet og slett det har to barn satt noden til barnet og slett det. noden til midten vil da ta sin plass,이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,자식에 대한 포인터를 삭제하고 2 개의 자식이 자식 노드를 자식으로 설정하고 삭제합니다. 그러면 중간 노드가 그 자리를 차지합니다.,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,osoitin lapselle ja poista se. 2 lasta asettaa solmun lapselle ja poistaa sen. sitten solmu keskelle tulee sitten paikkansa,Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","mutasson a gyermekre, és törölje, 2 gyermek állítsa be a csomópontot a gyermek számára, és törölje. majd a közepéig tartó csomópont átveszi a helyét",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,ukazatel na dítě a odstranit má 2 děti nastavit uzel na dítě a odstranit ho. uzel do středu pak zaujme své místo,Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).",pokazivač na dijete i izbriši ga ima 2 djece postavi čvor djetetu i izbriši ga. čvor do srednje sredine tada će zauzeti svoje mjesto
2,2,1899,11.2,public private and protected,Private and public.,What are the access-specifiers that can be used in a C++ class definition?,5.0,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,öffentlich privat und geschützt,Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,pribado ug protektado sa publiko,Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,offentlig och skyddad,Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,public privé et protégé,Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,publiek privaat en beschermd,Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,общественные частные и охраняемые,Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,pubblico privato e protetto,¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,público privado y protegido,"Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,publiczne prywatne i chronione,Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,công tư và được bảo vệ,C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,パブリックプライベートおよび保護,C ++类定义中可以使用哪些访问说明符？,私人和公共。,公私和受保护,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,العامة الخاصة والمحمية,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,державно-приватна та захищена,Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,público privado e protegido,مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,خصوصی خصوصی و محافظت شده,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,públic privat i protegit,Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,јавно приватно и заштићено,Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,publik swasta dan dilindungi,Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,offentlig privat og beskyttet,C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,공공 개인 및 보호,"Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,yksityinen ja suojattu,Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,állami magán és védett,"Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,veřejné a chráněné,Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,javno privatno i zaštićeno
3,3,1896,11.2,Public or Private.,Private and public.,What are the access-specifiers that can be used in a C++ class definition?,5.0,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,Öffentlich oder privat.,Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,Publiko o Pribado.,Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,Offentlig eller privat.,Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,Public ou privé.,Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,Openbaar of privé.,Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,Общедоступный или частный.,Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,Pubblico o privato.,¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,Público o Privado.,"Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,Publiczne lub prywatne.,Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,Công cộng hoặc tư nhân.,C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,パブリックまたはプライベート。,C ++类定义中可以使用哪些访问说明符？,私人和公共。,公共或私人。,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,عام أو خاص.,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,Державний або приватний.,Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,Público ou privado.,مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,عمومی یا خصوصی.,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,Públic o privat.,Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,Јавно или приватно.,Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,Publik atau Swasta.,Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,Offentlig eller privat.,C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,공개 또는 비공개.,"Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,Julkinen tai yksityinen.,Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,Nyilvános vagy magán.,"Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,Veřejné nebo soukromé.,Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,Javno ili privatno.
4,4,791,4.6,Run-time.,Run-time error.,Using an index outside the bounds of the array generates an error. Is this a compilation error or a run-time error?,5.0,Laufzeit Fehler.,Die Verwendung eines Index außerhalb der Grenzen des Arrays erzeugt einen Fehler. Ist dies ein Kompilierungsfehler oder ein Laufzeitfehler?,Laufzeit.,Ang paggamit sa usa ka indeks sa gawas sa utlanan sa han-ay naghatag usa ka sayup. Kini ba usa ka sayup nga panagsama o usa ba nga sayup sa pagdagan?,Sayup sa oras sa pagdagan.,Run-time.,Att använda ett index utanför gruppens gränser genererar ett fel. Är detta ett kompileringsfel eller ett körtidsfel?,Körtidsfel.,Körning.,L&#39;utilisation d&#39;un index en dehors des limites du tableau génère une erreur. S&#39;agit-il d&#39;une erreur de compilation ou d&#39;une erreur d&#39;exécution?,Erreur d&#39;exécution.,Durée.,Het gebruik van een index buiten de grenzen van de array genereert een fout. Is dit een compilatiefout of een runtime-fout?,Runtime-fout.,Looptijd.,Использование индекса за пределами массива вызывает ошибку. Это ошибка компиляции или ошибка времени выполнения?,Ошибка выполнения.,Время выполнения.,L&#39;utilizzo di un indice al di fuori dei limiti dell&#39;array genera un errore. È un errore di compilazione o un errore di runtime?,Errore di run-time.,Tempo di esecuzione.,El uso de un índice fuera de los límites de la matriz genera un error. ¿Es esto un error de compilación o un error de tiempo de ejecución?,Error de tiempo de ejecución.,Tiempo de ejecución.,Użycie indeksu poza granicami tablicy generuje błąd. Czy to błąd kompilacji czy błąd czasu wykonywania?,Błąd wykonania.,Czas działania.,Sử dụng chỉ mục bên ngoài giới hạn của mảng sẽ tạo ra lỗi. Đây là lỗi biên dịch hay lỗi thời gian chạy?,Lỗi runtime.,Thời gian chạy.,配列の境界外のインデックスを使用すると、エラーが発生します。これはコンパイルエラーですか、それとも実行時エラーですか？,ランタイムエラー。,ランタイム。,在数组范围之外使用索引会产生错误。这是编译错误还是运行时错误？,运行时错误。,运行。,يؤدي استخدام فهرس خارج حدود المصفوفة إلى حدوث خطأ. هل هذا خطأ تجميع أم خطأ وقت التشغيل؟,خطا وقت التشغيل.,مدة العرض.,Використання індексу поза межами масиву генерує помилку. Це помилка компіляції чи помилка виконання?,Помилка під час виконання.,Час роботи.,Usar um índice fora dos limites da matriz gera um erro. Este é um erro de compilação ou um erro de tempo de execução?,Erro em tempo de execução.,Tempo de execução.,استفاده از فهرست خارج از آرایه خطایی ایجاد می کند. آیا این یک خطای تلفیقی است یا یک خطای زمان اجرا است؟,خطای زمان اجرا.,زمان اجرا,L’ús d’un índex fora dels límits de la matriu genera un error. Es tracta d&#39;un error de compilació o d&#39;un temps d&#39;execució?,Error d&#39;execució.,Temps d&#39;execució.,Коришћење индекса изван граница поља генерише грешку. Да ли је ово грешка у компилацији или грешка током извршавања?,Грешка у раду.,Време извођења.,Menggunakan indeks di luar batas-batas larik menghasilkan kesalahan. Apakah ini kesalahan kompilasi atau kesalahan run-time?,Kesalahan run-time.,Waktu berjalan.,Å bruke en indeks utenfor områdets grenser genererer en feil. Er dette en kompileringsfeil eller en kjøretidsfeil?,Kjøretidsfeil.,Kjøretid.,배열 경계를 벗어난 인덱스를 사용하면 오류가 발생합니다. 컴파일 오류입니까 아니면 런타임 오류입니까?,런타임 오류.,실행 시간.,Hakemiston käyttö taulukon rajojen ulkopuolella tuottaa virheen. Onko tämä käännösvirhe vai ajonaikainen virhe?,Suorituksenaikainen virhe.,Käyttöaika.,A tömb határain kívüli index használata hibát eredményez. Összeállítási hiba vagy futásidejű hiba?,Futtatási hiba.,Futásidő.,Použití indexu mimo hranice pole generuje chybu. Je to chyba kompilace nebo chyba běhu?,Chyba za běhu.,Run-time.,Korištenje indeksa izvan granica polja generira grešku. Je li ovo greška u kompilaciji ili pogreška u toku izvođenja?,Greška u vremenu izvođenja.,Vreme izvođenja.
5,5,1237,7.4,"Linked lists permit insertion and removal of nodes at any point in the list in constant time,[1] but do not allow random access.",By reference.,How are linked lists passed as arguments to a function?,1.5,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,"Verknüpfte Listen ermöglichen das Einfügen und Entfernen von Knoten an jedem Punkt der Liste in konstanter Zeit [1], erlauben jedoch keinen wahlfreien Zugriff.",Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,"Ang mga nalista nga lista nagtugot sa pagsulud ug pagtangtang sa mga node sa bisan unsang punto sa lista sa kanunay nga oras, [1] apan dili tugutan ang sulud nga pag-access.",Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,"Länkade listor tillåter införande och borttagning av noder när som helst i listan under konstant tid, [1] men tillåter inte slumpmässig åtkomst.",Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,"Les listes liées permettent l&#39;insertion et la suppression de nœuds à n&#39;importe quel point de la liste en temps constant, [1] mais ne permettent pas l&#39;accès aléatoire.",Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,"Gelinkte lijsten maken het invoegen en verwijderen van knooppunten op elk punt in de lijst in constante tijd mogelijk [1], maar staan geen willekeurige toegang toe.",Как связанные списки передаются в качестве аргументов функции?,По ссылке.,"Связанные списки позволяют вставлять и удалять узлы в любой точке списка в постоянное время [1], но не допускают произвольный доступ.",Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,"Gli elenchi collegati consentono l&#39;inserimento e la rimozione di nodi in qualsiasi punto dell&#39;elenco in tempo costante, [1] ma non consentono l&#39;accesso casuale.",¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,"Las listas enlazadas permiten la inserción y eliminación de nodos en cualquier punto de la lista en tiempo constante, [1] pero no permiten el acceso aleatorio.",W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,"Listy połączone pozwalają na wstawianie i usuwanie węzłów w dowolnym punkcie listy w stałym czasie [1], ale nie pozwalają na swobodny dostęp.",Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,"Danh sách được liên kết cho phép chèn và loại bỏ các nút tại bất kỳ điểm nào trong danh sách trong thời gian không đổi, [1] nhưng không cho phép truy cập ngẫu nhiên.",リンクリストはどのように引数として関数に渡されますか？,参照による。,リンクリストでは、リスト内の任意の時点で一定時間内にノードを挿入および削除できますが[1]、ランダムアクセスは許可されません。,链表如何作为参数传递给函数？,引用。,链接列表允许在恒定时间内在列表的任何位置插入和删除节点，[1]但不允许随机访问。,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,تسمح القوائم المرتبطة بإدراج العقد وإزالتها في أي وقت في القائمة في وقت ثابت ، [1] ولكنها لا تسمح بالوصول العشوائي.,Як зв’язані списки передаються як аргументи функції?,За посиланням.,"Зв’язані списки дозволяють вставляти та видаляти вузли в будь-якій точці списку за постійний час [1], але не дозволяють довільного доступу.",Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,"Listas vinculadas permitem a inserção e remoção de nós em qualquer ponto da lista em tempo constante, [1] mas não permitem acesso aleatório.",چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,لیست های پیوند داده شده اجازه درج و حذف گره ها را در هر نقطه از لیست در زمان ثابت دارند ، [1] اما دسترسی تصادفی را مجاز نمی دانند.,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,"Les llistes enllaçades permeten inserir i eliminar nodes en qualsevol punt de la llista en temps constant, [1] però no permeten l&#39;accés aleatori.",Како се повезане листе прослеђују као аргументи функцији?,По референци.,"Повезане листе омогућавају уметање и уклањање чворова у било којој тачки листе у константном времену, [1] али не дозвољавају насумични приступ.",Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,"Daftar tertaut mengizinkan penyisipan dan penghapusan node di titik mana pun dalam daftar dalam waktu yang konstan, [1] tetapi tidak mengizinkan akses acak.",Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,"Koblede lister tillater innsetting og fjerning av noder når som helst på listen i konstant tid, [1] men tillater ikke tilfeldig tilgang.",연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,연결된 목록은 목록의 어느 지점에서나 일정한 시간에 노드의 삽입 및 제거를 허용하지만 [1] 임의 액세스는 허용하지 않습니다.,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,"Linkitetyt luettelot mahdollistavat solmujen lisäämisen ja poistamisen missä tahansa luettelon kohdassa vakiona [1], mutta eivät salli satunnaista käyttöä.",Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,"Az összekapcsolt listák lehetővé teszik a csomópontok beillesztését és eltávolítását a lista bármely pontján, állandó időben, [1] de nem engedélyezik a véletlenszerű hozzáférést.",Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,"Propojené seznamy umožňují vkládání a odebírání uzlů v libovolném bodě seznamu v konstantním čase [1], ale neumožňují náhodný přístup.",Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,"Povezane liste omogućavaju umetanje i uklanjanje čvorova u bilo kojoj točki popisa u konstantnom vremenu, [1] ali ne dopuštaju nasumični pristup."
6,6,306,2.4,C++ will create a default constructor when no other constructor is present.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When does C++ create a default constructor?,5.0,"Wenn kein Konstruktor angegeben ist, stellt der Compiler standardmäßig einen bereit. Wenn für eine Klasse ein Konstruktor definiert ist, erstellt der Compiler keinen Standardkonstruktor.",Wann erstellt C ++ einen Standardkonstruktor?,"C ++ erstellt einen Standardkonstruktor, wenn kein anderer Konstruktor vorhanden ist.",Kanus-a maghimo ang C ++ usa ka default nga magtutukod?,"Kung wala gihatag ang magtutukod, ang tagatala naghatag usa ingon default. Kung ang usa ka magtutukod gihubit alang sa usa ka klase, ang tagtipon dili maghimo usa ka default nga magtutukod.",Ang C ++ maghimo usa ka default nga magtutukod kung wala ang uban pang magtutukod nga anaa.,När skapar C ++ en standardkonstruktör?,Om ingen konstruktör tillhandahålls tillhandahåller kompilatorn en som standard. Om en konstruktör är definierad för en klass skapar inte kompilatorn en standardkonstruktör.,C ++ skapar en standardkonstruktör när ingen annan konstruktör är närvarande.,Quand C ++ crée-t-il un constructeur par défaut?,"Si aucun constructeur n&#39;est fourni, le compilateur en fournit un par défaut. Si un constructeur est défini pour une classe, le compilateur ne crée pas de constructeur par défaut.",C ++ créera un constructeur par défaut lorsqu&#39;aucun autre constructeur n&#39;est présent.,Wanneer maakt C ++ een standaardconstructor?,"Als er geen constructor is opgegeven, biedt de compiler er standaard een aan. Als een constructor is gedefinieerd voor een klasse, maakt de compiler geen standaardconstructor.",C ++ maakt een standaardconstructor aan als er geen andere constructor aanwezig is.,Когда C ++ создает конструктор по умолчанию?,"Если конструктор не указан, компилятор предоставляет его по умолчанию. Если для класса определен конструктор, компилятор не создает конструктор по умолчанию.","C ++ создаст конструктор по умолчанию, когда нет другого конструктора.",Quando C ++ crea un costruttore predefinito?,"Se non viene fornito alcun costruttore, il compilatore ne fornisce uno per impostazione predefinita. Se un costruttore è definito per una classe, il compilatore non crea un costruttore predefinito.",C ++ creerà un costruttore predefinito quando non è presente nessun altro costruttore.,¿Cuándo crea C ++ un constructor predeterminado?,"Si no se proporciona ningún constructor, el compilador proporciona uno por defecto. Si se define un constructor para una clase, el compilador no crea un constructor predeterminado.",C ++ creará un constructor predeterminado cuando no haya ningún otro constructor presente.,Kiedy C ++ tworzy domyślny konstruktor?,"Jeśli nie podano konstruktora, kompilator udostępnia go domyślnie. Jeśli konstruktor jest zdefiniowany dla klasy, kompilator nie tworzy konstruktora domyślnego.","C ++ utworzy domyślny konstruktor, gdy nie ma innego konstruktora.",Khi nào C ++ tạo một phương thức khởi tạo mặc định?,"Nếu không có hàm tạo nào được cung cấp, trình biên dịch sẽ cung cấp một hàm tạo theo mặc định. Nếu một phương thức khởi tạo được định nghĩa cho một lớp, trình biên dịch không tạo một phương thức khởi tạo mặc định.",C ++ sẽ tạo một phương thức khởi tạo mặc định khi không có phương thức khởi tạo nào khác.,C ++はいつデフォルトのコンストラクターを作成しますか？,コンストラクターが提供されていない場合、コンパイラーはデフォルトでコンストラクターを提供します。クラスにコンストラクターが定義されている場合、コンパイラーはデフォルトのコンストラクターを作成しません。,C ++は、他のコンストラクターが存在しない場合にデフォルトのコンストラクターを作成します。,C ++何时创建默认构造函数？,如果未提供构造函数，则编译器默认提供一个构造函数。如果为类定义了构造函数，则编译器不会创建默认构造函数。,当没有其他构造函数时，C ++将创建一个默认构造函数。,متى تقوم C ++ بإنشاء مُنشئ افتراضي؟,إذا لم يتم توفير مُنشئ ، يوفر المترجم واحدًا افتراضيًا. إذا تم تعريف مُنشئ لفئة ، فلن يقوم المترجم بإنشاء مُنشئ افتراضي.,سيُنشئ C ++ مُنشئًا افتراضيًا في حالة عدم وجود مُنشئ آخر.,Коли C ++ створює конструктор за замовчуванням?,"Якщо конструктор не вказаний, компілятор надає такий за замовчуванням. Якщо для класу визначено конструктор, компілятор не створює конструктор за замовчуванням.","C ++ створить конструктор за замовчуванням, коли жодного іншого конструктора немає.",Quando C ++ cria um construtor padrão?,"Se nenhum construtor for fornecido, o compilador fornece um por padrão. Se um construtor é definido para uma classe, o compilador não cria um construtor padrão.",C ++ criará um construtor padrão quando nenhum outro construtor estiver presente.,C ++ چه زمانی سازنده پیش فرض ایجاد می کند؟,اگر سازنده ای ارائه نشده باشد ، کامپایلر به طور پیش فرض سازنده ای را ارائه می دهد. اگر سازنده ای برای یک کلاس تعریف شده باشد ، کامپایلر یک سازنده پیش فرض ایجاد نمی کند.,C ++ در صورت عدم حضور سازنده دیگر ، یک سازنده پیش فرض ایجاد می کند.,Quan crea C ++ un constructor per defecte?,"Si no es proporciona cap constructor, el compilador en proporciona un per defecte. Si es defineix un constructor per a una classe, el compilador no crea un constructor per defecte.",C ++ crearà un constructor per defecte quan no hi hagi cap altre constructor.,Када Ц ++ креира подразумевани конструктор?,"Ако није наведен ниједан конструктор, компајлер га подразумевано нуди. Ако је конструктор дефинисан за класу, компајлер не креира подразумевани конструктор.",Ц ++ ће створити задани конструктор када није присутан ниједан други конструктор.,Kapan C ++ membuat konstruktor default?,"Jika tidak ada konstruktor yang disediakan, kompilator menyediakannya secara default. Jika konstruktor ditentukan untuk kelas, kompilator tidak membuat konstruktor default.",C ++ akan membuat konstruktor default jika tidak ada konstruktor lain.,Når oppretter C ++ en standardkonstruktør?,"Hvis ingen konstruktører er gitt, gir kompilatoren en som standard. Hvis en konstruktør er definert for en klasse, lager ikke kompilatoren en standardkonstruktør.",C ++ oppretter en standardkonstruktør når ingen andre konstruktører er til stede.,C ++는 언제 기본 생성자를 생성합니까?,생성자가 제공되지 않으면 컴파일러는 기본적으로 생성자를 제공합니다. 생성자가 클래스에 대해 정의 된 경우 컴파일러는 기본 생성자를 만들지 않습니다.,C ++는 다른 생성자가 없을 때 기본 생성자를 만듭니다.,Milloin C ++ luo oletusrakentajan?,"Jos rakennuttajaa ei ole, kääntäjä antaa sellaisen oletusarvoisesti. Jos luokalle on määritetty konstruktori, kääntäjä ei luo oletusrakentajaa.","C ++ luo oletusrakentajan, kun muuta konstruktoria ei ole läsnä.",Mikor hoz létre a C ++ egy alapértelmezett konstruktort?,"Ha nincs megadva konstruktor, akkor a fordító alapértelmezés szerint biztosít egyet. Ha egy osztályhoz definiált egy konstruktort, akkor a fordító nem hoz létre alapértelmezett konstruktort.","A C ++ létrehoz egy alapértelmezett konstruktort, ha nincs más konstruktor.",Kdy C ++ vytvoří výchozí konstruktor?,"Pokud není k dispozici žádný konstruktor, kompilátor ho ve výchozím nastavení poskytuje. Pokud je pro třídu definován konstruktor, kompilátor nevytvoří výchozí konstruktor.","C ++ vytvoří výchozí konstruktor, když není přítomen žádný jiný konstruktor.",Kada C ++ kreira zadani konstruktor?,"Ako nije naveden nijedan konstruktor, kompajler ga prema zadanim postavkama daje. Ako je konstruktor definiran za klasu, kompajler ne stvara zadani konstruktor.",C ++ će stvoriti zadani konstruktor kada nije prisutan nijedan drugi konstruktor.
7,7,1610,9.4,you would have your list and add a back pointer so that your program knows where the end is,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",How can you implement a queue with a list?,4.0,"Lassen Sie die Rückseite der Warteschlange auf das Ende der verknüpften Liste zeigen, sodass die Warteschlangenoperation am Ende der Liste ausgeführt wird, und halten Sie die Vorderseite der Warteschlange auf den Kopf der verknüpften Liste, damit die Warteschlangenoperation ausgeführt wird am Anfang der Liste.",Wie können Sie eine Warteschlange mit einer Liste implementieren?,"Sie würden Ihre Liste haben und einen Rückzeiger hinzufügen, damit Ihr Programm weiß, wo das Ende ist",Giunsa nimo ipatuman ang usa ka pila nga adunay lista?,"Ipadayon ang likud sa pila nga nagpunting sa ikog sa nalambigit nga lista, mao nga ang enqueue nga operasyon gihimo sa katapusan sa lista, ug ipadayon ang atubangan sa pila nga nagtudlo sa ulohan sa na-link nga lista, mao nga nahuman ang operasyon sa dequeue sa pagsugod sa lista.",gusto nimo ang imong lista ug makadugang usa ka back pointer aron mahibal-an sa imong programa kung diin ang katapusan,Hur kan du implementera en kö med en lista?,"Håll den bakre delen av kön pekande mot svansen på den länkade listan, så enqueue-operationen görs i slutet av listan och håll den främre delen av kön pekande mot huvudet på den länkade listan, så att dequeue-operationen är klar i början av listan.",du skulle ha din lista och lägga till en bakåtpekare så att ditt program vet var slutet är,Comment pouvez-vous implémenter une file d&#39;attente avec une liste?,"Gardez l&#39;arrière de la file d&#39;attente pointant vers la fin de la liste liée, de sorte que l&#39;opération de mise en file d&#39;attente soit effectuée à la fin de la liste, et gardez l&#39;avant de la file d&#39;attente pointant vers la tête de la liste liée, de sorte que l&#39;opération de retrait de la file d&#39;attente soit effectuée au début de la liste.",vous auriez votre liste et ajouter un pointeur arrière pour que votre programme sache où se trouve la fin,Hoe implementeer je een wachtrij met een lijst?,"Houd de achterkant van de wachtrij naar de staart van de gekoppelde lijst, zodat de bewerking voor het in de wachtrij plaatsen aan het einde van de lijst wordt uitgevoerd en laat de voorkant van de wachtrij naar de kop van de gekoppelde lijst wijzen, zodat de bewerking voor het verwijderen van de wachtrij is voltooid aan het begin van de lijst.",je zou je lijst hebben en een achteraanwijzer toevoegen zodat je programma weet waar het einde is,Как можно реализовать очередь со списком?,"Задняя часть очереди должна указывать на конец связанного списка, чтобы операция постановки в очередь выполнялась в конце списка, а передняя часть очереди должна указывать на начало связанного списка, поэтому операция удаления из очереди выполняется в начале списка.","у вас будет свой список и добавить обратный указатель, чтобы ваша программа знала, где находится конец",Come puoi implementare una coda con un elenco?,"Mantieni la parte posteriore della coda che punta alla coda della lista collegata, quindi l&#39;operazione di accodamento viene eseguita alla fine della lista e mantieni la parte anteriore della coda puntata all&#39;inizio della lista collegata, quindi l&#39;operazione di rimozione dalla coda è fatta all&#39;inizio della lista.",dovresti avere la tua lista e aggiungere un puntatore indietro in modo che il tuo programma sappia dove si trova la fine,¿Cómo se puede implementar una cola con una lista?,"Mantenga la parte posterior de la cola apuntando a la cola de la lista vinculada, de modo que la operación de puesta en cola se realice al final de la lista, y mantenga la parte delantera de la cola apuntando al encabezado de la lista vinculada, para que la operación de eliminación de la cola esté lista al principio de la lista.",tendría su lista y agregaría un puntero hacia atrás para que su programa sepa dónde está el final,Jak zaimplementować kolejkę z listą?,"Utrzymuj tył kolejki skierowany na koniec połączonej listy, aby operacja umieszczania w kolejce była wykonywana na końcu listy i utrzymuj przód kolejki skierowany na początek połączonej listy, aby operacja usunięcia z kolejki została zakończona na początku listy.","miałbyś swoją listę i dodałbyś tylny wskaźnik, żeby twój program wiedział, gdzie jest koniec",Làm thế nào bạn có thể triển khai một hàng đợi với một danh sách?,"Giữ phần phía sau của hàng đợi trỏ đến phần cuối của danh sách được liên kết, do đó, hoạt động xếp hàng được thực hiện ở cuối danh sách và giữ phần phía trước của hàng đợi trỏ đến phần đầu của danh sách được liên kết, do đó hoạt động xếp hàng được thực hiện ở đầu danh sách.",bạn sẽ có danh sách của mình và thêm một con trỏ quay lại để chương trình của bạn biết điểm kết thúc ở đâu,リストを使用してキューを実装するにはどうすればよいですか？,キューの後ろがリンクリストの末尾を指すようにして、エンキュー操作がリストの最後を指すようにし、キューの前をリンクリストの先頭を指すようにして、デキュー操作が行われるようにします。リストの最初に。,あなたはあなたのリストを持っていて、あなたのプログラムが終わりがどこにあるかを知るようにバックポインタを追加するでしょう,如何实现带有列表的队列？,使队列的尾部指向链接列表的末尾，因此入队操作在列表的末尾进行，使队列的前部指向链接列表的头，因此完成出队操作在列表的开头。,您将拥有列表并添加后退指针，以便您的程序知道结尾在哪里,كيف يمكنك تنفيذ قائمة انتظار مع قائمة؟,احتفظ بالجزء الخلفي من قائمة الانتظار يشير إلى ذيل القائمة المرتبطة ، بحيث تتم عملية قائمة الانتظار في نهاية القائمة ، واحتفظ بمقدمة قائمة الانتظار تشير إلى رأس القائمة المرتبطة ، بحيث تتم عملية إنهاء قائمة الانتظار في بداية القائمة.,سيكون لديك قائمتك وإضافة مؤشر خلفي حتى يعرف برنامجك مكان النهاية,Як можна реалізувати чергу зі списком?,"Тримайте задню частину черги, спрямовану на хвіст пов’язаного списку, таким чином, операція чергування виконується в кінці списку, а передня частина черги вказує на голову пов’язаного списку, таким чином, операція скидання виконується на початку списку.","Ви отримаєте свій список і додасте зворотний покажчик, щоб ваша програма знала, де кінець",Como você pode implementar uma fila com uma lista?,"Mantenha a parte traseira da fila apontando para o final da lista vinculada, para que a operação de enfileiramento seja feita no final da lista, e mantenha a frente da fila apontando para o início da lista vinculada, para que a operação de desenfileiramento seja feita no início da lista.",você teria sua lista e adicionaria um ponteiro para trás para que seu programa saiba onde está o fim,چگونه می توان صف را با لیست پیاده سازی کرد؟,قسمت عقب صف را به سمت انتهای لیست پیوندی نگه دارید ، بنابراین عملیات enqueue در انتهای لیست انجام می شود و قسمت جلوی صف را به سمت سر لیست پیوندی نگه دارید ، بنابراین عملیات حذف نتیجه انجام می شود در ابتدای لیست.,شما لیست خود را دارید و یک نشانگر برگشت اضافه می کنید تا برنامه شما بداند که پایان کار کجاست,Com es pot implementar una cua amb una llista?,"Mantingueu la part posterior de la cua apuntant a la cua de la llista enllaçada, de manera que l&#39;operació de cola es realitzarà al final de la llista i mantingueu la part frontal de la cua apuntant cap al cap de la llista enllaçada, de manera que l&#39;operació de cola es realitzi. al principi de la llista.",tindríeu la vostra llista i afegiríeu un punter posterior perquè el vostre programa sàpiga on és el final,Како можете да примените ред са листом?,"Задњи део реда задржите тако да показује на реп повезане листе, тако да се операција чекања обавља на крају листе, а чек ред нека буде усмјерен на главу повезане листе, тако да је операција уклањања редоследа завршена на почетку списка.",имали бисте своју листу и додали задњи показивач тако да ваш програм зна где је крај,Bagaimana Anda bisa menerapkan antrian dengan daftar?,"Pertahankan bagian belakang antrian mengarah ke bagian belakang daftar tertaut, sehingga operasi antrean dilakukan di akhir daftar, dan pertahankan bagian depan antrean mengarah ke kepala daftar tertaut, sehingga operasi dequeue selesai di awal daftar.",Anda akan memiliki daftar Anda dan menambahkan penunjuk kembali sehingga program Anda tahu di mana akhirnya,Hvordan kan du implementere en kø med en liste?,"Hold baksiden av køen pekende mot halen på den koblede listen, slik at enqueue-operasjonen gjøres på slutten av listen, og hold forsiden av køen pekende mot hodet til den koblede listen, slik at dequeue-operasjonen er ferdig i begynnelsen av listen.",du vil ha listen din og legge til en bakpeker slik at programmet ditt vet hvor slutten er,목록이있는 대기열을 어떻게 구현할 수 있습니까?,대기열의 뒤쪽이 연결된 목록의 끝을 가리 키도록 유지하여 대기열에 넣기 작업이 목록의 끝에서 수행되도록하고 대기열의 앞쪽이 연결된 목록의 머리를 가리 키도록 유지하여 대기열에서 빼기 작업이 수행되도록합니다. 목록의 시작 부분에.,목록이 있고 백 포인터를 추가하여 프로그램이 끝이 어디인지 알 수 있습니다.,Kuinka voit toteuttaa jonon luettelon kanssa?,"Pidä jonon takaosaa linkitetyn luettelon hännään päin, jotta enqueue-toiminto tehdään luettelon lopussa, ja pidä jonon etu osoittavan linkitetyn luettelon päähän, joten purkotoiminto on valmis luettelon alussa.","sinulla olisi luettelosi ja lisäät takaisin osoittimen, jotta ohjelma tietää loppu",Hogyan lehet megvalósítani a listát tartalmazó várólistát?,"Tartsa a sor hátulját a csatolt lista farka felé mutatva, így az enqueue műveletet a lista végén hajtja végre, és a sor elejét tartsa a linkelt lista fejére mutatva, így a dequeue művelet megtörténik a lista elején.","megvan a listád, és hozzáadsz egy hátsó mutatót, hogy a programod tudja, hol a vége",Jak můžete implementovat frontu se seznamem?,"Udržujte zadní část fronty směřující na konec propojeného seznamu, aby se operace zařazení do fronty prováděla na konci seznamu, a udržujte přední část fronty směřující k hlavě propojeného seznamu, aby se operace zrušení fronty prováděla na začátku seznamu.","měli byste svůj seznam a přidali zadní ukazatel, aby váš program věděl, kde je konec",Kako možete implementirati red sa popisom?,"Zadnji dio reda neka bude usmjeren na rep povezane liste, tako da se operacija čekanja vrši na kraju popisa, a prednji dio reda mora biti usmjeren na glavu povezane liste, tako da je izvršena operacija uklanjanja reda na početku liste.",imali biste svoju listu i dodali zadnji pokazivač tako da vaš program zna gdje je kraj
8,8,1247,7.5,A circular linked list has the last node point back to the head of the linked list.,The last element in a circular linked list points to the head of the list.,What is the difference between a circular linked list and a basic linked list?,5.0,Das letzte Element in einer kreisförmig verknüpften Liste zeigt auf den Kopf der Liste.,Was ist der Unterschied zwischen einer zirkulären verknüpften Liste und einer einfachen verknüpften Liste?,Bei einer kreisförmigen verknüpften Liste zeigt der letzte Knotenpunkt zurück zum Kopf der verknüpften Liste.,Unsa ang kalainan sa us aka lista nga nalakip sa lingin ug us aka sukaranan nga nalakip nga lista?,Ang ulahi nga elemento sa usa ka lista nga nalakip sa lingin nagtudlo sa ulo sa lista.,Ang usa ka lista nga nalakip sa lingin adunay katapusan nga node point nga balik sa ulo sa nalista nga lista.,Vad är skillnaden mellan en cirkulär länkad lista och en grundlänkad lista?,Det sista elementet i en cirkulär länkad lista pekar på listans huvud.,En cirkulär länkad lista har den sista nodpunkten tillbaka till huvudet på den länkade listan.,Quelle est la différence entre une liste chaînée circulaire et une liste chaînée de base?,Le dernier élément d&#39;une liste liée circulaire pointe vers la tête de la liste.,Une liste liée circulaire a le dernier nœud pointé vers la tête de la liste liée.,Wat is het verschil tussen een circulaire gekoppelde lijst en een basis gekoppelde lijst?,Het laatste element in een circulaire gekoppelde lijst wijst naar de kop van de lijst.,Een circulaire gekoppelde lijst heeft het laatste knooppunt terug naar de kop van de gekoppelde lijst.,В чем разница между круговым связанным списком и основным связанным списком?,Последний элемент в круговом связном списке указывает на заголовок списка.,В кольцевом связанном списке последний узел указывает на начало связанного списка.,Qual è la differenza tra un elenco collegato circolare e un elenco collegato di base?,L&#39;ultimo elemento in un elenco collegato circolare punta all&#39;inizio dell&#39;elenco.,Un elenco collegato circolare riporta l&#39;ultimo punto nodo all&#39;inizio dell&#39;elenco collegato.,¿Cuál es la diferencia entre una lista enlazada circular y una lista enlazada básica?,El último elemento de una lista enlazada circular apunta al encabezado de la lista.,Una lista enlazada circular tiene el último nodo apuntando al encabezado de la lista enlazada.,Jaka jest różnica między listą połączoną cyklicznie a listą podstawową?,Ostatni element na okrągłej liście połączonej wskazuje na początek listy.,Lista połączona cyklicznie ma ostatni punkt węzła z powrotem na początku listy połączonej.,Sự khác biệt giữa danh sách liên kết vòng tròn và danh sách liên kết cơ bản là gì?,Phần tử cuối cùng trong danh sách được liên kết hình tròn trỏ đến phần đầu của danh sách.,Một danh sách được liên kết hình tròn có điểm nút cuối cùng quay trở lại phần đầu của danh sách được liên kết.,循環リンクリストと基本リンクリストの違いは何ですか？,循環リンクリストの最後の要素は、リストの先頭を指します。,循環リンクリストには、リンクリストの先頭に戻る最後のノードポイントがあります。,循环链表和基本链表有什么区别？,循环链接列表中的最后一个元素指向列表的开头。,循环链表的最后一个节点指向链表的开头。,ما الفرق بين قائمة مرتبطة دائرية وقائمة مرتبطة أساسية؟,يشير العنصر الأخير في قائمة مرتبطة دائرية إلى رأس القائمة.,تحتوي القائمة المرتبطة الدائرية على آخر نقطة عقدة تعود إلى رأس القائمة المرتبطة.,Яка різниця між круговим пов&#39;язаним списком та основним пов&#39;язаним списком?,Останній елемент у круговому зв’язаному списку вказує на головку списку.,Круговий зв’язаний список має останню точку вузла назад до заголовка зв’язаного списку.,Qual é a diferença entre uma lista ligada circular e uma lista ligada básica?,O último elemento em uma lista ligada circular aponta para o topo da lista.,Uma lista ligada circular tem o último ponto do nó de volta ao topo da lista ligada.,تفاوت بین یک لیست پیوندی دایره ای و یک لیست پیوندی اساسی چیست؟,آخرین عنصر در یک لیست دایره ای مرتبط به سر لیست نشان می دهد.,یک لیست پیوندی دایره ای آخرین گره را به سمت قسمت اصلی لیست پیوند می دهد.,Quina diferència hi ha entre una llista enllaçada circular i una llista enllaçada bàsica?,L&#39;últim element d&#39;una llista enllaçada circular apunta al cap de llista.,Una llista enllaçada circular té l&#39;últim punt del node cap al cap de la llista enllaçada.,Која је разлика између кружно повезане листе и основне повезане листе?,Последњи елемент у кружно повезаној листи показује на главу листе.,Кружна повезана листа има последњу тачку чвора назад до главе повезане листе.,Apa perbedaan antara daftar tertaut melingkar dan daftar tertaut dasar?,Elemen terakhir dalam daftar tertaut melingkar mengarah ke kepala daftar.,Daftar tertaut melingkar memiliki titik simpul terakhir kembali ke kepala daftar tertaut.,Hva er forskjellen mellom en sirkulær koblet liste og en grunnleggende koblet liste?,Det siste elementet i en sirkulær koblet liste peker mot hodet på listen.,En sirkulær koblet liste har det siste nodepunktet tilbake til hodet på den koblede listen.,순환 연결 목록과 기본 연결 목록의 차이점은 무엇입니까?,순환 연결 목록의 마지막 요소는 목록의 헤드를 가리 킵니다.,순환 연결 목록에는 연결 목록의 헤드를 다시 가리키는 마지막 노드가 있습니다.,Mitä eroa on pyöreällä linkitetyllä luettelolla linkitetyllä perusluettelolla?,Pyöreän linkitetyn luettelon viimeinen elementti osoittaa luettelon päähän.,Pyöreällä linkitetyllä luettelolla on viimeinen solmupiste takaisin linkitetyn luettelon päähän.,Mi a különbség a kör alakú linkelt lista és az alap linkelt lista között?,A kör alakú összekapcsolt lista utolsó eleme a lista fejére mutat.,A kör alakú összekapcsolt listának az utolsó csomópontja a csatolt lista fejéhez vezet vissza.,Jaký je rozdíl mezi cyklicky propojeným seznamem a základním propojeným seznamem?,Poslední prvek v kruhovém propojeném seznamu ukazuje na záhlaví seznamu.,Kruhový propojený seznam má poslední bod uzlu zpět do záhlaví propojeného seznamu.,Koja je razlika između kružno povezane liste i osnovne povezane liste?,Posljednji element na kružno povezanoj listi usmjerava na glavu popisa.,Kružna povezana lista ima zadnju tačku čvora natrag do glave povezane liste.
9,9,785,4.6,run time error,Run-time error.,Using an index outside the bounds of the array generates an error. Is this a compilation error or a run-time error?,5.0,Laufzeit Fehler.,Die Verwendung eines Index außerhalb der Grenzen des Arrays erzeugt einen Fehler. Ist dies ein Kompilierungsfehler oder ein Laufzeitfehler?,Laufzeit Fehler,Ang paggamit sa usa ka indeks sa gawas sa utlanan sa han-ay naghatag usa ka sayup. Kini ba usa ka sayup nga panagsama o usa ba nga sayup sa pagdagan?,Sayup sa oras sa pagdagan.,sayup sa oras sa pagdagan,Att använda ett index utanför gruppens gränser genererar ett fel. Är detta ett kompileringsfel eller ett körtidsfel?,Körtidsfel.,körtidsfel,L&#39;utilisation d&#39;un index en dehors des limites du tableau génère une erreur. S&#39;agit-il d&#39;une erreur de compilation ou d&#39;une erreur d&#39;exécution?,Erreur d&#39;exécution.,erreur d&#39;exécution,Het gebruik van een index buiten de grenzen van de array genereert een fout. Is dit een compilatiefout of een runtime-fout?,Runtime-fout.,looptijdfout,Использование индекса за пределами массива вызывает ошибку. Это ошибка компиляции или ошибка времени выполнения?,Ошибка выполнения.,ошибка выполнения,L&#39;utilizzo di un indice al di fuori dei limiti dell&#39;array genera un errore. È un errore di compilazione o un errore di runtime?,Errore di run-time.,errore di tempo di esecuzione,El uso de un índice fuera de los límites de la matriz genera un error. ¿Es esto un error de compilación o un error de tiempo de ejecución?,Error de tiempo de ejecución.,Error de tiempo de ejecución,Użycie indeksu poza granicami tablicy generuje błąd. Czy to błąd kompilacji czy błąd czasu wykonywania?,Błąd wykonania.,błąd czasu wykonania,Sử dụng chỉ mục bên ngoài giới hạn của mảng sẽ tạo ra lỗi. Đây là lỗi biên dịch hay lỗi thời gian chạy?,Lỗi runtime.,lỗi runtime,配列の境界外のインデックスを使用すると、エラーが発生します。これはコンパイルエラーですか、それとも実行時エラーですか？,ランタイムエラー。,ランタイムエラー,在数组范围之外使用索引会产生错误。这是编译错误还是运行时错误？,运行时错误。,运行时错误,يؤدي استخدام فهرس خارج حدود المصفوفة إلى حدوث خطأ. هل هذا خطأ تجميع أم خطأ وقت التشغيل؟,خطا وقت التشغيل.,خطا وقت التشغيل,Використання індексу поза межами масиву генерує помилку. Це помилка компіляції чи помилка виконання?,Помилка під час виконання.,помилка під час виконання,Usar um índice fora dos limites da matriz gera um erro. Este é um erro de compilação ou um erro de tempo de execução?,Erro em tempo de execução.,erro de tempo de execução,استفاده از فهرست خارج از آرایه خطایی ایجاد می کند. آیا این یک خطای تلفیقی است یا یک خطای زمان اجرا است؟,خطای زمان اجرا.,خطای زمان اجرا,L’ús d’un índex fora dels límits de la matriu genera un error. Es tracta d&#39;un error de compilació o d&#39;un temps d&#39;execució?,Error d&#39;execució.,error d&#39;execució,Коришћење индекса изван граница поља генерише грешку. Да ли је ово грешка у компилацији или грешка током извршавања?,Грешка у раду.,грешка у раду,Menggunakan indeks di luar batas-batas larik menghasilkan kesalahan. Apakah ini kesalahan kompilasi atau kesalahan run-time?,Kesalahan run-time.,run time error,Å bruke en indeks utenfor områdets grenser genererer en feil. Er dette en kompileringsfeil eller en kjøretidsfeil?,Kjøretidsfeil.,kjøretidsfeil,배열 경계를 벗어난 인덱스를 사용하면 오류가 발생합니다. 컴파일 오류입니까 아니면 런타임 오류입니까?,런타임 오류.,런타임 오류,Hakemiston käyttö taulukon rajojen ulkopuolella tuottaa virheen. Onko tämä käännösvirhe vai ajonaikainen virhe?,Suorituksenaikainen virhe.,suorituksenaikainen virhe,A tömb határain kívüli index használata hibát eredményez. Összeállítási hiba vagy futásidejű hiba?,Futtatási hiba.,Futtatási hiba,Použití indexu mimo hranice pole generuje chybu. Je to chyba kompilace nebo chyba běhu?,Chyba za běhu.,chyba doby běhu,Korištenje indeksa izvan granica polja generira grešku. Je li ovo greška u kompilaciji ili pogreška u toku izvođenja?,Greška u vremenu izvođenja.,greška vremena izvođenja
10,10,1533,9.2,"enqueue , which inserts a specified element at the head of the specified queue, and dequeue , which removes the specified element from the queue.",enqueue and dequeue,What are the two main functions defined by a queue?,5.0,Enqueue und Dequeue,Was sind die beiden Hauptfunktionen einer Warteschlange?,"enqueue, die ein angegebenes Element am Kopf der angegebenen Warteschlange einfügt, und dequeue, die das angegebene Element aus der Warteschlange entfernt.",Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka pila?,enqueue ug dequeue,"enqueue, nga nagsal-ot sa usa ka tinukoy nga elemento sa ulohan sa gitumbok nga pila, ug dequeue, nga gikuha ang gitino nga elemento gikan sa pila.",Vilka är de två huvudfunktionerna som definieras av en kö?,enqueue och dequeue,"enqueue, som infogar ett angivet element i huvudet på den angivna kön, och dequeue, som tar bort det angivna elementet från kön.",Quelles sont les deux principales fonctions définies par une file d&#39;attente?,mettre en file d&#39;attente et retirer la file d&#39;attente,"enqueue, qui insère un élément spécifié en tête de la file d&#39;attente spécifiée, et dequeue, qui supprime l&#39;élément spécifié de la file d&#39;attente.",Wat zijn de twee belangrijkste functies die door een wachtrij worden gedefinieerd?,in de wachtrij plaatsen en uit de wachtrij halen,"enqueue, waarmee een gespecificeerd element aan het begin van de gespecificeerde wachtrij wordt ingevoegd, en dequeue, waarmee het gespecificeerde element uit de wachtrij wordt verwijderd.",Какие две основные функции определяет очередь?,поставить в очередь и исключить из очереди,"enqueue, который вставляет указанный элемент в начало указанной очереди, и dequeue, который удаляет указанный элемент из очереди.",Quali sono le due funzioni principali definite da una coda?,accodare e rimuovere dalla coda,"enqueue, che inserisce un elemento specificato all&#39;inizio della coda specificata, e dequeue, che rimuove l&#39;elemento specificato dalla coda.",¿Cuáles son las dos funciones principales definidas por una cola?,poner y quitar de la cola,"enqueue, que inserta un elemento especificado al principio de la cola especificada, y dequeue, que elimina el elemento especificado de la cola.",Jakie dwie główne funkcje definiuje kolejka?,enqueue i dequeue,"enqueue, który wstawia określony element na początku określonej kolejki i usuwa z kolejki, co usuwa określony element z kolejki.",Hai hàm chính được xác định bởi một hàng đợi là gì?,enqueue và dequeue,"enqueue, chèn một phần tử được chỉ định vào đầu hàng đợi đã chỉ định và dequeue, sẽ xóa phần tử đã chỉ định khỏi hàng đợi.",キューによって定義される2つの主な機能は何ですか？,エンキューおよびデキュー,enqueueは、指定された要素を指定されたキューの先頭に挿入し、dequeueは、指定された要素をキューから削除します。,队列定义的两个主要功能是什么？,入队和出队,enqueue，它在指定队列的开头插入一个指定的元素，dequeue，从队列中删除指定的元素。,ما هي الوظيفتان الرئيسيتان اللتان تحددهما قائمة الانتظار؟,قائمة و dequeue,enqueue ، التي تُدرج عنصرًا محددًا في رأس قائمة الانتظار المحددة ، و dequeue ، الذي يزيل العنصر المحدد من قائمة الانتظار.,Які дві основні функції визначаються чергою?,чергу та випуск,"enqueue, яка вставляє вказаний елемент у заголовок вказаної черги, і dequeue, яка видаляє зазначений елемент із черги.",Quais são as duas funções principais definidas por uma fila?,enfileirar e retirar da fila,"enqueue, que insere um elemento especificado no início da fila especificada, e desenfileirar, que remove o elemento especificado da fila.",دو عملکرد اصلی که توسط یک صف تعریف شده اند کدامند؟,enqueue و dequeue,enqueue ، که یک عنصر مشخص را در بالای صف مشخص قرار می دهد ، و dequeue ، که عنصر مشخص شده را از صف حذف می کند.,Quines són les dues funcions principals definides per una cua?,cola i cola,"enqueue, que insereix un element especificat al cap de la cua especificada, i dequeue, que elimina l&#39;element especificat de la cua.",Које су две главне функције дефинисане редом?,енкуеуе и декуеуе,"енкуеуе, који убацује наведени елемент у заглавље наведеног реда и декуеуе, који уклања наведени елемент из реда.",Apa dua fungsi utama yang ditentukan oleh antrian?,enqueue dan dequeue,"enqueue, yang menyisipkan elemen tertentu di kepala antrian yang ditentukan, dan dequeue, yang menghapus elemen yang ditentukan dari antrian.",Hva er de to hovedfunksjonene definert av en kø?,enqueue og dequeue,"enqueue, som setter inn et spesifisert element i hodet på den angitte køen, og dequeue, som fjerner det angitte elementet fra køen.",대기열에서 정의하는 두 가지 주요 기능은 무엇입니까?,대기열에 넣기 및 대기열에서 빼기,enqueue는 지정된 큐의 헤드에 지정된 요소를 삽입하고 dequeue는 지정된 요소를 큐에서 제거합니다.,Mitkä ovat kaksi jonon määrittelemää päätoimintoa?,enqueue ja dequeue,"enqueue, joka lisää tietyn elementin määritetyn jonon kärkeen, ja dequeue, joka poistaa määritetyn elementin jonosta.","Mi a két fő funkció, amelyet egy sor határoz meg?",enqueue és dequeue,"enqueue, amely egy megadott elemet illeszt be a megadott sor elejébe, és dequeue, amely eltávolítja a megadott elemet a sorból.",Jaké jsou dvě hlavní funkce definované ve frontě?,zařazení do fronty a zařazení do fronty,"enqueue, který vloží zadaný prvek do záhlaví zadané fronty, a dequeue, který odebere zadaný prvek z fronty.",Koje su dvije glavne funkcije definirane redom?,enqueue i dequeue,"enqueue, koji ubacuje navedeni element u zaglavlje navedenog reda i dequeue, koji uklanja navedeni element iz reda."
11,11,1344,8.2,Push which inserts an element on the top of the stack and pop which removes the last inserted element from the stack.,push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?","Drücken Sie, um ein Element oben auf dem Stapel einzufügen, und drücken Sie, um das zuletzt eingefügte Element vom Stapel zu entfernen.",Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,Itulak kung unsang pagsal-ot ang usa ka elemento sa ibabaw sa stack ug pop nga nagtangtang sa ulahi nga gisulud nga elemento gikan sa stack.,Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,Push som sätter in ett element på toppen av stacken och pop som tar bort det senast införda elementet från stacken.,Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,Push qui insère un élément sur le dessus de la pile et pop qui supprime le dernier élément inséré de la pile.,Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,Duwen waardoor een element bovenop de stapel wordt geplaatst en pop waardoor het laatst geplaatste element uit de stapel wordt verwijderd.,Какие две основные функции определяет стек?,толкать и хлопать,"Push, который вставляет элемент в верхнюю часть стека, и pop, который удаляет последний вставленный элемент из стека.",Quali sono le due funzioni principali definite da uno stack?,spingere e pop,Spingere che inserisce un elemento in cima alla pila e pop che rimuove l&#39;ultimo elemento inserito dalla pila.,¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,Push que inserta un elemento en la parte superior de la pila y pop que elimina el último elemento insertado de la pila.,Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,"Push, który wstawia element na wierzch stosu i pop, który usuwa ostatni wstawiony element ze stosu.",Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,Đẩy mà chèn một phần tử trên đầu ngăn xếp và bật lên sẽ xóa phần tử được chèn cuối cùng khỏi ngăn xếp.,スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,スタックの一番上に要素を挿入するプッシュと、スタックから最後に挿入された要素を削除するポップ。,堆栈定义的两个主要功能是什么？,推和弹出,推送将在堆栈顶部插入一个元素，弹出将从堆栈中删除最后插入的元素。,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,الضغط الذي يقوم بإدراج عنصر في أعلى المكدس والانبثاق الذي يزيل آخر عنصر تم إدراجه من المكدس.,Які дві основні функції визначає стек?,натискання та поп,"Натисніть, який вставляє елемент у верхню частину стека, і клацніть, який видаляє останній вставлений елемент із стека.",Quais são as duas funções principais definidas por uma pilha?,empurre e estale,Push que insere um elemento no topo da pilha e pop que remove o último elemento inserido da pilha.,دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,فشار دهید که یک عنصر را در بالای پشته قرار می دهد و پاپ می کند که آخرین عنصر وارد شده را از پشته حذف می کند.,Quines són les dues funcions principals definides per una pila?,empenta i esclata,Premeu el botó que insereix un element a la part superior de la pila i apareix el botó que elimina l’últim element inserit de la pila.,Које су две главне функције дефинисане стеком?,гурај и пуцај,Притисните који убацује елемент на врх стека и искочите који уклања последњи уметнути елемент из стека.,Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,Push yang menyisipkan elemen di atas tumpukan dan pop yang menghapus elemen yang terakhir dimasukkan dari tumpukan.,Hva er de to hovedfunksjonene definert av en stabel?,push og pop,"Skyv som setter inn et element på toppen av bunken, og trykk som fjerner det sist innsatte elementet fra bunken.",스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,스택 맨 위에 요소를 삽입하는 푸시와 스택에서 마지막으로 삽입 된 요소를 제거하는 팝.,Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,"Työnnä se, joka lisää elementin pinon yläosaan, ja napsauta, mikä poistaa viimeisen lisätyn elementin pinosta.",Mi a verem által definiált két fő funkció?,nyomja és pattog,"Nyomja meg azt, amelyik beilleszt egy elemet a verem tetejére, és pattanjon be, amely eltávolítja az utolsó beillesztett elemet a veremből.",Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,"Zatlačení, které vloží prvek do horní části zásobníku, a pop, které odebere poslední vložený prvek ze zásobníku.",Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,Pritisnite koji umeće element na vrh stoga i skočite koji uklanja zadnji umetnuti element iz stoga.
12,12,1215,7.4,By using a node.,By reference.,How are linked lists passed as arguments to a function?,2.5,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,Durch Verwendung eines Knotens.,Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,Pinaagi sa paggamit sa usa ka node.,Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,Genom att använda en nod.,Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,En utilisant un nœud.,Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,Door een knooppunt te gebruiken.,Как связанные списки передаются в качестве аргументов функции?,По ссылке.,Используя узел.,Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,Utilizzando un nodo.,¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,Utilizando un nodo.,W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,Korzystając z węzła.,Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,Bằng cách sử dụng một nút.,リンクリストはどのように引数として関数に渡されますか？,参照による。,ノードを使用する。,链表如何作为参数传递给函数？,引用。,通过使用节点。,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,باستخدام عقدة.,Як зв’язані списки передаються як аргументи функції?,За посиланням.,За допомогою вузла.,Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,Usando um nó.,چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,با استفاده از یک گره.,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,Mitjançant l’ús d’un node.,Како се повезане листе прослеђују као аргументи функцији?,По референци.,Коришћењем чвора.,Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,Dengan menggunakan node.,Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,Ved å bruke en node.,연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,노드를 사용하여.,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,Käyttämällä solmua.,Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,Csomópont használatával.,Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,Pomocí uzlu.,Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,Korištenjem čvora.
13,13,2253,12.4,"A selection sort scrolls through the data structure looking for the lowest (or highest) unsorted piece of data, moves it to the held spot, increments that spot by one, and starts the process over.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Briefly, how does selection sort work?",5.0,Es wählt das Minimum aus einem Array aus und platziert es an der ersten Position. Anschließend wählt es das Minimum aus dem Rest des Arrays aus und platziert es an der zweiten Position und so weiter.,"Kurz gesagt, wie funktioniert die Auswahlsortierung?","Eine Auswahlsortierung scrollt durch die Datenstruktur und sucht nach dem niedrigsten (oder höchsten) unsortierten Datenelement, verschiebt es an den gehaltenen Punkt, erhöht diesen Punkt um eins und startet den Prozess von vorne.","Sa mubu, giunsa molihok ang pagpili?","Gipili niini ang minimum gikan sa usa ka laray ug gibutang kini sa una nga posisyon, unya gipili niini ang minimum gikan sa nahabilin nga laray ug gibutang kini sa ikaduhang posisyon, ug uban pa.","Ang usa ka kapilian nga pag-scroll sa linya pinaagi sa istraktura sa datos nga nangita alang sa labing kubus (o labing kataas) wala gisulud nga tipik sa datos, gibalhin kini sa gikuptan nga lugar, nadugangan ang usa ka lugar, ug gisugdan ang proseso.","Kortfattat, hur fungerar urvalssortering?","Det väljer minimum från en array och placerar det på den första positionen, sedan väljer det minimum från resten av arrayen och placerar det på den andra positionen och så vidare.","En urvalssortering rullar genom datastrukturen och letar efter den lägsta (eller högsta) osorterade biten, flyttar den till den hållna platsen, ökar den platsen en och startar processen igen.","En bref, comment fonctionne le tri par sélection?","Il sélectionne le minimum dans un tableau et le place sur la première position, puis il sélectionne le minimum dans le reste du tableau et le place sur la deuxième position, et ainsi de suite.","Un tri par sélection fait défiler la structure de données à la recherche de l&#39;élément de données non trié le plus bas (ou le plus élevé), le déplace vers le point conservé, incrémente ce point de un et recommence le processus.","In het kort, hoe werkt selectiesortering?","Het selecteert het minimum uit een array en plaatst het op de eerste positie, vervolgens selecteert het het minimum uit de rest van de array en plaatst het op de tweede positie, enzovoort.","Een selectiesortering scrolt door de datastructuur op zoek naar het laagste (of hoogste) ongesorteerde stuk data, verplaatst het naar de vastgehouden plek, verhoogt die plek met één en begint het proces opnieuw.","Вкратце, как работает сортировка выбора?","Он выбирает минимум из массива и помещает его в первую позицию, затем выбирает минимум из остальной части массива и помещает его во вторую позицию, и так далее.","Сортировка выбора прокручивает структуру данных в поисках самого низкого (или самого высокого) несортированного фрагмента данных, перемещает его в удерживаемую точку, увеличивает эту точку на единицу и запускает процесс заново.","In breve, come funziona l&#39;ordinamento per selezione?","Seleziona il minimo da un array e lo posiziona sulla prima posizione, quindi seleziona il minimo dal resto dell&#39;array e lo posiziona sulla seconda posizione e così via.","Un ordinamento di selezione scorre attraverso la struttura dei dati alla ricerca del pezzo di dati non ordinato più basso (o più alto), lo sposta nel punto bloccato, incrementa quel punto di uno e ricomincia il processo.","Brevemente, ¿cómo funciona la clasificación por selección?","Selecciona el mínimo de una matriz y lo coloca en la primera posición, luego selecciona el mínimo del resto de la matriz y lo coloca en la segunda posición, y así sucesivamente.","Una clasificación de selección se desplaza a través de la estructura de datos en busca de la parte de datos sin clasificar más baja (o más alta), la mueve al lugar retenido, incrementa ese lugar en uno y comienza el proceso de nuevo.","Krótko, jak działa sortowanie przez wybór?","Wybiera minimum z tablicy i umieszcza je na pierwszej pozycji, następnie wybiera minimum z reszty tablicy i umieszcza je na drugiej pozycji i tak dalej.","Sortowanie przez wybór przewija strukturę danych w poszukiwaniu najniższego (lub najwyższego) nieposortowanego fragmentu danych, przenosi go do zatrzymanego miejsca, zwiększa to miejsce o jeden i rozpoczyna proces od nowa.","Tóm lại, cách sắp xếp lựa chọn hoạt động như thế nào?","Nó chọn giá trị tối thiểu từ một mảng và đặt nó vào vị trí đầu tiên, sau đó nó chọn giá trị tối thiểu từ phần còn lại của mảng và đặt nó vào vị trí thứ hai, v.v.","Sắp xếp lựa chọn cuộn qua cấu trúc dữ liệu để tìm kiếm phần dữ liệu chưa được sắp xếp thấp nhất (hoặc cao nhất), di chuyển nó đến vị trí được giữ, tăng vị trí đó lên một và bắt đầu lại quá trình.",簡単に言えば、選択ソートはどのように機能しますか？,配列から最小値を選択して最初の位置に配置し、次に配列の残りの部分から最小値を選択して2番目の位置に配置します。,選択ソートは、データ構造をスクロールして、ソートされていない最低（または最高）のデータを探し、それを保持されているスポットに移動し、そのスポットを1つインクリメントして、プロセスを最初からやり直します。,简要地说，选择排序如何工作？,它从数组中选择最小值并将其放置在第一个位置，然后从数组其余部分中选择最小值并将其放置在第二个位置，依此类推。,选择排序在数据结构中滚动，以查找最低（或最高）未排序的数据，将其移至保留的位置，将该位置加1，然后重新开始该过程。,باختصار ، كيف يعمل فرز الاختيار؟,يختار الحد الأدنى من المصفوفة ويضعه في الموضع الأول ، ثم يختار الحد الأدنى من باقي المصفوفة ويضعه في الموضع الثاني ، وهكذا.,يقوم فرز التحديد بالتمرير عبر بنية البيانات بحثًا عن أدنى (أو أعلى) قطعة من البيانات لم يتم فرزها ، وينقلها إلى المكان المحتفظ به ، ويزيد تلك البقعة بمقدار واحد ، ويبدأ العملية من جديد.,"Коротко, як працює сортування підбору?","Він вибирає мінімум з масиву і розміщує його на першій позиції, потім він вибирає мінімум з решти масиву і розміщує його на другій позиції тощо.","Сортування виділення прокручує структуру даних, шукаючи найменший (або найвищий) невідсортований фрагмент даних, переміщує його до утримуваного місця, збільшує це місце на одиницю та запускає процес спочатку.","Resumidamente, como funciona a classificação por seleção?","Ele seleciona o mínimo de uma matriz e o coloca na primeira posição, em seguida, seleciona o mínimo do resto da matriz e o coloca na segunda posição, e assim por diante.","Uma classificação de seleção percorre a estrutura de dados procurando a parte mais baixa (ou mais alta) não classificada de dados, move-a para o ponto mantido, incrementa esse ponto em um e inicia o processo novamente.",به طور خلاصه ، نحوه انتخاب چگونه کار می کند؟,حداقل را از یک آرایه انتخاب کرده و در موقعیت اول قرار می دهد ، سپس حداقل را از بقیه آرایه انتخاب کرده و در موقعیت دوم قرار می دهد و غیره.,یک نوع انتخاب از طریق ساختار داده به جستجوی کمترین (یا بالاترین) قطعه طبقه بندی نشده داده می پردازد ، آن را به نقطه نگه داشته شده منتقل می کند ، آن نقطه را یک به یک افزایش می دهد و فرآیند را دوباره شروع می کند.,"Breument, com funciona la selecció?","Selecciona el mínim d’una matriu i el col·loca a la primera posició, després selecciona el mínim de la resta de la matriu i el col·loca a la segona posició, etc.","Un tipus de selecció es desplaça per l&#39;estructura de dades buscant la peça de dades més baixa (o més alta) sense classificar, la mou al lloc retingut, augmenta aquest punt un i comença el procés de nou.","Укратко, како функционише сортирање селекције?","Одабире минимум из низа и поставља га на прво место, затим одабире минимум из остатка низа и поставља га на друго место, и тако даље.","Сортирање избора се помера кроз структуру података тражећи најнижи (или највиши) несортирани податак, премешта га на задржавано место, увећава то место за један и започиње процес изнова.","Secara singkat, bagaimana cara kerja urutan seleksi?","Ini memilih minimum dari sebuah array dan menempatkannya di posisi pertama, kemudian memilih minimum dari sisa array dan menempatkannya di posisi kedua, dan seterusnya.","Urutan pilihan menggulir melalui struktur data mencari bagian data yang tidak diurutkan terendah (atau tertinggi), memindahkannya ke tempat yang ditahan, menambah tempat itu satu per satu, dan memulai proses dari awal.","Kort fortalt, hvordan fungerer utvalgssortering?","Den velger minimum fra en matrise og plasserer den på første posisjon, deretter velger den minimum fra resten av matrisen og plasserer den på den andre posisjonen, og så videre.","En utvalgssortering blar gjennom datastrukturen på jakt etter det laveste (eller høyeste) usorterte stykket, flytter det til det holdte stedet, inkrementerer det stedet for en, og starter prosessen på nytt.",간단히 말해서 선택 정렬은 어떻게 작동합니까?,배열에서 최소값을 선택하여 첫 번째 위치에 배치 한 다음 나머지 배열에서 최소값을 선택하여 두 번째 위치에 배치하는 식입니다.,선택 정렬은 데이터 구조를 스크롤하여 가장 낮은 (또는 가장 높은) 정렬되지 않은 데이터 조각을 찾아서 고정 된 지점으로 이동하고 해당 지점을 1 씩 증가시킨 다음 프로세스를 다시 시작합니다.,"Lyhyesti, miten valintalaji toimii?","Se valitsee matriisin matriisista ja sijoittaa sen ensimmäiseen sijaintiin, sitten se valitsee minimin matriisin lopusta ja sijoittaa sen toiseen sijaintiin jne.","Valintalaji vierittää tietorakennetta etsimällä alinta (tai korkeinta) lajittelematonta dataa, siirtää sen pidettyyn kohtaan, lisää sitä yhden kohdalla ja aloittaa prosessin alusta.","Röviden, hogyan működik a válogatás?","Egy tömbből kiválasztja a minimumot, és az első pozícióba helyezi, majd a tömb többi részéből kiválasztja a minimumot, és a második pozícióba helyezi, és így tovább.","Egy kiválasztási sorrend görgeti az adatstruktúrát a legkevesebb (vagy a legmagasabb) válogatás nélküli adatrészlet után kutatva, áthelyezi a megtartott helyre, egyesével növeli a foltot, és elölről kezdi a folyamatot.","Stručně, jak funguje výběrové třídění?","Vybírá minimum z pole a umístí ho na první pozici, poté vybere minimum ze zbytku pole a umístí ho na druhou pozici atd.","Třídění výběru prochází datovou strukturou a hledá nejnižší (nebo nejvyšší) netříděnou část dat, přesune ji na zadržené místo, zvýší toto místo o jednu a zahájí proces znovu.","Ukratko, kako funkcionira sortiranje odabira?","Odabire minimum iz niza i postavlja ga na prvo mjesto, zatim odabire minimum iz ostatka niza i postavlja ga na drugo mjesto itd.","Izbor sortiranja pomiče se kroz strukturu podataka tražeći najniži (ili najviši) nerazvrstani komad podataka, premješta ga na zadržano mjesto, povećava to mjesto za jedan i započinje postupak iznova."
14,14,1822,10.6,traverse the left subtree. visit the root. traverse the right subtree.,"Traverse the left subtree, then the root, then the right subtree.",What is the inorder traversal of a binary tree?,5.0,"Durchqueren Sie den linken Teilbaum, dann die Wurzel und dann den rechten Teilbaum.",Was ist die Inorder Traversal eines Binärbaums?,den linken Teilbaum durchqueren. besuche die Wurzel. den rechten Teilbaum durchqueren.,Unsa man ang inorder traversal sa usa ka binary nga kahoy?,"Pagtabok sa wala nga subtree, pagkahuman sa gamot, pagkahuman sa tuo nga subtree.",latas sa wala nga subtree. bisitaha ang gamot. pagtabok sa husto nga subtree.,Vad är inorder traversal av ett binärt träd?,"Korsa vänster subtree, sedan roten, sedan höger subtree.",korsa vänster subtree. besöka roten. korsa rätt subtree.,Quelle est la traversée en ordre d&#39;un arbre binaire?,"Traversez le sous-arbre gauche, puis la racine, puis le sous-arbre droit.",traverse le sous-arbre de gauche. visitez la racine. traverser le sous-arbre droit.,Wat is de volgorde waarin een binaire boom wordt doorlopen?,"Beweeg de linker substructuur, dan de wortel en dan de rechter substructuur.",doorloop de linker substructuur. bezoek de wortel. doorkruis de rechter substructuur.,Что такое обход двоичного дерева в порядке?,"Пройдите по левому поддереву, затем по корню, затем по правому поддереву.",пройти по левому поддереву. посетить корень. пройти правое поддерево.,Qual è l&#39;attraversamento in ordine di un albero binario?,"Attraversa la sottostruttura sinistra, quindi la radice, quindi la sottostruttura destra.",attraversare la sottostruttura sinistra. visita la radice. attraversare la sottostruttura destra.,¿Cuál es el recorrido en orden de un árbol binario?,"Atraviesa el subárbol izquierdo, luego la raíz y luego el subárbol derecho.",atraviesa el subárbol izquierdo. visita la raíz. atraviesa el subárbol derecho.,Jakie jest wewnętrzne przejście drzewa binarnego?,"Przejdź przez lewe poddrzewo, następnie korzeń, a następnie prawe poddrzewo.",przejść przez lewe poddrzewo. odwiedź root. przejść przez prawe poddrzewo.,Đường truyền ngang dòng của cây nhị phân là gì?,"Duyệt qua cây con bên trái, rồi đến gốc, rồi đến cây con bên phải.",đi qua cây con bên trái. thăm gốc. đi qua cây con bên phải.,二分木の順序のない横断とは何ですか？,左側のサブツリー、ルート、右側のサブツリーの順にトラバースします。,左側のサブツリーをトラバースします。ルートにアクセスします。右側のサブツリーをトラバースします。,二叉树的有序遍历是什么？,遍历左子树，然后遍历根，然后遍历右子树。,遍历左子树。访问根。遍历右边的子树。,ما هو الاجتياز الداخلي للشجرة الثنائية؟,اجتياز الشجرة الفرعية اليسرى ، ثم الجذر ، ثم الشجرة الفرعية اليمنى.,اجتياز الشجرة الفرعية اليسرى. قم بزيارة الجذر. اجتياز الشجرة الفرعية اليمنى.,Що таке обхід бінарного дерева?,"Проведіть ліве піддерево, потім корінь, потім праве піддерево.",пройти ліве піддерево. відвідайте корінь. пройти правою піддеревом.,Qual é a travessia em ordem de uma árvore binária?,"Percorra a subárvore esquerda, depois a raiz e a subárvore direita.",atravesse a subárvore esquerda. visite a raiz. atravesse a subárvore direita.,پیمایش غیرمعمول یک درخت باینری چیست؟,زیر درخت چپ ، سپس ریشه و سپس زیر درخت راست را رد کنید.,زیر درخت چپ را عبور دهید. از ریشه دیدن کنید. زیر درخت راست را عبور دهید.,Quin és el recorregut inorder d&#39;un arbre binari?,"Travesseu el subarbre esquerre, després l&#39;arrel i després el subarbre dret.",travesseu el subarbre esquerre. visiteu l&#39;arrel. recorre el subarbre dret.,Шта је унутрашња преокрет бинарног стабла?,"Пређите преко левог подстабла, затим корена, па десног подстабла.",пређите лево подстабло. посети корен. пређите десно подстабло.,Apa yang dimaksud dengan inorder traversal dari pohon biner?,"Lintasi subtree kiri, lalu akar, lalu subtree kanan.",melintasi subtree kiri. kunjungi akarnya. melintasi subtree kanan.,Hva er inorder traversal av et binært tre?,"Kryss venstre undertre, deretter roten, deretter høyre undertre.",kryss venstre undertrær. besøk roten. krysse det rette undertreet.,이진 트리의 inorder traversal은 무엇입니까?,"왼쪽 하위 트리, 루트, 오른쪽 하위 트리 순으로 이동합니다.",왼쪽 하위 트리를 횡단합니다. 루트를 방문하십시오. 오른쪽 하위 트리를 횡단합니다.,Mikä on binäärisen puun sisäinen kulku?,"Liikuta vasenta osapuuta, sitten juurta, sitten oikeaa osapuuta.",kulje vasemmalla alipuussa. käy juuressa. kulkea oikean osapuun läpi.,Mi a bináris fa belső bejárása?,"Keresse meg a bal alfát, majd a gyökeret, majd a jobb alfát.",haladjon át a bal részfán. látogassa meg a gyökeret. haladjon át a jobb részfán.,Co je to inorder traversal binárního stromu?,"Procházejte levým podstromem, poté kořenem a poté pravým podstromem.",procházet levým podstromem. navštivte root. projít pravým podstromem.,Koja je pogreška u binarnom stablu?,"Pređite lijevo podstablo, zatim korijen, pa desno podstablo.",pređite lijevo podstablo. posjetite root. pređite desno podstablo.
15,15,440,3.1,The function name and parameters,The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,Der Funktionsname und die Parameter,Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,Ang ngalan sa function ug mga parameter,Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,Funktionens namn och parametrar,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,Le nom et les paramètres de la fonction,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,De functienaam en parameters,Что включает в себя сигнатура функции?,Имя функции и типы параметров.,Имя функции и параметры,Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,Il nome e i parametri della funzione,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,El nombre de la función y los parámetros,Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,Nazwa funkcji i parametry,Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,Tên hàm và các tham số,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数名とパラメーター,功能签名包括什么？,函数的名称和参数的类型。,函数名称和参数,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,اسم الوظيفة والمعلمات,Що включає підпис функції?,Назва функції та типи параметрів.,Назва функції та параметри,O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,O nome da função e parâmetros,امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,نام و پارامترهای عملکرد,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,El nom i els paràmetres de la funció,Шта укључује потпис функције?,Назив функције и врсте параметара.,Име и параметри функције,Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,Nama fungsi dan parameter,Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,Funksjonens navn og parametere,함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수 이름 및 매개 변수,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,Funktion nimi ja parametrit,Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,A függvény neve és paraméterei,Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,Název funkce a parametry,Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,Ime i parametri funkcije
16,16,1847,10.7,log(n),The height of the tree (or log of the number of elements in the tree).,How many comparisons does it take to find an element in a binary search tree?,5.0,Die Höhe des Baums (oder das Protokoll der Anzahl der Elemente im Baum).,"Wie viele Vergleiche sind erforderlich, um ein Element in einem binären Suchbaum zu finden?",log (n),Pila ka mga pagtandi ang kinahanglan aron makapangita usa ka elemento sa usa ka puno nga binary search?,Ang kataas sa kahoy (o log sa gidaghanon sa mga elemento sa kahoy).,log (n),Hur många jämförelser krävs för att hitta ett element i ett binärt sökträd?,Trädets höjd (eller logg över antalet element i trädet).,logga (n),Combien de comparaisons faut-il pour trouver un élément dans un arbre de recherche binaire?,La hauteur de l&#39;arbre (ou journal du nombre d&#39;éléments dans l&#39;arbre).,log (n),Hoeveel vergelijkingen zijn er nodig om een element in een binaire zoekboom te vinden?,De hoogte van de boom (of log van het aantal elementen in de boom).,logboek (n),"Сколько сравнений нужно, чтобы найти элемент в двоичном дереве поиска?",Высота дерева (или логарифм количества элементов в дереве).,журнал (п),Quanti confronti sono necessari per trovare un elemento in un albero di ricerca binario?,L&#39;altezza dell&#39;albero (o il registro del numero di elementi dell&#39;albero).,log (n),¿Cuántas comparaciones se necesitan para encontrar un elemento en un árbol de búsqueda binaria?,La altura del árbol (o registro de la cantidad de elementos en el árbol).,registro (n),"Ile porównań potrzeba, aby znaleźć element w drzewie wyszukiwania binarnego?",Wysokość drzewa (lub dziennik liczby elementów w drzewie).,log (n),Có bao nhiêu phép so sánh để tìm một phần tử trong cây tìm kiếm nhị phân?,Chiều cao của cây (hoặc nhật ký của số phần tử trong cây).,log (n),二分探索木で要素を見つけるのに何回の比較が必要ですか？,ツリーの高さ（またはツリー内の要素数のログ）。,log（n）,在二进制搜索树中查找元素需要进行多少次比较？,树的高度（或树中元素数的对数）。,日志（n）,كم عدد المقارنات اللازمة للعثور على عنصر في شجرة بحث ثنائية؟,ارتفاع الشجرة (أو سجل عدد العناصر في الشجرة).,تسجيل (ن),"Скільки порівнянь потрібно, щоб знайти елемент у двійковому дереві пошуку?",Висота дерева (або журнал кількості елементів у дереві).,log (n),Quantas comparações são necessárias para encontrar um elemento em uma árvore de pesquisa binária?,A altura da árvore (ou log do número de elementos na árvore).,log (n),برای یافتن عنصری در یک درخت جستجوی باینری چند مقایسه لازم است؟,ارتفاع درخت (یا تعداد تعداد عناصر موجود در درخت).,ورود (n),Quantes comparacions es necessiten per trobar un element en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre (o registre del nombre d&#39;elements de l&#39;arbre).,registre (n),Колико поређења је потребно да би се пронашао елемент у бинарном стаблу претраживања?,Висина стабла (или евиденција броја елемената у дрвету).,лог (н),Berapa banyak perbandingan yang diperlukan untuk menemukan elemen dalam pohon pencarian biner?,Tinggi pohon (atau log dari jumlah elemen pada pohon).,log (n),Hvor mange sammenligninger tar det å finne et element i et binært søketre?,Høyden på treet (eller logg over antall elementer i treet).,logg (n),이진 검색 트리에서 요소를 찾는 데 얼마나 많은 비교가 필요합니까?,트리의 높이 (또는 트리의 요소 수에 대한 로그).,로그 (n),Kuinka monta vertailua tarvitaan elementin löytämiseksi binaarihakupuusta?,Puun korkeus (tai puun elementtien määrän loki).,loki (n),Hány összehasonlítás szükséges egy elem megtalálásához a bináris keresési fában?,A fa magassága (vagy a fa elemeinek számának naplója).,napló (n),Kolik srovnání je potřeba k nalezení prvku v binárním vyhledávacím stromu?,Výška stromu (nebo protokol o počtu prvků ve stromu).,log (n),Koliko je usporedbi potrebno za pronalaženje elementa u binarnom stablu pretraživanja?,Visina stabla (ili evidencija broja elemenata u stablu).,log (n)
17,17,1453,8.6,"Computers cannot evaulate infix expressions, it must first convert infix to postfix expression then it can evaluate.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",How are infix expressions evaluated by computers?,5.0,"Zunächst werden sie in die Postfix-Form konvertiert, gefolgt von einer Auswertung des Postfix-Ausdrucks.",Wie werden Infix-Ausdrücke von Computern ausgewertet?,Computer können Infix-Ausdrücke nicht auswerten. Sie müssen zuerst Infix in Postfix-Ausdrücke konvertieren und können dann auswerten.,Giunsa ang pagsusi sa mga ekspresyon sa infix sa mga kompyuter?,"Una, gibag-o sila ngadto sa porma nga postfix, gisundan sa usa ka pagsusi sa ekspresyon sa postfix.","Ang mga kompyuter dili makalikay sa mga ekspresyon sa infix, kinahanglan una niini nga ibaylo ang infix ngadto sa ekspresyon sa postfix pagkahuman mahimo kini nga masusi.",Hur utvärderas infixuttryck av datorer?,"Först omvandlas de till postfix-form, följt av en utvärdering av postfix-uttrycket.","Datorer kan inte evakuera infixuttryck, de måste först konvertera infix till postfix-uttryck så kan de utvärdera.",Comment les expressions infixes sont-elles évaluées par les ordinateurs?,"Tout d&#39;abord, ils sont convertis en forme de suffixe, suivi d&#39;une évaluation de l&#39;expression de suffixe.","Les ordinateurs ne peuvent pas évaluer les expressions infixes, ils doivent d&#39;abord convertir l&#39;infixe en expression postfixe, puis ils peuvent évaluer.",Hoe worden tussenvoegseluitdrukkingen door computers geëvalueerd?,"Eerst worden ze omgezet in een postfix-vorm, gevolgd door een evaluatie van de postfix-expressie.","Computers kunnen tussenvoegsel-uitdrukkingen niet evalueren, het moet eerst tussenvoegsel naar postfix-uitdrukking converteren, dan kan het evalueren.",Как инфиксные выражения оцениваются компьютерами?,"Сначала они преобразуются в постфиксную форму, после чего выполняется оценка постфиксного выражения.","Компьютеры не могут преобразовывать инфиксные выражения, он должен сначала преобразовать инфиксное выражение в постфиксное, а затем он сможет вычислить.",Come vengono valutate le espressioni infisso dai computer?,"In primo luogo, vengono convertiti in formato suffisso, seguito da una valutazione dell&#39;espressione suffisso.","I computer non possono valutare espressioni infisse, devono prima convertire infisse in espressioni postfisse, quindi possono valutare.",¿Cómo evalúan las computadoras las expresiones infijas?,"Primero, se convierten en forma de sufijo, seguido de una evaluación de la expresión de sufijo.","Las computadoras no pueden evaluar expresiones infijas, primero deben convertir infijas en expresiones postfijas y luego pueden evaluar.",W jaki sposób wyrażenia infix są oceniane przez komputery?,"Najpierw są konwertowane do postaci postfiksowej, po czym następuje ocena wyrażenia postfiksowego.","Komputery nie mogą ewaluować wyrażeń infiksowych, muszą najpierw przekonwertować infiks na wyrażenie postfixowe, a następnie mogą ocenić.",Các biểu thức infix được máy tính đánh giá như thế nào?,"Đầu tiên, chúng được chuyển đổi thành dạng postfix, sau đó là đánh giá biểu thức postfix.","Máy tính không thể loại bỏ biểu thức infix, trước tiên nó phải chuyển đổi infix thành biểu thức hậu tố sau đó nó có thể đánh giá.",中置式はコンピューターによってどのように評価されますか？,最初に、それらは接尾辞形式に変換され、続いて接尾辞式が評価されます。,コンピュータは中置式を評価できません。最初に中置式を後置式に変換してから評価する必要があります。,计算机如何评估中缀表达式？,首先，将它们转换为后缀形式，然后评估后缀表达式。,计算机无法撤消中缀表达式，它必须首先将中缀转换为后缀表达式，然后才能求值。,كيف يتم تقييم تعبيرات infix بواسطة أجهزة الكمبيوتر؟,أولاً ، يتم تحويلها إلى نموذج postfix ، متبوعًا بتقييم للتعبير postfix.,لا تستطيع أجهزة الكمبيوتر تفكيك تعبيرات infix ، يجب عليها أولاً تحويل infix إلى تعبير postfix ثم تقييمها.,Як обчислюються комп’ютерні вирази для інфіксів?,"Спочатку вони перетворюються у форму постфіксу, після чого виконується оцінка виразу постфікса.","Комп’ютери не можуть еволюціонувати вирази з інфіксом, спершу вони повинні перетворити інфікс на вираз на постфікс, після чого можуть обчислювати.",Como as expressões infixas são avaliadas por computadores?,"Primeiro, eles são convertidos para a forma pós-fixada, seguida por uma avaliação da expressão pós-fixada.",Os computadores não podem avaliar expressões infixas; eles devem primeiro converter expressões infixas em pós-fixas para então avaliar.,عبارات اینفیکس توسط رایانه چگونه ارزیابی می شوند؟,ابتدا به فرم postfix تبدیل می شوند و به دنبال آن ارزیابی از بیان postfix می شود.,رایانه ها نمی توانند عبارات اینفیکس را تخلیه کنند ، ابتدا باید infix را به عبارت postfix تبدیل کند سپس می تواند ارزیابی کند.,Com s’avaluen les expressions infix per ordinadors?,"En primer lloc, es converteixen en forma postfix, seguida d&#39;una avaluació de l&#39;expressió postfix.","Els ordinadors no poden evaular expressions d’infixos, primer han de convertir infixos en expressions d’expressió posterior i després poden avaluar-les.",Како рачунарски процењују инфиксне изразе?,"Прво се претварају у постфиксни облик, након чега следи процена израза постфикса.","Рачунари не могу евалуисати инфикс изразе, прво морају претворити инфик у постфик израз да би могли да процене.",Bagaimana ekspresi infix dievaluasi oleh komputer?,"Pertama, mereka diubah menjadi bentuk postfix, diikuti dengan evaluasi ekspresi postfix.","Komputer tidak dapat mengevaluasi ekspresi infix, itu harus terlebih dahulu mengubah infix menjadi ekspresi postfix kemudian dapat dievaluasi.",Hvordan vurderes infix-uttrykk av datamaskiner?,"Først blir de konvertert til postfix-form, etterfulgt av en evaluering av postfix-uttrykket.","Datamaskiner kan ikke evakuere infix-uttrykk, den må først konvertere infix til postfix-uttrykk så kan den evaluere.",중위 식은 컴퓨터에서 어떻게 평가됩니까?,먼저 접미사 형식으로 변환 된 다음 접미사 식의 평가가 이어집니다.,컴퓨터는 중위 식을 평가할 수 없습니다. 먼저 중위 식을 접 미식으로 변환 한 다음 평가할 수 있습니다.,Kuinka tietokoneet arvioivat infix-lausekkeita?,"Ensin ne muunnetaan postfix-muotoon, mitä seuraa postfix-lausekkeen arviointi.","Tietokoneet eivät voi purkaa infix-lausekkeita, niiden on ensin muunnettava infix postfix-lausekkeiksi, jotta ne voivat arvioida.",Hogyan értékelik a számítógépek az infix kifejezéseket?,"Először átalakítják őket postfix formává, majd értékelik a postfix kifejezést.","A számítógépek nem képesek eltávolítani az infix kifejezéseket, először át kell alakítaniuk az infixet postfix kifejezéssé, majd értékelni tudják.",Jak jsou výrazy infixu vyhodnocovány počítači?,"Nejprve jsou převedeny do formy postfixu, následované hodnocením výrazu postfixu.","Počítače nemohou evakuovat výrazy infixu, musí nejprve převést infix na výraz postfix, aby mohly vyhodnotit.",Kako računarski procenjuju infiksne izraze?,"Prvo se pretvaraju u postfix oblik, nakon čega slijedi procjena izraza postfix.","Računala ne mogu evaulirati infiks izraze, prvo moraju pretvoriti infix u postfix izraz da bi mogli procijeniti."
18,18,6,1.1,"To address major issues in the creation of the program. There is no way to account for all possible bugs in the program, but it is possible to prove the program is tangible.",To simulate the behaviour of portions of the desired software product.,What is the role of a prototype program in problem solving?,2.5,Simulation des Verhaltens von Teilen des gewünschten Softwareprodukts.,Welche Rolle spielt ein Prototyp-Programm bei der Problemlösung?,"Um wichtige Probleme bei der Erstellung des Programms anzugehen. Es gibt keine Möglichkeit, alle möglichen Fehler im Programm zu berücksichtigen, aber es ist möglich zu beweisen, dass das Programm greifbar ist.",Unsa man ang papel sa usa ka programa nga prototype sa pagsulbad sa problema?,Aron masundog ang pamatasan sa mga bahin sa gitinguha nga produkto sa software.,"Aron matubag ang mga punoan nga isyu sa paghimo sa programa. Wala’y paagi aron maisip ang tanan nga posible nga mga bug sa programa, apan posible nga pamatud-an nga mahikap ang programa.",Vilken roll har ett prototypprogram för problemlösning?,För att simulera beteendet hos delar av den önskade programvaruprodukten.,"Att ta itu med viktiga frågor i skapandet av programmet. Det finns inget sätt att redogöra för alla möjliga buggar i programmet, men det är möjligt att bevisa att programmet är konkret.",Quel est le rôle d&#39;un programme prototype dans la résolution de problèmes?,Pour simuler le comportement de parties du produit logiciel souhaité.,"Pour résoudre les problèmes majeurs lors de la création du programme. Il n&#39;y a aucun moyen de rendre compte de tous les bogues possibles dans le programme, mais il est possible de prouver que le programme est tangible.",Wat is de rol van een prototype-programma bij het oplossen van problemen?,Om het gedrag van delen van het gewenste softwareproduct te simuleren.,"Om belangrijke problemen bij het maken van het programma aan te pakken. Er is geen manier om rekening te houden met alle mogelijke bugs in het programma, maar het is mogelijk om te bewijzen dat het programma tastbaar is.",Какова роль прототипа программы в решении проблем?,Для моделирования поведения частей желаемого программного продукта.,"Для решения основных вопросов при создании программы. Невозможно учесть все возможные ошибки в программе, но можно доказать, что программа ощутима.",Qual è il ruolo di un programma prototipo nella risoluzione dei problemi?,Per simulare il comportamento di porzioni del prodotto software desiderato.,"Per affrontare le principali questioni nella creazione del programma. Non c&#39;è modo di tenere conto di tutti i possibili bug nel programma, ma è possibile provare che il programma è tangibile.",¿Cuál es el papel de un programa prototipo en la resolución de problemas?,Simular el comportamiento de partes del producto de software deseado.,"Abordar cuestiones importantes en la creación del programa. No hay forma de dar cuenta de todos los posibles errores del programa, pero es posible demostrar que el programa es tangible.",Jaka jest rola programu prototypowego w rozwiązywaniu problemów?,Aby zasymulować zachowanie części żądanego oprogramowania.,"Aby rozwiązać główne problemy podczas tworzenia programu. Nie ma sposobu, aby uwzględnić wszystkie możliwe błędy w programie, ale można udowodnić, że program jest namacalny.",Vai trò của một chương trình nguyên mẫu trong việc giải quyết vấn đề là gì?,Để mô phỏng hoạt động của các phần của sản phẩm phần mềm mong muốn.,"Để giải quyết các vấn đề chính trong quá trình tạo chương trình. Không có cách nào để giải thích tất cả các lỗi có thể xảy ra trong chương trình, nhưng có thể chứng minh chương trình là hữu hình.",問題解決におけるプロトタイププログラムの役割は何ですか？,目的のソフトウェア製品の一部の動作をシミュレートします。,プログラムの作成における主要な問題に対処するため。プログラムで発生する可能性のあるすべてのバグを説明する方法はありませんが、プログラムが具体的であることを証明することは可能です。,原型程序在解决问题中的作用是什么？,模拟所需软件产品各部分的行为。,解决程序创建中的主要问题。没有办法解决程序中所有可能的错误，但是有可能证明程序是有形的。,ما هو دور برنامج النموذج الأولي في حل المشكلات؟,لمحاكاة سلوك أجزاء من منتج البرنامج المطلوب.,لمعالجة القضايا الرئيسية في إنشاء البرنامج. لا توجد طريقة لحساب جميع الأخطاء المحتملة في البرنامج ، ولكن من الممكن إثبات أن البرنامج ملموس.,Яка роль програми-прототипу у вирішенні проблем?,Для імітації поведінки частин бажаного програмного продукту.,"Для вирішення основних питань у створенні програми. Неможливо врахувати всі можливі помилки в програмі, але можна довести, що програма є відчутною.",Qual é o papel de um programa de protótipo na solução de problemas?,Para simular o comportamento de partes do produto de software desejado.,"Para abordar questões importantes na criação do programa. Não há como contabilizar todos os bugs possíveis no programa, mas é possível provar que o programa é tangível.",نقش یک نمونه اولیه در حل مسئله چیست؟,برای شبیه سازی رفتار بخشهایی از محصول نرم افزاری مورد نظر.,برای رسیدگی به موضوعات اصلی در ایجاد برنامه. راهی برای حساب کردن همه اشکالات احتمالی موجود در برنامه وجود ندارد ، اما اثبات قابل لمس بودن برنامه امکان پذیر است.,Quin és el paper d’un programa prototipus en la resolució de problemes?,Per simular el comportament de parts del producte de programari desitjat.,"Abordar els principals problemes en la creació del programa. No hi ha manera de donar compte de tots els errors possibles del programa, però és possible demostrar que el programa és tangible.",Која је улога прототипа програма у решавању проблема?,Да симулира понашање делова жељеног софтверског производа.,"Решавање главних проблема у стварању програма. Не постоји начин да се објасне све могуће грешке у програму, али могуће је доказати да је програм опипљив.",Apa peran program prototipe dalam pemecahan masalah?,Untuk mensimulasikan perilaku bagian dari produk perangkat lunak yang diinginkan.,"Untuk mengatasi masalah utama dalam pembuatan program. Tidak ada cara untuk memperhitungkan semua kemungkinan bug dalam program, tetapi dimungkinkan untuk membuktikan bahwa program itu nyata.",Hva er rollen som et prototypeprogram i problemløsing?,For å simulere oppførselen til deler av det ønskede programvareproduktet.,"Å ta opp store problemer i opprettelsen av programmet. Det er ingen måte å gjøre rede for alle mulige feil i programmet, men det er mulig å bevise at programmet er håndgripelig.",문제 해결에서 프로토 타입 프로그램의 역할은 무엇입니까?,원하는 소프트웨어 제품의 일부 동작을 시뮬레이션합니다.,프로그램 작성의 주요 문제를 해결합니다. 프로그램에서 가능한 모든 버그를 설명 할 수있는 방법은 없지만 프로그램이 실체임을 증명하는 것은 가능합니다.,Mikä on prototyyppiohjelman rooli ongelmanratkaisussa?,Simuloidaan halutun ohjelmistotuotteen osien käyttäytymistä.,"Käsittelemään tärkeitä kysymyksiä ohjelman luomisessa. Kaikkia mahdollisia ohjelmavirheitä ei voida ottaa huomioon, mutta on mahdollista todistaa, että ohjelma on konkreettinen.",Mi a szerepe a prototípus programnak a problémamegoldásban?,A kívánt szoftvertermék egyes részeinek viselkedésének szimulálása.,"A program létrehozásának főbb kérdéseinek kezelése. A program összes lehetséges hibáját nem lehet elszámolni, de bebizonyítható, hogy a program kézzelfogható.",Jaká je role prototypového programu při řešení problémů?,Simulovat chování částí požadovaného softwarového produktu.,"Řešit hlavní problémy při tvorbě programu. Neexistuje způsob, jak zohlednit všechny možné chyby v programu, ale je možné prokázat, že je program hmatatelný.",Koja je uloga prototipa programa u rješavanju problema?,Da simulira ponašanje dijelova željenog softverskog proizvoda.,"Da se pozabave glavnim problemima u stvaranju programa. Ne postoji način da se objasne sve moguće greške u programu, ali moguće je dokazati da je program opipljiv."
19,19,1265,7.6,In a doubly linked list you can delete a node without having to traverse the list.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,4.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"In einer doppelt verknüpften Liste können Sie einen Knoten löschen, ohne die Liste durchlaufen zu müssen.",Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",Sa usa ka doble nga nalambigit nga lista mahimo nimong matangtang ang usa ka node nga dili kinahanglan molatas sa lista.,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",I en dubbelt länkad lista kan du radera en nod utan att behöva korsa listan.,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.","Dans une liste doublement liée, vous pouvez supprimer un nœud sans avoir à parcourir la liste.",Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",In een dubbel gekoppelde lijst kunt u een knooppunt verwijderen zonder de lijst te doorlopen.,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.",В двусвязном списке вы можете удалить узел без необходимости перемещаться по списку.,Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",In una lista doppiamente collegata è possibile eliminare un nodo senza dover attraversare la lista.,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",En una lista doblemente vinculada puede eliminar un nodo sin tener que recorrer la lista.,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.",W przypadku listy podwójnie połączonej można usunąć węzeł bez konieczności przechodzenia przez listę.,Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.","Trong danh sách được liên kết kép, bạn có thể xóa một nút mà không cần phải duyệt qua danh sách.",基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,二重リンクリストでは、リストをトラバースせずにノードを削除できます。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,在双向链表中，您可以删除节点而不必遍历该列表。,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,في قائمة مرتبطة بشكل مزدوج ، يمكنك حذف عقدة دون الحاجة إلى اجتياز القائمة.,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.",У подвійно зв’язаному списку ви можете видалити вузол без необхідності обходу списку.,Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.","Em uma lista duplamente vinculada, você pode excluir um nó sem ter que percorrer a lista.",مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,در لیست پیوندی مضاعف ، می توانید یک گره را حذف کنید بدون اینکه مجبور شوید لیست را رد کنید.,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",En una llista doblement enllaçada podeu suprimir un node sense haver de recórrer la llista.,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",У двоструко повезаној листи можете да избришете чвор без потребе да прелазите листу.,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.","Dalam daftar tertaut ganda, Anda dapat menghapus node tanpa harus melintasi daftar.",Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",I en dobbeltkoblet liste kan du slette en node uten å måtte krysse listen.,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,이중 연결 목록에서는 목록을 순회하지 않고도 노드를 삭제할 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",Kaksinkertaisesti linkitetystä luettelosta voit poistaa solmun siirtymättä luetteloon.,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.","A kétszeresen összekapcsolt listában törölhet egy csomópontot anélkül, hogy át kellene haladnia a listán.",Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.","V dvojnásobně propojeném seznamu můžete odstranit uzel, aniž byste museli procházet seznamem.",Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",Na dvostruko povezanoj listi možete izbrisati čvor bez potrebe za prelaskom po listi.
20,20,748,4.4,"a static array is allocated when the program starts and is freed when the program exits but has limited scope, while an array that is not declared static is allocated and freed when it comes into and out of scope.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","What is the difference between an array declared as static, and one that is not?",5.0,"Die als statisch deklarierten Arrays leben während der gesamten Laufzeit des Programms. Das heißt, sie werden nur einmal initialisiert, wenn die Funktion, die das Array deklariert, zum ersten Mal aufgerufen wird.",Was ist der Unterschied zwischen einem als statisch deklarierten und einem nicht statischen Array?,"Ein statisches Array wird beim Starten des Programms zugewiesen und beim Beenden des Programms freigegeben, hat jedoch einen begrenzten Gültigkeitsbereich, während ein Array, das nicht als statisch deklariert ist, beim Ein- und Aussteigen in den Gültigkeitsbereich zugewiesen und freigegeben wird.","Unsa ang kalainan tali sa usa ka laray nga gideklara nga static, ug usa nga dili?","Ang mga array gideklara nga static live sa tibuuk nga kinabuhi sa programa; kana mao, gisugdan ra sila kausa, kung ang pagpaandar nga nagpahayag sa pag-ayo una kini gitawag.","ang usa ka static nga array gigahin kung magsugod ang programa ug mahigawas kung mogawas ang programa apan adunay limitado nga kasangkaran, samtang ang usa ka laraw nga dili gideklara nga static ang gigahin ug gipagawas kung kini moabut ug wala’y sakup.",Vad är skillnaden mellan en matris som deklareras som statisk och en som inte är det?,"Arraysna som deklareras som statiska lever hela programmets livstid; det vill säga de initialiseras bara en gång, när den funktion som deklarerar matrisen kallas den först.","en statisk matris tilldelas när programmet startar och frigörs när programmet avslutas men har begränsat omfång, medan en matris som inte förklaras statisk allokeras och frigörs när den kommer in och ut ur omfånget.",Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,"Les tableaux déclarés statiques vivent tout au long de la vie du programme; c&#39;est-à-dire qu&#39;ils ne sont initialisés qu&#39;une seule fois, lorsque la fonction qui déclare le tableau est appelée pour la première fois.","un tableau statique est alloué lorsque le programme démarre et est libéré lorsque le programme se termine mais a une portée limitée, tandis qu&#39;un tableau qui n&#39;est pas déclaré statique est alloué et libéré lorsqu&#39;il entre et hors de portée.",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,"De arrays die als statisch zijn gedeclareerd, leven gedurende de levensduur van het programma; dat wil zeggen, ze worden slechts één keer geïnitialiseerd, wanneer de functie die de array declareert voor het eerst wordt aangeroepen.","een statische array wordt toegewezen wanneer het programma start en wordt vrijgegeven wanneer het programma wordt afgesloten maar een beperkte reikwijdte heeft, terwijl een array die niet statisch is gedeclareerd, wordt toegewezen en vrijgegeven wanneer deze binnen en buiten de scope komt.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?","Массивы, объявленные как статические, живут в течение всего времени работы программы; то есть они инициализируются только один раз при первом вызове функции, объявляющей массив.","статический массив выделяется при запуске программы и освобождается при выходе из программы, но имеет ограниченную область видимости, в то время как массив, который не объявлен статическим, выделяется и освобождается, когда он входит в область и выходит за ее пределы.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,"Gli array dichiarati come statici sono attivi per tutta la durata del programma; cioè, vengono inizializzati solo una volta, quando la funzione che dichiara l&#39;array viene chiamata per la prima volta.","un array statico viene allocato all&#39;avvio del programma e viene liberato quando il programma esce ma ha un ambito limitato, mentre un array che non è dichiarato statico viene allocato e liberato quando entra e esce dall&#39;ambito.",¿Cuál es la diferencia entre una matriz declarada como estática y una que no lo es?,"Las matrices declaradas como estáticas viven durante toda la vida del programa; es decir, se inicializan solo una vez, cuando se llama por primera vez a la función que declara la matriz.","una matriz estática se asigna cuando se inicia el programa y se libera cuando el programa sale, pero tiene un alcance limitado, mientras que una matriz que no se declara estática se asigna y libera cuando entra y sale del alcance.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice zadeklarowane jako statyczne na żywo przez cały czas trwania programu; to znaczy, są inicjowane tylko raz, kiedy funkcja deklarująca tablicę jest wywoływana jako pierwsza.","tablica statyczna jest przydzielana podczas uruchamiania programu i zwalniana, gdy program kończy pracę, ale ma ograniczony zasięg, podczas gdy tablica, która nie jest zadeklarowana jako statyczna, jest przydzielana i zwalniana, gdy wchodzi i wychodzi poza zakres.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng được khai báo là sống tĩnh trong suốt vòng đời của chương trình; nghĩa là chúng chỉ được khởi tạo một lần khi hàm khai báo mảng mà nó được gọi lần đầu tiên.,"một mảng tĩnh được cấp phát khi chương trình bắt đầu và được giải phóng khi chương trình thoát nhưng có phạm vi giới hạn, trong khi một mảng không được khai báo là tĩnh được cấp phát và giải phóng khi nó ra vào phạm vi.",静的として宣言された配列とそうでない配列の違いは何ですか？,静的として宣言された配列は、プログラムの存続期間を通じて有効です。つまり、配列を宣言する関数が最初に呼び出されたときに、一度だけ初期化されます。,静的配列は、プログラムの開始時に割り当てられ、プログラムの終了時に解放されますが、スコープは制限されます。一方、静的と宣言されていない配列は、スコープに出入りするときに割り当てられ、解放されます。,声明为静态的数组与未声明为静态的数组有什么区别？,声明为静态的数组在程序的整个生命周期内都有效；也就是说，当第一次调用声明数组的函数时，它们仅初始化一次。,静态数组在程序启动时分配，并在程序退出但范围有限时释放，而未声明为静态的数组在进入和超出范围时分配并释放。,ما الفرق بين المصفوفة المعلنة على أنها ثابتة والمصفوفة التي لا يتم الإعلان عنها؟,تعيش المصفوفات المعلنة على أنها ثابتة طوال عمر البرنامج ؛ أي ، يتم تهيئتها مرة واحدة فقط ، عندما يتم استدعاء الوظيفة التي تعلن عن المصفوفة لأول مرة.,يتم تخصيص مصفوفة ثابتة عند بدء البرنامج ويتم تحريرها عند خروج البرنامج ولكن لها نطاق محدود ، في حين يتم تخصيص وتحرير المصفوفة التي لم يتم التصريح بأنها ثابتة عند دخولها إلى النطاق وخارجه.,"У чому різниця між масивом, оголошеним як статичний, і масивом, який не є?","Масиви, оголошені як статичні живі протягом усього терміну служби програми; тобто вони ініціалізуються лише один раз, коли функція, яка оголошує масив, вона викликається вперше.","статичний масив виділяється при запуску програми і звільняється, коли програма виходить, але має обмежений обсяг, тоді як масив, який не оголошений статичним, виділяється і звільняється, коли потрапляє в область дії та виходить з неї.",Qual é a diferença entre uma matriz declarada como estática e outra que não é?,"Os arrays declarados como estáticos vivem durante toda a vida do programa; ou seja, eles são inicializados apenas uma vez, quando a função que declara o array é chamada pela primeira vez.","uma matriz estática é alocada quando o programa é iniciado e é liberada quando o programa é encerrado, mas tem escopo limitado, enquanto uma matriz que não é declarada como estática é alocada e liberada quando entra e sai do escopo.",چه تفاوتی بین آرایه ای که بصورت استاتیک اعلام می شود و دیگری نیست؟,آرایه هایی که به عنوان ایستا در طول زندگی برنامه اعلام می شوند. یعنی فقط یک بار مقداردهی اولیه می شود ، وقتی تابعی که آرایه را برای اولین بار فراخوانی می کند.,یک آرایه استاتیک هنگام شروع برنامه تخصیص داده می شود و هنگام خروج از برنامه آزاد می شود اما دامنه آن محدود است ، در حالی که آرایه ای که به عنوان استاتیک اعلام نشده است ، با ورود و خارج شدن از محدوده ، تخصیص داده می شود و آزاد می شود.,Quina diferència hi ha entre una matriu declarada com estàtica i una que no ho és?,"Les matrius declarades estàtiques en directe durant tota la vida del programa; és a dir, només s’inicialitzen una vegada, quan s’anomena per primera vegada la funció que declara la matriu.","una matriu estàtica s&#39;assigna quan s&#39;inicia el programa i s&#39;allibera quan surt del programa però té un abast limitat, mentre que una matriu que no està declarada estàtica s&#39;assigna i s&#39;allibera quan entra i surt de l&#39;abast.",Која је разлика између низа који је проглашен статичким и оног који није?,"Низови декларисани као статични уживо током целог животног века програма; то јест, иницијализују се само једном, када се функција која декларише низ прво позове.","статички низ се додељује када се програм покреће и ослобађа се када програм излази, али има ограничен опсег, док се низ који није проглашен статичким додељује и ослобађа када дође у опсег и ван њега.","Apa perbedaan antara array yang dideklarasikan sebagai statis, dan yang tidak?","Array dideklarasikan sebagai live statis selama program berjalan; artinya, mereka diinisialisasi hanya sekali, ketika fungsi yang mendeklarasikan array yang dipanggil pertama kali.","array statis dialokasikan ketika program dimulai dan dibebaskan ketika program keluar tetapi memiliki ruang lingkup terbatas, sedangkan array yang tidak dideklarasikan statis dialokasikan dan dibebaskan ketika masuk dan keluar dari ruang lingkup.","Hva er forskjellen mellom en matrise erklært som statisk, og en som ikke er det?","Arrangementene erklært som statisk lever gjennom hele programmets levetid; det vil si at de initialiseres bare en gang, når funksjonen som erklærer matrisen den først ble kalt.","en statisk matrise tildeles når programmet starter og frigjøres når programmet avsluttes, men har begrenset omfang, mens en matrise som ikke er erklært statisk, tildeles og frigjøres når den kommer inn og ut av omfanget.",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,"정적으로 선언 된 배열은 프로그램의 수명 내내 살아 있습니다. 즉, 배열을 선언하는 함수가 처음 호출 될 때 한 번만 초기화됩니다.",정적 배열은 프로그램이 시작될 때 할당되고 프로그램이 종료 될 때 해제되지만 범위가 제한되어 있지만 static으로 선언되지 않은 배열은 범위에 들어오고 나갈 때 할당되고 해제됩니다.,"Mitä eroa on staattiseksi ilmoitetun taulukon ja sellaisen välillä, joka ei ole staattinen?","Staattisiksi ilmoitetut taulukot elävät ohjelman koko elinkaaren ajan; eli ne alustetaan vain kerran, kun ensin kutsutaan funktio, joka ilmoittaa matriisin.","staattinen taulukko varataan ohjelman käynnistyessä ja vapautetaan, kun ohjelma poistuu, mutta sen toiminta-ala on rajallinen, kun taas taulukko, jota ei ole ilmoitettu staattiseksi, varataan ja vapautetaan, kun se tulee sovellusalueelle ja sen ulkopuolelle.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikusnak nyilvánított tömbök a program teljes élettartama alatt élnek; vagyis csak egyszer inicializálódnak, amikor először meghívják azt a függvényt, amely deklarálja a tömböt.","egy statikus tömböt akkor osztanak ki, amikor a program elindul, és felszabadul, amikor a program kilép, de korlátozott a hatóköre, míg egy statikussá nem nyilvánított tömböt lefoglalnak és felszabadítanak, amikor az hatókörbe kerül és kívül esik.","Jaký je rozdíl mezi polem deklarovaným jako statické a tím, které není?","Pole deklarovaná jako statická živá po celou dobu životnosti programu; to znamená, že jsou inicializovány pouze jednou, když je funkce, která deklaruje pole, které je nejprve voláno.","statické pole je přiděleno při spuštění programu a je uvolněno při ukončení programu, ale má omezený rozsah, zatímco pole, které není prohlášeno za statické, je přiděleno a uvolněno, když přijde do a z rozsahu.",Koja je razlika između niza koji je deklariran kao statičan i onog koji nije?,"Nizovi deklarirani kao statični uživo tijekom cijelog životnog vijeka programa; to jest, inicijaliziraju se samo jednom, kada se funkcija koja deklarira niz prvi put pozove.","statički niz se dodjeljuje kada se program pokreće i oslobađa se kada program izlazi, ali ima ograničen opseg, dok se niz koji nije proglašen statičkim dodjeljuje i oslobađa kada dođe u i izvan opsega."
21,21,1778,10.4,a list of numbers that are ordered compared to how they compare to the other numbers already added in the tree,A tree for which the maximum number of children per node is two.,What is a binary tree?,2.0,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Eine Liste der Nummern, die im Vergleich zu den anderen bereits im Baum hinzugefügten Nummern sortiert sind",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,usa ka lista sa mga numero nga gisugo kumpara sa kung giunsa nila gitandi ang ubang mga numero nga nadugang na sa punoan,Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,en lista med nummer som är ordnade jämfört med hur de jämför med de andra siffror som redan har lagts till i trädet,Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,une liste de nombres classés par rapport à la façon dont ils se comparent aux autres nombres déjà ajoutés dans l&#39;arborescence,Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,een lijst met nummers die zijn gerangschikt in vergelijking met hoe ze zich verhouden tot de andere nummers die al in de boomstructuur zijn toegevoegd,Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","список чисел, которые упорядочены по сравнению с тем, как они сравниваются с другими числами, уже добавленными в дерево",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,un elenco di numeri ordinati rispetto a come si confrontano con gli altri numeri già aggiunti nell&#39;albero,¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,una lista de números ordenados en comparación con cómo se comparan con los otros números ya agregados en el árbol,Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","lista liczb, które są uporządkowane w porównaniu z ich porównaniem z innymi liczbami już dodanymi w drzewie",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,danh sách các số được sắp xếp so với cách chúng so sánh với các số khác đã được thêm vào cây,二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,ツリーにすでに追加されている他の番号と比較した順序で並べられた番号のリスト,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,与它们与树中已添加的其他数字的比较方式相比，已排序的数字列表,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,قائمة بالأرقام المرتبة مقارنة بكيفية مقارنتها بالأرقام الأخرى المضافة بالفعل في الشجرة,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","список впорядкованих чисел порівняно з тим, як вони порівнюються з іншими номерами, вже доданими в дереві",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,uma lista de números que são ordenados em comparação a como eles se comparam aos outros números já adicionados na árvore,درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,لیستی از اعدادی که مرتب می شوند در مقایسه با مقایسه آنها با سایر اعدادی که در درخت اضافه شده اند,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,una llista de nombres que s’ordenen en comparació amb la seva comparació amb la resta de nombres ja afegits a l’arbre,Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,списак бројева који су поређани у поређењу са упоређивањем са осталим бројевима који су већ додати у дрвету,Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,daftar nomor yang diurutkan dibandingkan dengan bagaimana mereka dibandingkan dengan nomor lain yang sudah ditambahkan di pohon,Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,en liste over tall som er ordnet sammenlignet med hvordan de sammenlignes med de andre tallene som allerede er lagt til i treet,이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,트리에 이미 추가 된 다른 숫자와 비교하여 정렬 된 숫자 목록,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.",luettelo järjestetyistä numeroista verrattuna niiden vertailuun puuhun jo lisättyihin numeroihin,Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","azoknak a számoknak a listája, amelyek sorrendben vannak, összehasonlítva a fán már hozzáadott többi számmal",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","seznam čísel, která jsou uspořádána ve srovnání s tím, jak se porovnávají s ostatními čísly již přidanými do stromu",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,popis poredanih brojeva u odnosu na usporedbu s ostalim brojevima koji su već dodani u stablu
22,22,2268,12.4,"select an element compare it with 2nd element if it is greater, swap it","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Briefly, how does selection sort work?",3.0,Es wählt das Minimum aus einem Array aus und platziert es an der ersten Position. Anschließend wählt es das Minimum aus dem Rest des Arrays aus und platziert es an der zweiten Position und so weiter.,"Kurz gesagt, wie funktioniert die Auswahlsortierung?","Wählen Sie ein Element aus. Vergleichen Sie es mit dem 2. Element. Wenn es größer ist, tauschen Sie es aus","Sa mubu, giunsa molihok ang pagpili?","Gipili niini ang minimum gikan sa usa ka laray ug gibutang kini sa una nga posisyon, unya gipili niini ang minimum gikan sa nahabilin nga laray ug gibutang kini sa ikaduhang posisyon, ug uban pa.","pagpili usa ka elemento itandi kini sa ika-2 nga elemento kung kini labi ka daghan, ibaylo kini","Kortfattat, hur fungerar urvalssortering?","Det väljer minimum från en array och placerar det på den första positionen, sedan väljer det minimum från resten av arrayen och placerar det på den andra positionen och så vidare.","välj ett element jämför det med det andra elementet om det är större, byt ut det","En bref, comment fonctionne le tri par sélection?","Il sélectionne le minimum dans un tableau et le place sur la première position, puis il sélectionne le minimum dans le reste du tableau et le place sur la deuxième position, et ainsi de suite.","sélectionnez un élément comparez-le au 2ème élément s&#39;il est plus grand, échangez-le","In het kort, hoe werkt selectiesortering?","Het selecteert het minimum uit een array en plaatst het op de eerste positie, vervolgens selecteert het het minimum uit de rest van de array en plaatst het op de tweede positie, enzovoort.","selecteer een element, vergelijk het met het 2e element als het groter is, verwissel het","Вкратце, как работает сортировка выбора?","Он выбирает минимум из массива и помещает его в первую позицию, затем выбирает минимум из остальной части массива и помещает его во вторую позицию, и так далее.","выберите элемент, сравните его со вторым элементом, если он больше, поменяйте местами","In breve, come funziona l&#39;ordinamento per selezione?","Seleziona il minimo da un array e lo posiziona sulla prima posizione, quindi seleziona il minimo dal resto dell&#39;array e lo posiziona sulla seconda posizione e così via.","seleziona un elemento confrontalo con il 2 ° elemento se è maggiore, scambialo","Brevemente, ¿cómo funciona la clasificación por selección?","Selecciona el mínimo de una matriz y lo coloca en la primera posición, luego selecciona el mínimo del resto de la matriz y lo coloca en la segunda posición, y así sucesivamente.","seleccionar un elemento compararlo con el segundo elemento si es mayor, intercambiarlo","Krótko, jak działa sortowanie przez wybór?","Wybiera minimum z tablicy i umieszcza je na pierwszej pozycji, następnie wybiera minimum z reszty tablicy i umieszcza je na drugiej pozycji i tak dalej.","wybierz element porównaj go z drugim elementem, jeśli jest większy, zamień go","Tóm lại, cách sắp xếp lựa chọn hoạt động như thế nào?","Nó chọn giá trị tối thiểu từ một mảng và đặt nó vào vị trí đầu tiên, sau đó nó chọn giá trị tối thiểu từ phần còn lại của mảng và đặt nó vào vị trí thứ hai, v.v.","chọn một phần tử so sánh nó với phần tử thứ 2 nếu nó lớn hơn, hãy hoán đổi nó",簡単に言えば、選択ソートはどのように機能しますか？,配列から最小値を選択して最初の位置に配置し、次に配列の残りの部分から最小値を選択して2番目の位置に配置します。,要素を選択し、それが大きい場合は2番目の要素と比較し、交換します,简要地说，选择排序如何工作？,它从数组中选择最小值并将其放置在第一个位置，然后从数组其余部分中选择最小值并将其放置在第二个位置，依此类推。,选择一个元素并将其与第二个元素比较，如果更大，将其交换,باختصار ، كيف يعمل فرز الاختيار؟,يختار الحد الأدنى من المصفوفة ويضعه في الموضع الأول ، ثم يختار الحد الأدنى من باقي المصفوفة ويضعه في الموضع الثاني ، وهكذا.,حدد عنصرًا قارنه بالعنصر الثاني إذا كان أكبر ، قم بتبديله,"Коротко, як працює сортування підбору?","Він вибирає мінімум з масиву і розміщує його на першій позиції, потім він вибирає мінімум з решти масиву і розміщує його на другій позиції тощо.","виберіть елемент, порівняйте його з 2-м елементом, якщо він більший, поміняйте його місцями","Resumidamente, como funciona a classificação por seleção?","Ele seleciona o mínimo de uma matriz e o coloca na primeira posição, em seguida, seleciona o mínimo do resto da matriz e o coloca na segunda posição, e assim por diante.","selecione um elemento, compare-o com o 2º elemento se for maior, troque-o",به طور خلاصه ، نحوه انتخاب چگونه کار می کند؟,حداقل را از یک آرایه انتخاب کرده و در موقعیت اول قرار می دهد ، سپس حداقل را از بقیه آرایه انتخاب کرده و در موقعیت دوم قرار می دهد و غیره.,یک عنصر را انتخاب کنید اگر بزرگتر است آن را با عنصر 2 مقایسه کنید ، آن را عوض کنید,"Breument, com funciona la selecció?","Selecciona el mínim d’una matriu i el col·loca a la primera posició, després selecciona el mínim de la resta de la matriu i el col·loca a la segona posició, etc.","seleccioneu un element per comparar-lo amb el segon element si és més gran, canvieu-lo","Укратко, како функционише сортирање селекције?","Одабире минимум из низа и поставља га на прво место, затим одабире минимум из остатка низа и поставља га на друго место, и тако даље.","изаберите елемент упоредите га са 2. елементом ако је већи, замените га","Secara singkat, bagaimana cara kerja urutan seleksi?","Ini memilih minimum dari sebuah array dan menempatkannya di posisi pertama, kemudian memilih minimum dari sisa array dan menempatkannya di posisi kedua, dan seterusnya.","pilih sebuah elemen bandingkan dengan elemen ke-2 jika lebih besar, tukar","Kort fortalt, hvordan fungerer utvalgssortering?","Den velger minimum fra en matrise og plasserer den på første posisjon, deretter velger den minimum fra resten av matrisen og plasserer den på den andre posisjonen, og så videre.","velg et element, sammenlign det med det andre elementet hvis det er større, bytt det",간단히 말해서 선택 정렬은 어떻게 작동합니까?,배열에서 최소값을 선택하여 첫 번째 위치에 배치 한 다음 나머지 배열에서 최소값을 선택하여 두 번째 위치에 배치하는 식입니다.,더 큰 경우 두 번째 요소와 비교하여 요소를 선택하고 교체하십시오.,"Lyhyesti, miten valintalaji toimii?","Se valitsee matriisin matriisista ja sijoittaa sen ensimmäiseen sijaintiin, sitten se valitsee minimin matriisin lopusta ja sijoittaa sen toiseen sijaintiin jne.","valitse elementti vertaa sitä toiseen elementtiin, jos se on suurempi, vaihda se","Röviden, hogyan működik a válogatás?","Egy tömbből kiválasztja a minimumot, és az első pozícióba helyezi, majd a tömb többi részéből kiválasztja a minimumot, és a második pozícióba helyezi, és így tovább.","válasszon egy elemet, ha nagyobb, akkor hasonlítsa össze a 2. elemmel, cserélje fel","Stručně, jak funguje výběrové třídění?","Vybírá minimum z pole a umístí ho na první pozici, poté vybere minimum ze zbytku pole a umístí ho na druhou pozici atd.","vyberte prvek, porovnejte jej s 2. prvkem, pokud je větší, vyměňte jej","Ukratko, kako funkcionira sortiranje odabira?","Odabire minimum iz niza i postavlja ga na prvo mjesto, zatim odabire minimum iz ostatka niza i postavlja ga na drugo mjesto itd.","odaberite element, uporedite ga sa 2. elementom ako je veći, zamijenite ga"
23,23,1932,11.3,Objects are usually initialized at the beginning of the program and are initialized usually in the main function. They are initialized after the class's name.,By using constructors.,How are objects initialized when they are created?,2.5,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,Objekte werden normalerweise zu Beginn des Programms und normalerweise in der Hauptfunktion initialisiert. Sie werden nach dem Namen der Klasse initialisiert.,Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,Ang mga butang sagad nga gipakasama sa sinugdanan sa programa ug nauna nga gisugdan sa panguna nga kalihokan. Gisugdan ang mga kini pagkahuman sa ngalan sa klase.,Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,Objekt initialiseras vanligtvis i början av programmet och initialiseras vanligtvis i huvudfunktionen. De initialiseras efter klassens namn.,Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,Les objets sont généralement initialisés au début du programme et sont généralement initialisés dans la fonction principale. Ils sont initialisés après le nom de la classe.,Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,Objecten worden meestal aan het begin van het programma geïnitialiseerd en worden meestal in de hoofdfunctie geïnitialiseerd. Ze worden geïnitialiseerd achter de naam van de klas.,Как инициализируются объекты при их создании?,Используя конструкторы.,Объекты обычно инициализируются в начале программы и обычно инициализируются в основной функции. Они инициализируются после имени класса.,Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,Gli oggetti vengono solitamente inizializzati all&#39;inizio del programma e vengono inizializzati solitamente nella funzione principale. Vengono inizializzati dopo il nome della classe.,¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,Los objetos generalmente se inicializan al comienzo del programa y generalmente se inicializan en la función principal. Se inicializan después del nombre de la clase.,Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,Obiekty są zwykle inicjowane na początku programu i są zwykle inicjowane w funkcji głównej. Są inicjowane po nazwie klasy.,Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,Các đối tượng thường được khởi tạo ở đầu chương trình và được khởi tạo thường trong hàm chính. Chúng được khởi tạo sau tên của lớp.,オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,オブジェクトは通常、プログラムの開始時に初期化され、通常はmain関数で初期化されます。それらはクラス名の後に初期化されます。,创建对象时如何初始化它们？,通过使用构造函数。,对象通常在程序开始时进行初始化，并且通常在main函数中进行初始化。它们以类的名称初始化。,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,عادة ما يتم تهيئة الكائنات في بداية البرنامج ويتم تهيئتها عادة في الوظيفة الرئيسية. تتم تهيئتها بعد اسم الفصل.,Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,"Об&#39;єкти, як правило, ініціалізуються на початку програми і ініціалізуються, як правило, в основній функції. Вони ініціалізуються після імені класу.",Como os objetos são inicializados quando são criados?,Usando construtores.,Os objetos geralmente são inicializados no início do programa e são inicializados normalmente na função principal. Eles são inicializados após o nome da classe.,چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,اشیا usually معمولاً در ابتدای برنامه مقدار دهی می شوند و معمولاً در عملکرد اصلی مقدار دهی می شوند. مقدار اولیه آنها بعد از نام کلاس است.,Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,Els objectes normalment s’inicialitzen al principi del programa i s’inicialitzen normalment a la funció principal. S’inicialitzen després del nom de la classe.,Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,Објекти се обично иницијализују на почетку програма и иницијализују се обично у главној функцији. Они су иницијализовани након имена класе.,Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,Objek biasanya diinisialisasi di awal program dan biasanya diinisialisasi di fungsi utama. Mereka diinisialisasi setelah nama kelas.,Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,Objekter initialiseres vanligvis i begynnelsen av programmet og initialiseres vanligvis i hovedfunksjonen. De initialiseres etter klassens navn.,객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,개체는 일반적으로 프로그램 시작시 초기화되며 일반적으로 주 함수에서 초기화됩니다. 클래스 이름 뒤에 초기화됩니다.,"Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,Objektit alustetaan yleensä ohjelman alussa ja ne alustetaan yleensä päätoiminnossa. Ne alustetaan luokan nimen jälkeen.,"Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,"Az objektumokat általában a program elején inicializálják, és általában a fő funkcióban. Az osztály neve után inicializálódnak.","Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,Objekty se obvykle inicializují na začátku programu a inicializují se obvykle v hlavní funkci. Inicializují se za názvem třídy.,Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,Objekti se obično inicijaliziraju na početku programa i inicijaliziraju se obično u glavnoj funkciji. Oni su inicijalizirani nakon imena klase.
24,24,1289,7.6,"The primary disadvantage of doubly linked lists are that (1) each node requires an extra pointer, requiring more space, and (2) the insertion or deletion of a node takes a bit longer (more pointer operations).","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,2.0,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"Der Hauptnachteil von doppelt verknüpften Listen besteht darin, dass (1) jeder Knoten einen zusätzlichen Zeiger benötigt, der mehr Platz benötigt, und (2) das Einfügen oder Löschen eines Knotens etwas länger dauert (mehr Zeigeroperationen).",Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.","Ang panguna nga disbentaha sa doble nga nalambigit nga mga lista mao ang (1) matag node nanginahanglan us aka dugang nga pointer, nanginahanglan dugang nga wanang, ug (2) ang pagsal-ot o pagtangtang sa usa ka node nga medyo dugay (daghang mga operasyon sa pointer).",Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.","Den primära nackdelen med dubbelt länkade listor är att (1) varje nod kräver en extra pekare, vilket kräver mer utrymme, och (2) insättning eller radering av en nod tar lite längre tid (fler pekareoperationer).",Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.","Le principal inconvénient des listes doublement liées est que (1) chaque nœud nécessite un pointeur supplémentaire, nécessitant plus d&#39;espace, et (2) l&#39;insertion ou la suppression d&#39;un nœud prend un peu plus de temps (plus d&#39;opérations de pointeur).",Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.","Het belangrijkste nadeel van dubbelgekoppelde lijsten is dat (1) elk knooppunt een extra pointer nodig heeft, waardoor er meer ruimte nodig is, en (2) het invoegen of verwijderen van een knoop iets langer duurt (meer pointerbewerkingen).",В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.","Основным недостатком двусвязных списков является то, что (1) каждому узлу требуется дополнительный указатель, требующий больше места, и (2) вставка или удаление узла занимает немного больше времени (больше операций с указателем).",Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.","Lo svantaggio principale degli elenchi doppiamente concatenati è che (1) ogni nodo richiede un puntatore aggiuntivo, che richiede più spazio, e (2) l&#39;inserimento o la cancellazione di un nodo richiede un po &#39;più di tempo (più operazioni di puntatore).",¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.","La principal desventaja de las listas doblemente enlazadas es que (1) cada nodo requiere un puntero adicional, requiriendo más espacio, y (2) la inserción o eliminación de un nodo lleva un poco más de tiempo (más operaciones de puntero).",Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.","Podstawową wadą podwójnie połączonych list jest to, że (1) każdy węzeł wymaga dodatkowego wskaźnika, co wymaga więcej miejsca, oraz (2) wstawianie lub usuwanie węzła trwa nieco dłużej (więcej operacji na wskaźnikach).",Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.","Nhược điểm chính của danh sách được liên kết kép là (1) mỗi nút yêu cầu thêm một con trỏ, yêu cầu nhiều không gian hơn và (2) việc chèn hoặc xóa nút mất nhiều thời gian hơn (nhiều thao tác con trỏ hơn).",基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,二重リンクリストの主な欠点は、（1）各ノードに追加のポインターが必要であり、より多くのスペースが必要であり、（2）ノードの挿入または削除に少し時間がかかる（より多くのポインター操作）ことです。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,双链表的主要缺点是（1）每个节点都需要一个额外的指针，需要更多的空间，并且（2）节点的插入或删除会花费更长的时间（更多的指针操作）。,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,العيب الأساسي للقوائم المرتبطة بشكل مضاعف هو أن (1) كل عقدة تتطلب مؤشرًا إضافيًا ، وتتطلب مساحة أكبر ، و (2) يستغرق إدراج العقدة أو حذفها وقتًا أطول قليلاً (المزيد من عمليات المؤشر).,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.","Основним недоліком подвійно зв’язаних списків є те, що (1) кожен вузол вимагає додаткового вказівника, що вимагає більше місця, і (2) вставка або видалення вузла займає трохи більше часу (більше операцій з вказівниками).",Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.","A principal desvantagem das listas duplamente vinculadas é que (1) cada nó requer um ponteiro extra, exigindo mais espaço, e (2) a inserção ou exclusão de um nó leva um pouco mais de tempo (mais operações de ponteiro).",مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,نقطه ضعف اصلی لیست های پیوندی مضاعف این است که (1) هر گره به یک اشاره گر اضافی احتیاج دارد ، فضای بیشتری نیاز دارد و (2) درج یا حذف گره کمی بیشتر طول می کشد (عملیات اشاره گر بیشتر).,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.","El principal desavantatge de les llistes doblement enllaçades és que (1) cada node requereix un punter addicional, que requereix més espai, i (2) la inserció o supressió d’un node triga una mica més (més operacions de punter).",Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.","Примарни недостатак двоструко повезаних листа је тај што (1) сваки чвор захтева додатни показивач, који захтева више простора, и (2) уметање или брисање чвора траје мало дуже (више операција показивача).",Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.","Kerugian utama dari daftar tertaut ganda adalah bahwa (1) setiap node membutuhkan pointer ekstra, membutuhkan lebih banyak ruang, dan (2) penyisipan atau penghapusan node membutuhkan waktu sedikit lebih lama (lebih banyak operasi pointer).",Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.","Den primære ulempen med dobbeltkoblede lister er at (1) hver node krever en ekstra peker, som krever mer plass, og (2) innsetting eller sletting av en node tar litt lengre tid (flere pekeroperasjoner).",기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,이중 연결 목록의 주된 단점은 (1) 각 노드에 추가 포인터가 필요하고 더 많은 공간이 필요하며 (2) 노드 삽입 또는 삭제에 시간이 더 오래 걸린다는 것입니다 (포인터 작업이 더 많음).,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.","Kaksinkertaisesti linkitettyjen luetteloiden ensisijainen haittapuoli on, että (1) jokainen solmu vaatii ylimääräisen osoittimen, joka vaatii enemmän tilaa, ja (2) solmun lisääminen tai poistaminen vie vähän kauemmin (enemmän osoitinoperaatioita).",Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.","A kétszeresen összekapcsolt listák elsődleges hátránya, hogy (1) mindegyik csomóponthoz extra mutatóra van szükség, több helyre van szükségük, és (2) egy csomópont beillesztése vagy törlése valamivel hosszabb ideig tart (több mutatóművelet).",Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.","Primární nevýhodou dvojitě propojených seznamů je to, že (1) každý uzel vyžaduje další ukazatel, který vyžaduje více místa, a (2) vložení nebo odstranění uzlu trvá o něco déle (více operací ukazatele).",Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.","Primarni nedostatak dvostruko povezanih lista je taj što (1) svaki čvor zahtijeva dodatni pokazivač, koji zahtijeva više prostora, i (2) umetanje ili brisanje čvora traje malo duže (više operacija pokazivača)."
25,25,442,3.1,a function's return type and parameter list,The name of the function and the types of the parameters.,What does a function signature include?,3.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,Rückgabetyp und Parameterliste einer Funktion,Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,pagbalik usa ka gimbuhaton ug lista sa parameter,Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,en funktions returtyp och parameterlista,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,le type de retour d&#39;une fonction et la liste des paramètres,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,het retourtype en de parameterlijst van een functie,Что включает в себя сигнатура функции?,Имя функции и типы параметров.,тип возвращаемого значения функции и список параметров,Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,il tipo di ritorno di una funzione e l&#39;elenco dei parametri,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,el tipo de retorno de una función y la lista de parámetros,Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,zwracany typ funkcji i lista parametrów,Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,kiểu trả về của một hàm và danh sách tham số,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数の戻り値の型とパラメーターリスト,功能签名包括什么？,函数的名称和参数的类型。,函数的返回类型和参数列表,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,نوع إرجاع الدالة وقائمة المعلمات,Що включає підпис функції?,Назва функції та типи параметрів.,тип повернення функції та список параметрів,O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,um tipo de retorno de função e lista de parâmetros,امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,نوع بازگشت یک عملکرد و لیست پارامترها,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,el tipus de retorn i la llista de paràmetres d&#39;una funció,Шта укључује потпис функције?,Назив функције и врсте параметара.,тип повратка функције и листа параметара,Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,jenis kembalian fungsi dan daftar parameter,Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,en funksjons returtype og parameterliste,함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수의 반환 유형 및 매개 변수 목록,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,funktion palautustyyppi ja parametriluettelo,Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,egy függvény visszatérési típusát és paraméterlistáját,Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,návratový typ funkce a seznam parametrů,Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,tip povrata funkcije i lista parametara
26,26,1115,6.7,"A pointer to a function itself, contains the address of the function and can be used to call that function",The address of the location in memory where the function code resides.,What is a function pointer?,5.0,"Die Adresse des Speicherorts, an dem sich der Funktionscode befindet.",Was ist ein Funktionszeiger?,Ein Zeiger auf eine Funktion selbst enthält die Adresse der Funktion und kann zum Aufrufen dieser Funktion verwendet werden,Unsa ang usa ka function pointer?,Ang adres sa lokasyon sa panumduman diin nagpuyo ang function code.,"Ang usa ka pointer sa usa ka pagpaandar mismo, adunay sulud nga adres sa pagpaandar ug mahimong magamit sa pagtawag sa kana nga pagpaandar",Vad är en funktionspekare?,Adressen till platsen i minnet där funktionskoden finns.,En pekare till en funktion i sig innehåller adressen till funktionen och kan användas för att anropa den funktionen,Qu&#39;est-ce qu&#39;un pointeur de fonction?,L&#39;adresse de l&#39;emplacement en mémoire où réside le code de fonction.,"Un pointeur vers une fonction elle-même, contient l&#39;adresse de la fonction et peut être utilisé pour appeler cette fonction",Wat is een functie-aanwijzer?,Het adres van de locatie in het geheugen waar de functiecode zich bevindt.,Een pointer naar een functie zelf bevat het adres van de functie en kan worden gebruikt om die functie aan te roepen,Что такое указатель на функцию?,"Адрес места в памяти, где находится код функции.","Указатель на саму функцию, содержит адрес функции и может использоваться для вызова этой функции.",Cos&#39;è un puntatore a funzione?,L&#39;indirizzo della posizione in memoria in cui risiede il codice funzione.,"Un puntatore a una funzione stessa, contiene l&#39;indirizzo della funzione e può essere utilizzato per chiamare quella funzione",¿Qué es un puntero de función?,La dirección de la ubicación en la memoria donde reside el código de función.,"Un puntero a una función en sí, contiene la dirección de la función y se puede usar para llamar a esa función.",Co to jest wskaźnik funkcji?,"Adres lokalizacji w pamięci, w której znajduje się kod funkcji.",Wskaźnik do samej funkcji zawiera adres funkcji i może służyć do wywołania tej funkcji,Con trỏ hàm là gì?,Địa chỉ của vị trí trong bộ nhớ nơi mã hàm cư trú.,"Một con trỏ đến chính một hàm, chứa địa chỉ của hàm và có thể được sử dụng để gọi hàm đó",関数ポインタとは何ですか？,機能コードが存在するメモリ内の場所のアドレス。,関数自体へのポインタ。関数のアドレスが含まれており、その関数を呼び出すために使用できます。,什么是函数指针？,功能代码所在的内存位置的地址。,指向函数本身的指针，包含函数的地址，可用于调用该函数,ما هو مؤشر الوظيفة؟,عنوان الموقع في الذاكرة حيث يوجد رمز الوظيفة.,يحتوي مؤشر الوظيفة نفسها على عنوان الوظيفة ويمكن استخدامه لاستدعاء هذه الوظيفة,Що таке покажчик функції?,"Адреса місця в пам&#39;яті, де знаходиться код функції.","Вказівник на саму функцію, містить адресу функції і може використовуватися для виклику цієї функції",O que é um ponteiro de função?,O endereço do local na memória onde o código de função reside.,Um ponteiro para a própria função contém o endereço da função e pode ser usado para chamar essa função,نشانگر عملکرد چیست؟,آدرس مکانی در حافظه که کد عملکرد در آن قرار دارد.,خود یک نشانگر برای یک عملکرد ، حاوی آدرس عملکرد است و می تواند برای فراخوانی آن عملکرد استفاده شود,Què és un punter de funció?,L&#39;adreça de la ubicació a la memòria on resideix el codi de funció.,Un punter cap a una funció conté l&#39;adreça de la funció i es pot utilitzar per trucar a aquesta funció,Шта је показивач функције?,Адреса локације у меморији на којој се налази код функције.,"Показивач на саму функцију, садржи адресу функције и може се користити за позивање те функције",Apa itu penunjuk fungsi?,Alamat lokasi di memori tempat kode fungsi berada.,"Penunjuk ke fungsi itu sendiri, berisi alamat fungsi dan dapat digunakan untuk memanggil fungsi itu",Hva er en funksjonspeker?,Adressen til stedet i minnet der funksjonskoden ligger.,En peker til selve funksjonen inneholder adressen til funksjonen og kan brukes til å ringe den funksjonen,함수 포인터 란 무엇입니까?,기능 코드가있는 메모리의 위치 주소입니다.,"함수 자체에 대한 포인터, 함수의 주소를 포함하고 해당 함수를 호출하는 데 사용할 수 있습니다.",Mikä on funktion osoitin?,"Sen muistin sijainnin osoite, jossa toimintokoodi sijaitsee.","Itse toiminnon osoitin, joka sisältää toiminnon osoitteen ja jota voidaan käyttää kyseisen toiminnon kutsumiseen",Mi az a funkciómutató?,"A memória azon helyének címe, ahol a funkciókód található.","Maga a függvény mutatója tartalmazza a függvény címét, és felhasználható a függvény meghívására",Co je ukazatel funkce?,"Adresa umístění v paměti, kde se nachází funkční kód.","Ukazatel na samotnou funkci, obsahuje adresu funkce a lze ji použít k volání této funkce",Što je pokazivač funkcije?,Adresa lokacije u memoriji na kojoj se nalazi kôd funkcije.,"Pokazivač na samu funkciju, sadrži adresu funkcije i može se koristiti za poziv te funkcije"
27,27,1271,7.6,Doubly linked lists can be traversed in both directions,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Doppelt verknüpfte Listen können in beide Richtungen durchlaufen werden,Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",Dobleng mga lista nga na-link ang maagi sa parehas nga direksyon,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",Dubbel länkade listor kan passeras i båda riktningarna,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",Les listes doublement liées peuvent être parcourues dans les deux sens,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",Dubbel gelinkte lijsten kunnen in beide richtingen worden doorlopen,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.",По двусвязным спискам можно переходить в обоих направлениях.,Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",Gli elenchi doppiamente concatenati possono essere attraversati in entrambe le direzioni,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",Las listas doblemente enlazadas se pueden recorrer en ambas direcciones,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.",Listy podwójnie połączone można przeglądać w obu kierunkach,Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",Danh sách được liên kết kép có thể được duyệt theo cả hai hướng,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,二重にリンクされたリストは、両方向にトラバースできます,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,双向链表可以双向遍历,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,يمكن اجتياز القوائم المرتبطة بشكل مضاعف في كلا الاتجاهين,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.",Подвійно пов’язані списки можна об’їжджати в обох напрямках,Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",Listas duplamente vinculadas podem ser percorridas em ambas as direções,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,لیست های دارای پیوند مضاعف را می توان در هر دو جهت مرور کرد,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",Les llistes doblement enllaçades es poden recórrer en ambdues direccions,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",Двоструко повезане листе могу се прелазити у оба смера,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",Daftar yang tertaut ganda dapat dilalui di kedua arah,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",Dobbeltkoblede lister kan krysses i begge retninger,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,이중 연결 목록은 양방향으로 이동할 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",Kaksinkertaisesti linkitetyt luettelot voidaan kulkea molempiin suuntiin,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.",A kétszeresen összekapcsolt listák mindkét irányban bejárhatók,Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.",Dvojitě propojené seznamy lze procházet oběma směry,Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",Dvostruko povezane liste mogu se prelaziti u oba smjera
28,28,282,2.3,constructors cannot return values,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,4.0,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,Konstruktoren können keine Werte zurückgeben,Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.",dili ibalik sa mga magtutukod ang mga kantidad,Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.",konstruktörer kan inte returnera värden,Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.",les constructeurs ne peuvent pas renvoyer de valeurs,Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.",constructeurs kunnen geen waarden retourneren,В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.",конструкторы не могут возвращать значения,Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.",i costruttori non possono restituire valori,¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.",los constructores no pueden devolver valores,Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.",konstruktorzy nie mogą zwracać wartości,Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.",hàm tạo không thể trả về giá trị,コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターは値を返すことができません,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数无法返回值,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,لا يمكن للمُنشئين إرجاع القيم,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.",конструктори не можуть повертати значення,Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.",construtores não podem retornar valores,تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,سازندگان نمی توانند مقادیر را برگردانند,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.",els constructors no poden retornar valors,Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.",конструктори не могу вратити вредности,Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.",konstruktor tidak dapat mengembalikan nilai,Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.",konstruktører kan ikke returnere verdier,생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자는 값을 반환 할 수 없습니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.",rakentajat eivät voi palauttaa arvoja,Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.",a kivitelezők nem adhatnak vissza értékeket,Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.",konstruktory nemohou vracet hodnoty,Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.",konstruktori ne mogu vratiti vrijednosti
29,29,2003,11.5,A function that divides and conquers a problem.  There is a base case that will eventually be reached.  The function calls itself over and over until the base case is satisfied.,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine Funktion, die ein Problem teilt und besiegt. Es gibt einen Basisfall, der irgendwann erreicht wird. Die Funktion ruft sich immer wieder auf, bis der Basisfall erfüllt ist.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,Usa ka kalihokan nga nagbahinbahin ug nakabuntog sa usa ka problema. Adunay usa ka base nga kaso nga sa katapusan maabut. Ang pagpaandar sa tawag sa iyang kaugalingon sa kanunay ug sa hangtud nga ang base kaso nga matagbaw.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,En funktion som delar upp och erövrar ett problem. Det finns ett basfall som så småningom kommer att nås. Funktionen kallar sig om och om igen tills basfallet är nöjt.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,Une fonction qui divise et surmonte un problème. Il existe un cas de base qui sera finalement atteint. La fonction s&#39;appelle elle-même encore et encore jusqu&#39;à ce que le cas de base soit satisfait.,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,Een functie die een probleem verdeelt en overwint. Er is een basissituatie die uiteindelijk zal worden bereikt. De functie roept zichzelf keer op keer aan totdat aan het basisscenario is voldaan.,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","Функция, которая разделяет и преодолевает проблему. Есть базовый вариант, который в конечном итоге будет достигнут. Функция вызывает себя снова и снова, пока не будет удовлетворен базовый вариант.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,Una funzione che divide e vince un problema. C&#39;è un caso di base che alla fine sarà raggiunto. La funzione chiama se stessa più e più volte finché il caso base non è soddisfatto.,¿Qué es una función recursiva?,Una función que se llama a sí misma.,Una función que divide y vence un problema. Hay un caso base que eventualmente se alcanzará. La función se llama a sí misma una y otra vez hasta que se satisface el caso base.,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","Funkcja, która dzieli i pokonuje problem. Istnieje przypadek podstawowy, który ostatecznie zostanie osiągnięty. Funkcja ciągle wywołuje siebie, aż przypadek podstawowy zostanie spełniony.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,Một chức năng phân chia và chinh phục một vấn đề. Có một trường hợp cơ sở mà cuối cùng sẽ đạt được. Hàm tự gọi đi gọi lại cho đến khi trường hợp cơ sở được thỏa mãn.,再帰関数とは何ですか？,自分自身を呼び出す関数。,問題を分割して克服する機能。最終的に到達する基本的なケースがあります。この関数は、基本ケースが満たされるまで何度も自分自身を呼び出します。,什么是递归函数？,调用自身的函数。,划分和征服问题的功能。最终将有一个基本案例。该函数反复调用自身，直到满足基本情况为止。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,وظيفة تقسم مشكلة وتتغلب عليها. هناك حالة أساسية سيتم الوصول إليها في النهاية. تستدعي الوظيفة نفسها مرارًا وتكرارًا حتى يتم استيفاء الحالة الأساسية.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","Функція, яка розділяє та перемагає проблему. Є базовий випадок, який врешті-решт буде досягнутий. Функція викликає себе знову і знову, поки не буде задоволений базовий випадок.",O que é uma função recursiva?,Uma função que chama a si mesma.,Uma função que divide e vence um problema. Existe um caso básico que será alcançado. A função chama a si mesma continuamente até que o caso base seja satisfeito.,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,تابعی که یک مسئله را تقسیم و تسخیر می کند. یک پرونده پایه وجود دارد که در نهایت به آن رسیدگی می شود. این تابع خود را بارها و بارها صدا می زند تا زمانی که مورد اصلی راضی شود.,Què és una funció recursiva?,Una funció que s’autodenomina.,Una funció que divideix i conquereix un problema. Hi ha un cas base que finalment s’arribarà. La funció es crida una i altra vegada fins que es compleix el cas base.,Шта је рекурзивна функција?,Функција која себе позива.,Функција која дели и савладава проблем. Постоји основни случај који ће на крају бити постигнут. Функција се позива изнова и изнова док се не задовољи основни случај.,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,Fungsi yang membagi dan mengatasi masalah. Ada kasus dasar yang akhirnya akan tercapai. Fungsi memanggil dirinya sendiri berulang-ulang sampai kasus dasar terpenuhi.,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,En funksjon som deler og erobrer et problem. Det er en basissak som til slutt vil bli nådd. Funksjonen kaller seg igjen og igjen til basissaken er oppfylt.,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,문제를 나누고 정복하는 기능. 결국 도달 할 기본 케이스가 있습니다. 함수는 기본 케이스가 충족 될 때까지 계속해서 자신을 호출합니다.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","Toiminto, joka jakaa ongelman ja voittaa sen. On perustapausta, joka lopulta saavutetaan. Toiminto kutsuu itseään uudestaan ja uudestaan, kunnes perustapaus on tyydyttävä.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","Olyan funkció, amely megosztja és meghódítja a problémát. Van egy alapeset, amelyet végül elérnek. A funkció újra és újra hívja magát, amíg az alapeset meg nem felel.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","Funkce, která rozděluje a dobývá problém. Existuje základní případ, kterého se nakonec dosáhne. Funkce se volá znovu a znovu, dokud není uspokojen základní případ.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,Funkcija koja dijeli i pobjeđuje problem. Postoji osnovni slučaj koji će na kraju biti postignut. Funkcija se poziva iznova i iznova dok ne zadovolji osnovni slučaj.
30,30,639,4.1,"Array lengths can be explicitly specified by inputing the number of elements between the brackets [ ] during declaration, or implicitly by including an initializer list WITHOUT specifying a number between [ ], the compiler will automatically declare the array with the proper number of elements needed for the list.","In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,5.0,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?","Array-Längen können explizit angegeben werden, indem die Anzahl der Elemente zwischen den Klammern [] während der Deklaration eingegeben wird oder implizit eine Initialisiererliste eingefügt wird, ohne eine Zahl zwischen [] anzugeben. Der Compiler deklariert das Array automatisch mit der richtigen Anzahl von Elementen, die für erforderlich sind Die Liste.",Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.","Ang mga gitas-on sa array tin-aw nga matino pinaagi sa pagsulud sa ihap sa mga elemento taliwala sa mga bracket [] sa panahon sa pagdeklara, o sa implisit nga pag-upod sa usa ka lista nga pasiuna nga WALA gipiho ang us aka numero taliwala [], awtomatikong ideklara sa tagkompuno ang han-ay sa husto nga ihap sa mga elemento nga gikinahanglan alang sa ang listahan.",Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,"Arraylängder kan specifikt specificeras genom att ange antalet element mellan parenteserna [] under deklarationen, eller implicit genom att inkludera en initialiserarlista UTAN att ange ett nummer mellan [], kommer kompilatorn automatiskt att deklarera arrayen med rätt antal element som behövs för listan.",Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,"Les longueurs de tableau peuvent être explicitement spécifiées en entrant le nombre d&#39;éléments entre les crochets [] lors de la déclaration, ou implicitement en incluant une liste d&#39;initialiseurs SANS spécifier un nombre entre [], le compilateur déclarera automatiquement le tableau avec le nombre correct d&#39;éléments nécessaires pour la liste.",Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.","Array-lengtes kunnen expliciet worden gespecificeerd door het aantal elementen tussen de haakjes [] in te voeren tijdens de declaratie, of impliciet door een initialisatie-lijst op te nemen ZONDER een getal tussen [] te specificeren, zal de compiler automatisch de array declareren met het juiste aantal elementen dat nodig is voor de lijst.",Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,"Длину массива можно указать явно, введя количество элементов между скобками [] во время объявления, или неявно, включив список инициализаторов БЕЗ указания числа между [], компилятор автоматически объявит массив с правильным количеством элементов, необходимых для список.",Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,"Le lunghezze degli array possono essere specificate esplicitamente inserendo il numero di elementi tra le parentesi [] durante la dichiarazione, o implicitamente includendo un elenco di inizializzatori SENZA specificare un numero tra [], il compilatore dichiarerà automaticamente l&#39;array con il numero corretto di elementi necessari per la lista.",¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.","Las longitudes de los arreglos se pueden especificar explícitamente ingresando el número de elementos entre corchetes [] durante la declaración, o implícitamente al incluir una lista de inicializadores SIN especificar un número entre [], el compilador declarará automáticamente el arreglo con el número adecuado de elementos necesarios para la lista.",Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,"Długości tablic można jawnie określić, wprowadzając liczbę elementów między nawiasami kwadratowymi [] podczas deklaracji lub niejawnie przez dołączenie listy inicjalizującej BEZ określenia liczby między [], kompilator automatycznie zadeklaruje tablicę z odpowiednią liczbą elementów potrzebnych do Lista.",Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,"Độ dài mảng có thể được chỉ định rõ ràng bằng cách nhập số phần tử vào giữa các dấu ngoặc [] trong khi khai báo, hoặc ngầm định bằng cách đưa vào danh sách bộ khởi tạo KHÔNG chỉ định một số giữa [], trình biên dịch sẽ tự động khai báo mảng với số phần tử thích hợp cần thiết danh sách.",配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,配列の長さは、宣言時に角かっこ[]の間に要素数を入力することで明示的に指定できます。または、[]の間に数を指定せずに初期化子リストを含めることで暗黙的に指定できます。コンパイラは、に必要な適切な要素数で配列を自動的に宣言します。リスト。,指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,可以通过在声明过程中输入方括号[]之间的元素数来明确指定数组的长度，也可以隐式地包括一个初始化列表，而无需在[]之间指定数字，编译器将自动声明具有适当数量的元素的数组，列表。,ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,يمكن تحديد أطوال المصفوفات بشكل صريح عن طريق إدخال عدد العناصر بين الأقواس [] أثناء التصريح ، أو ضمنيًا عن طريق تضمين قائمة مُهيئ بدون تحديد رقم بين [] ، سيعلن المترجم تلقائيًا عن المصفوفة بالعدد المناسب من العناصر اللازمة لـ القائمة.,Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,"Довжини масивів можна явно вказати, ввівши кількість елементів між дужками [] під час оголошення, або неявно, включивши список ініціалізаторів БЕЗ зазначення числа між [], компілятор автоматично оголосить масив із відповідною кількістю елементів, необхідних для список.",Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,"Os comprimentos da matriz podem ser especificados explicitamente inserindo o número de elementos entre os colchetes [] durante a declaração, ou implicitamente incluindo uma lista de inicializadores SEM especificar um número entre [], o compilador declarará automaticamente a matriz com o número adequado de elementos necessários para a lista.",دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,طول آرایه را می توان با وارد کردن تعداد عناصر بین براکت [] در هنگام اعلام ، یا به طور ضمنی با درج لیست اولیه ساز بدون مشخص کردن عددی بین [] مشخص کرد ، کامپایلر به طور خودکار آرایه را با تعداد مناسب عناصر مورد نیاز برای لیست.,Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,"Les longituds de la matriu es poden especificar explícitament introduint el nombre d’elements entre claudàtors [] durant la declaració, o implícitament incloent una llista d’inicialitzadors SENSE especificar un número entre [], el compilador declararà automàticament la matriu amb el nombre adequat d’elements necessaris per a la llista.",Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,"Дужине низа могу се експлицитно навести уношењем броја елемената између заграда [] током декларације, или имплицитно укључивањем листе иницијализатора БЕЗ специфицирања броја између [], компајлер ће аутоматски декларирати низ са одговарајућим бројем елемената потребних за листа.",Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.","Panjang larik dapat ditentukan secara eksplisit dengan memasukkan jumlah elemen antara tanda kurung [] selama deklarasi, atau secara implisit dengan menyertakan daftar penginisialisasi TANPA menentukan angka di antara [], kompilator akan secara otomatis mendeklarasikan larik dengan jumlah elemen yang tepat yang dibutuhkan untuk Daftar.",Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.","Array lengder kan spesifiseres eksplisitt ved å legge inn antall elementer mellom parentesene [] under erklæringen, eller implisitt ved å inkludere en initialiseringsliste UTEN å spesifisere et tall mellom [], vil kompilatoren automatisk erklære matrisen med riktig antall elementer som trengs for listen.",배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,배열 길이는 선언 중에 대괄호 [] 사이에 요소 수를 입력하여 명시 적으로 지정하거나 [] 사이에 숫자를 지정하지 않고 이니셜 라이저 목록을 포함하여 암시 적으로 지정할 수 있습니다. 컴파일러는 필요한 적절한 수의 요소로 배열을 자동으로 선언합니다. 목록.,Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,"Taulukon pituudet voidaan määritellä nimenomaisesti syöttämällä elementtien lukumäärä sulkujen väliin [] ilmoituksen aikana tai implisiittisesti sisällyttämällä alustusluettelo ILMOITTAA määrittelemättä numeroa [] välillä, kääntäjä ilmoittaa automaattisesti taulukon, jossa on oikea määrä elementtejä lista.",Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.","A tömbhosszakat kifejezetten megadhatjuk úgy, hogy a deklaráció során beírjuk az elemek számát a zárójelek közé [], vagy implicit módon beillesztünk egy inicializáló listát, NÉLKÜL megadva számot [] között, a fordító automatikusan deklarálja a tömböt a megfelelő számú elemhez a listát.",Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,"Délky polí lze explicitně zadat zadáním počtu prvků mezi závorky [] během deklarace nebo implicitně zahrnutím seznamu inicializátorů BEZ zadání čísla mezi [], překladač automaticky deklaruje pole se správným počtem prvků potřebných pro seznam.",Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,"Dužine niza mogu se eksplicitno odrediti unosom broja elemenata između zagrada [] za vrijeme deklaracije, ili implicitno uključivanjem liste inicijalizatora BEZ specificiranja broja između [], kompajler će automatski deklarirati niz s odgovarajućim brojem elemenata potrebnih za lista."
31,31,1433,8.5,"Linked list implementation is preferred. That way, the list can be moved along without iteration.","Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred, and why?",3.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird bevorzugt und warum?,Die Implementierung einer verknüpften Liste wird bevorzugt. Auf diese Weise kann die Liste ohne Iteration verschoben werden.,"Kinsa nga pagpatuman (gipasukad sa array vs. list-based) ang gipalabi, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)","Gipalabi ang pagpatuman sa lista nga na-link. Nianang paagiha, ang lista mahimong ibalhin nga wala’y pag-ulit.","Vilket genomförande (array-baserat kontra listbaserat) är att föredra, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),Länkad implementering av listan är att föredra. På så sätt kan listan flyttas utan iteration.,Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée et pourquoi?,"Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)","La mise en œuvre de la liste liée est préférée. De cette façon, la liste peut être déplacée sans itération.","Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)",Implementatie van gekoppelde lijsten heeft de voorkeur. Op die manier kan de lijst zonder iteratie worden verplaatst.,Какая реализация (на основе массива или на основе списка) предпочтительна и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","Реализация связанного списка является предпочтительной. Таким образом, список можно перемещать без итерации.",Quale implementazione (basata su array o basata su elenchi) è preferita e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)","È preferibile l&#39;implementazione dell&#39;elenco collegato. In questo modo, l&#39;elenco può essere spostato senza iterazione.",¿Qué implementación (basada en matrices o basada en listas) se prefiere y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)","Se prefiere la implementación de listas vinculadas. De esa manera, la lista se puede mover sin iteración.",Która implementacja (oparta na tablicach czy oparta na liście) jest preferowana i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)",Preferowana jest implementacja listy połączonej. W ten sposób listę można przesuwać bez iteracji.,Triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên hơn và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)","Triển khai danh sách liên kết được ưu tiên. Bằng cách đó, danh sách có thể được di chuyển mà không cần lặp lại.",どの実装（配列ベースとリストベース）が推奨されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リンクリストの実装が推奨されます。そうすれば、リストを繰り返しなしで移動できます。,首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,首选链接列表实现。这样，列表就可以移动而无需迭代。,ما هو التطبيق المفضل (المستندة إلى المصفوفة مقابل القائمة) ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),يفضل تنفيذ القائمة المرتبطة. بهذه الطريقة ، يمكن نقل القائمة دون تكرار.,"Яка реалізація (на основі масивів проти списку) є кращою, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","Перевагою є реалізація пов’язаного списку. Таким чином, список можна переміщувати без ітерації.",Qual implementação (baseada em matriz vs. baseada em lista) é preferida e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)","A implementação de lista vinculada é preferida. Dessa forma, a lista pode ser movida sem iteração.",کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) ترجیح داده می شود ، و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),پیاده سازی لیست پیوندی ترجیح داده می شود. به این ترتیب می توان لیست را بدون تکرار منتقل کرد.,Quina implementació (basada en matriu vs. basada en llistes) es prefereix i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)","Es prefereix la implementació de llistes enllaçades. D’aquesta manera, la llista es pot moure sense iteració.",Која имплементација (заснована на низу у односу на листу) је пожељнија и зашто?,"На основу везе, јер су динамични (без ограничења величине)","Пожељна је примена повезане листе. На тај начин, листа се може премештати без понављања.","Implementasi mana (berbasis larik vs. berbasis daftar) yang lebih disukai, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)","Penerapan daftar tertaut lebih disukai. Dengan begitu, daftar dapat dipindahkan tanpa iterasi.","Hvilken implementering (arraybasert vs. listebasert) foretrekkes, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)",Implementering av koblet liste foretrekkes. På den måten kan listen flyttes uten iterasjon.,어떤 구현 (배열 기반 vs. 목록 기반)이 선호되며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",링크 된 목록 구현이 선호됩니다. 이렇게하면 반복없이 목록을 이동할 수 있습니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)",Linkitetyn luettelon toteutus on suositeltava. Tällä tavalla luetteloa voidaan siirtää ilman iterointia.,"Melyik megvalósítást (tömb alapú vagy lista alapú) részesítik előnyben, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)",Az összekapcsolt lista megvalósítása előnyös. Így a lista áthelyezhető iteráció nélkül.,Která implementace (založená na poli vs. založená na seznamu) je upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)",Upřednostňuje se implementace propojeného seznamu. Tímto způsobem lze seznam přesouvat bez iterace.,Koja je implementacija (zasnovana na nizu u odnosu na listu) poželjna i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)",Poželjna je implementacija povezane liste. Na taj se način lista može premještati bez ponavljanja.
32,32,586,3.6,There is no base case. The recursion step doesn't reduce the problem during each recursive call.,"If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",4.5,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,Es gibt keinen Basisfall. Der Rekursionsschritt reduziert das Problem nicht bei jedem rekursiven Aufruf.,"Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.",Wala’y basehanan nga kaso. Ang lakang sa recursion dili makaminusan ang problema sa matag recursive call.,Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,Det finns inget basfall. Rekursionssteget minskar inte problemet under varje rekursivt samtal.,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,Il n&#39;y a pas de cas de base. L&#39;étape de récursivité ne réduit pas le problème lors de chaque appel récursif.,Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,Er is geen basisgeval. De recursiestap vermindert het probleem niet tijdens elke recursieve oproep.,Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.",Базового случая нет. Шаг рекурсии не уменьшает проблему во время каждого рекурсивного вызова.,"Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,Non esiste un caso di base. Il passaggio di ricorsione non riduce il problema durante ogni chiamata ricorsiva.,"Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,No hay un caso base. El paso de recursividad no reduce el problema durante cada llamada recursiva.,Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,Nie ma przypadku podstawowego. Krok rekurencji nie zmniejsza problemu podczas każdego wywołania rekurencyjnego.,"Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",Không có trường hợp cơ sở. Bước đệ quy không làm giảm vấn đề trong mỗi lần gọi đệ quy.,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,基本ケースはありません。再帰ステップは、各再帰呼び出し中の問題を軽減しません。,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,没有基本情况。递归步骤不会减少每次递归调用期间的问题。,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,لا توجد حالة أساسية. لا تقلل خطوة العودية من المشكلة أثناء كل مكالمة متكررة.,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.",Базового випадку немає. Крок рекурсії не зменшує проблему під час кожного рекурсивного виклику.,"Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,Não existe um caso base. A etapa de recursão não reduz o problema durante cada chamada recursiva.,هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,مورد پایه ای وجود ندارد. مرحله بازگشت در هر تماس بازگشتی مشکل را کاهش نمی دهد.,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,No hi ha cap cas bàsic. El pas de recursió no redueix el problema durant cada trucada recursiva.,"При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,Не постоји основни случај. Корак рекурзије не смањује проблем током сваког рекурзивног позива.,"Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.",Tidak ada kasus dasar. Langkah rekursi tidak mengurangi masalah selama setiap panggilan rekursif.,Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.",Det er ingen basissak. Rekursjonstrinnet reduserer ikke problemet under hver rekursive samtale.,재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,기본 케이스가 없습니다. 재귀 단계는 각 재귀 호출 중에 문제를 줄이지 않습니다.,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,Perustapausta ei ole. Rekursiovaihe ei vähennä ongelmaa jokaisen rekursiivisen puhelun aikana.,A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.",Nincs alapeset. A rekurziós lépés nem csökkenti a problémát az egyes rekurzív hívások során.,Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.",Neexistuje žádný základní případ. Krok rekurze nezmenšuje problém během každého rekurzivního volání.,"Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,Ne postoji osnovni slučaj. Korak rekurzije ne smanjuje problem tokom svakog rekurzivnog poziva.
33,33,1039,6.4,*(array + element),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,4.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,* (Array + Element),Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",* (array + nga elemento),Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,* (array + element),Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",* (tableau + élément),Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",* (matrix + element),Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",* (массив + элемент),Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,* (matrice + elemento),¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,* (matriz + elemento),Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.",* (tablica + element),Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",* (mảng + phần tử),配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,*（配列+要素）,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,*（数组+元素）,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,* (صفيف + عنصر),Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",* (масив + елемент),Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",* (matriz + elemento),چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,* (آرایه + عنصر),Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",* (matriu + element),Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",* (низ + елемент),Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",* (array + elemen),Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",* (matrise + element),포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,* (배열 + 요소),Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,* (taulukko + elementti),Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.",* (tömb + elem),Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,* (pole + prvek),Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",* (niz + element)
34,34,2365,12.8,"Traversing a tree down to it's terminal child and then all of it's siblings, then it traverses up the terminal child's parent and all of it's siblings (repeating the first step if those siblings have children) until the root node has been visited.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,4.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"Durchlaufen eines Baums bis zu seinem Terminal-Kind und dann von allen Geschwistern, dann durchläuft es das Elternteil des Terminal-Kindes und alle seine Geschwister (Wiederholen des ersten Schritts, wenn diese Geschwister Kinder haben), bis der Stammknoten besucht wurde.",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.","Ang pag-agi sa usa ka punoan sa terminal nga bata ug pagkahuman ang tanan nga igsoon, pagkahuman gibiyahe niini ang ginikanan sa terminal nga bata ug ang tanan nga igsoon (gisubli ang unang lakang kung adunay mga anak ang mga igsoon) hangtod nabisita ang root node.",Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.","Att korsa ett träd ner till det terminala barnet och sedan alla dess syskon, sedan passerar det upp terminalbarnsföräldern och alla dess syskon (upprepar det första steget om dessa syskon har barn) tills rotnoden har besökts.",Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.","Traversant un arbre jusqu&#39;à son enfant terminal, puis tous ses frères et sœurs, puis il traverse le parent de l&#39;enfant terminal et tous ses frères et sœurs (en répétant la première étape si ces frères et sœurs ont des enfants) jusqu&#39;à ce que le nœud racine ait été visité.",Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.","Een boom doorkruisen naar zijn terminale kind en dan al zijn broers en zussen, dan gaat het door de ouder van het terminale kind en al zijn broers en zussen (herhaal de eerste stap als die broers en zussen kinderen hebben) totdat het wortelknooppunt is bezocht.",Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","Обход дерева до его конечного дочернего элемента, а затем всех его братьев и сестер, затем он проходит вверх по родительскому конечному дочернему элементу и всем его братьям и сестрам (повторяя первый шаг, если у этих братьев и сестер есть дети), пока не будет посещен корневой узел.",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.","Attraversando un albero fino al suo figlio terminale e poi tutti i suoi fratelli, quindi attraversa il genitore del figlio terminale e tutti i suoi fratelli (ripetendo il primo passaggio se quei fratelli hanno figli) fino a quando il nodo radice non è stato visitato.",¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.","Atravesando un árbol hasta su hijo terminal y luego todos sus hermanos, luego atraviesa el padre del hijo terminal y todos sus hermanos (repitiendo el primer paso si esos hermanos tienen hijos) hasta que se ha visitado el nodo raíz.",Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","Przechodzenie przez drzewo w dół do jego końcowego dziecka, a następnie do całego rodzeństwa, a następnie przechodzi w górę przez rodzica końcowego dziecka i całe jego rodzeństwo (powtarzając pierwszy krok, jeśli to rodzeństwo ma dzieci), aż zostanie odwiedzony węzeł główny.",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.","Đi ngang một cây xuống con cuối của nó rồi đến tất cả các anh chị em của nó, sau đó nó đi ngang qua cha mẹ của con đầu cuối và tất cả các anh chị em của nó (lặp lại bước đầu tiên nếu những anh chị em đó có con) cho đến khi nút gốc được truy cập.",木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,ツリーをそのターミナルの子までトラバースし、次にそのすべての兄弟までトラバースし、次にルートノードにアクセスするまで、ターミナルの子の親とそのすべての兄弟をトラバースします（それらの兄弟に子がある場合は最初のステップを繰り返します）。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,遍历一棵树到它的终端孩子，然后遍历所有的兄弟姐妹，然后遍历终端孩子的父母及其所有兄弟姐妹（如果这些兄弟姐妹有孩子，则重复第一步），直到访问了根节点为止。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,عبور شجرة لأسفل إلى طفلها النهائي ثم جميع إخوتها ، ثم تنتقل إلى والد الطفل الطرفي وجميع أشقائه (كرر الخطوة الأولى إذا كان هؤلاء الأشقاء لديهم أطفال) حتى تتم زيارة عقدة الجذر.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","Переходячи дерево до його дочірнього терміналу, а потім усіх його братів і сестер, потім він обводить батьківського термінала дитини та всіх його братів і сестер (повторюючи перший крок, якщо ці брати та сестри мають дітей), поки не буде відвіданий кореневий вузол.",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.","Percorrendo uma árvore até seu filho terminal e, em seguida, todos os seus irmãos, então ele atravessa o pai do filho terminal e todos os seus irmãos (repetindo a primeira etapa se esses irmãos tiverem filhos) até que o nó raiz seja visitado.",پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,عبور از یک درخت تا فرزند انتهایی آن و سپس همه خواهر و برادرهای آن ، سپس والدین فرزند ترمینال و همه خواهر و برادرهای آن را پیمایش می کند (تکرار مرحله اول اگر این خواهر و برادرها بچه دار شوند) تا زمان بازدید از گره ریشه.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.","Recorrent un arbre fins al seu fill terminal i després tots els seus germans, després recorre els pares del nen terminal i tots els seus germans (repetint el primer pas si aquests germans tenen fills) fins que s&#39;hagi visitat el node arrel.",Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","Прелазећи дрво до крајњег детета, а затим све његове браће и сестара, затим прелази родитеља крајњег детета и сву браћу и сестре (понављајући први корак ако та браћа и сестре имају децу) док се не посети коренски чвор.",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.","Melintasi pohon ke anak terminalnya dan kemudian semua saudara kandungnya, lalu melintasi orang tua anak terminal dan semua saudara kandungnya (mengulangi langkah pertama jika saudara kandung tersebut memiliki anak) sampai simpul akar telah dikunjungi.",Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.","Å krysse et tre ned til det terminale barnet og deretter alle søsknene, så krysser det terminalens foreldres foreldre og alle søsknene (gjentar det første trinnet hvis de søsknene har barn) til rotnoden har blitt besøkt.",나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.",트리를 터미널 자식으로 이동 한 다음 모든 형제 자매로 이동 한 다음 루트 노드를 방문 할 때까지 터미널 자식의 부모와 모든 형제 자매를 탐색합니다 (그 형제에 자식이있는 경우 첫 번째 단계를 반복).,Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.","Puun kulkeminen alas lopulliseen lapseensa ja sitten kaikki sen sisarukset, sitten se kulkee ylös päätelaitteen lapsen vanhemman ja kaikki sisarukset (toistamalla ensimmäisen vaiheen, jos näillä sisaruksilla on lapsia), kunnes juurisolmu on käynyt.",Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.","Áthalad egy fán a végső gyermekig, majd az összes testvéréig, majd végigjárja a végső gyermek szülőjét és testvéreit (megismételve az első lépést, ha ezeknek a testvéreknek gyermekei vannak), amíg a gyökércsomópont meg nem látogatott.",Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.","Traversing a tree down to it&#39;s terminal child and then all of it&#39;s siblings, then it travers up up the terminal child parent and all of its sourozenci (opakování prvního kroku, pokud tito sourozenci mají děti), dokud nebyl navštíven kořenový uzel.",Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.","Prelazeći drvo do krajnjeg djeteta, a zatim sve njegove braće i sestara, zatim prelazi roditelja terminalnog djeteta i svu njegovu braću i sestre (ponavljajući prvi korak ako ta braća i sestre imaju djecu) dok se ne posjeti korijenski čvor."
35,35,527,3.4,"Less overhead than passed by value, especially when using large numbers.",It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,3.5,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?","Weniger Overhead als vom Wert übergeben, insbesondere bei Verwendung großer Zahlen.",Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,"Dili kaayo overhead kaysa gipasa sa kantidad, labi na kung naggamit daghang numero.",Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,"Mindre overhead än överfört av värde, särskilt när man använder stora siffror.",Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,"Moins de surcharge que passé par valeur, en particulier lors de l&#39;utilisation de grands nombres.",Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,"Minder overhead dan door waarde wordt aangenomen, vooral bij het gebruik van grote getallen.","Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,"Меньше накладных расходов, чем передается по значению, особенно при использовании больших чисел.",Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,"Meno overhead di quanto passato per valore, soprattutto quando si utilizzano numeri elevati.",¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,"Menos gastos generales que los que se pasan por valor, especialmente cuando se utilizan números grandes.","Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,"Mniejszy narzut niż przekazywany przez wartość, szczególnie w przypadku używania dużych liczb.",Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,"Chi phí ít hơn so với giá trị được truyền, đặc biệt khi sử dụng số lượng lớn.",参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,特に大きな数値を使用する場合は、値で渡されるよりもオーバーヘッドが少なくなります。,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,比按值传递的开销少，尤其是在使用大数时。,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,أقل من تمرير القيمة ، خاصة عند استخدام أعداد كبيرة.,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,"Менше накладних витрат, ніж переданих за значенням, особливо при використанні великих чисел.",Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,"Menos overhead do que o passado por valor, especialmente ao usar números grandes.",مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,کمتر از مقدار تصویب شده ، به ویژه هنگام استفاده از تعداد زیاد.,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,"Menys despeses generals que les valorades, sobretot quan s’utilitzen nombres grans.",Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,"Мање додатних трошкова него што се преносе по вредности, посебно када се користе велики бројеви.",Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,"Lebih sedikit overhead daripada nilai yang diteruskan, terutama saat menggunakan jumlah besar.",Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,"Mindre overhead enn passert av verdi, spesielt når du bruker store tall.",참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,특히 큰 숫자를 사용할 때 값으로 전달되는 것보다 오버 헤드가 적습니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,"Vähemmän yleiskustannuksia kuin arvo ylittää, varsinkin kun käytetään suuria lukuja.",Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,"Kevesebb rezsi, mint amennyi értéket meghalad, különösen nagy számok használata esetén.","Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,"Méně režie než předáno hodnotou, zvláště při použití velkých čísel.",Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,"Manje općih troškova nego što se prenose prema vrijednosti, posebno kada se koriste veliki brojevi."
36,36,1748,10.3,A new item to the tree--a child,A node that has no children.,What is a leaf?,3.0,Ein Knoten ohne Kinder.,Was ist ein Blatt?,Ein neuer Gegenstand im Baum - ein Kind,Unsa ang dahon?,Usa ka node nga wala’y mga anak.,Usa ka bag-ong butang sa kahoy - usa ka bata,Vad är ett blad?,En nod som inte har några barn.,Ett nytt föremål till trädet - ett barn,Qu&#39;est-ce qu&#39;une feuille?,Un nœud qui n&#39;a pas d&#39;enfants.,Un nouvel élément dans l&#39;arbre - un enfant,Wat is een blad?,Een knooppunt dat geen kinderen heeft.,Een nieuw item in de boom - een kind,Что такое лист?,"Узел, у которого нет детей.",Новинка на дереве - ребенок,Cos&#39;è una foglia?,Un nodo che non ha figli.,Un nuovo oggetto per l&#39;albero: un bambino,¿Qué es una hoja?,Un nodo que no tiene hijos.,Un nuevo elemento para el árbol: un niño.,Co to jest liść?,"Węzeł, który nie ma dzieci.",Nowy przedmiot do drzewa - dziecko,Lá là gì?,Một nút không có nút con.,Một vật phẩm mới cho cây - một đứa trẻ,葉とは何ですか？,子を持たないノード。,ツリーの新しいアイテム-子供,什么是叶子？,没有子节点的节点。,树上的一个新项目-一个孩子,ما هي الورقة؟,عقدة ليس لها أبناء.,عنصر جديد للشجرة - طفل,Що таке лист?,"Вузол, у якого немає дітей.",Новий предмет на дереві - дитина,O que é uma folha?,Um nó que não tem filhos.,Um novo item para a árvore - uma criança,برگ چیست؟,گره ای که فرزندی ندارد.,یک مورد جدید برای درخت - یک کودک,Què és una fulla?,Un node que no té fills.,Un element nou per a l’arbre: un nen,Шта је лист?,Чвор који нема деце.,Нова ствар на дрвету - дете,Apakah daun itu?,Node yang tidak memiliki anak.,Item baru ke pohon - seorang anak,Hva er et blad?,En node som ikke har barn.,Et nytt element til treet - et barn,잎은 무엇입니까?,자식이없는 노드.,나무에 새 항목-아이,Mikä on lehti?,"Solmu, jolla ei ole lapsia.",Uusi esine puulle - lapsi,Mi a levél?,"Olyan csomópont, amelynek nincs gyermeke.",Új elem a fán - egy gyermek,Co je to list?,"Uzel, který nemá žádné děti.",Nová položka na stromě - dítě,Šta je list?,Čvor koji nema djece.,Nova stavka na drvetu - dijete
37,37,17,1.1,it provides a limited proof of concept to verify with the client before actually programming the whole application.,To simulate the behaviour of portions of the desired software product.,What is the role of a prototype program in problem solving?,2.0,Simulation des Verhaltens von Teilen des gewünschten Softwareprodukts.,Welche Rolle spielt ein Prototyp-Programm bei der Problemlösung?,"Es bietet einen eingeschränkten Proof of Concept, der beim Client überprüft werden muss, bevor die gesamte Anwendung programmiert wird.",Unsa man ang papel sa usa ka programa nga prototype sa pagsulbad sa problema?,Aron masundog ang pamatasan sa mga bahin sa gitinguha nga produkto sa software.,naghatag kini usa ka limitado nga pamatuod sa konsepto aron ma-verify sa kliyente sa wala pa ang programa sa tibuuk nga aplikasyon.,Vilken roll har ett prototypprogram för problemlösning?,För att simulera beteendet hos delar av den önskade programvaruprodukten.,det ger ett begränsat bevis på koncept för att verifiera med klienten innan du faktiskt programmerar hela applikationen.,Quel est le rôle d&#39;un programme prototype dans la résolution de problèmes?,Pour simuler le comportement de parties du produit logiciel souhaité.,il fournit une preuve de concept limitée à vérifier avec le client avant de programmer réellement l&#39;ensemble de l&#39;application.,Wat is de rol van een prototype-programma bij het oplossen van problemen?,Om het gedrag van delen van het gewenste softwareproduct te simuleren.,het biedt een beperkt proof of concept om te verifiëren bij de klant voordat de hele applicatie daadwerkelijk wordt geprogrammeerd.,Какова роль прототипа программы в решении проблем?,Для моделирования поведения частей желаемого программного продукта.,он предоставляет ограниченное подтверждение концепции для проверки с клиентом перед фактическим программированием всего приложения.,Qual è il ruolo di un programma prototipo nella risoluzione dei problemi?,Per simulare il comportamento di porzioni del prodotto software desiderato.,fornisce una prova di concetto limitata da verificare con il client prima di programmare effettivamente l&#39;intera applicazione.,¿Cuál es el papel de un programa prototipo en la resolución de problemas?,Simular el comportamiento de partes del producto de software deseado.,proporciona una prueba de concepto limitada para verificar con el cliente antes de programar toda la aplicación.,Jaka jest rola programu prototypowego w rozwiązywaniu problemów?,Aby zasymulować zachowanie części żądanego oprogramowania.,zapewnia ograniczony dowód koncepcji do weryfikacji z klientem przed faktycznym zaprogramowaniem całej aplikacji.,Vai trò của một chương trình nguyên mẫu trong việc giải quyết vấn đề là gì?,Để mô phỏng hoạt động của các phần của sản phẩm phần mềm mong muốn.,nó cung cấp một bằng chứng giới hạn về khái niệm để xác minh với khách hàng trước khi thực sự lập trình toàn bộ ứng dụng.,問題解決におけるプロトタイププログラムの役割は何ですか？,目的のソフトウェア製品の一部の動作をシミュレートします。,これは、アプリケーション全体を実際にプログラミングする前に、クライアントに確認するための限定された概念実証を提供します。,原型程序在解决问题中的作用是什么？,模拟所需软件产品各部分的行为。,它提供了有限的概念证明，可以在对整个应用程序进行实际编程之前与客户端进行验证。,ما هو دور برنامج النموذج الأولي في حل المشكلات؟,لمحاكاة سلوك أجزاء من منتج البرنامج المطلوب.,يوفر دليلاً محدودًا على المفهوم للتحقق منه مع العميل قبل برمجة التطبيق بالكامل فعليًا.,Яка роль програми-прототипу у вирішенні проблем?,Для імітації поведінки частин бажаного програмного продукту.,"він надає обмежений доказ концепції для перевірки з клієнтом перед тим, як фактично програмувати весь додаток.",Qual é o papel de um programa de protótipo na solução de problemas?,Para simular o comportamento de partes do produto de software desejado.,ele fornece uma prova de conceito limitada para verificar com o cliente antes de programar o aplicativo inteiro.,نقش یک نمونه اولیه در حل مسئله چیست؟,برای شبیه سازی رفتار بخشهایی از محصول نرم افزاری مورد نظر.,این یک اثبات محدود از مفهوم را برای تأیید با مشتری قبل از برنامه نویسی کل برنامه فراهم می کند.,Quin és el paper d’un programa prototipus en la resolució de problemes?,Per simular el comportament de parts del producte de programari desitjat.,proporciona una prova de concepte limitada per verificar amb el client abans de programar tota l&#39;aplicació.,Која је улога прототипа програма у решавању проблема?,Да симулира понашање делова жељеног софтверског производа.,пружа ограничени доказ концепта за верификацију са клијентом пре него што стварно програмира целу апликацију.,Apa peran program prototipe dalam pemecahan masalah?,Untuk mensimulasikan perilaku bagian dari produk perangkat lunak yang diinginkan.,ini memberikan bukti konsep yang terbatas untuk memverifikasi dengan klien sebelum benar-benar memprogram seluruh aplikasi.,Hva er rollen som et prototypeprogram i problemløsing?,For å simulere oppførselen til deler av det ønskede programvareproduktet.,det gir et begrenset konseptbevis for å verifisere med klienten før du faktisk programmerer hele applikasjonen.,문제 해결에서 프로토 타입 프로그램의 역할은 무엇입니까?,원하는 소프트웨어 제품의 일부 동작을 시뮬레이션합니다.,전체 응용 프로그램을 실제로 프로그래밍하기 전에 클라이언트에서 확인할 수있는 제한된 개념 증명을 제공합니다.,Mikä on prototyyppiohjelman rooli ongelmanratkaisussa?,Simuloidaan halutun ohjelmistotuotteen osien käyttäytymistä.,"se tarjoaa rajoitetun todistuksen konseptista, jonka voi tarkistaa asiakkaan kanssa ennen koko sovelluksen tosiasiallista ohjelmointia.",Mi a szerepe a prototípus programnak a problémamegoldásban?,A kívánt szoftvertermék egyes részeinek viselkedésének szimulálása.,"a koncepció korlátozott bizonyítékát nyújtja az ügyféllel való ellenőrzéshez, mielőtt a teljes alkalmazást ténylegesen beprogramoznák.",Jaká je role prototypového programu při řešení problémů?,Simulovat chování částí požadovaného softwarového produktu.,"poskytuje omezený důkaz konceptu, který je třeba ověřit u klienta před skutečným programováním celé aplikace.",Koja je uloga prototipa programa u rješavanju problema?,Da simulira ponašanje dijelova željenog softverskog proizvoda.,pruža ograničeni dokaz koncepta koji treba provjeriti s klijentom prije nego što zapravo programira cijelu aplikaciju.
38,38,2206,12.2,"For every call into memory, add/ multiply it into an equation of type O(n)",Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,2.5,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,Addiere / multipliziere es für jeden Aufruf in den Speicher zu einer Gleichung vom Typ O (n),Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,"Alang sa matag tawag sa memorya, idugang / padaghan kini sa us aka equation sa tipo O (n)",Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,"För varje samtal i minnet, lägg till / multiplicera det till en ekvation av typ O (n)",Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,"Pour chaque appel en mémoire, ajoutez / multipliez-le dans une équation de type O (n)",Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,"Voor elke oproep in het geheugen, optellen / vermenigvuldigen tot een vergelijking van het type O (n)",Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,Для каждого вызова в память сложите / умножьте его на уравнение типа O (n),Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,"Per ogni chiamata in memoria, aggiungila / moltiplicala in un&#39;equazione di tipo O (n)",¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,"Para cada llamada a la memoria, agréguela / multiplíquela en una ecuación de tipo O (n)",Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,Dla każdego wywołania pamięci dodaj / pomnóż je do równania typu O (n),Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,"Đối với mỗi cuộc gọi vào bộ nhớ, hãy cộng / nhân nó thành một phương trình kiểu O (n)",アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,メモリへの呼び出しごとに、それをタイプO（n）の方程式に加算/乗算します。,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,对于每个对内存的调用，将其相加/相乘成O（n）类型的方程式,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,لكل مكالمة في الذاكرة ، أضفها / اضربها في معادلة من النوع O (n),Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,Для кожного виклику в пам’ять додайте / помножте його на рівняння типу O (n),Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,"Para cada chamada na memória, adicione / multiplique em uma equação do tipo O (n)",روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,برای هر فراخوانی حافظه ، آن را در معادله ای از نوع O (n) اضافه و ضرب کنید,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,"Per a cada trucada a la memòria, afegiu-la / multipliqueu-la en una equació de tipus O (n)",Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,За сваки позив у меморију додајте / помножите у једначину типа О (н),Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,"Untuk setiap panggilan ke dalam memori, tambahkan / kalikan menjadi persamaan tipe O (n)",Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,"For hvert anrop i minnet, legg til / multipliser det til en ligning av typen O (n)",알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,메모리에 대한 모든 호출에 대해 O (n) 유형의 방정식에 더하거나 곱하십시오.,Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,Lisää / kerro se jokaisesta muistiin tulevasta puhelusta tyypin O (n) yhtälöksi,Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,Minden memóriába történő híváshoz adja hozzá / szorozza be O (n) típusú egyenletbe,Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,Pro každé volání do paměti jej přidejte / vynásobte do rovnice typu O (n),Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,Za svaki poziv u memoriju dodajte / pomnožite u jednačinu tipa O (n)
39,39,439,3.1,the name of the function and its parameters,The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,den Namen der Funktion und ihre Parameter,Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,ang ngalan sa pagpaandar ug mga parameter niini,Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,funktionens namn och dess parametrar,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,le nom de la fonction et ses paramètres,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,de naam van de functie en zijn parameters,Что включает в себя сигнатура функции?,Имя функции и типы параметров.,имя функции и ее параметры,Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,il nome della funzione e dei suoi parametri,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,el nombre de la función y sus parámetros,Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,nazwa funkcji i jej parametry,Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,tên của hàm và các tham số của nó,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数の名前とそのパラメーター,功能签名包括什么？,函数的名称和参数的类型。,函数名称及其参数,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,اسم الوظيفة ومعلماتها,Що включає підпис функції?,Назва функції та типи параметрів.,назва функції та її параметри,O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,o nome da função e seus parâmetros,امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,نام تابع و پارامترهای آن,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,el nom de la funció i els seus paràmetres,Шта укључује потпис функције?,Назив функције и врсте параметара.,назив функције и њени параметри,Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,nama fungsi dan parameternya,Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,navnet på funksjonen og dens parametere,함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수 이름 및 매개 변수,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,funktion nimi ja sen parametrit,Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,a függvény neve és paraméterei,Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,název funkce a její parametry,Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,naziv funkcije i njezini parametri
40,40,1955,11.4,function prototype that contains functions and data members.,"The name of the function and the list of parameters, including their types.",What is a function signature?,3.0,Der Name der Funktion und die Liste der Parameter einschließlich ihrer Typen.,Was ist eine Funktionssignatur?,"Funktionsprototyp, der Funktionen und Datenelemente enthält.",Unsa ang usa ka pirma sa pag-andar?,"Ang ngalan sa pagpaandar ug lista sa mga parameter, lakip ang ilang mga lahi.",function prototype nga adunay sulud nga mga gimbuhaton ug myembro sa datos.,Vad är en funktionssignatur?,"Funktionens namn och listan med parametrar, inklusive deras typer.",funktionsprototyp som innehåller funktioner och datamedlemmar.,Qu&#39;est-ce qu&#39;une signature de fonction?,"Le nom de la fonction et la liste des paramètres, y compris leurs types.",prototype de fonction contenant des fonctions et des membres de données.,Wat is een functiehandtekening?,"De naam van de functie en de lijst met parameters, inclusief hun typen.",functie-prototype dat functies en gegevensleden bevat.,Что такое сигнатура функции?,"Имя функции и список параметров, включая их типы.","прототип функции, который содержит функции и данные-члены.",Cos&#39;è una firma di funzione?,"Il nome della funzione e l&#39;elenco dei parametri, inclusi i loro tipi.",prototipo di funzione che contiene funzioni e membri di dati.,¿Qué es una firma de función?,"El nombre de la función y la lista de parámetros, incluidos sus tipos.",prototipo de función que contiene funciones y miembros de datos.,Co to jest podpis funkcji?,"Nazwa funkcji i lista parametrów, w tym ich typy.",prototyp funkcji zawierający funkcje i składowe danych.,Chữ ký hàm là gì?,"Tên của hàm và danh sách các tham số, bao gồm cả loại của chúng.",nguyên mẫu hàm chứa các hàm và thành viên dữ liệu.,関数シグネチャとは何ですか？,関数の名前と、タイプを含むパラメーターのリスト。,関数とデータメンバーを含む関数プロトタイプ。,什么是功能签名？,函数的名称和参数列表，包括它们的类型。,包含函数和数据成员的函数原型。,ما هو توقيع الوظيفة؟,اسم الوظيفة وقائمة المعلمات ، بما في ذلك أنواعها.,النموذج الأولي الذي يحتوي على وظائف وأعضاء بيانات.,Що таке підпис функції?,"Назва функції та перелік параметрів, включаючи їх типи.","прототип функції, що містить функції та члени даних.",O que é uma assinatura de função?,"O nome da função e a lista de parâmetros, incluindo seus tipos.",protótipo de função que contém funções e membros de dados.,امضای تابع چیست؟,نام عملکرد و لیست پارامترها ، از جمله انواع آنها.,نمونه اولیه عملکردی که شامل توابع و اعضای داده است.,Què és una signatura de funció?,"El nom de la funció i la llista de paràmetres, inclosos els seus tipus.",prototip de funció que conté funcions i membres de dades.,Шта је потпис функције?,"Назив функције и листа параметара, укључујући њихове типове.",прототип функције који садржи функције и чланове података.,Apa itu tanda tangan fungsi?,"Nama fungsi dan daftar parameter, termasuk tipenya.",prototipe fungsi yang berisi fungsi dan data anggota.,Hva er en funksjonssignatur?,"Navnet på funksjonen og listen over parametere, inkludert typer.",funksjonsprototype som inneholder funksjoner og datamedlemmer.,함수 서명이란 무엇입니까?,함수 이름 및 유형을 포함한 매개 변수 목록.,함수와 데이터 멤버를 포함하는 함수 프로토 타입.,Mikä on funktion allekirjoitus?,"Funktion nimi ja parametrien luettelo, mukaan lukien niiden tyypit.","funktion prototyyppi, joka sisältää toiminnot ja datan jäsenet.",Mi a függvény aláírása?,"A függvény neve és a paraméterek listája, beleértve azok típusait is.","függvény prototípus, amely funkciókat és adattagokat tartalmaz.",Co je podpis funkce?,"Název funkce a seznam parametrů, včetně jejich typů.","prototyp funkce, který obsahuje funkce a datové členy.",Što je potpis funkcije?,"Naziv funkcije i lista parametara, uključujući njihove tipove.",prototip funkcije koji sadrži funkcije i članove podataka.
41,41,194,1.7,the loop body always executes at least once,The block inside a do...while statement will execute at least once.,What is the main difference between a while and a do...while statement?,3.5,Der Block in einer do ... while-Anweisung wird mindestens einmal ausgeführt.,Was ist der Hauptunterschied zwischen einer while- und einer do ... while-Anweisung?,Der Schleifenkörper wird immer mindestens einmal ausgeführt,Unsa ang punoan nga kalainan tali sa usa ka samtang ug usa nga buhaton ... samtang pahayag?,Ang bloke sa sulud sa usa ka buhaton ... samtang ang pahayag magpatuman labing menos kausa.,ang loop nga lawas kanunay nga nagpatuman labing menos kausa,Vad är den största skillnaden mellan ett tag och ett do ... while-uttalande?,Blocket inuti ett do ... while-uttalande kommer att köras minst en gång.,loopkroppen kör alltid minst en gång,Quelle est la principale différence entre une déclaration while et une déclaration do ... while?,Le bloc à l&#39;intérieur d&#39;une instruction do ... while s&#39;exécutera au moins une fois.,le corps de la boucle s&#39;exécute toujours au moins une fois,Wat is het belangrijkste verschil tussen een while en een do ... while-verklaring?,Het blok binnen een do ... while-instructie wordt minstens één keer uitgevoerd.,de lusbody wordt altijd minstens één keer uitgevoerd,В чем основное различие между оператором while и do ... while?,Блок внутри оператора do ... while будет выполнен как минимум один раз.,тело цикла всегда выполняется хотя бы один раз,Qual è la differenza principale tra un&#39;istruzione while e a do ... while?,Il blocco all&#39;interno di un&#39;istruzione do ... while verrà eseguito almeno una volta.,il corpo del ciclo viene sempre eseguito almeno una volta,¿Cuál es la principal diferencia entre una declaración while y do ... while?,El bloque dentro de una instrucción do ... while se ejecutará al menos una vez.,el cuerpo del bucle siempre se ejecuta al menos una vez,Jaka jest główna różnica między stwierdzeniem a while a do ... while?,Blok wewnątrz instrukcji do ... while zostanie wykonany co najmniej raz.,treść pętli jest zawsze wykonywana przynajmniej raz,Sự khác biệt chính giữa câu lệnh while và do ... while là gì?,Khối bên trong câu lệnh do ... while sẽ thực thi ít nhất một lần.,phần thân của vòng lặp luôn thực thi ít nhất một lần,whileステートメントとdo ... whileステートメントの主な違いは何ですか？,do ... whileステートメント内のブロックは、少なくとも1回実行されます。,ループ本体は常に少なくとも1回実行されます,while和do ... while语句之间的主要区别是什么？,do ... while语句中的块将至少执行一次。,循环体总是至少执行一次,ما هو الفرق الرئيسي بين جملة while و a do ... while؟,سيتم تنفيذ الكتلة داخل بيان do ... while مرة واحدة على الأقل.,دائمًا ما يتم تنفيذ جسم الحلقة مرة واحدة على الأقل,Яка головна різниця між твердженням while та do ... while?,Блок усередині оператора do ... while виконуватиметься принаймні один раз.,тіло циклу завжди виконується принаймні один раз,Qual é a principal diferença entre a instrução while e do ... while?,O bloco dentro de uma instrução do ... while será executado pelo menos uma vez.,o corpo do loop sempre executa pelo menos uma vez,تفاوت اصلی میان جمله و حالات do ... while چیست؟,بلوک داخل دستور do ... while حداقل یک بار اجرا می شود.,بدنه حلقه همیشه حداقل یکبار اجرا می شود,Quina és la diferència principal entre una afirmació mentre que una sentència do ... while?,El bloc dins d&#39;una sentència do ... while s&#39;executarà almenys una vegada.,el cos del bucle sempre s&#39;executa almenys una vegada,Која је главна разлика између изјаве неко време и уради ... док?,Блок унутар наредбе до ... вхиле извршиће се најмање једном.,тело петље увек се извршава најмање једном,Apa perbedaan utama antara pernyataan while dan do ... while?,Blok di dalam pernyataan do ... while akan dieksekusi setidaknya sekali.,badan perulangan selalu mengeksekusi setidaknya sekali,Hva er hovedforskjellen mellom en stund og en gjør ... mens uttalelse?,Blokken inne i en gjør ... mens uttalelsen vil kjøres minst en gang.,sløyfekroppen utfører alltid minst en gang,while과 do ... while 문의 주요 차이점은 무엇입니까?,do ... while 문 내부의 블록은 한 번 이상 실행됩니다.,루프 본문은 항상 한 번 이상 실행됩니다.,Mikä on tärkein ero hetken ja tekemisen ... lausunnon välillä?,Lohko do ... while-lauseen sisällä suoritetaan ainakin kerran.,silmukan runko suorittaa aina ainakin kerran,Mi a fő különbség egy idő és egy tennivaló ... kijelentés között?,A blokk a do ... while utasításban legalább egyszer végrehajtásra kerül.,a huroktest mindig legalább egyszer végrehajtja,Jaký je hlavní rozdíl mezi příkazem while a do ... while?,Blok uvnitř příkazu do ... while se provede alespoň jednou.,tělo smyčky se provede vždy alespoň jednou,Koja je glavna razlika između izjave neko vrijeme i do ... while?,Blok unutar naredbe do ... while izvršit će se najmanje jednom.,tijelo petlje uvijek se izvršava barem jednom
42,42,2252,12.4,You select the smallest element and place it on the left.  You select the smallest element and sort it with respect the the item already on the left.  You continue this till the end of the collection of items.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Briefly, how does selection sort work?",5.0,Es wählt das Minimum aus einem Array aus und platziert es an der ersten Position. Anschließend wählt es das Minimum aus dem Rest des Arrays aus und platziert es an der zweiten Position und so weiter.,"Kurz gesagt, wie funktioniert die Auswahlsortierung?",Sie wählen das kleinste Element aus und platzieren es links. Sie wählen das kleinste Element aus und sortieren es nach dem bereits links befindlichen Element. Sie setzen dies bis zum Ende der Sammlung von Gegenständen fort.,"Sa mubu, giunsa molihok ang pagpili?","Gipili niini ang minimum gikan sa usa ka laray ug gibutang kini sa una nga posisyon, unya gipili niini ang minimum gikan sa nahabilin nga laray ug gibutang kini sa ikaduhang posisyon, ug uban pa.",Gipili nimo ang labing gamay nga elemento ug gibutang kini sa wala. Gipili nimo ang labing gamay nga elemento ug gihan-ay kini uban ang pagtahod sa butang nga naa sa wala. Gipadayon nimo kini hangtod sa katapusan sa pagkolekta sa mga aytem.,"Kortfattat, hur fungerar urvalssortering?","Det väljer minimum från en array och placerar det på den första positionen, sedan väljer det minimum från resten av arrayen och placerar det på den andra positionen och så vidare.",Du väljer det minsta elementet och placerar det till vänster. Du väljer det minsta elementet och sorterar det med hänsyn till objektet som redan finns till vänster. Du fortsätter detta till slutet av samlingen av föremål.,"En bref, comment fonctionne le tri par sélection?","Il sélectionne le minimum dans un tableau et le place sur la première position, puis il sélectionne le minimum dans le reste du tableau et le place sur la deuxième position, et ainsi de suite.",Vous sélectionnez le plus petit élément et le placez à gauche. Vous sélectionnez le plus petit élément et le triez par rapport à l&#39;élément déjà à gauche. Vous continuez cela jusqu&#39;à la fin de la collection d&#39;articles.,"In het kort, hoe werkt selectiesortering?","Het selecteert het minimum uit een array en plaatst het op de eerste positie, vervolgens selecteert het het minimum uit de rest van de array en plaatst het op de tweede positie, enzovoort.",Je selecteert het kleinste element en plaatst het aan de linkerkant. Je selecteert het kleinste element en sorteert het met respect voor het item dat al aan de linkerkant staat. Je gaat hiermee door tot het einde van de verzameling items.,"Вкратце, как работает сортировка выбора?","Он выбирает минимум из массива и помещает его в первую позицию, затем выбирает минимум из остальной части массива и помещает его во вторую позицию, и так далее.","Вы выбираете самый маленький элемент и размещаете его слева. Вы выбираете самый маленький элемент и сортируете его относительно элемента, который уже находится слева. Вы продолжаете это до конца сбора предметов.","In breve, come funziona l&#39;ordinamento per selezione?","Seleziona il minimo da un array e lo posiziona sulla prima posizione, quindi seleziona il minimo dal resto dell&#39;array e lo posiziona sulla seconda posizione e così via.",Seleziona l&#39;elemento più piccolo e posizionalo a sinistra. Seleziona l&#39;elemento più piccolo e lo ordina rispetto all&#39;elemento già a sinistra. Continui così fino alla fine della raccolta degli oggetti.,"Brevemente, ¿cómo funciona la clasificación por selección?","Selecciona el mínimo de una matriz y lo coloca en la primera posición, luego selecciona el mínimo del resto de la matriz y lo coloca en la segunda posición, y así sucesivamente.",Seleccionas el elemento más pequeño y lo colocas a la izquierda. Selecciona el elemento más pequeño y lo ordena con respecto al elemento que ya está a la izquierda. Continúa esto hasta el final de la colección de elementos.,"Krótko, jak działa sortowanie przez wybór?","Wybiera minimum z tablicy i umieszcza je na pierwszej pozycji, następnie wybiera minimum z reszty tablicy i umieszcza je na drugiej pozycji i tak dalej.",Wybierasz najmniejszy element i umieszczasz go po lewej stronie. Wybierasz najmniejszy element i sortujesz go z uwzględnieniem elementu znajdującego się już po lewej stronie. Kontynuujesz to do końca zbierania przedmiotów.,"Tóm lại, cách sắp xếp lựa chọn hoạt động như thế nào?","Nó chọn giá trị tối thiểu từ một mảng và đặt nó vào vị trí đầu tiên, sau đó nó chọn giá trị tối thiểu từ phần còn lại của mảng và đặt nó vào vị trí thứ hai, v.v.",Bạn chọn phần tử nhỏ nhất và đặt nó ở bên trái. Bạn chọn phần tử nhỏ nhất và sắp xếp nó tương ứng với mục đã có ở bên trái. Bạn tiếp tục điều này cho đến khi kết thúc bộ sưu tập các mặt hàng.,簡単に言えば、選択ソートはどのように機能しますか？,配列から最小値を選択して最初の位置に配置し、次に配列の残りの部分から最小値を選択して2番目の位置に配置します。,最小の要素を選択して、左側に配置します。最小の要素を選択し、すでに左側にあるアイテムに関して並べ替えます。アイテムのコレクションが終了するまでこれを続けます。,简要地说，选择排序如何工作？,它从数组中选择最小值并将其放置在第一个位置，然后从数组其余部分中选择最小值并将其放置在第二个位置，依此类推。,您选择最小的元素并将其放在左侧。您选择最小的元素，并根据左侧已经存在的项目对其进行排序。您可以继续进行到项目收集结束为止。,باختصار ، كيف يعمل فرز الاختيار؟,يختار الحد الأدنى من المصفوفة ويضعه في الموضع الأول ، ثم يختار الحد الأدنى من باقي المصفوفة ويضعه في الموضع الثاني ، وهكذا.,يمكنك تحديد أصغر عنصر ووضعه على اليسار. يمكنك تحديد أصغر عنصر وفرزه مع مراعاة العنصر الموجود بالفعل على اليسار. تواصل هذا حتى نهاية مجموعة العناصر.,"Коротко, як працює сортування підбору?","Він вибирає мінімум з масиву і розміщує його на першій позиції, потім він вибирає мінімум з решти масиву і розміщує його на другій позиції тощо.","Ви вибираєте найменший елемент і розміщуєте його зліва. Ви вибираєте найменший елемент і сортуєте його за елементом, який уже знаходиться зліва. Ви продовжуєте це до кінця збору предметів.","Resumidamente, como funciona a classificação por seleção?","Ele seleciona o mínimo de uma matriz e o coloca na primeira posição, em seguida, seleciona o mínimo do resto da matriz e o coloca na segunda posição, e assim por diante.",Você seleciona o menor elemento e o posiciona à esquerda. Você seleciona o menor elemento e classifica-o em relação ao item já à esquerda. Você continua até o final da coleção de itens.,به طور خلاصه ، نحوه انتخاب چگونه کار می کند؟,حداقل را از یک آرایه انتخاب کرده و در موقعیت اول قرار می دهد ، سپس حداقل را از بقیه آرایه انتخاب کرده و در موقعیت دوم قرار می دهد و غیره.,کوچکترین عنصر را انتخاب کرده و در سمت چپ قرار می دهید. شما کوچکترین عنصر را انتخاب کرده و آن را با توجه به مورد موجود در سمت چپ مرتب می کنید. شما این کار را تا پایان مجموعه موارد ادامه می دهید.,"Breument, com funciona la selecció?","Selecciona el mínim d’una matriu i el col·loca a la primera posició, després selecciona el mínim de la resta de la matriu i el col·loca a la segona posició, etc.",Seleccioneu l&#39;element més petit i el col·loqueu a l&#39;esquerra. Seleccioneu l’element més petit i l’ordeneu respectant l’element que ja hi ha a l’esquerra. Continuareu fins al final de la col·lecció d&#39;articles.,"Укратко, како функционише сортирање селекције?","Одабире минимум из низа и поставља га на прво место, затим одабире минимум из остатка низа и поставља га на друго место, и тако даље.",Одаберете најмањи елемент и поставите га лево. Изаберите најмањи елемент и сортирајте га према ставци која је већ на левој страни. Настављате ово до краја сакупљања предмета.,"Secara singkat, bagaimana cara kerja urutan seleksi?","Ini memilih minimum dari sebuah array dan menempatkannya di posisi pertama, kemudian memilih minimum dari sisa array dan menempatkannya di posisi kedua, dan seterusnya.",Anda memilih elemen terkecil dan meletakkannya di sebelah kiri. Anda memilih elemen terkecil dan mengurutkannya sesuai dengan item yang sudah ada di sebelah kiri. Anda melanjutkan ini hingga akhir pengumpulan item.,"Kort fortalt, hvordan fungerer utvalgssortering?","Den velger minimum fra en matrise og plasserer den på første posisjon, deretter velger den minimum fra resten av matrisen og plasserer den på den andre posisjonen, og så videre.",Du velger det minste elementet og plasserer det til venstre. Du velger det minste elementet og sorterer det med respekt for elementet som allerede er til venstre. Du fortsetter dette til slutten av samlingen av varer.,간단히 말해서 선택 정렬은 어떻게 작동합니까?,배열에서 최소값을 선택하여 첫 번째 위치에 배치 한 다음 나머지 배열에서 최소값을 선택하여 두 번째 위치에 배치하는 식입니다.,가장 작은 요소를 선택하여 왼쪽에 배치합니다. 가장 작은 요소를 선택하고 이미 왼쪽에있는 항목을 기준으로 정렬합니다. 항목 수집이 끝날 때까지 계속합니다.,"Lyhyesti, miten valintalaji toimii?","Se valitsee matriisin matriisista ja sijoittaa sen ensimmäiseen sijaintiin, sitten se valitsee minimin matriisin lopusta ja sijoittaa sen toiseen sijaintiin jne.",Valitse pienin elementti ja aseta se vasemmalle. Valitset pienimmän elementin ja lajittelet sen vasemmalla olevan kohteen suhteen. Jatkat tätä kokoelman loppuun asti.,"Röviden, hogyan működik a válogatás?","Egy tömbből kiválasztja a minimumot, és az első pozícióba helyezi, majd a tömb többi részéből kiválasztja a minimumot, és a második pozícióba helyezi, és így tovább.","Kiválasztja a legkisebb elemet, és balra helyezi. Kiválasztja a legkisebb elemet, és rendezi a bal oldalon lévő elem tekintetében. Ezt folytatja a tárgygyűjtés végéig.","Stručně, jak funguje výběrové třídění?","Vybírá minimum z pole a umístí ho na první pozici, poté vybere minimum ze zbytku pole a umístí ho na druhou pozici atd.",Vyberete nejmenší prvek a umístíte jej vlevo. Vyberete nejmenší prvek a seřadíte jej podle položky již vlevo. Pokračujete v tom až do konce kolekce předmětů.,"Ukratko, kako funkcionira sortiranje odabira?","Odabire minimum iz niza i postavlja ga na prvo mjesto, zatim odabire minimum iz ostatka niza i postavlja ga na drugo mjesto itd.",Odaberete najmanji element i postavite ga s lijeve strane. Odabirete najmanji element i sortirate ga prema stavci koja je već s lijeve strane. Nastavljate ovo do kraja sakupljanja predmeta.
43,43,859,5.1,"Insertion sort is an algorithm where the first element of the array is in the sorted list, all the other pick one by one and taken from the unsorted array, to the sorted array.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","In one sentence, what is the main idea implemented by insertion sort?",4.5,"Wenn Sie jeweils ein Array-Element von links nach rechts nehmen, wird es an der rechten Position unter den bereits sortierten Elementen auf der linken Seite eingefügt.","Was ist in einem Satz die Hauptidee, die durch Einfügesortierung umgesetzt wird?","Die Einfügesortierung ist ein Algorithmus, bei dem sich das erste Element des Arrays in der sortierten Liste befindet. Alle anderen Elemente werden einzeln ausgewählt und vom unsortierten Array zum sortierten Array übernommen.","Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman pinaagi sa pagsulud?","Pagkuha usa ka elemento sa pag-ayo sa matag higayon, gikan sa wala ngadto sa tuo, gisukip kini sa tama nga posisyon taliwala sa mga naayos na nga elemento sa wala niini.","Ang pagsulud sa pagsulud usa ka algorithm diin ang una nga elemento sa laray naa sa gihan-ay nga lista, ang tanan nga uban pa nga gipili usa ug gikuha gikan sa wala pagsunud-sunod nga laray, ngadto sa gihan-ay nga laray.","I en mening, vad är huvudidén som implementeras genom insättningssortering?","Tar ett matriselement åt gången, från vänster till höger, infogar det i rätt position bland de redan sorterade elementen till vänster.","Insättningssortering är en algoritm där det första elementet i matrisen finns i den sorterade listan, alla andra väljer en efter en och tas från den osorterade matrisen till den sorterade matrisen.","En une phrase, quelle est l&#39;idée principale implémentée par le tri par insertion?","Prenant un élément du tableau à la fois, de gauche à droite, il l&#39;insère à la bonne position parmi les éléments déjà triés à sa gauche.","Le tri par insertion est un algorithme où le premier élément du tableau est dans la liste triée, tous les autres choisissent un par un et sont extraits du tableau non trié vers le tableau trié.",Wat is in één zin het hoofdidee geïmplementeerd door invoegsortering?,"Het neemt één array-element tegelijk, van links naar rechts, en voegt het in de juiste positie tussen de reeds gesorteerde elementen aan de linkerkant.","Invoegsortering is een algoritme waarbij het eerste element van de array in de gesorteerde lijst staat, alle andere elementen één voor één kiezen en van de ongesorteerde array naar de gesorteerde array worden gehaald.","Одним предложением, какова основная идея сортировки вставкой?","Принимая по одному элементу массива слева направо, он вставляет его в правильную позицию среди уже отсортированных элементов слева.","Сортировка вставкой - это алгоритм, при котором первый элемент массива находится в отсортированном списке, а все остальные выбираются по одному и берутся из несортированного массива в отсортированный массив.","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento per inserzione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, lo inserisce nella posizione giusta tra gli elementi già ordinati alla sua sinistra.","L&#39;ordinamento per inserzione è un algoritmo in cui il primo elemento dell&#39;array è nell&#39;elenco ordinato, tutti gli altri vengono selezionati uno per uno e presi dall&#39;array non ordinato all&#39;array ordinato.","En una oración, ¿cuál es la idea principal implementada por ordenación por inserción?","Tomando un elemento de matriz a la vez, de izquierda a derecha, lo inserta en la posición correcta entre los elementos ya ordenados a su izquierda.","La ordenación por inserción es un algoritmo en el que el primer elemento de la matriz está en la lista ordenada, todos los demás se eligen uno por uno y se toman de la matriz no ordenada a la matriz ordenada.","Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wstawianie?","Biorąc jeden element tablicy na raz, od lewej do prawej, wstawia go we właściwej pozycji wśród już posortowanych elementów po jego lewej stronie.","Sortowanie przez wstawianie to algorytm, w którym pierwszy element tablicy znajduje się na posortowanej liście, a pozostałe są wybierane jeden po drugim i pobierane z tablicy niesortowanej do posortowanej tablicy.","Trong một câu, ý chính được triển khai bằng cách sắp xếp chèn là gì?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó sẽ chèn nó vào vị trí bên phải trong số các phần tử đã được sắp xếp ở bên trái của nó.","Sắp xếp chèn là một thuật toán trong đó phần tử đầu tiên của mảng nằm trong danh sách đã sắp xếp, tất cả các phần tử còn lại chọn từng cái một và lấy từ mảng chưa được sắp xếp, đến mảng đã sắp xếp.",一言で言えば、挿入ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、左側の既に並べ替えられた要素の中で正しい位置に挿入します。,挿入ソートは、配列の最初の要素がソートされたリストにあり、他のすべての要素が1つずつ選択され、ソートされていない配列からソートされた配列に取得されるアルゴリズムです。,一句话，插入排序实现的主要思想是什么？,一次从左到右取一个数组元素，将其插入到左边已排序元素中的右边位置。,插入排序是一种算法，其中数组的第一个元素在排序列表中，所有其他元素一个接一个地选取，并从未排序的数组中提取到排序的数组。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الإدراج؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يدرجه في الموضع الصحيح بين العناصر التي تم فرزها بالفعل على يساره.,فرز الإدراج عبارة عن خوارزمية حيث يكون العنصر الأول من المصفوفة في القائمة التي تم فرزها ، ويتم اختيار العناصر الأخرى واحدة تلو الأخرى ويتم أخذها من المصفوفة غير المفروزة إلى المصفوفة التي تم فرزها.,"В одному реченні, яка основна ідея реалізується шляхом вставки сортування?","Беручи по одному елементу масиву, зліва направо, він вставляє його в потрібне положення серед уже відсортованих елементів зліва.","Сортування вставки - це алгоритм, де перший елемент масиву знаходиться у відсортованому списку, а всі інші вибирають по одному та беруть із невідсортованого масиву до відсортованого масиву.","Em uma frase, qual é a ideia principal implementada pelo tipo de inserção?","Pegando um elemento do array por vez, da esquerda para a direita, ele o insere na posição certa entre os elementos já classificados à sua esquerda.","A ordenação por inserção é um algoritmo em que o primeiro elemento do array está na lista ordenada, todos os outros são selecionados um por um e retirados do array não ordenado para o array ordenado.",در یک جمله ، ایده اصلی که با درج مرتب سازی پیاده سازی شده است چیست؟,هر بار با گرفتن یک عنصر آرایه ، از چپ به راست ، آن را در موقعیت مناسب در میان عناصر مرتب شده در سمت چپ خود قرار می دهد.,Insertion sort یک الگوریتم است که در آن اولین عنصر آرایه در لیست مرتب شده قرار دارد ، همه موارد دیگر یکی یکی انتخاب می شوند و از آرایه مرتب نشده به آرایه مرتب شده منتقل می شوند.,"En una frase, quina és la idea principal implementada per la inserció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, l’insereix en la posició correcta entre els elements ja ordenats de la seva esquerra.","L&#39;ordenació per inserció és un algorisme on el primer element de la matriu es troba a la llista ordenada, tots els altres trien un per un i es prenen de la matriu sense classificar a la matriu ordenada.","У једној реченици, која је главна идеја спроведена сортирањем уметања?","Узимајући по један елемент низа, слева надесно, убацује га у прави положај међу већ сортиране елементе лево.","Сортирање уметања је алгоритам где се први елемент низа налази на сортираној листи, а сви остали бирају један по један и преузимају се из несортираног низа у сортирани низ.","Dalam satu kalimat, apa ide utama yang diimplementasikan oleh insertion sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, itu menyisipkannya di posisi kanan di antara elemen yang sudah diurutkan di sebelah kirinya.","Sortir penyisipan adalah algoritme di mana elemen pertama dari array ada di daftar yang diurutkan, semua yang lain memilih satu per satu dan diambil dari array yang tidak diurutkan, ke array yang diurutkan.","I en setning, hva er hovedideen implementert ved innsettingssortering?","Tar ett matriseelement om gangen, fra venstre til høyre, setter det inn i riktig posisjon blant de allerede sorterte elementene til venstre.","Innsettingssortering er en algoritme der det første elementet i matrisen er i den sorterte listen, alle de andre velger en etter en og tas fra den usorterte matrisen til den sorterte matrisen.",한 문장에서 삽입 정렬로 구현 된 주요 아이디어는 무엇입니까?,한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 왼쪽에 이미 정렬 된 요소 중 오른쪽 위치에 삽입합니다.,삽입 정렬은 배열의 첫 번째 요소가 정렬 된 목록에 있고 다른 모든 요소는 하나씩 선택하여 정렬되지 않은 배열에서 정렬 된 배열로 가져 오는 알고리즘입니다.,Mikä on lisäyslajittelun pääidea yhdessä lauseessa?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se lisää sen oikeaan kohtaan jo järjestettyjen elementtien joukossa vasemmalla.","Lisäämislajittelu on algoritmi, jossa matriisin ensimmäinen elementti on lajitellussa luettelossa, kaikki muut valitsevat yksi kerrallaan ja viedään lajittelemattomasta taulukosta lajiteltuun ryhmään.","Egy mondatban mi a fő gondolat, amelyet a beszúrásos rendezéssel hajtanak végre?","Egyszerre egy tömb elemet vesz fel balról jobbra, és a bal oldali már rendezett elemek közé illeszti a jobb helyzetbe.","A beszúrás rendezése olyan algoritmus, ahol a tömb első eleme a rendezett listában van, az összes többi egyenként választja ki, és a nem rendezett tömbből veszi át a rendezett tömbbe.","V jedné větě, jaká je hlavní myšlenka implementovaná třídou vložení?","Vezmeme-li po jednom prvku pole zleva doprava, vloží jej na správnou pozici mezi již seřazené prvky nalevo.","Třídění vložení je algoritmus, ve kterém je první prvek pole v seřazeném seznamu, všechny ostatní vybírají jeden po druhém a jsou převzaty z netříděného pole do seřazeného pole.","U jednoj rečenici, koja je glavna ideja implementirana sortiranjem umetanja?","Uzimajući po jedan element niza, slijeva udesno, ubacuje ga u pravi položaj među već sortirane elemente s lijeve strane.","Sortiranje umetanja je algoritam u kojem se prvi element niza nalazi na sortiranoj listi, a svi ostali biraju jedan po jedan i preuzimaju se iz nesortiranog niza u sortirani niz."
44,44,1908,11.2,"public, private",Private and public.,What are the access-specifiers that can be used in a C++ class definition?,5.0,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,"öffentlich, privat",Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,"publiko, pribado",Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,offentlig-privat,Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,public-privé,Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,publiek privaat,Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,"публичный, частный",Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,pubblico privato,¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,publico privado,"Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,publiczny prywatny,Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,"công cộng, tư nhân",C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,パブリック、プライベート,C ++类定义中可以使用哪些访问说明符？,私人和公共。,公共，私人,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,عام ، خاص,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,"державний, приватний",Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,público Privado,مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,عمومی خصوصی,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,"públic, privat",Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,јавно приватно,Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,privasi Umum,Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,offentlig privat,C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,"공개, 비공개","Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,julkinen yksityinen,Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,"nyilvános, magán","Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,"veřejné, soukromé",Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,"javno, privatno"
45,45,2377,12.8,"An Euler traversal is a traversal that begins with the root, and travels around the outside of the tree.  Each element in the tree is visited 3 times.  From the left, from the bottom and from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,5.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"Eine Euler-Durchquerung ist eine Durchquerung, die mit der Wurzel beginnt und sich außerhalb des Baumes bewegt. Jedes Element im Baum wird dreimal besucht. Von links, von unten und von rechts.",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.","Ang usa ka Euler traversal usa ka traversal nga nagsugod sa ugat, ug nagbiyahe sa gawas sa punoan. Ang matag elemento sa punoan gibisita sa 3 ka beses. Gikan sa wala, gikan sa ubos ug gikan sa tuo.",Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.","En Euler-traversal är en traversal som börjar med roten och färdas runt utsidan av trädet. Varje element i trädet besöks tre gånger. Från vänster, från botten och från höger.",Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.","Un parcours Euler est un parcours qui commence par la racine et se déplace autour de l&#39;extérieur de l&#39;arbre. Chaque élément de l&#39;arbre est visité 3 fois. De la gauche, du bas et de la droite.",Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.","Een Euler-traversal is een traversal die begint met de wortel en rond de buitenkant van de boom reist. Elk element in de boom wordt 3 keer bezocht. Van links, van onderen en van rechts.",Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","Обход Эйлера - это обход, который начинается с корня и проходит вне дерева. Каждый элемент в дереве посещается 3 раза. Слева, снизу и справа.",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.","Un attraversamento di Eulero è un attraversamento che inizia con la radice e viaggia intorno all&#39;esterno dell&#39;albero. Ogni elemento dell&#39;albero viene visitato 3 volte. Da sinistra, dal basso e da destra.",¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.","Un recorrido de Euler es un recorrido que comienza con la raíz y recorre el exterior del árbol. Cada elemento del árbol se visita 3 veces. Desde la izquierda, desde abajo y desde la derecha.",Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","Przechodzenie przez Eulera to przechodzenie, które zaczyna się od korzenia i wędruje na zewnątrz drzewa. Każdy element drzewka odwiedzany jest 3 razy. Od lewej, od dołu i od prawej.",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.","Đường đi ngang qua Euler là đường đi ngang bắt đầu từ gốc và đi vòng ra bên ngoài của cây. Mỗi phần tử trong cây được truy cập 3 lần. Từ bên trái, từ dưới lên và từ bên phải.",木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,オイラートラバーサルは、ルートから始まり、ツリーの外側を移動するトラバーサルです。ツリーの各要素は3回訪問されます。左から、下から、そして右から。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,欧拉遍历是从根开始并遍历树的外部的遍历。树中的每个元素都要访问3次。从左侧，底部和右侧开始。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,اجتياز أويلر هو اجتياز يبدأ بالجذر وينتقل حول الجزء الخارجي من الشجرة. تتم زيارة كل عنصر في الشجرة 3 مرات. من اليسار من الأسفل ومن اليمين.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","Обхід Ейлера - це обхід, який починається з кореня та обходить зовнішню частину дерева. Кожен елемент у дереві відвідується 3 рази. Зліва, знизу і справа.",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.","Uma travessia de Euler é uma travessia que começa com a raiz e percorre a parte externa da árvore. Cada elemento da árvore é visitado 3 vezes. Da esquerda, da parte inferior e da direita.",پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,پیمایش اویلر پیمایش است که با ریشه شروع می شود و در اطراف قسمت بیرونی درخت حرکت می کند. هر عنصر موجود در درخت 3 بار بازدید می شود. از سمت چپ ، از پایین و از سمت راست.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.","Un recorregut d’Euler és un recorregut que comença amb l’arrel i que recorre la part exterior de l’arbre. Cada element de l&#39;arbre es visita 3 vegades. Des de l’esquerra, des de la part inferior i des de la dreta.",Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","Еулер-ов прелаз је прелазак који започиње кореном и путује око спољне стране дрвета. Сваки елемент на дрвету посећује се 3 пута. Са леве, са доње и десне стране.",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.","Traversal Euler adalah traversal yang dimulai dengan root, dan berjalan di sekitar bagian luar pohon. Setiap elemen di pohon dikunjungi 3 kali. Dari kiri, dari bawah dan dari kanan.",Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.","En Euler-traversal er en traversal som begynner med roten, og beveger seg rundt utsiden av treet. Hvert element i treet besøkes 3 ganger. Fra venstre, fra bunnen og fra høyre.",나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.","오일러 순회는 루트에서 시작하여 트리 외부를 순회하는 순회입니다. 트리의 각 요소는 3 번 방문합니다. 왼쪽에서, 아래쪽 및 오른쪽에서.",Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.","Eulerin kulkeminen on kulkua, joka alkaa juuresta ja kulkee puun ulkopuolella. Jokaisessa puun elementissä käydään 3 kertaa. Vasemmalta, alhaalta ja oikealta.",Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.","Az Euler bejárása a gyökérrel kezdődő és a fa külső részén körbejáró út. A fa minden elemét háromszor látogatják meg. Balról, alulról és jobbról.",Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.","Eulerův průchod je průchod, který začíná kořenem a prochází kolem vnějšku stromu. Každý prvek ve stromu je navštíven třikrát. Zleva, zdola a zprava.",Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.","Eulerova prelazak je prelazak koji započinje korijenom i putuje oko vanjske strane stabla. Svaki element na drvetu posjećuje se 3 puta. S lijeve, donje i desne strane."
46,46,329,2.5,any number you want,Unlimited number.,How many constructors can be created for a class?,5.0,Unbegrenzte Anzahl.,Wie viele Konstruktoren können für eine Klasse erstellt werden?,"jede beliebige Nummer, die Sie wollen",Pila ka mga magtutukod ang mahimo alang sa usa ka klase?,Unlimited numero.,bisan unsang numero nga gusto nimo,Hur många konstruktörer kan skapas för en klass?,Obegränsat antal.,vilket nummer du vill,Combien de constructeurs peuvent être créés pour une classe?,Nombre illimité.,n&#39;importe quel nombre que vous voulez,Hoeveel constructeurs kunnen er voor een klasse worden gemaakt?,Onbeperkt aantal.,elk nummer dat je wilt,Сколько конструкторов можно создать для класса?,Неограниченное количество.,"любое число, которое вы хотите",Quanti costruttori possono essere creati per una classe?,Numero illimitato.,qualsiasi numero tu voglia,¿Cuántos constructores se pueden crear para una clase?,Número ilimitado.,cualquier número que quieras,Ile konstruktorów można utworzyć dla klasy?,Nieograniczona liczba.,dowolną liczbę,Có bao nhiêu hàm tạo có thể được tạo cho một lớp?,Số lượng không giới hạn.,bất kỳ số nào bạn muốn,クラスに対していくつのコンストラクターを作成できますか？,無制限の数。,任意の数,一个类可以创建多少个构造函数？,无限数量。,你想要的任何数字,كم عدد المنشئين الذي يمكن إنشاؤه للفصل؟,عدد غير محدود.,أي رقم تريده,Скільки конструкторів можна створити для класу?,Необмежена кількість.,"будь-який номер, який ви хочете",Quantos construtores podem ser criados para uma classe?,Número ilimitado.,qualquer número que você quiser,چند سازنده می تواند برای یک کلاس ایجاد شود؟,تعداد نامحدود,هر شماره ای که بخواهید,Quants constructors es poden crear per a una classe?,Nombre il·limitat.,qualsevol número que vulgueu,Колико конструктора може да се креира за класу?,Неограничен број.,било који број који желите,Berapa banyak konstruktor yang dapat dibuat untuk sebuah kelas?,Jumlah tidak terbatas.,nomor berapa pun yang Anda inginkan,Hvor mange konstruktører kan opprettes for en klasse?,Ubegrenset antall.,hvilket som helst nummer du vil ha,클래스에 생성 할 수있는 생성자는 몇 개입니까?,무제한 수.,원하는 숫자,Kuinka monta rakennuttajaa luokalle voidaan luoda?,Rajoittamaton määrä.,mikä tahansa numero haluat,Hány konstruktort lehet létrehozni egy osztályhoz?,Korlátlan számú.,tetszőleges szám,Kolik konstruktorů lze pro třídu vytvořit?,Neomezený počet.,"libovolné číslo, které chcete",Koliko konstruktora može biti stvoreno za klasu?,Neograničen broj.,bilo koji broj koji želite
47,47,1036,6.4,yes *(array +offset),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,4.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,ja * (Array + Offset),Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",oo * (array + offset),Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,ja * (array + offset),Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",oui * (tableau + décalage),Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",ja * (array + offset),Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",да * (массив + смещение),Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,sì * (matrice + offset),¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,sí * (matriz + desplazamiento),Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.",tak * (tablica + przesunięcie),Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",có * (mảng + độ lệch),配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,はい*（配列+オフセット）,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,是*（数组+偏移量）,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,نعم * (مجموعة + تعويض),Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",так * (масив + зміщення),Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",sim * (matriz + deslocamento),چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,بله * (آرایه + جابجایی),Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",Sí * (matriu + desplaçament),Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",да * (низ + помак),Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",ya * (larik + offset),Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",ja * (matrise + forskyvning),포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,예 * (배열 + 오프셋),Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,kyllä * (taulukko + offset),Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.",igen * (tömb + eltolás),Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,ano * (pole + offset),Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",da * (niz + pomak)
48,48,107,1.4,main function,At the main function.,Where do C++ programs begin to execute?,5.0,Bei der Hauptfunktion.,Wo beginnen C ++ - Programme mit der Ausführung?,Hauptfunktion,Asa magsugod ang pagpatuman sa mga programa sa C ++?,Sa punoan nga kalihokan.,punoan nga kalihokan,Var börjar C ++ - program att köras?,Vid huvudfunktionen.,huvudfunktion,Où les programmes C ++ commencent-ils à s&#39;exécuter?,À la fonction principale.,fonction principale,Waar beginnen C ++ -programma&#39;s te worden uitgevoerd?,Bij de belangrijkste functie.,hoofdfunctie,Где начинают выполняться программы на C ++?,В основной функции.,основная функция,Dove iniziano a essere eseguiti i programmi C ++?,Alla funzione principale.,funzione principale,¿Dónde comienzan a ejecutarse los programas C ++?,En la función principal.,función principal,Gdzie programy C ++ zaczynają się wykonywać?,W głównej funkcji.,główna funkcja,Các chương trình C ++ bắt đầu thực thi ở đâu?,Tại chức năng chính.,chức năng chính,C ++プログラムはどこから実行を開始しますか？,主な機能で。,主な機能,C ++程序在哪里开始执行？,在主要功能上。,主功能,من أين تبدأ برامج C ++ في التنفيذ؟,في الوظيفة الرئيسية.,الوظيفة الأساسية,Де програми С ++ починають виконуватися?,На головній функції.,основна функція,Onde os programas C ++ começam a ser executados?,Na função principal.,função principal,برنامه های C ++ از کجا شروع به اجرا می کنند؟,در عملکرد اصلی.,عملکرد اصلی,On comencen a executar-se els programes C ++?,A la funció principal.,funció principal,Где почињу да се извршавају програми Ц ++?,На главној функцији.,основна функција,Di mana program C ++ mulai dijalankan?,Di fungsi utama.,fungsi utama,Hvor begynner C ++ -programmer å kjøres?,Ved hovedfunksjonen.,hovedfunksjon,C ++ 프로그램은 어디에서 실행되기 시작합니까?,주요 기능에서.,주요 기능,Missä C ++ -ohjelmat alkavat suorittaa?,Päätoiminnossa.,päätoiminto,Hol kezdődnek a C ++ programok futtatása?,A fő funkciónál.,fő funkció,Kde se programy C ++ začínají spouštět?,Na hlavní funkci.,hlavní funkce,Gdje se počinju izvršavati programi C ++?,Na glavnoj funkciji.,glavna funkcija
49,49,1929,11.3,classname objectname(input parameters);,By using constructors.,How are objects initialized when they are created?,3.0,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,Klassenname Objektname (Eingabeparameter);,Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,classname objectname (input parameter);,Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,klassnamn objektnamn (ingångsparametrar);,Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,nom_classe nom_objet (paramètres d&#39;entrée);,Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,classname objectname (invoerparameters);,Как инициализируются объекты при их создании?,Используя конструкторы.,имя класса имя объекта (входные параметры);,Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,nome classe nome oggetto (parametri di input);,¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,nombre de clase nombre de objeto (parámetros de entrada);,Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,nazwa klasy nazwa_obiektu (parametry wejściowe);,Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,tên đối tượng classname (tham số đầu vào);,オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,クラス名objectname（入力パラメーター）;,创建对象时如何初始化它们？,通过使用构造函数。,classname objectname（输入参数）；,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,اسم الكائن classname (معلمات الإدخال) ؛,Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,ім&#39;я класу ім&#39;я об&#39;єкта (вхідні параметри);,Como os objetos são inicializados quando são criados?,Usando construtores.,classname objectname (parâmetros de entrada);,چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,نام کلاس نام شی (پارامترهای ورودی) ؛,Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,nom de classe nom d&#39;objecte (paràmetres d&#39;entrada);,Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,име класе име објекта (улазни параметри);,Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,nama kelas nama objek (parameter masukan);,Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,klassenavn objektnavn (inngangsparametere);,객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,classname objectname (입력 매개 변수);,"Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,luokan nimi objektin nimi (syöttöparametrit);,"Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,osztálynév objektumnév (bemeneti paraméterek);,"Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,název třídy název objektu (vstupní parametry);,Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,ime klase ime objekta (ulazni parametri);
50,50,108,1.4,main,At the main function.,Where do C++ programs begin to execute?,5.0,Bei der Hauptfunktion.,Wo beginnen C ++ - Programme mit der Ausführung?,Main,Asa magsugod ang pagpatuman sa mga programa sa C ++?,Sa punoan nga kalihokan.,punoan,Var börjar C ++ - program att köras?,Vid huvudfunktionen.,huvud,Où les programmes C ++ commencent-ils à s&#39;exécuter?,À la fonction principale.,principale,Waar beginnen C ++ -programma&#39;s te worden uitgevoerd?,Bij de belangrijkste functie.,hoofd,Где начинают выполняться программы на C ++?,В основной функции.,основной,Dove iniziano a essere eseguiti i programmi C ++?,Alla funzione principale.,principale,¿Dónde comienzan a ejecutarse los programas C ++?,En la función principal.,principal,Gdzie programy C ++ zaczynają się wykonywać?,W głównej funkcji.,Główny,Các chương trình C ++ bắt đầu thực thi ở đâu?,Tại chức năng chính.,chủ yếu,C ++プログラムはどこから実行を開始しますか？,主な機能で。,メイン,C ++程序在哪里开始执行？,在主要功能上。,主要,من أين تبدأ برامج C ++ في التنفيذ؟,في الوظيفة الرئيسية.,الأساسية,Де програми С ++ починають виконуватися?,На головній функції.,головний,Onde os programas C ++ começam a ser executados?,Na função principal.,a Principal,برنامه های C ++ از کجا شروع به اجرا می کنند؟,در عملکرد اصلی.,اصلی,On comencen a executar-se els programes C ++?,A la funció principal.,principal,Где почињу да се извршавају програми Ц ++?,На главној функцији.,главни,Di mana program C ++ mulai dijalankan?,Di fungsi utama.,utama,Hvor begynner C ++ -programmer å kjøres?,Ved hovedfunksjonen.,hoved-,C ++ 프로그램은 어디에서 실행되기 시작합니까?,주요 기능에서.,본관,Missä C ++ -ohjelmat alkavat suorittaa?,Päätoiminnossa.,tärkein,Hol kezdődnek a C ++ programok futtatása?,A fő funkciónál.,fő-,Kde se programy C ++ začínají spouštět?,Na hlavní funkci.,hlavní,Gdje se počinju izvršavati programi C ++?,Na glavnoj funkciji.,glavni
51,51,996,6.2,memory address of its operand,The memory address of its operand.,What does the address (&) operator return?,5.0,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,Speicheradresse seines Operanden,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,memory address sa operand niini,Vad returnerar adressoperatören?,Minnesadressen för dess operand.,minnesadress för dess operand,Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,adresse mémoire de son opérande,Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,geheugenadres van zijn operand,Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,адрес памяти его операнда,Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,indirizzo di memoria del suo operando,¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,dirección de memoria de su operando,Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,adres pamięci swojego operandu,Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,địa chỉ bộ nhớ của toán hạng của nó,アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,そのオペランドのメモリアドレス,地址（＆）运算符返回什么？,其操作数的内存地址。,其操作数的内存地址,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,عنوان الذاكرة لمعاملها,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,адреса пам&#39;яті його операнда,O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,endereço de memória de seu operando,عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,آدرس حافظه عملوند آن,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,adreça de memòria del seu operand,Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,адреса меморије свог операнда,Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,alamat memori operannya,Hva returnerer adresseoperatøren?,Minneadressen til operanden.,minneadressen til operanden,주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,피연산자의 메모리 주소,Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,operandin muistiosoite,Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,operandusának memóriacíme,Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,paměťová adresa jeho operandu,Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,memorijska adresa svog operanda
52,52,2199,12.2,"You create and run  the algorithm multiple times, while measuring the amount of time it takes, you then average the results.",Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,5.0,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,"Sie erstellen den Algorithmus mehrmals und führen ihn aus. Während Sie die benötigte Zeit messen, werden die Ergebnisse gemittelt.",Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,"Gihimo nimo ug gipadagan ang algorithm sa daghang mga higayon, samtang gisukod ang gidaghanon sa oras nga gikinahanglan, gi-average nimo ang mga sangputanan.",Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,"Du skapar och kör algoritmen flera gånger, medan du mäter den tid det tar tar du sedan genomsnittet av resultaten.",Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,"Vous créez et exécutez l&#39;algorithme plusieurs fois, tout en mesurant le temps qu&#39;il faut, vous faites ensuite la moyenne des résultats.",Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,"U maakt en voert het algoritme meerdere keren uit, terwijl u de hoeveelheid tijd meet die het kost, waarna u de resultaten gemiddeld.",Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,"Вы создаете и запускаете алгоритм несколько раз, измеряя время, которое требуется, а затем усредняете результаты.",Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,"Crei ed esegui l&#39;algoritmo più volte, mentre misuri la quantità di tempo necessaria, quindi fai la media dei risultati.",¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,"Usted crea y ejecuta el algoritmo varias veces, mientras mide la cantidad de tiempo que lleva, luego promedia los resultados.",Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,"Tworzysz i uruchamiasz algorytm wiele razy, mierząc ilość czasu, jaki zajmuje, a następnie uśredniasz wyniki.",Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,"Bạn tạo và chạy thuật toán nhiều lần, trong khi đo lượng thời gian nó cần, sau đó bạn tính trung bình kết quả.",アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,アルゴリズムを複数回作成して実行し、それにかかる時間を測定しながら、結果を平均します。,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,您多次创建和运行算法，同时测量所需的时间，然后取平均结果。,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,يمكنك إنشاء الخوارزمية وتشغيلها عدة مرات ، أثناء قياس مقدار الوقت المستغرق ، ثم تقوم بحساب متوسط النتائج.,Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,"Ви створюєте та запускаєте алгоритм кілька разів, вимірюючи час, який потрібно, ви потім усереднюєте результати.",Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,"Você cria e executa o algoritmo várias vezes, enquanto mede o tempo que leva e, em seguida, calcula a média dos resultados.",روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,شما الگوریتم را چندین بار ایجاد و اجرا می کنید ، در حالی که مقدار زمان لازم را اندازه گیری می کنید ، سپس نتایج را متوسط می کنید.,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,"Creeu i executeu l&#39;algoritme diverses vegades, mentre mesureu la quantitat de temps que trigueu a fer una mitjana dels resultats.",Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,"Алгоритам креирате и покрећете више пута, док мерите количину времена која је потребна, а затим просечите резултате.",Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,"Anda membuat dan menjalankan algoritme beberapa kali, sambil mengukur jumlah waktu yang diperlukan, Anda kemudian menghitung rata-rata hasilnya.",Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,"Du oppretter og kjører algoritmen flere ganger, mens du måler hvor lang tid det tar, måler du deretter resultatene.",알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,알고리즘을 여러 번 만들고 실행하는 동안 걸리는 시간을 측정 한 다음 결과를 평균화합니다.,Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,"Loit ja suoritat algoritmin useita kertoja, samalla kun mittaat kuluvan ajan, keskiarvoiset tulokset.",Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,"Többször létrehozza és futtatja az algoritmust, miközben méri az időtartamot, átlagolja az eredményeket.",Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,"Algoritmus vytvoříte a spustíte několikrát, přičemž změříte dobu, kterou zabere, a poté průměrujete výsledky.",Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,"Algoritam kreirate i pokrećete više puta, dok mjerite koliko je vremena potrebno, a zatim prosječite rezultate."
53,53,468,3.2,The entire program or file.,File scope.,What is the scope of global variables?,5.0,Dateibereich.,Was ist der Umfang globaler Variablen?,Das gesamte Programm oder die gesamte Datei.,Unsa ang kasangkaran sa mga variable sa kalibutan?,Sakup sa file.,Ang tibuuk nga programa o file.,Vad är omfattningen av globala variabler?,Filomfång.,Hela programmet eller filen.,Quelle est la portée des variables globales?,Portée du fichier.,L&#39;ensemble du programme ou du fichier.,Wat is de omvang van globale variabelen?,Bestandsbereik.,Het volledige programma of bestand.,Каков объем глобальных переменных?,Область файла.,Вся программа или файл.,Qual è l&#39;ambito delle variabili globali?,Ambito del file.,L&#39;intero programma o file.,¿Cuál es el alcance de las variables globales?,Alcance del archivo.,Todo el programa o archivo.,Jaki jest zakres zmiennych globalnych?,Zakres plików.,Cały program lub plik.,Phạm vi của các biến toàn cục là gì?,Phạm vi tệp.,Toàn bộ chương trình hoặc tệp.,グローバル変数のスコープは何ですか？,ファイルスコープ。,プログラムまたはファイル全体。,全局变量的范围是什么？,文件范围。,整个程序或文件。,ما هو نطاق المتغيرات العالمية؟,نطاق الملف.,البرنامج أو الملف بأكمله.,Який обсяг глобальних змінних?,Обсяг файлу.,Вся програма або файл.,Qual é o escopo das variáveis globais?,Escopo do arquivo.,Todo o programa ou arquivo.,دامنه متغیرهای جهانی چیست؟,دامنه پرونده,کل برنامه یا پرونده.,Quin és l&#39;abast de les variables globals?,Abast del fitxer.,Tot el programa o fitxer.,Који је опсег глобалних променљивих?,Обим датотеке.,Цео програм или датотеку.,Apa ruang lingkup variabel global?,Ruang lingkup file.,Seluruh program atau file.,Hva er omfanget av globale variabler?,Filomfang.,Hele programmet eller filen.,전역 변수의 범위는 무엇입니까?,파일 범위.,전체 프로그램 또는 파일.,Mikä on globaalien muuttujien laajuus?,Tiedoston laajuus.,Koko ohjelma tai tiedosto.,Mi a globális változók hatóköre?,A fájl terjedelme.,A teljes program vagy fájl.,Jaký je rozsah globálních proměnných?,Rozsah souboru.,Celý program nebo soubor.,Koji je opseg globalnih varijabli?,Opseg datoteke.,Čitav program ili datoteku.
54,54,481,3.3,"It expands a small function out... making your code longer, but also makes it run faster.",It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,4.0,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,"Es erweitert eine kleine Funktion ... verlängert Ihren Code, lässt ihn aber auch schneller laufen.",Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,"Gipalapdan niini ang usa ka gamay nga pagpaandar ... gihimo nga mas taas ang imong code, apan gipadali usab ang pagpadagan.",Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,"Det utökar en liten funktion ... gör din kod längre, men gör också att den går snabbare.",Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,"Il étend une petite fonction ... rendant votre code plus long, mais le rend également plus rapide.",Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,"Het breidt een kleine functie uit ... waardoor je code langer wordt, maar ook sneller werkt.",Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.","Он расширяет небольшую функцию ... делая ваш код длиннее, но также заставляет его работать быстрее.",In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,"Espande una piccola funzione ... rendendo il codice più lungo, ma anche più veloce.",¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,"Expande una pequeña función ... alargando el código, pero también hace que se ejecute más rápido.",Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.","Rozszerza małą funkcję ... wydłużając kod, ale także przyspiesza jego działanie.",Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,"Nó mở rộng một chức năng nhỏ ... làm cho mã của bạn dài hơn, nhưng cũng làm cho nó chạy nhanh hơn.",コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,小さな関数を拡張します...コードを長くしますが、実行速度も速くします。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,它扩展了一个小功能...使您的代码更长，但也使其运行更快。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,إنه يوسع وظيفة صغيرة ... مما يجعل شفرتك أطول ، ولكنها تجعلها تعمل بشكل أسرع أيضًا.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.","Це розширює невелику функцію ... роблячи ваш код довшим, але також робить його швидшим.",Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"Ele expande uma pequena função ... tornando seu código mais longo, mas também o torna mais rápido.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,این یک عملکرد کوچک را گسترش می دهد ... کد شما را طولانی تر می کند ، اما همچنین باعث می شود سرعت آن بیشتر شود.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,"Expandeix una petita funció ... allargant el codi, però també fa que funcioni més ràpidament.",Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,"Проширује малу функцију ... чинећи ваш код дужим, али и бржим радом.",Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,"Ini memperluas fungsi kecil keluar ... membuat kode Anda lebih panjang, tetapi juga membuatnya berjalan lebih cepat.",Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,"Det utvider en liten funksjon ... gjør koden din lengre, men gjør den også raskere.",컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,작은 기능을 확장하여 코드를 더 길게 만들지 만 더 빠르게 실행합니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.","Se laajentaa pientä toimintoa ... pidentää koodia, mutta myös suorittaa sen nopeammin.",Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.","Kibővíti egy kis funkciót ... meghosszabbítja a kódot, de gyorsabban is futtatja.",Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.","Rozšiřuje malou funkci ... prodlužuje váš kód, ale také ho zrychluje.",Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,"Proširuje malu funkciju ... čineći vaš kod dužim, ali i bržim izvođenjem."
55,55,784,4.6,Its a run-time error.,Run-time error.,Using an index outside the bounds of the array generates an error. Is this a compilation error or a run-time error?,5.0,Laufzeit Fehler.,Die Verwendung eines Index außerhalb der Grenzen des Arrays erzeugt einen Fehler. Ist dies ein Kompilierungsfehler oder ein Laufzeitfehler?,Es ist ein Laufzeitfehler.,Ang paggamit sa usa ka indeks sa gawas sa utlanan sa han-ay naghatag usa ka sayup. Kini ba usa ka sayup nga panagsama o usa ba nga sayup sa pagdagan?,Sayup sa oras sa pagdagan.,Kini usa ka sayup sa oras sa pagdagan.,Att använda ett index utanför gruppens gränser genererar ett fel. Är detta ett kompileringsfel eller ett körtidsfel?,Körtidsfel.,Det är ett körtidsfel.,L&#39;utilisation d&#39;un index en dehors des limites du tableau génère une erreur. S&#39;agit-il d&#39;une erreur de compilation ou d&#39;une erreur d&#39;exécution?,Erreur d&#39;exécution.,C&#39;est une erreur d&#39;exécution.,Het gebruik van een index buiten de grenzen van de array genereert een fout. Is dit een compilatiefout of een runtime-fout?,Runtime-fout.,Het is een runtime-fout.,Использование индекса за пределами массива вызывает ошибку. Это ошибка компиляции или ошибка времени выполнения?,Ошибка выполнения.,Это ошибка времени выполнения.,L&#39;utilizzo di un indice al di fuori dei limiti dell&#39;array genera un errore. È un errore di compilazione o un errore di runtime?,Errore di run-time.,È un errore di runtime.,El uso de un índice fuera de los límites de la matriz genera un error. ¿Es esto un error de compilación o un error de tiempo de ejecución?,Error de tiempo de ejecución.,Es un error en tiempo de ejecución.,Użycie indeksu poza granicami tablicy generuje błąd. Czy to błąd kompilacji czy błąd czasu wykonywania?,Błąd wykonania.,To błąd w czasie wykonywania.,Sử dụng chỉ mục bên ngoài giới hạn của mảng sẽ tạo ra lỗi. Đây là lỗi biên dịch hay lỗi thời gian chạy?,Lỗi runtime.,Đó là một lỗi thời gian chạy.,配列の境界外のインデックスを使用すると、エラーが発生します。これはコンパイルエラーですか、それとも実行時エラーですか？,ランタイムエラー。,その実行時エラー。,在数组范围之外使用索引会产生错误。这是编译错误还是运行时错误？,运行时错误。,它是一个运行时错误。,يؤدي استخدام فهرس خارج حدود المصفوفة إلى حدوث خطأ. هل هذا خطأ تجميع أم خطأ وقت التشغيل؟,خطا وقت التشغيل.,إنه خطأ وقت التشغيل.,Використання індексу поза межами масиву генерує помилку. Це помилка компіляції чи помилка виконання?,Помилка під час виконання.,Це помилка часу виконання.,Usar um índice fora dos limites da matriz gera um erro. Este é um erro de compilação ou um erro de tempo de execução?,Erro em tempo de execução.,É um erro em tempo de execução.,استفاده از فهرست خارج از آرایه خطایی ایجاد می کند. آیا این یک خطای تلفیقی است یا یک خطای زمان اجرا است؟,خطای زمان اجرا.,این یک خطای زمان اجرا است.,L’ús d’un índex fora dels límits de la matriu genera un error. Es tracta d&#39;un error de compilació o d&#39;un temps d&#39;execució?,Error d&#39;execució.,És un error en temps d&#39;execució.,Коришћење индекса изван граница поља генерише грешку. Да ли је ово грешка у компилацији или грешка током извршавања?,Грешка у раду.,То је грешка током извршавања.,Menggunakan indeks di luar batas-batas larik menghasilkan kesalahan. Apakah ini kesalahan kompilasi atau kesalahan run-time?,Kesalahan run-time.,Ini adalah kesalahan waktu proses.,Å bruke en indeks utenfor områdets grenser genererer en feil. Er dette en kompileringsfeil eller en kjøretidsfeil?,Kjøretidsfeil.,Det er en kjøretidsfeil.,배열 경계를 벗어난 인덱스를 사용하면 오류가 발생합니다. 컴파일 오류입니까 아니면 런타임 오류입니까?,런타임 오류.,런타임 오류입니다.,Hakemiston käyttö taulukon rajojen ulkopuolella tuottaa virheen. Onko tämä käännösvirhe vai ajonaikainen virhe?,Suorituksenaikainen virhe.,Se on ajonaikainen virhe.,A tömb határain kívüli index használata hibát eredményez. Összeállítási hiba vagy futásidejű hiba?,Futtatási hiba.,Futásidejű hiba.,Použití indexu mimo hranice pole generuje chybu. Je to chyba kompilace nebo chyba běhu?,Chyba za běhu.,Je to chyba za běhu.,Korištenje indeksa izvan granica polja generira grešku. Je li ovo greška u kompilaciji ili pogreška u toku izvođenja?,Greška u vremenu izvođenja.,To je pogreška u vremenu izvođenja.
56,56,2089,11.8,"a string has variable size and function calls available, while an character array usually has a static size.",The char[] will automatically add a null \0 character at the end of the string.,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,3.5,Das Zeichen [] fügt am Ende der Zeichenfolge automatisch ein Nullzeichen \ 0 hinzu.,"Was ist der Hauptunterschied zwischen einer Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, und einer Variablen vom Typ char []?","Für eine Zeichenfolge stehen variable Größen- und Funktionsaufrufe zur Verfügung, während ein Zeichenarray normalerweise eine statische Größe hat.",Unsa ang punoan nga kalainan tali sa usa ka hilo sa mga karakter nga mabasa sa usa ka variable sa type string kumpara sa variable sa type char []?,Ang char [] awtomatikong magdugang usa ka null \ 0 nga karakter sa katapusan sa pisi.,"ang usa ka string adunay variable size ug function call nga magamit, samtang ang usa ka character array kasagaran adunay usa ka static size.",Vad är den största skillnaden mellan en teckensträng som läses in i en variabel av typsträng kontra en variabel av typen char []?,Tecknet [] lägger automatiskt till ett null \ 0-tecken i slutet av strängen.,"en sträng har variabel storlek och funktionssamtal tillgängliga, medan en teckenmatris vanligtvis har en statisk storlek.",Quelle est la principale différence entre une chaîne de caractères lue dans une variable de type string et une variable de type char []?,Le char [] ajoutera automatiquement un caractère nul \ 0 à la fin de la chaîne.,"une chaîne a une taille variable et des appels de fonction disponibles, tandis qu&#39;un tableau de caractères a généralement une taille statique.",Wat is het belangrijkste verschil tussen een reeks tekens die wordt ingelezen in een variabele van het type string versus een variabele van het type char []?,Het teken [] voegt automatisch een nul \ 0 teken toe aan het einde van de string.,"een string heeft een variabele grootte en functieaanroepen zijn beschikbaar, terwijl een tekenreeks meestal een statische grootte heeft.","В чем основное отличие между строкой символов, считываемой в переменную типа string, и переменной типа char []?",Char [] автоматически добавит нулевой символ \ 0 в конец строки.,"строка имеет переменный размер и доступны вызовы функций, тогда как массив символов обычно имеет статический размер.",Qual è la principale differenza tra una stringa di caratteri che viene letta in una variabile di tipo stringa e una variabile di tipo char []?,Il carattere [] aggiungerà automaticamente un carattere null \ 0 alla fine della stringa.,"una stringa ha dimensioni variabili e chiamate di funzione disponibili, mentre un array di caratteri ha solitamente una dimensione statica.",¿Cuál es la principal diferencia entre una cadena de caracteres que se lee en una variable de tipo cadena y una variable de tipo char []?,El char [] agregará automáticamente un carácter nulo \ 0 al final de la cadena.,"una cadena tiene un tamaño variable y llamadas a funciones disponibles, mientras que una matriz de caracteres generalmente tiene un tamaño estático.","Jaka jest główna różnica między ciągiem znaków, który jest wczytywany do zmiennej typu string, a zmienną typu char []?",Znak [] automatycznie doda znak null \ 0 na końcu ciągu.,"łańcuch ma zmienny rozmiar i dostępne wywołania funkcji, podczas gdy tablica znaków ma zwykle rozmiar statyczny.",Sự khác biệt chính giữa một chuỗi ký tự được đọc thành một biến kiểu chuỗi so với một biến kiểu char [] là gì?,Char [] sẽ tự động thêm ký tự null \ 0 vào cuối chuỗi.,"một chuỗi có kích thước thay đổi và có sẵn các lệnh gọi hàm, trong khi một mảng ký tự thường có kích thước tĩnh.",string型の変数とchar []型の変数に読み込まれる文字列の主な違いは何ですか？,char []は、文字列の最後にnull \ 0文字を自動的に追加します。,文字列には可変サイズと関数呼び出しがありますが、文字配列には通常静的サイズがあります。,读入string类型的变量与char []类型的变量的字符串之间的主要区别是什么？,char []将在字符串的末尾自动添加一个空\ 0字符。,字符串的大小可变，可以使用函数调用，而字符数组通常具有静态大小。,ما هو الفرق الرئيسي بين سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة مقابل متغير من النوع char []؟,سيضيف الحرف [] تلقائيًا حرفًا فارغًا \ 0 في نهاية السلسلة.,سلسلة ذات حجم متغير واستدعاءات دالة متاحة ، بينما عادة ما يكون لمصفوفة الأحرف حجم ثابت.,"Яка основна різниця між рядком символів, який зчитується у змінну типу string від змінної типу char []?",Char [] автоматично додасть нульовий символ \ 0 в кінці рядка.,"рядок має змінний розмір і доступні виклики функцій, тоді як масив символів зазвичай має статичний розмір.",Qual é a principal diferença entre uma string de caracteres que é lida em uma variável do tipo string e uma variável do tipo char []?,O char [] adicionará automaticamente um caractere nulo \ 0 no final da string.,"uma string tem tamanho variável e chamadas de função disponíveis, enquanto uma matriz de caracteres geralmente tem um tamanho estático.",تفاوت اصلی یک رشته از کاراکترها در یک متغیر از نوع نوع در مقابل یک متغیر از نوع char [] چیست؟,char [] به طور خودکار در انتهای رشته یک کاراکتر null \ 0 اضافه می کند.,یک رشته دارای اندازه متغیر است و فراخوانی عملکردی در دسترس است ، در حالی که یک آرایه نویسه معمولاً دارای یک اندازه استاتیک است.,Quina és la diferència principal entre una cadena de caràcters que es llegeix en una variable de tipus cadena versus una variable de tipus char []?,El caràcter [] afegirà automàticament un caràcter \ 0 nul al final de la cadena.,"una cadena té trucades de mida i funció variables disponibles, mentre que una matriu de caràcters sol tenir una mida estàtica.",Која је главна разлика између низа знакова који се читају у променљиву типа стринг у односу на променљиву типа цхар []?,Цхар [] ће аутоматски додати нулл \ 0 знак на крају низа.,"стринг има променљиву величину и доступни су позиви функција, док низ знакова обично има статичку величину.",Apa perbedaan utama antara string karakter yang dibaca menjadi variabel tipe string versus variabel tipe char []?,Karakter [] secara otomatis akan menambahkan karakter null \ 0 di akhir string.,"string memiliki ukuran variabel dan pemanggilan fungsi tersedia, sedangkan larik karakter biasanya memiliki ukuran statis.",Hva er hovedforskjellen mellom en streng med tegn som leses inn i en variabel av typen streng versus en variabel av typen char []?,Char [] vil automatisk legge til et null \ 0 tegn på slutten av strengen.,"en streng har variabel størrelse og funksjonssamtaler tilgjengelig, mens en tegnmatrise vanligvis har en statisk størrelse.",문자열 유형의 변수와 char [] 유형의 변수로 읽어들이는 문자열의 주요 차이점은 무엇입니까?,char []는 문자열 끝에 null \ 0 문자를 자동으로 추가합니다.,문자열은 가변 크기와 함수 호출을 사용할 수있는 반면 문자 배열은 일반적으로 정적 크기를 갖습니다.,"Mikä on tärkein ero merkkijonossa, joka luetaan merkkijonon muuttujaksi tyypin char [] muuttujaan?",Char [] lisää merkkijonon loppuun tyhjän merkin 0.,"merkkijonolla on käytettävissä vaihteleva koko ja funktiokutsut, kun taas merkkijonolla on yleensä staattinen koko.","Mi a fő különbség a karakterláncok között, amelyeket string típusú változóba olvasnak, és a char [] típusú változókba?",A char [] automatikusan hozzáad egy null \ 0 karaktert a karakterlánc végéhez.,"egy karakterlánc változó méretű és elérhető függvényhívásokkal rendelkezik, míg egy karaktertömb általában statikus méretű.","Jaký je hlavní rozdíl mezi řetězcem znaků, který je načten do proměnné typu řetězec oproti proměnné typu char []?",Znak [] automaticky přidá znak null \ 0 na konec řetězce.,"řetězec má k dispozici proměnnou velikost a volání funkcí, zatímco pole znaků má obvykle statickou velikost.",Koja je glavna razlika između niza znakova koji se čitaju u varijablu tipa string u odnosu na varijablu tipa char []?,Char [] automatski će dodati null \ 0 znak na kraju niza.,"niz ima promjenjivu veličinu i dostupni su pozivi funkcija, dok niz znakova obično ima statičku veličinu."
57,57,1429,8.5,usually linked list because it doesn't have a fixed size. But if you know or want to set a max size array is better.,"Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred, and why?",5.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird bevorzugt und warum?,"normalerweise verknüpfte Liste, da sie keine feste Größe hat. Aber wenn Sie ein Array mit maximaler Größe kennen oder festlegen möchten, ist dies besser.","Kinsa nga pagpatuman (gipasukad sa array vs. list-based) ang gipalabi, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)",kasagaran lista nga na-link tungod kay wala kini usa ka gidak-on nga gidak-on. Apan kung nahibal-an nimo o gusto nga magtakda sa usa ka max size array mas maayo.,"Vilket genomförande (array-baserat kontra listbaserat) är att föredra, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),vanligtvis länkad lista eftersom den inte har en fast storlek. Men om du vet eller vill ställa in en maxstorlek är bättre.,Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée et pourquoi?,"Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)","généralement une liste liée car elle n&#39;a pas de taille fixe. Mais si vous connaissez ou souhaitez définir un tableau de taille maximale, c&#39;est mieux.","Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)","meestal gekoppelde lijst omdat deze geen vaste grootte heeft. Maar als u een maximale grootte weet of wilt instellen, is array beter.",Какая реализация (на основе массива или на основе списка) предпочтительна и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","обычно связанный список, потому что он не имеет фиксированного размера. Но если вы знаете или хотите установить массив максимального размера, лучше.",Quale implementazione (basata su array o basata su elenchi) è preferita e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)",di solito elenco collegato perché non ha una dimensione fissa. Ma se sai o vuoi impostare un array di dimensioni massime è meglio.,¿Qué implementación (basada en matrices o basada en listas) se prefiere y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)","lista normalmente vinculada porque no tiene un tamaño fijo. Pero si sabe o desea establecer una matriz de tamaño máximo, es mejor.",Która implementacja (oparta na tablicach czy oparta na liście) jest preferowana i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","lista zwykle połączona, ponieważ nie ma stałego rozmiaru. Ale jeśli wiesz lub chcesz ustawić tablicę maksymalnego rozmiaru, jest lepsza.",Triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên hơn và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)",thường là danh sách liên kết vì nó không có kích thước cố định. Nhưng nếu bạn biết hoặc muốn đặt một mảng kích thước tối đa thì tốt hơn.,どの実装（配列ベースとリストベース）が推奨されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,サイズが固定されていないため、通常はリンクリストです。ただし、最大サイズの配列を知っている、または設定したい場合は、より適切です。,首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,通常是链表，因为它没有固定的大小。但是，如果您知道或想要设置最大大小的数组会更好。,ما هو التطبيق المفضل (المستندة إلى المصفوفة مقابل القائمة) ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),عادة قائمة مرتبطة لأنه ليس لها حجم ثابت. ولكن إذا كنت تعرف أو تريد تعيين مصفوفة الحجم الأقصى فمن الأفضل.,"Яка реалізація (на основі масивів проти списку) є кращою, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","зазвичай пов’язаний список, оскільки він не має фіксованого розміру. Але якщо ви знаєте або хочете встановити максимальний розмір масиву, краще.",Qual implementação (baseada em matriz vs. baseada em lista) é preferida e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)",geralmente lista vinculada porque não tem um tamanho fixo. Mas se você sabe ou deseja definir uma matriz de tamanho máximo é melhor.,کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) ترجیح داده می شود ، و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),معمولاً لیست پیوند داده شده زیرا اندازه ثابت ندارد. اما اگر می دانید یا می خواهید یک آرایه حداکثر اندازه تنظیم کنید بهتر است.,Quina implementació (basada en matriu vs. basada en llistes) es prefereix i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)","llista generalment enllaçada perquè no té una mida fixa. Però si sabeu o voleu establir una matriu de mida màxima, és millor.",Која имплементација (заснована на низу у односу на листу) је пожељнија и зашто?,"На основу везе, јер су динамични (без ограничења величине)","обично повезана листа јер нема фиксну величину. Али ако знате или желите да поставите низ максималне величине, боље је.","Implementasi mana (berbasis larik vs. berbasis daftar) yang lebih disukai, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)",biasanya daftar tertaut karena tidak memiliki ukuran tetap. Tetapi jika Anda tahu atau ingin mengatur array ukuran maks lebih baik.,"Hvilken implementering (arraybasert vs. listebasert) foretrekkes, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)",vanligvis koblet liste fordi den ikke har en fast størrelse. Men hvis du vet eller vil sette en maksimal størrelse er det bedre.,어떤 구현 (배열 기반 vs. 목록 기반)이 선호되며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",일반적으로 연결 목록은 고정 된 크기가 없기 때문입니다. 그러나 최대 크기 배열을 알고 있거나 설정하려는 경우 더 좋습니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","yleensä linkitetty luettelo, koska sillä ei ole kiinteää kokoa. Mutta jos tiedät tai haluat asettaa maksimikokoisen taulukon, on parempi.","Melyik megvalósítást (tömb alapú vagy lista alapú) részesítik előnyben, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","általában linkelt lista, mert nincs rögzített mérete. De ha tudod vagy meg akarod állítani a maximális tömböt, az jobb.",Která implementace (založená na poli vs. založená na seznamu) je upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","obvykle propojený seznam, protože nemá pevnou velikost. Ale pokud víte nebo chcete nastavit pole maximální velikosti, je lepší.",Koja je implementacija (zasnovana na nizu u odnosu na listu) poželjna i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)","obično povezana lista jer nema fiksnu veličinu. Ali ako znate ili želite postaviti niz maksimalne veličine, bolje je."
58,58,1827,10.6,"starting by displaying the node furthest to the right, then  the node, then the node on the right, in recursive order.","Traverse the left subtree, then the root, then the right subtree.",What is the inorder traversal of a binary tree?,4.0,"Durchqueren Sie den linken Teilbaum, dann die Wurzel und dann den rechten Teilbaum.",Was ist die Inorder Traversal eines Binärbaums?,"Beginnen Sie mit der Anzeige des am weitesten rechts liegenden Knotens, dann des Knotens und des Knotens rechts in rekursiver Reihenfolge.",Unsa man ang inorder traversal sa usa ka binary nga kahoy?,"Pagtabok sa wala nga subtree, pagkahuman sa gamot, pagkahuman sa tuo nga subtree.","pagsugod pinaagi sa pagpakita sa node nga labi ka layo sa tuo, dayon ang node, dayon ang node sa tuo, sa recursive order.",Vad är inorder traversal av ett binärt träd?,"Korsa vänster subtree, sedan roten, sedan höger subtree.","börjar med att visa noden längst till höger, sedan noden och sedan noden till höger, i rekursiv ordning.",Quelle est la traversée en ordre d&#39;un arbre binaire?,"Traversez le sous-arbre gauche, puis la racine, puis le sous-arbre droit.","en commençant par afficher le nœud le plus à droite, puis le nœud, puis le nœud de droite, dans un ordre récursif.",Wat is de volgorde waarin een binaire boom wordt doorlopen?,"Beweeg de linker substructuur, dan de wortel en dan de rechter substructuur.","te beginnen met het weergeven van het meest rechtse knooppunt, dan het knooppunt en dan het knooppunt aan de rechterkant, in recursieve volgorde.",Что такое обход двоичного дерева в порядке?,"Пройдите по левому поддереву, затем по корню, затем по правому поддереву.","начиная с отображения наиболее правого узла, затем узла, затем узла справа в рекурсивном порядке.",Qual è l&#39;attraversamento in ordine di un albero binario?,"Attraversa la sottostruttura sinistra, quindi la radice, quindi la sottostruttura destra.","iniziando visualizzando il nodo più a destra, quindi il nodo, quindi il nodo a destra, in ordine ricorsivo.",¿Cuál es el recorrido en orden de un árbol binario?,"Atraviesa el subárbol izquierdo, luego la raíz y luego el subárbol derecho.","comenzando por mostrar el nodo más a la derecha, luego el nodo, luego el nodo de la derecha, en orden recursivo.",Jakie jest wewnętrzne przejście drzewa binarnego?,"Przejdź przez lewe poddrzewo, następnie korzeń, a następnie prawe poddrzewo.","zaczynając od wyświetlenia węzła położonego najdalej po prawej stronie, następnie węzła, a następnie węzła po prawej stronie, w kolejności rekurencyjnej.",Đường truyền ngang dòng của cây nhị phân là gì?,"Duyệt qua cây con bên trái, rồi đến gốc, rồi đến cây con bên phải.","bắt đầu bằng cách hiển thị nút ở xa nhất bên phải, sau đó là nút, sau đó là nút ở bên phải, theo thứ tự đệ quy.",二分木の順序のない横断とは何ですか？,左側のサブツリー、ルート、右側のサブツリーの順にトラバースします。,まず、最も右側のノード、次にノード、次に右側のノードを再帰的な順序で表示します。,二叉树的有序遍历是什么？,遍历左子树，然后遍历根，然后遍历右子树。,首先以递归顺序显示最右边的节点，然后显示该节点，再显示右边的节点。,ما هو الاجتياز الداخلي للشجرة الثنائية؟,اجتياز الشجرة الفرعية اليسرى ، ثم الجذر ، ثم الشجرة الفرعية اليمنى.,بدءًا من عرض العقدة في أقصى اليمين ، ثم العقدة ، ثم العقدة على اليمين بترتيب تعاودي.,Що таке обхід бінарного дерева?,"Проведіть ліве піддерево, потім корінь, потім праве піддерево.","починаючи з відображення самого віддаленого вправо вузла, потім вузла, потім вузла праворуч у рекурсивному порядку.",Qual é a travessia em ordem de uma árvore binária?,"Percorra a subárvore esquerda, depois a raiz e a subárvore direita.","começando exibindo o nó mais à direita, depois o nó e o nó à direita, em ordem recursiva.",پیمایش غیرمعمول یک درخت باینری چیست؟,زیر درخت چپ ، سپس ریشه و سپس زیر درخت راست را رد کنید.,شروع با نمایش گره دورترین سمت راست ، سپس گره ، سپس گره سمت راست ، به ترتیب بازگشتی.,Quin és el recorregut inorder d&#39;un arbre binari?,"Travesseu el subarbre esquerre, després l&#39;arrel i després el subarbre dret.","començant per mostrar el node més a la dreta, després el node i després el node de la dreta, en ordre recursiu.",Шта је унутрашња преокрет бинарног стабла?,"Пређите преко левог подстабла, затим корена, па десног подстабла.","почев од приказивања чвора најдаље удесно, затим чвора, па чвора десно, у рекурзивном редоследу.",Apa yang dimaksud dengan inorder traversal dari pohon biner?,"Lintasi subtree kiri, lalu akar, lalu subtree kanan.","dimulai dengan menampilkan simpul terjauh ke kanan, lalu simpul, kemudian simpul di kanan, dalam urutan rekursif.",Hva er inorder traversal av et binært tre?,"Kryss venstre undertre, deretter roten, deretter høyre undertre.","starter med å vise noden lengst til høyre, deretter noden, deretter noden til høyre, i rekursiv rekkefølge.",이진 트리의 inorder traversal은 무엇입니까?,"왼쪽 하위 트리, 루트, 오른쪽 하위 트리 순으로 이동합니다.","가장 오른쪽에있는 노드, 노드, 오른쪽에있는 노드를 재귀 순서로 표시하여 시작합니다.",Mikä on binäärisen puun sisäinen kulku?,"Liikuta vasenta osapuuta, sitten juurta, sitten oikeaa osapuuta.","aloitetaan näyttämällä solmu kauimpana oikealla, sitten solmu ja sitten oikealla oleva solmu rekursiivisessa järjestyksessä.",Mi a bináris fa belső bejárása?,"Keresse meg a bal alfát, majd a gyökeret, majd a jobb alfát.","kezdve azzal, hogy rekurzív sorrendben jeleníti meg a legtávolabbi csomópontot, majd a csomópontot, majd a jobb oldali csomópontot.",Co je to inorder traversal binárního stromu?,"Procházejte levým podstromem, poté kořenem a poté pravým podstromem.","počínaje zobrazením nejvzdálenějšího uzlu vpravo, potom uzlu a poté uzlu vpravo v rekurzivním pořadí.",Koja je pogreška u binarnom stablu?,"Pređite lijevo podstablo, zatim korijen, pa desno podstablo.","počevši od prikazivanja čvora najdalje udesno, zatim čvora, zatim čvora s desne strane, u rekurzivnom redoslijedu."
59,59,4,1.1,It is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. This can generate much feedback including software specifications and project estimations of the total project.,To simulate the behaviour of portions of the desired software product.,What is the role of a prototype program in problem solving?,3.0,Simulation des Verhaltens von Teilen des gewünschten Softwareprodukts.,Welche Rolle spielt ein Prototyp-Programm bei der Problemlösung?,"Es wird verwendet, um den Benutzern eine erste Vorstellung vom abgeschlossenen Programm zu geben und den Kunden die Möglichkeit zu geben, das Programm zu bewerten. Dies kann viel Feedback generieren, einschließlich Softwarespezifikationen und Projektschätzungen des Gesamtprojekts.",Unsa man ang papel sa usa ka programa nga prototype sa pagsulbad sa problema?,Aron masundog ang pamatasan sa mga bahin sa gitinguha nga produkto sa software.,Gigamit kini aron ang mga mogamit adunay una nga ideya sa nahuman nga programa ug tugotan ang mga kliyente nga susihon ang programa. Mahimo kini makamugna daghang feedback lakip ang mga detalye sa software ug pagbanabana sa proyekto sa kinatibuk-ang proyekto.,Vilken roll har ett prototypprogram för problemlösning?,För att simulera beteendet hos delar av den önskade programvaruprodukten.,Den används för att låta användarna få en första uppfattning om det färdiga programmet och låta kunderna utvärdera programmet. Detta kan generera mycket feedback inklusive programvaruspecifikationer och projektuppskattningar av det totala projektet.,Quel est le rôle d&#39;un programme prototype dans la résolution de problèmes?,Pour simuler le comportement de parties du produit logiciel souhaité.,"Il permet aux utilisateurs d&#39;avoir une première idée du programme terminé et de permettre aux clients d&#39;évaluer le programme. Cela peut générer beaucoup de commentaires, y compris les spécifications du logiciel et les estimations de projet du projet total.",Wat is de rol van een prototype-programma bij het oplossen van problemen?,Om het gedrag van delen van het gewenste softwareproduct te simuleren.,"Het wordt gebruikt om de gebruikers een eerste idee te geven van het voltooide programma en om de klanten het programma te laten evalueren. Dit kan veel feedback opleveren, inclusief softwarespecificaties en projectschattingen van het totale project.",Какова роль прототипа программы в решении проблем?,Для моделирования поведения частей желаемого программного продукта.,"Он используется для того, чтобы пользователи имели первое представление о завершенной программе и позволяли клиентам оценить программу. Это может вызвать много отзывов, включая спецификации программного обеспечения и проектные оценки всего проекта.",Qual è il ruolo di un programma prototipo nella risoluzione dei problemi?,Per simulare il comportamento di porzioni del prodotto software desiderato.,Viene utilizzato per consentire agli utenti di avere una prima idea del programma completato e consentire ai clienti di valutare il programma. Ciò può generare molti feedback comprese le specifiche del software e le stime del progetto del progetto totale.,¿Cuál es el papel de un programa prototipo en la resolución de problemas?,Simular el comportamiento de partes del producto de software deseado.,"Se utiliza para permitir a los usuarios tener una primera idea del programa completo y permitir que los clientes evalúen el programa. Esto puede generar mucha retroalimentación, incluidas las especificaciones del software y las estimaciones del proyecto total.",Jaka jest rola programu prototypowego w rozwiązywaniu problemów?,Aby zasymulować zachowanie części żądanego oprogramowania.,"Służy do udostępnienia użytkownikom pierwszego wyobrażenia o ukończonym programie i umożliwienia klientom oceny programu. Może to generować wiele informacji zwrotnych, w tym specyfikacje oprogramowania i szacunki dotyczące całego projektu.",Vai trò của một chương trình nguyên mẫu trong việc giải quyết vấn đề là gì?,Để mô phỏng hoạt động của các phần của sản phẩm phần mềm mong muốn.,Nó được sử dụng để cho phép người dùng có ý tưởng đầu tiên về chương trình đã hoàn thành và cho phép khách hàng đánh giá chương trình. Điều này có thể tạo ra nhiều phản hồi bao gồm thông số kỹ thuật phần mềm và ước tính dự án của tổng dự án.,問題解決におけるプロトタイププログラムの役割は何ですか？,目的のソフトウェア製品の一部の動作をシミュレートします。,これは、ユーザーが完成したプログラムを最初に理解し、クライアントがプログラムを評価できるようにするために使用されます。これにより、ソフトウェア仕様やプロジェクト全体のプロジェクト見積もりなど、多くのフィードバックが生成される可能性があります。,原型程序在解决问题中的作用是什么？,模拟所需软件产品各部分的行为。,它用于使用户对完成的程序有一个初步的了解，并允许客户评估该程序。这会产生很多反馈，包括软件规范和整个项目的项目估计。,ما هو دور برنامج النموذج الأولي في حل المشكلات؟,لمحاكاة سلوك أجزاء من منتج البرنامج المطلوب.,يتم استخدامه للسماح للمستخدمين بالحصول على فكرة أولية عن البرنامج المكتمل والسماح للعملاء بتقييم البرنامج. يمكن أن ينتج عن ذلك الكثير من التعليقات بما في ذلك مواصفات البرامج وتقديرات المشروع للمشروع الإجمالي.,Яка роль програми-прототипу у вирішенні проблем?,Для імітації поведінки частин бажаного програмного продукту.,"Він використовується для того, щоб користувачі мали перше уявлення про завершену програму та дозволяли клієнтам оцінювати програму. Це може створити багато відгуків, включаючи специфікації програмного забезпечення та оцінки проекту загального проекту.",Qual é o papel de um programa de protótipo na solução de problemas?,Para simular o comportamento de partes do produto de software desejado.,"É usado para permitir que os usuários tenham uma primeira ideia do programa concluído e para que os clientes avaliem o programa. Isso pode gerar muito feedback, incluindo especificações de software e estimativas do projeto total.",نقش یک نمونه اولیه در حل مسئله چیست؟,برای شبیه سازی رفتار بخشهایی از محصول نرم افزاری مورد نظر.,این مورد استفاده می شود تا به کاربران اجازه دهد اولین ایده را در مورد برنامه تکمیل شده داشته باشند و به مشتریان اجازه دهند برنامه را ارزیابی کنند. این می تواند بازخورد زیادی از جمله مشخصات نرم افزار و برآورد پروژه از کل پروژه ایجاد کند.,Quin és el paper d’un programa prototipus en la resolució de problemes?,Per simular el comportament de parts del producte de programari desitjat.,"S&#39;utilitza per permetre als usuaris tenir una primera idea del programa completat i permetre als clients avaluar el programa. Això pot generar molts comentaris, incloses les especificacions de programari i les estimacions del projecte del projecte total.",Која је улога прототипа програма у решавању проблема?,Да симулира понашање делова жељеног софтверског производа.,"Користи се како би корисници имали прву представу о завршеном програму и омогућили клијентима да процене програм. Ово може створити много повратних информација, укључујући софтверске спецификације и процјене укупног пројекта.",Apa peran program prototipe dalam pemecahan masalah?,Untuk mensimulasikan perilaku bagian dari produk perangkat lunak yang diinginkan.,Ini digunakan untuk membiarkan pengguna memiliki gagasan pertama tentang program yang diselesaikan dan memungkinkan klien untuk mengevaluasi program. Ini dapat menghasilkan banyak umpan balik termasuk spesifikasi perangkat lunak dan perkiraan proyek dari total proyek.,Hva er rollen som et prototypeprogram i problemløsing?,For å simulere oppførselen til deler av det ønskede programvareproduktet.,Den brukes til å la brukerne få en første ide om det fullførte programmet og la kundene evaluere programmet. Dette kan generere mye tilbakemelding inkludert programvarespesifikasjoner og prosjektestimasjoner av det totale prosjektet.,문제 해결에서 프로토 타입 프로그램의 역할은 무엇입니까?,원하는 소프트웨어 제품의 일부 동작을 시뮬레이션합니다.,사용자가 완성 된 프로그램에 대한 첫 번째 아이디어를 갖게하고 클라이언트가 프로그램을 평가할 수 있도록하는 데 사용됩니다. 이것은 전체 프로젝트의 소프트웨어 사양 및 프로젝트 추정을 포함하여 많은 피드백을 생성 할 수 있습니다.,Mikä on prototyyppiohjelman rooli ongelmanratkaisussa?,Simuloidaan halutun ohjelmistotuotteen osien käyttäytymistä.,"Sitä käytetään antamaan käyttäjille ensimmäinen idea valmiista ohjelmasta ja antamaan asiakkaiden arvioida ohjelma. Tämä voi tuottaa paljon palautetta, mukaan lukien ohjelmistomääritykset ja projekti-arviot koko projektista.",Mi a szerepe a prototípus programnak a problémamegoldásban?,A kívánt szoftvertermék egyes részeinek viselkedésének szimulálása.,"Arra szolgál, hogy a felhasználók első ötletet kapjanak az elkészült programról, és lehetővé tegyék az ügyfelek számára a program értékelését. Ez sok visszajelzést generálhat, beleértve a szoftver specifikációit és a teljes projekt becsléseit.",Jaká je role prototypového programu při řešení problémů?,Simulovat chování částí požadovaného softwarového produktu.,"Používá se k tomu, aby uživatelé měli první představu o dokončeném programu a umožnili klientům program vyhodnotit. To může generovat mnoho zpětné vazby, včetně softwarových specifikací a odhadů projektu celého projektu.",Koja je uloga prototipa programa u rješavanju problema?,Da simulira ponašanje dijelova željenog softverskog proizvoda.,"Koristi se kako bi korisnici imali prvu predstavu o završenom programu i omogućili klijentima da procijene program. To može generirati mnogo povratnih informacija, uključujući softverske specifikacije i procjene ukupnog projekta."
60,60,1672,9.7,"Queue, the person who wanted to print first should be first served.",queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?","Warteschlange, die Person, die zuerst drucken wollte, sollte zuerst bedient werden.","Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,"Ang pila, ang tawo nga gusto nga mag-print una kinahanglan nga serbisyohan una.","Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,"Kö, den person som ville skriva ut först bör få första tjänsten.","Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,"File d&#39;attente, la personne qui voulait imprimer en premier doit être la première servie.","Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,"Wachtrij, de persoon die als eerste wil afdrukken, moet het eerst worden bediend.","Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,"Очередь, первым должен быть обслужен человек, который хотел напечатать первым.","Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,"Coda, la persona che voleva stampare per prima dovrebbe essere servita per prima.","¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,"Cola, la persona que quería imprimir primero debería ser la primera en ser atendida.","Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,"Kolejka, osoba, która jako pierwsza chciała wydrukować, powinna zostać obsłużona jako pierwsza.","Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,"Hàng đợi, người muốn in trước phải được phục vụ trước.",プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,キュー、最初に印刷したい人が最初に提供されるべきです。,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,队列，首先要打印的人。,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,قائمة الانتظار ، يجب تقديم الخدمة للشخص الذي يريد الطباعة أولاً.,"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,"Черга, особа, яка хотіла надрукувати першу, повинна бути спочатку обслужена.","Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,"Fila, a pessoa que deseja imprimir primeiro deve ser atendida primeiro.",چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,صف ، کسی که می خواهد ابتدا چاپ کند باید ابتدا خدمت شود.,"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,"Cua, primer s’ha de servir la persona que volia imprimir primer.","Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,"Ред, особа која је желела прво да штампа прво треба да буде услужена.","Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,"Antrian, yang mau print dulu harus dilayani dulu.","Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,"Kø, personen som ønsket å skrive ut først, skulle få først servert.","프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,"Queue, 먼저 인쇄를 원하는 사람이 먼저 서비스를 받아야합니다.","Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,"Jonossa, ensin tulee palvella henkilöä, joka halusi tulostaa ensin.","Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,"Sorban áll, először azt a személyt kell kiszolgálni, aki először nyomtatni akart.","Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,"Fronta, osoba, která chtěla nejprve tisknout, by měla být nejprve obsloužena.","Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,"Red, osoba koja je htjela prvo odštampati treba prvo dobiti uslugu."
61,61,602,3.7,Both are based on a control statement         - Iteration-repetition structure         - Recursion-selection structure        Both involve repetition         -Iteration-explicitly uses repetition structure         -Recursion-repeated function calls        Both involve a termination test         -Iteration-loop-termination test         -Recursion-base case         Both gradually approach termination         -Iteration-modifies counter until loop-termination test fails         -Recursion-produces progressively simpler versions of problem        Both can occur indefinitely         -Iteration-if loop-continuation condition never fails         -Recursion-if recursion step does not simplify the problem,They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,5.0,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,"Beide basieren auf einer Steueranweisung - Iterations-Wiederholungs-Struktur - Rekursionsauswahl-Struktur Beide beinhalten Wiederholung -Iteration-verwendet explizit Wiederholungsstruktur -Recursion-wiederholte Funktionsaufrufe Beide beinhalten einen Terminierungstest -Iterationsschleifen-Terminierungstest -Recursion-Basisfall Beide nähern sich allmählich der Beendigung - Iteration - modifiziert den Zähler, bis der Schleifenbeendigungstest fehlschlägt - Rekursion - erzeugt zunehmend einfachere Versionen des Problems. Beide können unbegrenzt auftreten - Iteration - wenn die Schleifenfortsetzungsbedingung niemals fehlschlägt - Rekursion - wenn der Rekursionsschritt das Problem nicht vereinfacht",Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,Ang duha gibase sa usa ka pahayag sa pagpugong - istraktura sa Iteration-repetition - istraktura sa pagpili nga recursion Parehong nga adunay pag-usab-usab nga tin-aw nga gigamit nga istraktura sa pag-usab -Resuryon nga gisubli nga mga tawag sa pag-andar nga Pareho nga giapil sa usa ka termination test. Parehas nga anam-anam nga moduol sa pagtapos -Magbag-o ang pagbag-o sa counter hangtod nga dili molampos ang pagsulay sa loop -Resuryon-naghimo og progresibo nga mas yano nga mga bersyon sa problema Parehas nga mahimo’g dili matapos.,Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,Båda är baserade på ett kontrolluttalande - Iteration-repetitionsstruktur - Rekursionsval-struktur Båda involverar repetition -Iteration-använder uttryckligen repetitionsstruktur -Recursion-upprepade funktionsanrop Båda involverar ett avslutningstest -Iteration-loop-termination test -Recursion-base case Båda närmar sig gradvis avslutning -Iteration-modifierar räknaren tills loop-termination test misslyckas -Recursion-producerar progressivt enklare versioner av problemet Båda kan inträffa på obestämd tid -Iteration-om loop-fortsättningstillstånd misslyckas aldrig -Recursion-om rekursionssteg inte förenklar problemet,Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,Les deux sont basés sur une instruction de contrôle - Structure d&#39;itération-répétition - Structure de sélection de récursivité Les deux impliquent la répétition -Iteration-utilise explicitement la structure de répétition -Appels de fonction répétés par récurrence Les deux impliquent un test de terminaison -Test de terminaison de boucle d&#39;itération -Cas de base de la récurrence Les deux s&#39;approchent progressivement de la terminaison -Iteration-modifie le compteur jusqu&#39;à ce que le test de terminaison de boucle échoue -Récursion-produit des versions progressivement plus simples du problème Les deux peuvent se produire indéfiniment -Iteration-si la condition de continuation de boucle n&#39;échoue jamais -Récursion-si l&#39;étape de récursivité ne simplifie pas le problème,Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,Beide zijn gebaseerd op een control statement - Iteratie-herhalingsstructuur - Recursie-selectiestructuur Beide hebben betrekking op herhaling -Iteratie - gebruikt expliciet herhalingsstructuur -Recursie-herhaalde functieaanroepen Beide omvatten een beëindigingstest -Iteratie-lus-beëindigingstest -Recursie-basisgeval Beide benaderen geleidelijk beëindiging -Iteratie-wijzigt teller totdat lus-beëindigingstest mislukt -Recursie-produceert geleidelijk eenvoudigere versies van het probleem Beide kunnen voor onbepaalde tijd voorkomen -Iteratie-als lus-voortzettingsconditie nooit faalt -Recursie-als recursiestap het probleem niet vereenvoudigt,В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"Оба основаны на управляющем утверждении - Структура повторения итерации - Структура выбора рекурсии Оба включают повторение - Итерация - явно использует структуру повторения - Повторяющиеся вызовы функций - повторение Оба включают тест завершения - Тест завершения цикла итераций - Базовый случай рекурсии Оба постепенно приближаются к завершению - Итерация - изменяет счетчик до тех пор, пока не завершится тест на завершение цикла - Рекурсия - создает все более простые версии проблемы Оба могут происходить бесконечно - Итерация - если условие продолжения цикла никогда не дает сбоя - Повторение - если шаг рекурсии не упрощает проблему",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,Entrambi si basano su un&#39;istruzione di controllo - Struttura di ripetizione-iterazione - Struttura di selezione della ricorsione Entrambi implicano la ripetizione -Iterazione-utilizza esplicitamente la struttura della ripetizione -Chiamate di funzione ripetute di ricorsione Entrambi coinvolgono un test di terminazione -Test di terminazione del ciclo di iterazione -Caso di ricorsione-base Entrambi si avvicinano gradualmente alla terminazione -Iterazione-modifica il contatore fino a quando il test di terminazione del loop fallisce -Ricorsione-produce versioni progressivamente più semplici del problema Entrambi possono verificarsi indefinitamente -Iterazione-se la condizione di continuazione del ciclo non fallisce mai -Ricorsione-se il passaggio di ricorsione non semplifica il problema,¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,Ambos se basan en una declaración de control - Estructura de iteración-repetición - Estructura de selección de recursividad Ambos implican repetición -Iteración-utiliza explícitamente la estructura de repetición -Recursión-llamadas a funciones repetidas Ambas implican una prueba de terminación -Prueba de terminación de ciclo de iteración -Caso base de recursividad Ambos se acercan gradualmente a la terminación -Iteración-modifica el contador hasta que falla la prueba de terminación del ciclo -La recursividad-produce versiones progresivamente más simples del problema Ambos pueden ocurrir indefinidamente -Iteración-si la condición de continuación del ciclo nunca falla -Recursión-si el paso de recursividad no simplifica el problema,Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,"Oba są oparte na instrukcji sterującej - Struktura iteracyjno-powtarzająca - Struktura rekurencyjno-selekcyjna Oba obejmują powtórzenie - Iteracja - jawnie używa struktury powtórzeń -Recursion-powtórzone wywołania funkcji Oba obejmują test zakończenia -Test iteracji-zakończenia pętli -Recursion-przypadek bazowy Oba stopniowo zbliżają się do zakończenia - Iteracja - modyfikuje licznik, dopóki test zakończenia pętli nie powiedzie się - Rekursja - tworzy stopniowo prostsze wersje problemu Oba mogą występować w nieskończoność - Iteracja - jeśli warunek kontynuacji pętli nigdy nie zawodzi - Rekursja - jeśli krok rekursji nie upraszcza problemu",Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,Cả hai đều dựa trên một câu lệnh điều khiển - Cấu trúc lặp lại - Cấu trúc lựa chọn đệ quy Cả hai đều liên quan đến sự lặp lại -Cấu tạo-sử dụng rõ ràng cấu trúc lặp lại -Các lệnh gọi hàm lặp lại Cả hai đều liên quan đến một bài kiểm tra kết thúc-Kiểm tra vòng lặp-kết thúc -Recursion-trường hợp cơ sở Cả hai dần dần tiếp cận kết thúc -Điều chỉnh-sửa đổi bộ đếm cho đến khi kiểm tra kết thúc vòng lặp không thành công -Recursion-tạo ra các phiên bản đơn giản hơn của vấn đề Cả hai đều có thể xảy ra vô thời hạn-Điều kiện tiếp tục-nếu vòng lặp không bao giờ thất bại -Recursion-nếu bước đệ quy không đơn giản hóa vấn đề,反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,どちらも制御ステートメントに基づいています-反復-繰り返し構造-再帰-選択構造両方とも繰り返しを含みます-反復-明示的に繰り返し構造を使用します-再帰-繰り返し関数呼び出し両方とも終了テストを含みます-反復-ループ-終了テスト-再帰-ベースケース両方とも徐々に終了に近づきます-反復-ループ終了テストが失敗するまでカウンターを変更します-再帰-問題のより単純なバージョンを徐々に生成します両方が無期限に発生する可能性があります-反復-ループ継続条件が失敗しない場合-再帰-再帰ステップが問題を単純化しない場合,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,两者都基于控制语句-迭代重复结构-递归选择结构都涉及重复-迭代明确使用重复结构-递归重复的函数调用都涉及终止测试-迭代循环终止测试-基于递归的案例两者都逐渐接近终止-迭代-修改计数器直到循环终止测试失败-递归-产生问题的逐步简化版本两者都可以无限期发生-迭代-如果循环延续条件永不失败-递归-如果递归步骤不能简化问题,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,كلاهما يعتمد على بيان تحكم - بنية التكرار - التكرار - بنية اختيار العودية - كلاهما يتضمن التكرار - التكرار - يستخدم صراحة بنية التكرار - استدعاءات الوظيفة المتكررة العودية كلاهما يشتمل على اختبار إنهاء - اختبار إنهاء حلقة - تكرار - حالة قاعدة الاسترجاع كلا النهجين التدريجي للإنهاء - التكرار - يعدل العداد حتى فشل اختبار إنهاء الحلقة - العود - ينتج تدريجيًا إصدارات أبسط من المشكلة يمكن أن يحدث كلاهما إلى أجل غير مسمى - التكرار - إذا لم تفشل حالة استمرار الحلقة أبدًا - الاسترجاع - إذا لم تبسط خطوة العودية المشكلة,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"Обидва засновані на оперативному твердженні - Структура повторення-повторення - Структура вибору рекурсії Обидва передбачають повторення -Ітерація-явно використовує структуру повторення -Рекурсія-повторювані виклики функцій Обидва передбачають завершення тесту -Ітерація-цикл-закінчення тесту -Рекурсія-базовий випадок Обидва поступово наближаються до завершення -Iteration-модифікує лічильник, поки не завершиться тест завершення циклу -Recursion-створює поступово простіші версії проблеми. Обидва можуть відбуватися необмежено довго -Iteration-if умова продовження циклу ніколи не дає збою -Recursion-якщо крок рекурсії не спрощує проблему",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,Ambos são baseados em uma instrução de controle - Estrutura de repetição de iteração - Estrutura de seleção de recursão Ambos envolvem repetição -Iteração - usa explicitamente a estrutura de repetição - Chamadas de função repetidas de repetição Ambos envolvem um teste de término -Teste de término de loop de iteração - Caso base de repetição Ambos se aproximam gradualmente do término -Iteração-modifica o contador até que o teste de término do loop falhe -Recursão- produz versões progressivamente mais simples do problema Ambos podem ocorrer indefinidamente -Iteração-se a condição de continuação do loop nunca falhar -Recursão- se a etapa de recursão não simplificar o problema,شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,هر دو مبتنی بر یک عبارت کنترل هستند - ساختار تکرار-تکرار - ساختار انتخاب بازگشت - هر دو شامل تکرار هستند-تکرار-به صراحت از ساختار تکرار استفاده می کند-تماسهای عملکردی بازگشتی-تکراری هر دو شامل یک تست خاتمه-آزمون تکرار-حلقه-مورد-بازگشت-پایه هر دو به تدریج به خاتمه نزدیک می شوند - تکرار تا زمانی که آزمون خاتمه حلقه با شکست مواجه شود ، تعدیل کننده را اصلاح می کند - بازگشت به تدریج نسخه های ساده تری از مسئله را تولید می کند,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,Tots dos es basen en una declaració de control - Estructura de repetició-iteració - Estructura de selecció de recursivitat Ambdues impliquen repetició -Iteració-utilitza explícitament estructura de repetició -Recursió-trucades a funcions repetides Ambdues impliquen una prova de finalització -Prova de terminació de bucle-iteració -Càs de base de recursió Tots dos s&#39;acosten gradualment a la terminació -La repetició-modifica el comptador fins que falla la prova de finalització de bucle -La recursió produeix versions progressivament més senzilles del problema. Ambdues poden produir-se indefinidament -Iteració-si la condició de continuació del bucle mai falla -Recursió-si el pas de recursió no simplifica el problema,Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,Оба се заснивају на контролној изјави - Структура понављања-понављања - Структура избора рекурзије Оба укључују понављање -Итерација-експлицитно користи структуру понављања -Рекурзија-поновљени позиви функција Оба укључују завршетак теста -Итерација-петља-завршетак теста -Рекурзија-основни случај Обоје се постепено приближавају прекиду -Итерација-модификује бројач док тест завршетка петље не закаже -Рекурзија-производи поступно једноставније верзије проблема И једно и друго може се појавити на неодређено време -Итерација-ако услов наставка петље никад не закаже -Рекурзија-ако корак рекурзије не поједностављује проблем,Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,Keduanya didasarkan pada pernyataan kontrol - Struktur pengulangan-Iterasi - Struktur pemilihan-rekursi Keduanya melibatkan pengulangan -Iterasi-secara eksplisit menggunakan struktur pengulangan -Panggilan fungsi pengulangan-Pengulangan Keduanya melibatkan uji penghentian -Iterasi-pengulangan-pengakhiran uji -Kasus dasar pengulangan Keduanya secara bertahap mendekati penghentian -Iterasi-memodifikasi penghitung sampai pengujian penghentian loop gagal -Rekursi-menghasilkan versi masalah yang semakin sederhana Keduanya dapat terjadi tanpa batas -Iterasi-jika kondisi kelanjutan loop tidak pernah gagal -Rekursi-jika langkah rekursi tidak menyederhanakan masalah,Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,Begge er basert på en kontrollerklæring - Iterasjon-repetisjonsstruktur - Rekursjons-seleksjonsstruktur Begge involverer repetisjon -Iterasjon-bruker eksplisitt repetisjonsstruktur -Rekursjon-gjentatte funksjonsanrop Begge involverer en avslutningstest -Iterasjon-loop-termineringstest -Rekursjon-basesak Begge nærmer seg gradvis avslutning -Iterasjon-modifiserer teller til sløyfetermineringstest mislykkes -Rekursjon-produserer gradvis enklere versjoner av problemet Begge kan oppstå på ubestemt tid -Iterasjon-hvis sløyfe-fortsettelse tilstand aldri mislykkes -Rekursjon-hvis rekursjonstrinn ikke forenkler problemet,반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,둘 다 제어문을 기반으로 함-반복 반복 구조-반복 선택 구조 둘 다 반복을 포함 함-반복-명시 적으로 반복 구조를 사용-반복 반복 함수 호출 둘 다 종료 테스트 포함-반복 루프 종료 테스트-반복 기본 케이스 둘 다 점진적으로 종료에 접근-반복-루프 종료 테스트가 실패 할 때까지 카운터 수정-재귀-점진적으로 더 간단한 문제 버전 생성 둘 다 무기한 발생할 수 있음-반복-루프 연속 조건이 실패하지 않는 경우-재귀-재귀 단계가 문제를 단순화하지 않는 경우,Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,"Molemmat perustuvat ohjauslausekkeeseen - Iteraatio-toistorakenne - Rekursiovalintarakenne Molemmat sisältävät toistoa -Iteration-käyttää nimenomaisesti toistorakennetta -Recursio-toistuvat funktiokutsuja Molemmat sisältävät lopetustestin -Iteration-loop-päättämistestin -Recursion-base -tapauksen Molemmat lähestyvät asteittain lopetusta -Iteration-modifioi laskuria, kunnes silmukan lopetustesti epäonnistuu -Recursio-tuottaa asteittain yksinkertaisempia versioita ongelmasta Molemmat voivat esiintyä loputtomiin -Iteration-jos loop-jatko-olosuhteet eivät koskaan epäonnistuneet -Recursio-jos rekursiovaihe ei yksinkertaista ongelmaa",Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"Mindkettő vezérlő utasításon alapul - Iteráció-ismétlés struktúra - Rekurzió-szelekció struktúra Mindkettő ismétlést tartalmaz -Iteration-explicit módon használja az ismétlés struktúráját -Recurzió-ismételt függvényhívások Mindkettő fokozatosan közelíti meg a befejezést -Iteráció-addig módosítja a számlálót, amíg a hurok-végződési teszt meghiúsul -A rekurzió - a probléma fokozatosan egyszerűbb verzióit produkálja",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,"Oba jsou založeny na kontrolním příkazu - Struktura opakování-opakování - Struktura výběru rekurze Oba zahrnují opakování -Iterace-explicitně používá strukturu opakování -Recursion-opakované volání funkce Oba zahrnují test ukončení -Iteration-loop-ukončení testu -Recursion-base případ Oba postupně přistupují k ukončení -Iterace-upravuje čítač, dokud selže test ukončení smyčky -Recursion -produkuje postupně jednodušší verze problému Obě mohou nastat na neurčito -Iteration-if podmínka pokračování smyčky nikdy selže -Recursion-pokud krok rekurze problém nezjednodušuje",Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,Obje se temelje na kontrolnoj izjavi - Struktura ponavljanja-ponavljanja - Struktura odabira rekurzije Oba uključuju ponavljanje -Iteracija-eksplicitno koristi strukturu ponavljanja -Rekurzija-ponovljeni pozivi funkcija Oba uključuju završni test -Iteracija-petlja-završni test -Rekurzija-osnovni slučaj Oboje se postepeno približavaju prekidu -Iteracija-modificira brojač dok test završetka petlje ne zakaže -Rekurzija-proizvodi postupno jednostavnije verzije problema I jedno i drugo može se pojaviti u nedogled -Iteracija-ako uslov nastavka petlje nikad ne zakaže -Rekurzija-ako korak rekurzije ne pojednostavljuje problem
62,62,1688,9.7,Queue,queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?",Warteschlange,"Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,Pila,"Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,Kö,"Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,Queue,"Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,Wachtrij,"Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,Очередь,"Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,Coda,"¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,Cola,"Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,Kolejka,"Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,Xếp hàng,プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,キュー,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,队列,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,طابور,"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,Чергу,"Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,Fila,چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,صف,"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,Cua,"Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,Ред чекања,"Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,Antre,"Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,Kø,"프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,열,"Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,Jonottaa,"Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,Sor,"Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,Fronta,"Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,Red
63,63,1347,8.2,push and pop.,push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?",Push and Pop.,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,iduso ug pop.,Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,tryck och knäpp.,Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,pousser et pop.,Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,duwen en knallen.,Какие две основные функции определяет стек?,толкать и хлопать,толкать и хлопать.,Quali sono le due funzioni principali definite da uno stack?,spingere e pop,spingere e pop.,¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,empujar y hacer estallar.,Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,push i pop.,Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,đẩy và bật.,スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,プッシュアンドポップ。,堆栈定义的两个主要功能是什么？,推和弹出,推和弹出。,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,ادفع وبوب.,Які дві основні функції визначає стек?,натискання та поп,натискання та поп.,Quais são as duas funções principais definidas por uma pilha?,empurre e estale,empurre e estale.,دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,فشار و پاپ.,Quines són les dues funcions principals definides per una pila?,empenta i esclata,empenta i esclata.,Које су две главне функције дефинисане стеком?,гурај и пуцај,гурај и пуцај.,Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,push dan pop.,Hva er de to hovedfunksjonene definert av en stabel?,push og pop,push og pop.,스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,밀고 팝.,Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,työnnä ja pop.,Mi a verem által definiált két fő funkció?,nyomja és pattog,nyomja és pattog.,Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,push a pop.,Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,guraj i pucaj.
64,64,1339,8.1,A data structure that puts elements in a list and only allows the user  access to the last element.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",What is a stack?,4.5,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element als erstes entfernt wird (oder als Last-In-First-Out).",Was ist ein Stapel?,"Eine Datenstruktur, die Elemente in eine Liste einfügt und dem Benutzer nur den Zugriff auf das letzte Element ermöglicht.",Unsa ang usa ka stack?,"Ang usa ka istruktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang una nga tangtangon (o ulahi-sa-una-sa-una)",Usa ka istruktura sa datos nga nagbutang mga elemento sa usa ka lista ug gitugotan ra ang pag-access sa mogamit sa katapusan nga elemento.,Vad är en stack?,"En datastruktur som kan lagra element, som har egenskapen att det senaste objektet som läggs till kommer att vara det första som tas bort (eller sista-in-först-ut)",En datastruktur som placerar element i en lista och endast tillåter användaren tillgång till det sista elementet.,Qu&#39;est-ce qu&#39;une pile?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le premier à être supprimé (ou dernier entré-premier sorti)",Une structure de données qui place des éléments dans une liste et permet uniquement à l&#39;utilisateur d&#39;accéder au dernier élément.,Wat is een stapel?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item als eerste wordt verwijderd (of last-in-first-out)",Een datastructuur die elementen in een lijst plaatst en de gebruiker alleen toegang geeft tot het laatste element.,Что такое стек?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален первым (или последним пришел - первым ушел).","Структура данных, которая помещает элементы в список и разрешает пользователю доступ только к последнему элементу.",Cos&#39;è uno stack?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà il primo a essere rimosso (o last-in-first-out)",Una struttura dati che inserisce gli elementi in un elenco e consente all&#39;utente l&#39;accesso solo all&#39;ultimo elemento.,¿Qué es una pila?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el primero en eliminarse (o el último en entrar, primero en salir)",Una estructura de datos que coloca elementos en una lista y solo permite al usuario acceder al último elemento.,Co to jest stos?,"Struktura danych, która może przechowywać elementy, która ma właściwość, że ostatni dodany element będzie pierwszym do usunięcia (lub last-in-first-out)","Struktura danych, która umieszcza elementy na liście i umożliwia użytkownikowi dostęp tylko do ostatniego elementu.",Ngăn xếp là gì?,"Cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử đầu tiên bị xóa (hoặc cuối cùng vào trước)",Cấu trúc dữ liệu đặt các phần tử trong danh sách và chỉ cho phép người dùng truy cập vào phần tử cuối cùng.,スタックとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最初に削除される（または後入れ先出し）というプロパティがあります。,要素をリストに入れ、ユーザーが最後の要素にのみアクセスできるようにするデータ構造。,什么是堆栈？,可以存储元素的数据结构，其属性是最后添加的项将是第一个要删除的（或后进先出）,一种将元素放在列表中并且仅允许用户访问最后一个元素的数据结构。,ما هو المكدس؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون أول عنصر تتم إزالته (أو آخر ما يرد أولاً),هيكل بيانات يضع العناصر في قائمة ويسمح فقط للمستخدم بالوصول إلى العنصر الأخير.,Що таке стек?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде першим, який буде видалено (або останній-у-першому-вихід)","Структура даних, яка розміщує елементи у списку та надає лише користувачеві доступ до останнього елемента.",O que é uma pilha?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o primeiro a ser removido (ou último a entrar, primeiro a sair)",Uma estrutura de dados que coloca elementos em uma lista e permite ao usuário acessar apenas o último elemento.,پشته چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده اولین موردی است که حذف می شود (یا آخرین بار در اولین بار),یک ساختار داده ای که عناصر را در یک لیست قرار می دهد و فقط به کاربر امکان دسترسی به آخرین عنصر را می دهد.,Què és una pila?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà el primer que s’eliminarà (o l’últim entrant-primer sortint)",Una estructura de dades que posa elements en una llista i només permet a l’usuari accedir a l’últim element.,Шта је стацк?,"Структура података која може да чува елементе, а која има својство да ће последња додата ставка бити прва која ће бити уклоњена (или последња у првом објављивању)",Структура података која ставља елементе на листу и омогућава кориснику само приступ последњем елементу.,Apa itu tumpukan?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang ditambahkan item terakhir akan menjadi yang pertama dihapus (atau terakhir masuk pertama keluar)",Struktur data yang menempatkan elemen dalam daftar dan hanya mengizinkan pengguna mengakses elemen terakhir.,Hva er en stabel?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det første som blir fjernet (eller last-in-first-out)",En datastruktur som setter elementer i en liste og bare gir brukeren tilgang til det siste elementet.,스택이란 무엇입니까?,마지막으로 추가 된 항목이 먼저 제거 (또는 후입 선출)된다는 속성을 가진 요소를 저장할 수있는 데이터 구조,목록에 요소를 넣고 마지막 요소에 대한 사용자 액세스 만 허용하는 데이터 구조입니다.,Mikä on pino?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan ensimmäisenä (tai viimeinen sisään-ensimmäiseksi-ulos)","Tietorakenne, joka sijoittaa elementit luetteloon ja antaa käyttäjälle pääsyn vain viimeiseen elementtiin.",Mi az a verem?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az első, amelyet eltávolítanak (vagy utoljára az elsőbe adnak ki)","Olyan adatszerkezet, amely elemeket tesz fel egy listába, és csak a legutóbbi elemhez enged hozzáférést a felhasználóhoz.",Co je to stack?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude odstraněna jako první (nebo last-in-first-out)","Datová struktura, která vloží prvky do seznamu a umožní uživateli přístup pouze k poslednímu prvku.",Šta je stog?,"Struktura podataka koja može pohraniti elemente, a koja ima svojstvo da će zadnja dodana stavka biti prva koja će se ukloniti (ili posljednja u prvom pojavljivanju)",Struktura podataka koja stavlja elemente na listu i omogućava korisniku samo pristup posljednjem elementu.
65,65,1790,10.5,"A tree data structure where each node has a value, where the total order is defined on these values.  the left subtree contains only values less than the parent node, and vice versa for the right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,What is a binary search tree?,5.0,"Ein Binärbaum mit der Eigenschaft, dass für jeden Knoten das linke Kind kleiner als das übergeordnete Element ist, was wiederum kleiner als das rechte Kind ist.",Was ist ein binärer Suchbaum?,"Eine Baumdatenstruktur, in der jeder Knoten einen Wert hat, in der die Gesamtreihenfolge für diese Werte definiert ist. Der linke Teilbaum enthält nur Werte, die kleiner als der übergeordnete Knoten sind, und umgekehrt für den rechten Teilbaum.",Unsa ang usa ka puno nga pagpangita sa binary?,Ang usa ka binary nga kahoy nga adunay kabtangan nga alang sa bisan unsang node ang wala nga bata mas gamay kaysa sa ginikanan nga sa baylo mas gamay kaysa sa tuo nga bata.,"Usa ka istruktura sa datos sa kahoy diin ang matag node adunay usa ka kantidad, diin ang kinatibuk-ang han-ay gihubit sa kini nga mga kantidad. ang wala nga subtree adunay sulud ra nga mga kantidad nga mas gamay kaysa sa node sa ginikanan, ug vice versa alang sa husto nga subtree.",Vad är ett binärt sökträd?,Ett binärt träd som har egenskapen att för vilken nod som helst är det vänstra barnet mindre än föräldern som i sin tur är mindre än det högra barnet.,"En träddatastruktur där varje nod har ett värde, där den totala ordningen definieras på dessa värden. det vänstra underträdet innehåller endast värden som är mindre än föräldernoden och vice versa för det högra underträdet.",Qu&#39;est-ce qu&#39;un arbre de recherche binaire?,"Un arbre binaire qui a la propriété que pour tout nœud, l&#39;enfant gauche est plus petit que le parent qui à son tour est plus petit que l&#39;enfant droit.","Une structure de données arborescente où chaque nœud a une valeur, où l&#39;ordre total est défini sur ces valeurs. le sous-arbre de gauche contient uniquement des valeurs inférieures au nœud parent, et vice versa pour le sous-arbre de droite.",Wat is een binaire zoekboom?,"Een binaire boom die de eigenschap heeft dat voor elk knooppunt het linkerkind kleiner is dan de ouder, die op zijn beurt kleiner is dan het rechterkind.","Een datastructuur in een boom waarin elk knooppunt een waarde heeft, waarbij de totale volgorde op deze waarden wordt gedefinieerd. de linker substructuur bevat alleen waarden die kleiner zijn dan het bovenliggende knooppunt, en vice versa voor de rechter substructuur.",Что такое двоичное дерево поиска?,"Бинарное дерево, обладающее тем свойством, что для любого узла левый дочерний элемент меньше, чем родительский, который, в свою очередь, меньше, чем правый дочерний элемент.","Древовидная структура данных, в которой каждый узел имеет значение, где для этих значений определяется общий порядок. левое поддерево содержит только значения, меньшие, чем родительский узел, и наоборот для правого поддерева.",Cos&#39;è un albero di ricerca binario?,Un albero binario che ha la proprietà che per ogni nodo il figlio sinistro è più piccolo del genitore che a sua volta è più piccolo del figlio destro.,"Una struttura dati ad albero in cui ogni nodo ha un valore, in cui l&#39;ordine totale è definito su questi valori. la sottostruttura di sinistra contiene solo valori inferiori al nodo genitore e viceversa per la sottostruttura di destra.",¿Qué es un árbol de búsqueda binario?,"Un árbol binario que tiene la propiedad de que para cualquier nodo el hijo izquierdo es más pequeño que el padre, que a su vez es más pequeño que el hijo derecho.","Una estructura de datos de árbol donde cada nodo tiene un valor, donde el orden total se define en estos valores. el subárbol izquierdo contiene solo valores menores que el nodo padre y viceversa para el subárbol derecho.",Co to jest drzewo wyszukiwania binarnego?,"Drzewo binarne, które ma tę właściwość, że dla każdego węzła lewe dziecko jest mniejsze niż rodzic, które z kolei jest mniejsze niż prawe dziecko.","Drzewiasta struktura danych, w której każdy węzeł ma wartość, gdzie całkowita kolejność jest zdefiniowana na podstawie tych wartości. lewe poddrzewo zawiera tylko wartości mniejsze niż węzeł macierzysty i na odwrót dla prawego poddrzewa.",Cây tìm kiếm nhị phân là gì?,"Một cây nhị phân có thuộc tính mà đối với bất kỳ nút nào, nút con bên trái đều nhỏ hơn nút cha, lần lượt nhỏ hơn nút con bên phải.","Cấu trúc dữ liệu dạng cây trong đó mỗi nút có một giá trị, trong đó tổng thứ tự được xác định trên các giá trị này. cây con bên trái chỉ chứa các giá trị nhỏ hơn nút cha và ngược lại cho cây con bên phải.",二分探索木とは何ですか？,どのノードでも、左の子が親よりも小さく、親が右の子よりも小さいというプロパティを持つ二分木。,各ノードに値があり、全順序がこれらの値で定義されているツリーデータ構造。左側のサブツリーには親ノードよりも小さい値のみが含まれ、右側のサブツリーの場合はその逆になります。,什么是二叉搜索树？,具有以下属性的二叉树：对于任何节点，左子节点小于父节点，而父节点又比右子节点小。,一个树形数据结构，其中每个节点都有一个值，在这些值上定义了总顺序。左子树仅包含小于父节点的值，反之亦然。,ما هي شجرة البحث الثنائية؟,شجرة ثنائية لها خاصية أن الطفل الأيسر لأي عقدة يكون أصغر من الأصل الذي بدوره أصغر من الطفل الأيمن.,هيكل بيانات شجرة حيث يكون لكل عقدة قيمة ، حيث يتم تحديد الترتيب الإجمالي على هذه القيم. تحتوي الشجرة الفرعية اليسرى فقط على قيم أقل من العقدة الأصلية ، والعكس صحيح للشجرة الفرعية اليمنى.,Що таке бінарне дерево пошуку?,"Бінарне дерево, яке має властивість, що для будь-якого вузла лівий дочірній елемент менший за батьківський, який, у свою чергу, менший від правого дочірнього.","Деревоподібна структура даних, де кожен вузол має значення, де загальний порядок визначається на цих значеннях. ліве піддерево містить лише значення, менші за батьківський вузол, і навпаки для правого піддерева.",O que é uma árvore de pesquisa binária?,"Uma árvore binária que possui a propriedade de que, para qualquer nó, o filho esquerdo é menor que o pai que, por sua vez, é menor que o filho direito.","Uma estrutura de dados em árvore onde cada nó possui um valor, onde a ordem total é definida nesses valores. a subárvore esquerda contém apenas valores menores do que o nó pai e vice-versa para a subárvore direita.",درخت جستجوی باینری چیست؟,یک درخت باینری است که خاصیتی دارد که برای هر گره کودک چپ کوچکتر از والد است که به نوبه خود کوچکتر از فرزند راست است.,یک ساختار داده درختی که هر گره دارای یک مقدار است ، جایی که ترتیب کل بر روی این مقادیر تعریف شده است. زیرشاخه سمت چپ فقط مقادیر کمتری از گره اصلی را دارد و بالعکس برای زیر درخت راست.,Què és un arbre de cerca binari?,"Un arbre binari que té la propietat que per a qualsevol node el fill esquerre és més petit que el pare, que al seu torn és més petit que el fill dret.","Una estructura de dades d’arbre on cada node té un valor, on es defineix l’ordre total en aquests valors. el subarbre esquerre només conté valors inferiors al node pare i viceversa per al subarbre dret.",Шта је бинарно стабло претраживања?,Бинарно стабло које има својство да је за било који чвор лево дете мање од родитеља које је пак мање од десног детета.,"Структура података стабла у којој сваки чвор има вредност, где је укупан редослед дефинисан на тим вредностима. лево подстабло садржи само вредности мање од родитељског чвора и обрнуто за десно поддрево.",Apa itu pohon pencarian biner?,Sebuah pohon biner yang memiliki properti yang untuk setiap node anak kiri lebih kecil dari induk yang pada gilirannya lebih kecil dari anak kanan.,"Struktur data pohon di mana setiap node memiliki nilai, di mana urutan total ditentukan pada nilai-nilai ini. subpohon kiri hanya berisi nilai yang kurang dari simpul induk, dan sebaliknya untuk subpohon kanan.",Hva er et binært søketre?,Et binært tre som har den egenskapen at for hvilken som helst node er det venstre barnet mindre enn foreldren som igjen er mindre enn det høyre barnet.,"En tredatastruktur der hver node har en verdi, hvor den totale rekkefølgen er definert på disse verdiene. venstre undertre inneholder bare verdier mindre enn foreldrenoden, og omvendt for høyre undertre.",이진 검색 트리 란 무엇입니까?,모든 노드에 대해 왼쪽 자식이 부모보다 작고 오른쪽 자식보다 작은 속성을 가진 이진 트리입니다.,각 노드에 값이있는 트리 데이터 구조. 여기서 총 주문은 이러한 값에 정의됩니다. 왼쪽 하위 트리에는 상위 노드보다 작은 값만 포함되며 오른쪽 하위 트리의 경우 반대의 경우도 마찬가지입니다.,Mikä on binaarinen hakupuu?,"Binaarinen puu, jolla on ominaisuus, että minkä tahansa solmun vasen lapsi on pienempi kuin vanhempi, joka puolestaan on pienempi kuin oikea lapsi.","Puun tietorakenne, jossa jokaisella solmulla on arvo, jossa näiden arvojen kokonaisjärjestys määritetään. vasemmassa alipuussa on vain arvot, jotka ovat pienempiä kuin pääsolmun, ja päinvastoin oikean alipuun kohdalla.",Mi az a bináris keresési fa?,"Egy bináris fa, amelynek az a tulajdonsága, hogy bármelyik csomópontnál a bal gyermek kisebb, mint a szülő, ami viszont kisebb, mint a jobb gyermek.","Egy fa adatszerkezet, ahol minden csomópontnak van értéke, ahol ezekre az értékekre van meghatározva a teljes sorrend. a bal részfa csak a szülőcsomópontnál kisebb értékeket tartalmaz, és fordítva a jobb részfához.",Co je to binární vyhledávací strom?,"Binární strom, který má vlastnost, že pro jakýkoli uzel je levé dítě menší než nadřazený, což je zase menší než pravé dítě.","Stromová datová struktura, kde každý uzel má hodnotu, kde je na těchto hodnotách definováno celkové pořadí. levý podstrom obsahuje pouze hodnoty menší než nadřazený uzel a naopak pro pravý podstrom.",Što je binarno stablo pretraživanja?,Binarno stablo koje ima svojstvo da je za bilo koji čvor lijevo dijete manje od roditelja koje je pak manje od desnog djeteta.,"Struktura podataka stabla u kojoj svaki čvor ima vrijednost, gdje je ukupni redoslijed definiran na tim vrijednostima. lijevo podstablo sadrži samo vrijednosti manje od roditeljskog čvora i obrnuto za desno poddrvo."
66,66,772,4.5,the first needs to be specified by size and the rest need only be stated( first like this [3] then [][][]),"All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,3.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?","Das erste muss nach Größe angegeben werden und der Rest muss nur angegeben werden (zuerst so [3], dann [] [] []).",Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.",ang una kinahanglan nga ipiho sa gidak-on ug ang nahabilin kinahanglan isulti ra (una sama niini [3] dayon [] [] []),Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",det första måste specificeras efter storlek och resten behöver bara anges (först så här [3] sedan [] [] []),Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.",le premier doit être spécifié par taille et le reste doit seulement être indiqué (d&#39;abord comme ceci [3] puis [] [] []),Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.",de eerste moet op maat worden gespecificeerd en de rest hoeft alleen te worden vermeld (eerst zo [3] dan [] [] []),Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","первый должен быть указан по размеру, а остальные нужно только указать (сначала как это [3], затем [] [] [])",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.",il primo deve essere specificato in base alla dimensione e il resto deve solo essere dichiarato (prima in questo modo [3] poi [] [] []),¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.",el primero debe especificarse por tamaño y el resto solo debe indicarse (primero así [3] luego [] [] []),Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.","pierwsza musi być określona przez rozmiar, a reszta musi być określona (najpierw w ten sposób [3], a następnie [] [] [])",Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.",đầu tiên cần được chỉ định theo kích thước và phần còn lại chỉ cần được nêu (đầu tiên như thế này [3] sau đó là [] [] []),多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,最初はサイズで指定する必要があり、残りは記載するだけです（最初にこの[3]のように、次に[] [] []）,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,第一个需要通过大小指定，其余的只需声明（首先像这样[3]，然后是[] [] []）,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,يجب تحديد الأول حسب الحجم والباقي يجب ذكره فقط (أولاً مثل هذا [3] ثم [] [] []),Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","перший потрібно вказати за розміром, а решту потрібно лише вказати (спочатку подібне [3], потім [] [] [])",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.","o primeiro precisa ser especificado pelo tamanho e o resto precisa apenas ser declarado (primeiro assim [3], depois [] [] [])",هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,اولین مورد باید توسط اندازه مشخص شود و بقیه فقط باید بیان شوند (ابتدا اینگونه [3] سپس [] [] []],Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.",el primer s’ha d’especificar per mida i la resta només s’ha d’indicar (primer així [3] després [] [] []),Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.","прво треба навести величину, а остало само навести (прво овако [3], затим [] [] [])",Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.",yang pertama perlu ditentukan ukurannya dan sisanya hanya perlu dicantumkan (pertama seperti ini [3] lalu [] [] []),Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.",det første må spesifiseres etter størrelse og resten trenger bare å oppgis (først som dette [3] deretter [] [] []),다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,첫 번째는 크기로 지정해야하고 나머지는 설명하기 만하면됩니다 (먼저 [3] 다음 [] [] []).,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.",ensimmäinen on määritettävä koon mukaan ja loput on ilmoitettava vain (ensin näin [3] sitten [] [] []),"Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","az elsőt méret szerint kell megadni, a többit pedig csak meg kell adni (először így [3], majd [] [] [])",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.","první je třeba specifikovat velikostí a zbytek pouze uvést (nejprve takto [3], potom [] [] [])",Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.","prvo treba navesti veličinu, a ostalo samo navesti (prvo ovako [3], zatim [] [] [])"
67,67,1089,6.6,"Nonconstant pointer to nonconstant data, constant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",What are the different ways to pass a pointer to a function?,5.0,"Es gibt vier Möglichkeiten: nicht konstanter Zeiger auf konstante Daten, nicht konstanter Zeiger auf nicht konstante Daten, konstanter Zeiger auf konstante Daten, konstanter Zeiger auf nicht konstante Daten.","Welche verschiedenen Möglichkeiten gibt es, einen Zeiger auf eine Funktion zu übergeben?","Nicht konstanter Zeiger auf nicht konstante Daten, konstanter Zeiger auf nicht konstante Daten, nicht konstanter Zeiger auf konstante Daten, konstanter Zeiger auf konstante Daten.",Unsa ang lainlaing mga paagi aron maipasa ang usa ka pointer sa usa ka kalihokan?,"Adunay upat ka mga paagi: dili makanunayon nga tudlo sa kanunay nga datos, dili padayon nga tudlo sa dili pagsalig data, kanunay nga tudlo sa kanunay nga datos, kanunay nga tudlo sa dili makanunayon nga datos.","Dili makanunayon nga tudlo sa wala’y sukaranan nga datos, kanunay nga tudlo sa wala’y sukaranan nga datos, dili padayon nga tudlo sa kanunay nga datos, kanunay nga tudlo sa kanunay nga datos.",Vilka är de olika sätten att skicka en pekare till en funktion?,"Det finns fyra sätt: icke-konstant pekare till konstant data, icke-konstant pekare till icke-konstant data, konstant pekare till konstant data, konstant pekare till icke-konstant data.","Icke-konstant pekare till icke-konstant data, konstant pekare till icke-konstant data, icke-konstant pekare till konstant data, konstant pekare till konstant data.",Quelles sont les différentes manières de transmettre un pointeur à une fonction?,"Il existe quatre façons: pointeur non constant vers des données constantes, pointeur non constant vers des données non constantes, pointeur constant vers des données constantes, pointeur constant vers des données non constantes.","Pointeur non constant vers des données non constantes, pointeur constant vers des données non constantes, pointeur non constant vers des données constantes, pointeur constant vers des données constantes.",Wat zijn de verschillende manieren om een aanwijzer door te geven aan een functie?,"Er zijn vier manieren: niet-constante pointer naar constante gegevens, niet-constante pointer naar niet-constante data, constante pointer naar constante data, constante pointer naar niet-constante data.","Niet-constante aanwijzer naar niet-constante data, constante pointer naar niet-constante data, niet-constante pointer naar constante data, constante pointer naar constante data.",Какими способами можно передать указатель на функцию?,"Существует четыре способа: непостоянный указатель на постоянные данные, непостоянный указатель на непостоянные данные, постоянный указатель на постоянные данные, постоянный указатель на непостоянные данные.","Непостоянный указатель на непостоянные данные, постоянный указатель на непостоянные данные, непостоянный указатель на постоянные данные, постоянный указатель на постоянные данные.",Quali sono i diversi modi per passare un puntatore a una funzione?,"Ci sono quattro modi: puntatore non costante a dati costanti, puntatore non costante a dati non costanti, puntatore costante a dati costanti, puntatore costante a dati non costanti.","Puntatore non costante a dati non costanti, puntatore costante a dati non costanti, puntatore non costante a dati costanti, puntatore costante a dati costanti.",¿Cuáles son las diferentes formas de pasar un puntero a una función?,"Hay cuatro formas: puntero no constante a datos constantes, puntero no constante a datos no constantes, puntero constante a datos constantes, puntero constante a datos no constantes.","Puntero no constante a datos no constantes, puntero constante a datos no constantes, puntero no constante a datos constantes, puntero constante a datos constantes.",Jakie są różne sposoby przekazywania wskaźnika do funkcji?,"Istnieją cztery sposoby: niestały wskaźnik do stałych danych, niestały wskaźnik do niestałych danych, stały wskaźnik do stałych danych, stały wskaźnik do niestałych danych.","Niestały wskaźnik do niestałych danych, stały wskaźnik do niestałych danych, niestały wskaźnik do stałych danych, stały wskaźnik do stałych danych.",Các cách khác nhau để truyền một con trỏ đến một hàm là gì?,"Có bốn cách: con trỏ không đổi tới dữ liệu không đổi, con trỏ không kiên định tới dữ liệu không thay đổi, con trỏ liên tục tới dữ liệu không đổi, con trỏ hằng tới dữ liệu không kiên định.","Con trỏ không kiên định tới dữ liệu không kiên định, con trỏ không đổi tới dữ liệu không kiên định, con trỏ không kiên định tới dữ liệu không đổi, con trỏ không đổi tới dữ liệu không đổi.",関数へのポインタを渡すさまざまな方法は何ですか？,4つの方法があります：定数データへの非定数ポインター、非定数データへの非定数ポインター、定数データへの定数ポインター、非定数データへの定数ポインター。,非定数データへの非定数ポインタ、非定数データへの定数ポインタ、定数データへの非定数ポインタ、定数データへの定数ポインタ。,将指针传递给函数有哪些不同的方法？,有四种方法：指向常量数据的非恒定指针，指向常量数据的非恒定指针，指向常量数据的常量指针，指向非常量数据的常量指针。,指向非恒定数据的非恒定指针，指向非恒定数据的恒定指针，指向恒定数据的非恒定指针，指向恒定数据的恒定指针。,ما هي الطرق المختلفة لتمرير مؤشر إلى دالة؟,هناك أربع طرق: مؤشر غير ثابت إلى بيانات ثابتة ، ومؤشر غير ثابت إلى بيانات غير ثابتة ، ومؤشر ثابت إلى بيانات ثابتة ، ومؤشر ثابت إلى بيانات غير ثابتة.,مؤشر غير ثابت لبيانات غير ثابتة ، مؤشر ثابت لبيانات غير ثابتة ، مؤشر غير ثابت لبيانات ثابتة ، مؤشر ثابت لبيانات ثابتة.,Які різні способи передачі покажчика на функцію?,"Існує чотири шляхи: непостійний вказівник на постійні дані, непостійний вказівник на непостійні дані, постійний вказівник на постійні дані, постійний вказівник на непостійні дані.","Непостійний вказівник на непостійні дані, постійний вказівник на непостійні дані, непостійний вказівник на постійні дані, постійний вказівник на постійні дані.",Quais são as diferentes maneiras de passar um ponteiro para uma função?,"Existem quatro maneiras: ponteiro não constante para dados constantes, ponteiro não constante para dados não constantes, ponteiro constante para dados constantes, ponteiro constante para dados não constantes.","Ponteiro não constante para dados não constantes, ponteiro constante para dados não constantes, ponteiro não constante para dados constantes, ponteiro constante para dados constantes.",روش های مختلف برای انتقال نشانگر به یک عملکرد چیست؟,چهار روش وجود دارد: اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده غیر ثابت.,اشاره گر ثابت به داده غیر ثابت ، اشاره گر ثابت به داده غیر ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت.,Quines són les diferents maneres de passar un punter a una funció?,"Hi ha quatre maneres: punter no constant a dades constants, punter no constant a dades no constants, punter constant a dades constants, punter constant a dades no constants.","Punter no constant a dades no constants, punter constant a dades no constants, punter no constant a dades constants, punter constant a dades constants.",Који су различити начини прослеђивања показивача на функцију?,"Постоје четири начина: нестални показивач на сталне податке, нестални показивач на несталне податке, стални показивач на сталне податке, стални показивач на несталне податке.","Непостојани показивач на несталне податке, стални показивач на непостојане податке, нестални показивач на сталне податке, стални показивач на сталне податке.",Apa sajakah cara berbeda untuk meneruskan penunjuk ke suatu fungsi?,"Ada empat cara: penunjuk tidak konstan ke data konstan, penunjuk tidak konstan ke data tidak konstan, penunjuk konstan ke data konstan, penunjuk konstan ke data tidak konstan.","Penunjuk tidak konstan ke data tidak tetap, penunjuk konstan ke data tidak konstan, penunjuk tidak konstan ke data konstan, penunjuk konstan ke data konstan.",Hva er de forskjellige måtene å overføre en peker til en funksjon på?,"Det er fire måter: ikke-konstant peker til konstant data, ikke-konstant peker til ikke-konstant data, konstant peker til konstant data, konstant peker til ikke-konstant data.","Ikke-konstant peker til ikke-konstant data, konstant peker til ikke-konstant data, ikke-konstant peker til konstant data, konstant peker til konstant data.",함수에 대한 포인터를 전달하는 다른 방법은 무엇입니까?,"네 가지 방법이 있습니다 : 상수 데이터에 대한 비상 수 포인터, 상수 데이터에 대한 상수 포인터, 상수 데이터에 대한 상수 포인터, 비상 수 데이터에 대한 상수 포인터.","상수가 아닌 데이터에 대한 상수 포인터, 상수가 아닌 데이터에 대한 상수 포인터, 상수 데이터에 대한 상수 포인터, 상수 데이터에 대한 상수 포인터.",Mitä eri tapoja siirtää osoitin funktiolle?,"On neljä tapaa: jatkuva osoitin vakiotietoihin, epävakaa osoitin epävakaisiin tietoihin, vakioosoitin vakiotietoihin, jatkuva osoitin epävakaisiin tietoihin.","Epävakaa osoitin epävakaisiin tietoihin, jatkuva osoitin epävakaisiin tietoihin, epävakaa osoitin vakioihin tietoihin, vakio osoitin vakioihin tietoihin.",Milyen módon lehet a mutatót átadni egy függvénynek?,"Négy módja van: nem állandó mutató az állandó adatokhoz, a nem állandó mutató a nem állandó adatokhoz, az állandó mutató az állandó adatokhoz, az állandó mutató a nem állandó adatokhoz.","Nem állandó mutató a nem állandó adatokra, az állandó mutató a nem állandó adatokra, a nem állandó mutató az állandó adatokra, az állandó mutató az állandó adatokra.","Jaké jsou různé způsoby, jak předat ukazatel na funkci?","Existují čtyři způsoby: nekonstantní ukazatel na konstantní data, nekonstantní ukazatel na nekonstantní data, konstantní ukazatel na konstantní data, konstantní ukazatel na nekonstantní data.","Nekonstantní ukazatel na nekonstantní data, konstantní ukazatel na nekonstantní data, nekonstantní ukazatel na konstantní data, konstantní ukazatel na konstantní data.",Koji su različiti načini prosljeđivanja pokazivača na funkciju?,"Postoje četiri načina: nestalni pokazivač na konstantne podatke, nestalni pokazivač na nestalne podatke, stalni pokazivač na stalne podatke, stalni pokazivač na nestalne podatke.","Nekonstantni pokazivač na nestalne podatke, stalni pokazivač na nestalne podatke, nestalni pokazivač na konstantne podatke, konstantni pokazivač na konstantne podatke."
68,68,845,5.1,"Assume the first number is sorted, then move down the list and 'insert' the numbers you come across into the corresponding place on the sorted side of the list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","In one sentence, what is the main idea implemented by insertion sort?",5.0,"Wenn Sie jeweils ein Array-Element von links nach rechts nehmen, wird es an der rechten Position unter den bereits sortierten Elementen auf der linken Seite eingefügt.","Was ist in einem Satz die Hauptidee, die durch Einfügesortierung umgesetzt wird?","Angenommen, die erste Nummer ist sortiert, gehen Sie in der Liste nach unten und fügen Sie die Nummern, auf die Sie stoßen, an der entsprechenden Stelle auf der sortierten Seite der Liste ein.","Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman pinaagi sa pagsulud?","Pagkuha usa ka elemento sa pag-ayo sa matag higayon, gikan sa wala ngadto sa tuo, gisukip kini sa tama nga posisyon taliwala sa mga naayos na nga elemento sa wala niini.","Hunahunaa nga ang una nga numero nahan-ay, pagkahuman ibalhin ang lista ug &#39;isulud&#39; ang mga numero nga imong naabtan sa katugbang nga lugar sa gihan-ay nga kilid sa lista.","I en mening, vad är huvudidén som implementeras genom insättningssortering?","Tar ett matriselement åt gången, från vänster till höger, infogar det i rätt position bland de redan sorterade elementen till vänster.","Antag att det första numret är sorterat, flytta sedan ner i listan och &quot;infoga&quot; siffrorna du stöter på till motsvarande plats på den sorterade sidan av listan.","En une phrase, quelle est l&#39;idée principale implémentée par le tri par insertion?","Prenant un élément du tableau à la fois, de gauche à droite, il l&#39;insère à la bonne position parmi les éléments déjà triés à sa gauche.","Supposons que le premier numéro soit trié, puis descendez dans la liste et «insérez» les numéros que vous rencontrez à l&#39;endroit correspondant sur le côté trié de la liste.",Wat is in één zin het hoofdidee geïmplementeerd door invoegsortering?,"Het neemt één array-element tegelijk, van links naar rechts, en voegt het in de juiste positie tussen de reeds gesorteerde elementen aan de linkerkant.","Stel dat het eerste nummer gesorteerd is, ga dan omlaag in de lijst en &#39;voeg&#39; de nummers die je tegenkomt in op de corresponderende plaats aan de gesorteerde kant van de lijst.","Одним предложением, какова основная идея сортировки вставкой?","Принимая по одному элементу массива слева направо, он вставляет его в правильную позицию среди уже отсортированных элементов слева.","Предположим, что первое число отсортировано, затем переместитесь вниз по списку и «вставьте» встречающиеся числа в соответствующее место на отсортированной стороне списка.","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento per inserzione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, lo inserisce nella posizione giusta tra gli elementi già ordinati alla sua sinistra.","Supponi che il primo numero sia ordinato, quindi scorri verso il basso nell&#39;elenco e &quot;inserisci&quot; i numeri che trovi nella posizione corrispondente sul lato ordinato dell&#39;elenco.","En una oración, ¿cuál es la idea principal implementada por ordenación por inserción?","Tomando un elemento de matriz a la vez, de izquierda a derecha, lo inserta en la posición correcta entre los elementos ya ordenados a su izquierda.","Suponga que el primer número está ordenado, luego baje en la lista e &#39;inserte&#39; los números que encuentre en el lugar correspondiente en el lado ordenado de la lista.","Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wstawianie?","Biorąc jeden element tablicy na raz, od lewej do prawej, wstawia go we właściwej pozycji wśród już posortowanych elementów po jego lewej stronie.","Załóżmy, że pierwsza liczba jest posortowana, a następnie przejdź w dół listy i „wstaw” napotkane numery w odpowiednie miejsce po posortowanej stronie listy.","Trong một câu, ý chính được triển khai bằng cách sắp xếp chèn là gì?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó sẽ chèn nó vào vị trí bên phải trong số các phần tử đã được sắp xếp ở bên trái của nó.","Giả sử số đầu tiên được sắp xếp, sau đó di chuyển xuống danh sách và &#39;chèn&#39; các số bạn bắt gặp vào vị trí tương ứng ở phía được sắp xếp của danh sách.",一言で言えば、挿入ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、左側の既に並べ替えられた要素の中で正しい位置に挿入します。,最初の番号がソートされていると仮定し、リストを下に移動して、出くわした番号をリストのソートされた側の対応する場所に「挿入」します。,一句话，插入排序实现的主要思想是什么？,一次从左到右取一个数组元素，将其插入到左边已排序元素中的右边位置。,假设第一个数字已排序，然后向下移动列表，然后将遇到的数字“插入”到列表中已排序一侧的相应位置。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الإدراج؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يدرجه في الموضع الصحيح بين العناصر التي تم فرزها بالفعل على يساره.,افترض أنه تم فرز الرقم الأول ، ثم انزل في القائمة و &quot;أدخل&quot; الأرقام التي تصادفها في المكان المقابل في الجانب المصنف من القائمة.,"В одному реченні, яка основна ідея реалізується шляхом вставки сортування?","Беручи по одному елементу масиву, зліва направо, він вставляє його в потрібне положення серед уже відсортованих елементів зліва.","Припустимо, що перше число відсортовано, а потім перемістіться вниз по списку та &quot;вставте&quot; числа, що вам трапляються, у відповідне місце на відсортованій стороні списку.","Em uma frase, qual é a ideia principal implementada pelo tipo de inserção?","Pegando um elemento do array por vez, da esquerda para a direita, ele o insere na posição certa entre os elementos já classificados à sua esquerda.","Suponha que o primeiro número esteja classificado, então mova a lista para baixo e &#39;insira&#39; os números que você encontrar no local correspondente no lado classificado da lista.",در یک جمله ، ایده اصلی که با درج مرتب سازی پیاده سازی شده است چیست؟,هر بار با گرفتن یک عنصر آرایه ، از چپ به راست ، آن را در موقعیت مناسب در میان عناصر مرتب شده در سمت چپ خود قرار می دهد.,فرض کنید اولین شماره مرتب شده است ، سپس لیست را پایین بیاورید و اعدادی را که پیدا می کنید در مکان مربوطه در سمت مرتب شده لیست وارد کنید.,"En una frase, quina és la idea principal implementada per la inserció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, l’insereix en la posició correcta entre els elements ja ordenats de la seva esquerra.","Suposem que el primer número està ordenat, a continuació, moveu-vos cap avall per la llista i &quot;inseriu&quot; els números que trobeu al lloc corresponent al costat ordenat de la llista.","У једној реченици, која је главна идеја спроведена сортирањем уметања?","Узимајући по један елемент низа, слева надесно, убацује га у прави положај међу већ сортиране елементе лево.","Претпоставимо да је први број сортиран, а затим се померите према доле и „убаците“ бројеве на које наиђете на одговарајуће место на сортираној страни листе.","Dalam satu kalimat, apa ide utama yang diimplementasikan oleh insertion sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, itu menyisipkannya di posisi kanan di antara elemen yang sudah diurutkan di sebelah kirinya.","Asumsikan nomor pertama diurutkan, lalu turunkan daftar dan &#39;masukkan&#39; nomor yang Anda temukan ke tempat yang sesuai di sisi yang diurutkan dari daftar.","I en setning, hva er hovedideen implementert ved innsettingssortering?","Tar ett matriseelement om gangen, fra venstre til høyre, setter det inn i riktig posisjon blant de allerede sorterte elementene til venstre.","Anta at det første nummeret er sortert, flytt deretter nedover i listen og &#39;sett inn&#39; tallene du kommer over på tilsvarende sted på den sorterte siden av listen.",한 문장에서 삽입 정렬로 구현 된 주요 아이디어는 무엇입니까?,한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 왼쪽에 이미 정렬 된 요소 중 오른쪽 위치에 삽입합니다.,첫 번째 숫자가 정렬되었다고 가정 한 다음 목록 아래로 이동하여 찾은 숫자를 목록의 정렬 된 쪽의 해당 위치에 &#39;삽입&#39;합니다.,Mikä on lisäyslajittelun pääidea yhdessä lauseessa?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se lisää sen oikeaan kohtaan jo järjestettyjen elementtien joukossa vasemmalla.","Oletetaan, että ensimmäinen numero on lajiteltu, siirry sitten luetteloa alaspäin ja &#39;lisää&#39; törmäämäsi numerot vastaavaan paikkaan luettelon lajitellulla puolella.","Egy mondatban mi a fő gondolat, amelyet a beszúrásos rendezéssel hajtanak végre?","Egyszerre egy tömb elemet vesz fel balról jobbra, és a bal oldali már rendezett elemek közé illeszti a jobb helyzetbe.","Tegyük fel, hogy az első szám rendezve van, majd haladjon lefelé a listán, és „szúrja be” a találkozott számokat a megfelelő helyre a lista rendezett oldalán.","V jedné větě, jaká je hlavní myšlenka implementovaná třídou vložení?","Vezmeme-li po jednom prvku pole zleva doprava, vloží jej na správnou pozici mezi již seřazené prvky nalevo.","Předpokládejme, že je první číslo seřazeno, poté posuňte seznam dolů a vložte čísla, která narazíte, na odpovídající místo na tříděné straně seznamu.","U jednoj rečenici, koja je glavna ideja implementirana sortiranjem umetanja?","Uzimajući po jedan element niza, slijeva udesno, ubacuje ga u pravi položaj među već sortirane elemente s lijeve strane.","Pretpostavimo da je prvi broj sortiran, a zatim se pomaknite prema dolje i &quot;umetnite&quot; brojeve na koje naiđete na odgovarajuće mjesto na sortiranoj strani liste."
69,69,592,3.6,"Not having a base case, or building a recursion process that doesn't converge on the base case.","If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",5.0,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,"Sie haben keinen Basisfall oder erstellen einen Rekursionsprozess, der nicht im Basisfall konvergiert.","Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.","Wala’y basehan nga kaso, o paghimo’g us aka proseso sa recursion nga dili magtapot sa punoan nga basehan.",Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,Att inte ha ett basfall eller bygga en rekursionsprocess som inte konvergerar med basfallet.,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,Ne pas avoir de cas de base ou construire un processus de récursivité qui ne converge pas vers le cas de base.,Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,"Geen basisscenario hebben, of een recursieproces opbouwen dat niet samenvalt met het basisscenario.",Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.","Отсутствие базового случая или построение процесса рекурсии, который не сходится с базовым вариантом.","Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,Non avere un caso base o costruire un processo di ricorsione che non converge nel caso base.,"Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,No tener un caso base o crear un proceso de recursividad que no converja en el caso base.,Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,"Brak przypadku podstawowego lub tworzenie procesu rekursji, który nie jest zbieżny w przypadku podstawowym.","Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",Không có trường hợp cơ sở hoặc xây dựng quy trình đệ quy không hội tụ trên trường hợp cơ sở.,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,ベースケースがない、またはベースケースに収束しない再帰プロセスを構築している。,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,没有基本案例，或构建了不收敛于基本案例的递归过程。,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,عدم وجود حالة أساسية ، أو بناء عملية عودية لا تتقارب مع الحالة الأساسية.,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.","Відсутність базового випадку або побудова процесу рекурсії, який не сходиться до базового випадку.","Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,Não ter um caso base ou construir um processo de recursão que não converge para o caso base.,هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,نداشتن یک پرونده پایه یا ایجاد یک روند بازگشتی که در پرونده پایه همگرا نباشد.,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,No tenir cap cas bàsic ni crear un procés de recursió que no convergeixi en el cas base.,"При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,Нема основни случај нити је изграђен процес рекурзије који се не конвергира на основном случају.,"Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.","Tidak memiliki kasus dasar, atau membangun proses rekursi yang tidak menyatu pada kasus dasar.",Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.","Ikke å ha en basissak, eller å bygge en rekursjonsprosess som ikke konvergerer i basissaken.",재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,기본 사례가 없거나 기본 사례에 수렴하지 않는 재귀 프로세스를 구축합니다.,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,"Ei peruskokemusta tai sellaisen rekursioprosessin rakentamista, joka ei lähene peruskoteloon.",A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.","Nem rendelkezik alapesettel, vagy nem épít olyan rekurziós folyamatot, amely nem konvergál az alapesetre.",Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.","Nemáte základní případ nebo budování procesu rekurze, který se nekonverguje na základní případ.","Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,Nema osnovni slučaj niti je izgrađen proces rekurzije koji se ne konvergira na osnovnom slučaju.
70,70,2389,12.9,"If you delete a node from a tree, you have to link that nodes parents to the children of that node.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,3.5,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,"Wenn Sie einen Knoten aus einem Baum löschen, müssen Sie die übergeordneten Knoten mit den untergeordneten Knoten dieses Knotens verknüpfen.",Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).","Kung imong gitangtang ang usa ka node gikan sa usa ka kahoy, kinahanglan nimo nga i-link ang mga node nga ginikanan sa mga anak sa node.",Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,Om du tar bort en nod från ett träd måste du länka som noder föräldrar till barnen i den noden.,Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).","Si vous supprimez un nœud d&#39;une arborescence, vous devez lier ces nœuds parents aux enfants de ce nœud.",Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,"Als u een knoop uit een boom verwijdert, moet u de ouders van die knooppunten koppelen aan de kinderen van dat knooppunt.",Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","Если вы удаляете узел из дерева, вы должны связать его родителей с потомками этого узла.",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).","Se elimini un nodo da un albero, devi collegare i genitori di quel nodo ai figli di quel nodo.",¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).","Si elimina un nodo de un árbol, debe vincular los nodos padres con los hijos de ese nodo.",Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).","Jeśli usuniesz węzeł z drzewa, musisz połączyć te węzły rodziców z dziećmi tego węzła.",Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).","Nếu bạn xóa một nút khỏi cây, bạn phải liên kết các nút đó cha mẹ với nút con của nút đó.",二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,ツリーからノードを削除する場合は、そのノードの親をそのノードの子にリンクする必要があります。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,如果从树中删除节点，则必须将该节点的父节点链接到该节点的子节点。,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,إذا قمت بحذف عقدة من شجرة ، فيجب عليك ربط هذه العُقد بأبناء تلك العقدة.,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).","Якщо ви видалите вузол з дерева, вам доведеться зв’язати батьківські вузли з дочірніми елементами цього вузла.",Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,"Se você excluir um nó de uma árvore, terá que vincular os pais dos nós aos filhos desse nó.",چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,اگر گره ای از یک درخت حذف کنید ، باید والدین گره را به فرزندان آن گره پیوند دهید.,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).","Si suprimiu un node d’un arbre, haureu d’enllaçar aquests nodes pares als fills d’aquest node.",Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).","Ако избришете чвор са стабла, морате повезати родитеље чворова са децом тог чвора.",Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).","Jika Anda menghapus sebuah simpul dari sebuah pohon, Anda harus menghubungkan simpul orang tua itu ke anak simpul itu.",Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).","Hvis du sletter en node fra et tre, må du koble foreldrene til nodenes barn.",이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,트리에서 노드를 삭제하는 경우 해당 노드 부모를 해당 노드의 자식에 연결해야합니다.,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,"Jos poistat solmun puusta, sinun on linkitettävä solmut vanhemmat kyseisen solmun lapsiin.",Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","Ha töröl egy csomópontot egy fáról, akkor össze kell kapcsolnia a csomópontokat a szülőkkel az adott csomópont gyermekeivel.",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,"Pokud odstraníte uzel ze stromu, musíte propojit rodiče uzlů s podřízenými uzly.",Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).","Ako izbrišete čvor sa stabla, morate povezati roditelje čvorova s djecom tog čvora."
71,71,2312,12.6,like a linked list except it is first in last out,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,2.5,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"wie eine verknüpfte Liste, außer dass sie an erster Stelle steht",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,sama sa usa ka nalakip nga lista gawas kini ang una sa ulahi nga paggawas,Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,som en länkad lista förutom att den är först i sista ut,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.",comme une liste chaînée sauf que c&#39;est le premier entré le dernier sorti,Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,"zoals een gelinkte lijst, behalve dat deze als eerste in de laatste uitkomt",Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","как связанный список, за исключением того, что он первым пришел последним",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,come una lista collegata tranne che è primo in ultimo,¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.","como una lista vinculada, excepto que es el primero en entrar, el último en salir",Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","jak lista połączona, z wyjątkiem tego, że jest pierwsza na wejściu i na końcu",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,giống như một danh sách được liên kết ngoại trừ nó là đầu tiên trong cuối cùng,キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,リンクリストのように、最初から最後までです。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,像链表一样，只是先入先出,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,مثل قائمة مرتبطة إلا أنها تأتي أولاً في النهاية,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","як пов&#39;язаний список, за винятком того, що він перший у останньому",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.","como uma lista ligada, exceto que é o primeiro a entrar por último",صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,مانند یک لیست پیوندی ، با این تفاوت که در آخرین لیست قرار دارد,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,com una llista enllaçada excepte que és la primera a la darrera sortida,Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,"попут повезане листе, осим што је прва у последњој",Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,seperti daftar yang ditautkan kecuali yang pertama masuk terakhir keluar,Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,"som en koblet liste, bortsett fra at den er først i siste ut",대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,연결 목록과 비슷하지만 선입 선출,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","kuten linkitetty luettelo, paitsi että se on ensimmäinen viimeinen",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","mint egy linkelt lista, kivéve, hogy az első az utolsó",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","jako propojený seznam, kromě toho, že je první na poslední",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,"poput povezane liste, osim što je prva u posljednjoj"
72,72,743,4.4,"A static array exists in memory until the program terminates, whereas an automatic (or normal) array is removed when the function that created it terminates","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","What is the difference between an array declared as static, and one that is not?",5.0,"Die als statisch deklarierten Arrays leben während der gesamten Laufzeit des Programms. Das heißt, sie werden nur einmal initialisiert, wenn die Funktion, die das Array deklariert, zum ersten Mal aufgerufen wird.",Was ist der Unterschied zwischen einem als statisch deklarierten und einem nicht statischen Array?,"Ein statisches Array ist im Speicher vorhanden, bis das Programm beendet wird, während ein automatisches (oder normales) Array entfernt wird, wenn die Funktion, die es erstellt hat, beendet wird","Unsa ang kalainan tali sa usa ka laray nga gideklara nga static, ug usa nga dili?","Ang mga array gideklara nga static live sa tibuuk nga kinabuhi sa programa; kana mao, gisugdan ra sila kausa, kung ang pagpaandar nga nagpahayag sa pag-ayo una kini gitawag.","Adunay usa ka static nga sulud sa panumduman hangtod matapos ang programa, samtang ang usa ka awtomatiko (o naandan) nga pagkatangtang gikuha kung ang pagpaandar nga naghimo niini natapos",Vad är skillnaden mellan en matris som deklareras som statisk och en som inte är det?,"Arraysna som deklareras som statiska lever hela programmets livstid; det vill säga de initialiseras bara en gång, när den funktion som deklarerar matrisen kallas den först.","En statisk array finns i minnet tills programmet avslutas, medan en automatisk (eller normal) array tas bort när den funktion som skapade den avslutas",Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,"Les tableaux déclarés statiques vivent tout au long de la vie du programme; c&#39;est-à-dire qu&#39;ils ne sont initialisés qu&#39;une seule fois, lorsque la fonction qui déclare le tableau est appelée pour la première fois.","Un tableau statique existe en mémoire jusqu&#39;à ce que le programme se termine, tandis qu&#39;un tableau automatique (ou normal) est supprimé lorsque la fonction qui l&#39;a créé se termine",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,"De arrays die als statisch zijn gedeclareerd, leven gedurende de levensduur van het programma; dat wil zeggen, ze worden slechts één keer geïnitialiseerd, wanneer de functie die de array declareert voor het eerst wordt aangeroepen.","Een statische array bestaat in het geheugen totdat het programma wordt beëindigd, terwijl een automatische (of normale) array wordt verwijderd wanneer de functie die het heeft gemaakt, wordt beëindigd","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?","Массивы, объявленные как статические, живут в течение всего времени работы программы; то есть они инициализируются только один раз при первом вызове функции, объявляющей массив.","Статический массив существует в памяти до завершения программы, тогда как автоматический (или нормальный) массив удаляется, когда функция, создавшая его, завершается.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,"Gli array dichiarati come statici sono attivi per tutta la durata del programma; cioè, vengono inizializzati solo una volta, quando la funzione che dichiara l&#39;array viene chiamata per la prima volta.","Un array statico esiste in memoria fino al termine del programma, mentre un array automatico (o normale) viene rimosso quando termina la funzione che lo ha creato",¿Cuál es la diferencia entre una matriz declarada como estática y una que no lo es?,"Las matrices declaradas como estáticas viven durante toda la vida del programa; es decir, se inicializan solo una vez, cuando se llama por primera vez a la función que declara la matriz.","Una matriz estática existe en la memoria hasta que el programa termina, mientras que una matriz automática (o normal) se elimina cuando termina la función que la creó.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice zadeklarowane jako statyczne na żywo przez cały czas trwania programu; to znaczy, są inicjowane tylko raz, kiedy funkcja deklarująca tablicę jest wywoływana jako pierwsza.","Tablica statyczna istnieje w pamięci do momentu zakończenia programu, natomiast tablica automatyczna (lub normalna) jest usuwana, gdy funkcja, która ją utworzyła, kończy się",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng được khai báo là sống tĩnh trong suốt vòng đời của chương trình; nghĩa là chúng chỉ được khởi tạo một lần khi hàm khai báo mảng mà nó được gọi lần đầu tiên.,"Một mảng tĩnh tồn tại trong bộ nhớ cho đến khi chương trình kết thúc, trong khi một mảng tự động (hoặc bình thường) bị xóa khi hàm tạo ra nó kết thúc",静的として宣言された配列とそうでない配列の違いは何ですか？,静的として宣言された配列は、プログラムの存続期間を通じて有効です。つまり、配列を宣言する関数が最初に呼び出されたときに、一度だけ初期化されます。,静的配列はプログラムが終了するまでメモリに存在しますが、自動（または通常）配列はそれを作成した関数が終了すると削除されます,声明为静态的数组与未声明为静态的数组有什么区别？,声明为静态的数组在程序的整个生命周期内都有效；也就是说，当第一次调用声明数组的函数时，它们仅初始化一次。,在程序终止之前，内存中一直存在静态数组，而在创建静态数组的函数终止时，将删除自动（或常规）数组,ما الفرق بين المصفوفة المعلنة على أنها ثابتة والمصفوفة التي لا يتم الإعلان عنها؟,تعيش المصفوفات المعلنة على أنها ثابتة طوال عمر البرنامج ؛ أي ، يتم تهيئتها مرة واحدة فقط ، عندما يتم استدعاء الوظيفة التي تعلن عن المصفوفة لأول مرة.,توجد مصفوفة ثابتة في الذاكرة حتى ينتهي البرنامج ، بينما تتم إزالة مصفوفة تلقائية (أو عادية) عندما تنتهي الوظيفة التي أنشأتها,"У чому різниця між масивом, оголошеним як статичний, і масивом, який не є?","Масиви, оголошені як статичні живі протягом усього терміну служби програми; тобто вони ініціалізуються лише один раз, коли функція, яка оголошує масив, вона викликається вперше.","Статичний масив існує в пам&#39;яті до завершення роботи програми, тоді як автоматичний (або звичайний) масив видаляється, коли функція, яка його створила, припиняється",Qual é a diferença entre uma matriz declarada como estática e outra que não é?,"Os arrays declarados como estáticos vivem durante toda a vida do programa; ou seja, eles são inicializados apenas uma vez, quando a função que declara o array é chamada pela primeira vez.","Uma matriz estática existe na memória até que o programa termine, enquanto uma matriz automática (ou normal) é removida quando a função que a criou termina",چه تفاوتی بین آرایه ای که بصورت استاتیک اعلام می شود و دیگری نیست؟,آرایه هایی که به عنوان ایستا در طول زندگی برنامه اعلام می شوند. یعنی فقط یک بار مقداردهی اولیه می شود ، وقتی تابعی که آرایه را برای اولین بار فراخوانی می کند.,یک آرایه ثابت در حافظه وجود دارد تا زمانی که برنامه خاتمه یابد ، در حالی که با خاتمه عملکردی که ایجاد کرده است ، یک آرایه اتوماتیک (یا عادی) حذف می شود,Quina diferència hi ha entre una matriu declarada com estàtica i una que no ho és?,"Les matrius declarades estàtiques en directe durant tota la vida del programa; és a dir, només s’inicialitzen una vegada, quan s’anomena per primera vegada la funció que declara la matriu.","Hi ha una matriu estàtica a la memòria fins que finalitza el programa, mentre que una matriu automàtica (o normal) s’elimina quan finalitza la funció que l’ha creat",Која је разлика између низа који је проглашен статичким и оног који није?,"Низови декларисани као статични уживо током целог животног века програма; то јест, иницијализују се само једном, када се функција која декларише низ прво позове.","Статични низ постоји у меморији док се програм не заврши, док се аутоматски (или нормални) низ уклања када се функција која га је креирала завршава","Apa perbedaan antara array yang dideklarasikan sebagai statis, dan yang tidak?","Array dideklarasikan sebagai live statis selama program berjalan; artinya, mereka diinisialisasi hanya sekali, ketika fungsi yang mendeklarasikan array yang dipanggil pertama kali.","Array statis ada di memori sampai program berakhir, sedangkan array otomatis (atau normal) dihapus ketika fungsi yang membuatnya berhenti","Hva er forskjellen mellom en matrise erklært som statisk, og en som ikke er det?","Arrangementene erklært som statisk lever gjennom hele programmets levetid; det vil si at de initialiseres bare en gang, når funksjonen som erklærer matrisen den først ble kalt.","En statisk matrise eksisterer i minnet til programmet avsluttes, mens en automatisk (eller normal) matrise fjernes når funksjonen som opprettet den avsluttes",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,"정적으로 선언 된 배열은 프로그램의 수명 내내 살아 있습니다. 즉, 배열을 선언하는 함수가 처음 호출 될 때 한 번만 초기화됩니다.",정적 배열은 프로그램이 종료 될 때까지 메모리에 존재하지만 자동 (또는 일반) 배열은 생성 한 함수가 종료 될 때 제거됩니다.,"Mitä eroa on staattiseksi ilmoitetun taulukon ja sellaisen välillä, joka ei ole staattinen?","Staattisiksi ilmoitetut taulukot elävät ohjelman koko elinkaaren ajan; eli ne alustetaan vain kerran, kun ensin kutsutaan funktio, joka ilmoittaa matriisin.","Staattinen taulukko on muistissa, kunnes ohjelma päättyy, kun taas automaattinen (tai normaali) taulukko poistetaan, kun sen luonut toiminto päättyy",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikusnak nyilvánított tömbök a program teljes élettartama alatt élnek; vagyis csak egyszer inicializálódnak, amikor először meghívják azt a függvényt, amely deklarálja a tömböt.","Statikus tömb létezik a memóriában, amíg a program le nem áll, míg az automatikus (vagy normál) tömb eltávolításra kerül, amikor az azt létrehozó függvény leáll","Jaký je rozdíl mezi polem deklarovaným jako statické a tím, které není?","Pole deklarovaná jako statická živá po celou dobu životnosti programu; to znamená, že jsou inicializovány pouze jednou, když je funkce, která deklaruje pole, které je nejprve voláno.","V paměti existuje statické pole, dokud se program neukončí, zatímco automatické (nebo normální) pole je odstraněno, když je ukončena funkce, která jej vytvořila.",Koja je razlika između niza koji je deklariran kao statičan i onog koji nije?,"Nizovi deklarirani kao statični uživo tijekom cijelog životnog vijeka programa; to jest, inicijaliziraju se samo jednom, kada se funkcija koja deklarira niz prvi put pozove.","Statični niz postoji u memoriji dok se program ne završi, dok se automatski (ili normalni) niz uklanja kada se funkcija koja ga je kreirala završava"
73,73,1318,8.1,Stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",What is a stack?,2.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element als erstes entfernt wird (oder als Last-In-First-Out).",Was ist ein Stapel?,Speichert eine Reihe von Elementen in einer bestimmten Reihenfolge.,Unsa ang usa ka stack?,"Ang usa ka istruktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang una nga tangtangon (o ulahi-sa-una-sa-una)",Nagtipig usa ka hugpong nga elemento sa usa ka partikular nga han-ay.,Vad är en stack?,"En datastruktur som kan lagra element, som har egenskapen att det senaste objektet som läggs till kommer att vara det första som tas bort (eller sista-in-först-ut)",Lagrar en uppsättning element i en viss ordning.,Qu&#39;est-ce qu&#39;une pile?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le premier à être supprimé (ou dernier entré-premier sorti)",Stocke un ensemble d&#39;éléments dans un ordre particulier.,Wat is een stapel?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item als eerste wordt verwijderd (of last-in-first-out)",Slaat een set elementen op in een bepaalde volgorde.,Что такое стек?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален первым (или последним пришел - первым ушел).",Хранит набор элементов в определенном порядке.,Cos&#39;è uno stack?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà il primo a essere rimosso (o last-in-first-out)",Memorizza un insieme di elementi in un ordine particolare.,¿Qué es una pila?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el primero en eliminarse (o el último en entrar, primero en salir)",Almacena un conjunto de elementos en un orden particular.,Co to jest stos?,"Struktura danych, która może przechowywać elementy, która ma właściwość, że ostatni dodany element będzie pierwszym do usunięcia (lub last-in-first-out)",Przechowuje zestaw elementów w określonej kolejności.,Ngăn xếp là gì?,"Cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử đầu tiên bị xóa (hoặc cuối cùng vào trước)",Lưu trữ một tập hợp các phần tử theo một thứ tự cụ thể.,スタックとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最初に削除される（または後入れ先出し）というプロパティがあります。,要素のセットを特定の順序で格納します。,什么是堆栈？,可以存储元素的数据结构，其属性是最后添加的项将是第一个要删除的（或后进先出）,以特定顺序存储一组元素。,ما هو المكدس؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون أول عنصر تتم إزالته (أو آخر ما يرد أولاً),يخزن مجموعة من العناصر بترتيب معين.,Що таке стек?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде першим, який буде видалено (або останній-у-першому-вихід)",Зберігає набір елементів у певному порядку.,O que é uma pilha?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o primeiro a ser removido (ou último a entrar, primeiro a sair)",Armazena um conjunto de elementos em uma ordem específica.,پشته چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده اولین موردی است که حذف می شود (یا آخرین بار در اولین بار),مجموعه ای از عناصر را به ترتیب خاص ذخیره می کند.,Què és una pila?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà el primer que s’eliminarà (o l’últim entrant-primer sortint)",Emmagatzema un conjunt d&#39;elements en un ordre concret.,Шта је стацк?,"Структура података која може да чува елементе, а која има својство да ће последња додата ставка бити прва која ће бити уклоњена (или последња у првом објављивању)",Чува скуп елемената у одређеном редоследу.,Apa itu tumpukan?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang ditambahkan item terakhir akan menjadi yang pertama dihapus (atau terakhir masuk pertama keluar)",Menyimpan sekumpulan elemen dalam urutan tertentu.,Hva er en stabel?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det første som blir fjernet (eller last-in-first-out)",Lagrer et sett med elementer i en bestemt rekkefølge.,스택이란 무엇입니까?,마지막으로 추가 된 항목이 먼저 제거 (또는 후입 선출)된다는 속성을 가진 요소를 저장할 수있는 데이터 구조,특정 순서로 요소 집합을 저장합니다.,Mikä on pino?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan ensimmäisenä (tai viimeinen sisään-ensimmäiseksi-ulos)",Tallentaa joukon elementtejä tietyssä järjestyksessä.,Mi az a verem?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az első, amelyet eltávolítanak (vagy utoljára az elsőbe adnak ki)",Elemkészletet tárol egy adott sorrendben.,Co je to stack?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude odstraněna jako první (nebo last-in-first-out)",Ukládá sadu prvků v určitém pořadí.,Šta je stog?,"Struktura podataka koja može pohraniti elemente, a koja ima svojstvo da će zadnja dodana stavka biti prva koja će se ukloniti (ili posljednja u prvom pojavljivanju)",Pohranjuje skup elemenata u određenom redoslijedu.
74,74,1333,8.1,An ADT that stores a set of elements in a particular order. The stack principles are LIFO. The last item inserted in the list is the first out.,"A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",What is a stack?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element als erstes entfernt wird (oder als Last-In-First-Out).",Was ist ein Stapel?,"Ein ADT, das eine Reihe von Elementen in einer bestimmten Reihenfolge speichert. Die Stapelprinzipien sind LIFO. Das letzte in die Liste eingefügte Element ist das erste aus.",Unsa ang usa ka stack?,"Ang usa ka istruktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang una nga tangtangon (o ulahi-sa-una-sa-una)",Usa ka ADT nga nagtipig usa ka hugpong nga elemento sa usa ka piho nga han-ay. Ang mga prinsipyo sa stack mao ang LIFO. Ang ulahi nga butang nga gisal-ut sa lista mao ang una nga mogawas.,Vad är en stack?,"En datastruktur som kan lagra element, som har egenskapen att det senaste objektet som läggs till kommer att vara det första som tas bort (eller sista-in-först-ut)",En ADT som lagrar en uppsättning element i en viss ordning. Stackprinciperna är LIFO. Den sista posten i listan är den första ut.,Qu&#39;est-ce qu&#39;une pile?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le premier à être supprimé (ou dernier entré-premier sorti)",Un ADT qui stocke un ensemble d&#39;éléments dans un ordre particulier. Les principes de pile sont LIFO. Le dernier élément inséré dans la liste est le premier sorti.,Wat is een stapel?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item als eerste wordt verwijderd (of last-in-first-out)","Een ADT die een set elementen in een bepaalde volgorde opslaat. De stapelprincipes zijn LIFO. Het laatste item dat in de lijst is ingevoegd, is het eerste item.",Что такое стек?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален первым (или последним пришел - первым ушел).","ADT, который хранит набор элементов в определенном порядке. Принципы стека - LIFO. Последний элемент, вставленный в список, выходит первым.",Cos&#39;è uno stack?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà il primo a essere rimosso (o last-in-first-out)",Un ADT che memorizza un insieme di elementi in un ordine particolare. I principi dello stack sono LIFO. L&#39;ultimo elemento inserito nella lista è il primo fuori.,¿Qué es una pila?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el primero en eliminarse (o el último en entrar, primero en salir)",Un ADT que almacena un conjunto de elementos en un orden particular. Los principios de la pila son LIFO. El último elemento insertado en la lista es el primero en salir.,Co to jest stos?,"Struktura danych, która może przechowywać elementy, która ma właściwość, że ostatni dodany element będzie pierwszym do usunięcia (lub last-in-first-out)",ADT przechowujący zestaw elementów w określonej kolejności. Zasady stosu to LIFO. Ostatnia pozycja umieszczona na liście jest pierwsza na liście.,Ngăn xếp là gì?,"Cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử đầu tiên bị xóa (hoặc cuối cùng vào trước)",ADT lưu trữ một tập hợp các phần tử theo một thứ tự cụ thể. Các nguyên tắc ngăn xếp là LIFO. Mục cuối cùng được chèn trong danh sách là mục đầu tiên.,スタックとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最初に削除される（または後入れ先出し）というプロパティがあります。,要素のセットを特定の順序で格納するADT。スタックの原則はLIFOです。リストに挿入された最後のアイテムが最初のアイテムです。,什么是堆栈？,可以存储元素的数据结构，其属性是最后添加的项将是第一个要删除的（或后进先出）,ADT以特定顺序存储一组元素。堆栈原则是LIFO。列表中插入的最后一项是先进先出。,ما هو المكدس؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون أول عنصر تتم إزالته (أو آخر ما يرد أولاً),أداة ADT تخزن مجموعة من العناصر بترتيب معين. مبادئ المكدس هي LIFO. العنصر الأخير الذي تم إدراجه في القائمة هو العنصر الأول.,Що таке стек?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде першим, який буде видалено (або останній-у-першому-вихід)","ADT, який зберігає набір елементів у певному порядку. Принципи стека - це LIFO. Останній елемент, внесений до списку, є першим.",O que é uma pilha?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o primeiro a ser removido (ou último a entrar, primeiro a sair)",Um ADT que armazena um conjunto de elementos em uma ordem específica. Os princípios da pilha são LIFO. O último item inserido na lista é o primeiro a sair.,پشته چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده اولین موردی است که حذف می شود (یا آخرین بار در اولین بار),ADT که مجموعه ای از عناصر را به ترتیب خاص ذخیره می کند. اصول پشته LIFO هستند. آخرین مورد وارد شده در لیست اولین مورد است.,Què és una pila?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà el primer que s’eliminarà (o l’últim entrant-primer sortint)",Un ADT que emmagatzema un conjunt d’elements en un ordre concret. Els principis de la pila són LIFO. L&#39;últim element inserit a la llista és el primer que surt.,Шта је стацк?,"Структура података која може да чува елементе, а која има својство да ће последња додата ставка бити прва која ће бити уклоњена (или последња у првом објављивању)",АДТ који складишти скуп елемената у одређеном редоследу. Принципи стека су ЛИФО. Последња ставка убачена на листу је прва.,Apa itu tumpukan?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang ditambahkan item terakhir akan menjadi yang pertama dihapus (atau terakhir masuk pertama keluar)",ADT yang menyimpan sekumpulan elemen dalam urutan tertentu. Prinsip tumpukan adalah LIFO. Item terakhir yang dimasukkan ke dalam daftar adalah yang pertama keluar.,Hva er en stabel?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det første som blir fjernet (eller last-in-first-out)","En ADT som lagrer et sett med elementer i en bestemt rekkefølge. Stabelprinsippene er LIFO. Det siste elementet som er satt inn i listen, er det første ut.",스택이란 무엇입니까?,마지막으로 추가 된 항목이 먼저 제거 (또는 후입 선출)된다는 속성을 가진 요소를 저장할 수있는 데이터 구조,특정 순서로 요소 집합을 저장하는 ADT입니다. 스택 원칙은 LIFO입니다. 목록에 삽입 된 마지막 항목이 첫 번째 항목입니다.,Mikä on pino?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan ensimmäisenä (tai viimeinen sisään-ensimmäiseksi-ulos)","ADT, joka tallentaa joukon elementtejä tietyssä järjestyksessä. Pino-periaatteet ovat LIFO. Viimeinen luetteloon lisätty kohde on ensimmäinen.",Mi az a verem?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az első, amelyet eltávolítanak (vagy utoljára az elsőbe adnak ki)","Egy ADT, amely egy elemkészletet egy adott sorrendben tárol. A verem alapelvei a LIFO. A listában utoljára beillesztett elem az első.",Co je to stack?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude odstraněna jako první (nebo last-in-first-out)","ADT, který ukládá sadu prvků v určitém pořadí. Principy zásobníku jsou LIFO. Poslední položka vložená do seznamu je první.",Šta je stog?,"Struktura podataka koja može pohraniti elemente, a koja ima svojstvo da će zadnja dodana stavka biti prva koja će se ukloniti (ili posljednja u prvom pojavljivanju)",ADT koji sprema skup elemenata u određenom redoslijedu. Principi steka su LIFO. Posljednja stavka na popisu je prva vanjska strana.
75,75,1297,7.7,"Each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes",Extra space required to store the back pointers.,What is the main disadvantage of a doubly-linked list over a basic linked list?,5.0,Zusätzlicher Speicherplatz zum Speichern der hinteren Zeiger.,Was ist der Hauptnachteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"Jeder Knoten benötigt einen zusätzlichen Knoten, benötigt mehr Speicher und ist schwieriger einzufügen und zu entfernen",Unsa man ang punoan nga kakulian sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,Gikinahanglan ang dugang nga wanang aron tipigan ang mga back point.,"Ang matag node nanginahanglan dugang nga node, nanginahanglan daghang memorya, ug labi ka lisud isulud ug tangtangon ang tagsatagsa nga mga node",Vad är den största nackdelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,Extra utrymme krävs för att lagra bakre pekare.,"Varje nod kräver en extra nod, kräver mer minne och är svårare att infoga och ta bort enskilda noder",Quel est le principal inconvénient d&#39;une liste à double lien par rapport à une liste liée de base?,Espace supplémentaire requis pour stocker les pointeurs arrière.,"Chaque nœud nécessite un nœud supplémentaire, nécessite plus de mémoire et est plus difficile à insérer et à supprimer des nœuds individuels",Wat is het grootste nadeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,Extra ruimte nodig om de rugwijzers op te bergen.,"Elk knooppunt vereist een extra knooppunt, vereist meer geheugen en is moeilijker om individuele knooppunten in te voegen en te verwijderen",В чем состоит главный недостаток двусвязного списка перед базовым связанным списком?,"Дополнительное место, необходимое для хранения обратных указателей.","Каждому узлу требуется дополнительный узел, требуется больше памяти, и его сложнее вставлять и удалять отдельные узлы.",Qual è il principale svantaggio di un elenco a doppio collegamento rispetto a un elenco collegato di base?,Spazio aggiuntivo richiesto per memorizzare i puntatori indietro.,"Ogni nodo richiede un nodo aggiuntivo, richiede più memoria ed è più difficile inserire e rimuovere i singoli nodi",¿Cuál es la principal desventaja de una lista enlazada doble sobre una lista enlazada básica?,Se requiere espacio adicional para almacenar los punteros traseros.,"Cada nodo requiere un nodo adicional, requiere más memoria y es más difícil insertar y eliminar nodos individuales.",Jaka jest główna wada listy podwójnie połączonej w porównaniu z listą podstawową?,Wymagane dodatkowe miejsce do przechowywania wskazówek.,"Każdy węzeł wymaga dodatkowego węzła, wymaga więcej pamięci i trudniej jest wstawiać i usuwać poszczególne węzły",Nhược điểm chính của danh sách liên kết kép so với danh sách liên kết cơ bản là gì?,Cần thêm không gian để lưu các con trỏ ngược.,"Mỗi nút yêu cầu thêm một nút, yêu cầu nhiều bộ nhớ hơn và khó chèn và xóa các nút riêng lẻ hơn",基本的なリンクリストに対する二重リンクリストの主な欠点は何ですか？,バックポインタを格納するために必要な追加スペース。,各ノードには追加のノードが必要であり、より多くのメモリが必要であり、個々のノードの挿入と削除がより困難です。,与基本链表相比，双链表的主要缺点是什么？,存储后退指针所需的额外空间。,每个节点都需要一个额外的节点，需要更多的内存，并且更难插入和删除单个节点,ما هو العيب الرئيسي لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,مطلوب مساحة إضافية لتخزين المؤشرات الخلفية.,تتطلب كل عقدة عقدة إضافية ، وتتطلب ذاكرة أكبر ، ويصعب إدراج العقد الفردية وإزالتها,Який головний недолік подвійно пов’язаного списку перед основним пов’язаним списком?,Для зберігання зворотних покажчиків потрібно додатковий простір.,"Кожен вузол вимагає додаткового вузла, вимагає більше пам&#39;яті та складніше вставляти та видаляти окремі вузли",Qual é a principal desvantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,Espaço extra necessário para armazenar os ponteiros de trás.,"Cada nó requer um nó extra, requer mais memória e é mais difícil de inserir e remover nós individuais",ضرر اصلی یک لیست پیوندی مضاعف نسبت به یک لیست پیوندی اصلی چیست؟,فضای اضافی برای ذخیره نشانگرهای عقب مورد نیاز است.,هر گره به گره اضافی احتیاج دارد ، به حافظه بیشتری احتیاج دارد و قرار دادن و حذف گره های منفرد دشوارتر است,Quin és el principal desavantatge d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,Espai addicional necessari per emmagatzemar els punteres posteriors.,"Cada node requereix un node addicional, requereix més memòria i és més difícil inserir i eliminar nodes individuals",Који је главни недостатак двоструко повезане листе у односу на основну повезану листу?,Додатни простор потребан за чување задњих показивача.,"Сваки чвор захтева додатни чвор, захтева више меморије и теже је уметнути и уклонити појединачне чворове",Apa kerugian utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,Ruang ekstra diperlukan untuk menyimpan penunjuk belakang.,"Setiap node membutuhkan node tambahan, membutuhkan lebih banyak memori, dan lebih sulit untuk memasukkan dan menghapus node individu",Hva er den største ulempen med en dobbeltkoblet liste i forhold til en grunnkoblet liste?,Ekstra plass kreves for å lagre bakpekerne.,"Hver node krever en ekstra node, krever mer minne og er vanskeligere å sette inn og fjerne individuelle noder",기본 연결 목록에 비해 이중 연결 목록의 주요 단점은 무엇입니까?,백 포인터를 저장하려면 추가 공간이 필요합니다.,각 노드에는 추가 노드가 필요하고 더 많은 메모리가 필요하며 개별 노드를 삽입 및 제거하기가 더 어렵습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein haitta verrattuna linkitettyyn perusluetteloon?,Ylimääräinen tila tarvitaan takaosoittimien tallentamiseen.,"Jokainen solmu vaatii ylimääräisen solmun, vaatii enemmän muistia, ja yksittäisten solmujen lisääminen ja poistaminen on vaikeampaa",Mi a kettős linkelésű lista fő hátránya az alap linkelt listával szemben?,További hely szükséges a hátsó mutatók tárolásához.,"Minden csomóponthoz további csomópontra van szükség, több memóriára van szükség, és nehezebb az egyes csomópontokat behelyezni és eltávolítani",Jaká je hlavní nevýhoda seznamu s dvojitým propojením oproti základnímu?,K uložení zadních ukazatelů je zapotřebí více místa.,"Každý uzel vyžaduje další uzel, vyžaduje více paměti a je obtížnější vložit a odebrat jednotlivé uzly",Koji je glavni nedostatak dvostruko povezane liste u odnosu na osnovnu povezanu listu?,Dodatni prostor potreban za spremanje stražnjih pokazivača.,"Svaki čvor zahtijeva dodatni čvor, zahtijeva više memorije i teže je umetnuti i ukloniti pojedinačne čvorove"
76,76,1043,6.4,With int x[10]; int *xPtr; xPtr = x; Address &x[1] is the same as xPtr + 1.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,4.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,Mit int x [10]; int * xPtr; xPtr = x; Adresse &amp; x [1] ist dieselbe wie xPtr + 1.,Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",Uban sa int x [10]; int * xPtr; xPtr = x; Ang address ug x [1] parehas sa xPtr + 1.,Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,Med int x [10]; int * xPtr; xPtr = x; Adress &amp; x [1] är samma som xPtr + 1.,Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",Avec int x [10]; int * xPtr; xPtr = x; L&#39;adresse &amp; x [1] est la même que xPtr + 1.,Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",Met int x [10]; int * xPtr; xPtr = x; Adres &amp; x [1] is hetzelfde als xPtr + 1.,Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",С int x [10]; int * xPtr; xPtr = x; Адрес &amp; x [1] совпадает с xPtr + 1.,Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,Con int x [10]; int * xPtr; xPtr = x; L&#39;indirizzo &amp; x [1] è uguale a xPtr + 1.,¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,Con int x [10]; int * xPtr; xPtr = x; La dirección &amp; x [1] es lo mismo que xPtr + 1.,Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.","Z int x [10]; int * xPtr; xPtr = x; Adres &amp; x [1] jest tym samym, co xPtr + 1.",Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",Với int x [10]; int * xPtr; xPtr = x; Địa chỉ &amp; x [1] giống như xPtr + 1.,配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,int x [10]を使用; int * xPtr; xPtr = x;アドレス＆x [1]はxPtr + 1と同じです。,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,用int x [10]; int * xPtr; xPtr = x;地址＆x [1]与xPtr + 1相同。,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,مع int x [10] ؛ int * xPtr ؛ xPtr = x ؛ العنوان &amp; x [1] هو نفسه xPtr + 1.,Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",З int x [10]; int * xPtr; xPtr = x; Адреса &amp; x [1] однакова з xPtr + 1.,Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",Com int x [10]; int * xPtr; xPtr = x; Endereço &amp; x [1] é igual a xPtr + 1.,چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,با int x [10] ؛ int * xPtr ؛ xPtr = x ؛ آدرس &amp; x [1] همان xPtr + 1 است.,Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",Amb int x [10]; int * xPtr; xPtr = x; Adreça &amp; x [1] és la mateixa que xPtr + 1.,Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",Са инт к [10]; инт * кПтр; кПтр = к; Адреса &amp; к [1] је иста као кПтр + 1.,Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",Dengan int x [10]; int * xPtr; xPtr = x; Alamat &amp; x [1] sama dengan xPtr + 1.,Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",Med int x [10]; int * xPtr; xPtr = x; Adresse &amp; x [1] er den samme som xPtr + 1.,포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,int x [10]; int * xPtr; xPtr = x; 주소 &amp; x [1]은 xPtr + 1과 같습니다.,Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,Int x: n kanssa [10]; int * xPtr; xPtr = x; Osoite &amp; x [1] on sama kuin xPtr + 1.,Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.",Int x [10] -vel; int * xPtr; xPtr = x; Az &amp; x [1] cím megegyezik az xPtr + 1 címmel.,Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,S int x [10]; int * xPtr; xPtr = x; Adresa &amp; x [1] je stejná jako xPtr + 1.,Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",Sa int x [10]; int * xPtr; xPtr = x; Adresa &amp; x [1] je ista kao xPtr + 1.
77,77,1402,8.4,you implement a stack with a list by changing the pointer to the first element of the list to the new item and move the pointer from the top of the stack to the next item when removing an item.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,4.5,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,"Sie implementieren einen Stapel mit einer Liste, indem Sie den Zeiger auf das erste Element der Liste auf das neue Element ändern und den Zeiger beim Entfernen eines Elements vom oberen Rand des Stapels zum nächsten Element bewegen.",Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.",gipatuman nimo ang usa ka stack nga adunay usa ka lista pinaagi sa pagbag-o sa pointer sa una nga elemento sa lista sa bag-ong butang ug ibalhin ang pointer gikan sa taas sa stack sa sunod nga butang kung gikuha ang usa ka item.,Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,du implementerar en stack med en lista genom att ändra pekaren till det första elementet i listan till det nya objektet och flytta pekaren från toppen av stacken till nästa objekt när du tar bort ett objekt.,Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.",vous implémentez une pile avec une liste en remplaçant le pointeur du premier élément de la liste par le nouvel élément et en déplaçant le pointeur du haut de la pile vers l&#39;élément suivant lors de la suppression d&#39;un élément.,Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.",u implementeert een stapel met een lijst door de aanwijzer naar het eerste element van de lijst te veranderen naar het nieuwe item en de aanwijzer van de bovenkant van de stapel naar het volgende item te verplaatsen wanneer u een item verwijdert.,Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.","вы реализуете стек со списком, изменяя указатель на первый элемент списка на новый элемент и перемещая указатель с вершины стека на следующий элемент при удалении элемента.",Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.",si implementa una pila con una lista cambiando il puntatore al primo elemento della lista al nuovo elemento e spostando il puntatore dalla cima della pila all&#39;elemento successivo quando si rimuove un elemento.,¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.",usted implementa una pila con una lista cambiando el puntero al primer elemento de la lista al nuevo elemento y mueve el puntero desde la parte superior de la pila al siguiente elemento al eliminar un elemento.,Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.","stosujesz z listą, zmieniając wskaźnik na pierwszy element listy na nowy element i przesuwając wskaźnik z góry stosu do następnego elementu podczas usuwania elementu.",Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.",bạn triển khai ngăn xếp với danh sách bằng cách thay đổi con trỏ đến phần tử đầu tiên của danh sách thành mục mới và di chuyển con trỏ từ đầu ngăn xếp đến mục tiếp theo khi xóa một mục.,リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,リストの最初の要素へのポインターを新しいアイテムに変更し、アイテムを削除するときにポインターをスタックの一番上から次のアイテムに移動することで、リストを使用してスタックを実装します。,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,您可以通过将指向列表中第一个元素的指针更改为新项目来实现带有列表的堆栈，并在删除项目时将指针从堆栈顶部移至下一个项目。,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,تقوم بتنفيذ مكدس مع قائمة عن طريق تغيير المؤشر إلى العنصر الأول من القائمة إلى العنصر الجديد وتحريك المؤشر من أعلى المكدس إلى العنصر التالي عند إزالة عنصر.,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.","ви реалізуєте стек зі списком, змінивши вказівник на перший елемент списку на новий елемент і переміщуючи вказівник з верхньої частини стека на наступний елемент під час видалення елемента.",Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.",você implementa uma pilha com uma lista alterando o ponteiro para o primeiro elemento da lista para o novo item e move o ponteiro do topo da pilha para o próximo item ao remover um item.,چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,شما با تغییر دادن نشانگر به اولین عنصر لیست به مورد جدید ، یک پشته را با یک لیست پیاده سازی می کنید و هنگام برداشتن موردی ، نشانگر را از بالای پشته به مورد بعدی منتقل می کنید.,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.",implementeu una pila amb una llista canviant el punter al primer element de la llista pel nou element i moveu el punter des de la part superior de la pila al següent element quan traieu un element.,Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.",имплементирате стек са листом тако што ћете променити показивач на први елемент листе у нову ставку и преместити показивач са врха стека на следећу ставку приликом уклањања ставке.,Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.",Anda menerapkan tumpukan dengan daftar dengan mengubah penunjuk ke elemen pertama dari daftar ke item baru dan memindahkan penunjuk dari atas tumpukan ke item berikutnya saat menghapus item.,Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.",du implementerer en bunke med en liste ved å endre pekeren til det første elementet i listen til det nye elementet og flytte pekeren fra toppen av bunken til neste element når du fjerner et element.,목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,목록의 첫 번째 요소에 대한 포인터를 새 항목으로 변경하여 목록이있는 스택을 구현하고 항목을 제거 할 때 포인터를 스택의 맨 위에서 다음 항목으로 이동합니다.,Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.","otat käyttöön pinon, jossa on luettelo, muuttamalla osoitin luettelon ensimmäiseksi elementiksi uudeksi kohteeksi ja siirtämällä osoittimen pinon yläosasta seuraavaan kohtaan, kun poistat kohdetta.",Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.","egy listát tartalmazó halmot úgy valósít meg, hogy a mutatót a lista első elemére változtatja az új elemre, és az elem eltávolításakor a mutatót a verem tetejéről a következő elemre helyezi át.",Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.",implementujete zásobník se seznamem změnou ukazatele na první prvek seznamu na novou položku a při odebrání položky přesunete ukazatel z horní části zásobníku na další položku.,Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.",implementirate stog sa listom promjenom pokazivača na prvi element popisa u novu stavku i pomicanje pokazivača s vrha stoga na sljedeću stavku prilikom uklanjanja stavke.
78,78,612,3.7,anything you can do recursively you can do iteratively,They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,3.0,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,"Alles, was Sie rekursiv tun können, können Sie iterativ tun",Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,bisan unsang mahimo nimo nga recursively mahimo nimo kini buhaton,Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,allt du kan göra rekursivt kan du göra iterativt,Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,"tout ce que vous pouvez faire de manière récursive, vous pouvez le faire de manière itérative",Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,"alles wat u recursief kunt doen, kunt u iteratief doen",В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"все, что вы можете делать рекурсивно, вы можете делать итеративно",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,tutto ciò che puoi fare in modo ricorsivo lo puoi fare in modo iterativo,¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,cualquier cosa que pueda hacer de forma recursiva puede hacer de forma iterativa,Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,"wszystko, co możesz zrobić rekurencyjnie, możesz zrobić iteracyjnie",Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,bất cứ điều gì bạn có thể làm một cách đệ quy bạn có thể làm lặp đi lặp lại,反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,再帰的に実行できることは何でも反復的に実行できます,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,您可以递归执行的任何操作都可以迭代执行,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,أي شيء يمكنك القيام به بشكل متكرر يمكنك القيام به بشكل تكراري,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"все, що ви можете зробити рекурсивно, ви можете зробити ітеративно",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,"qualquer coisa que você pode fazer recursivamente, você pode fazer iterativamente",شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,هر کاری که می توانید به صورت بازگشتی انجام دهید می توانید تکراری انجام دهید,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,tot el que pugueu fer recursivament ho podeu fer de manera iterativa,Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,све што рекурзивно можете учинити итеративно,Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,"apa pun yang dapat Anda lakukan secara rekursif, Anda dapat melakukannya secara berulang",Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,alt du kan gjøre rekursivt kan du gjøre iterativt,반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,재귀 적으로 할 수있는 것은 무엇이든 반복적으로 할 수 있습니다.,Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,"mitä tahansa voit tehdä rekursiivisesti, voit tehdä iteratiivisesti",Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"bármi, amit megtehet rekurzívan, megteheti iteratív módon is",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,"vše, co můžete dělat rekurzivně, můžete dělat iterativně",Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,sve što rekurzivno možete učiniti iterativno
79,79,1296,7.7,You have to keep up with where you are and you have to consider the predecessor and successor connections when inserting/deleting.,Extra space required to store the back pointers.,What is the main disadvantage of a doubly-linked list over a basic linked list?,3.0,Zusätzlicher Speicherplatz zum Speichern der hinteren Zeiger.,Was ist der Hauptnachteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Sie müssen mit Ihrem Standort Schritt halten und beim Einfügen / Löschen die Vorgänger- und Nachfolgerverbindungen berücksichtigen.,Unsa man ang punoan nga kakulian sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,Gikinahanglan ang dugang nga wanang aron tipigan ang mga back point.,Kinahanglan nimo nga ipadayon kung diin ka ug kinahanglan nimo nga hunahunaon ang gisundan ug mga gisundan nga mga koneksyon sa pagsal-ot / pagtangtang.,Vad är den största nackdelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,Extra utrymme krävs för att lagra bakre pekare.,Du måste hålla koll på var du är och du måste ta hänsyn till föregångarens och efterföljande anslutningar när du sätter in / tar bort.,Quel est le principal inconvénient d&#39;une liste à double lien par rapport à une liste liée de base?,Espace supplémentaire requis pour stocker les pointeurs arrière.,Vous devez suivre où vous en êtes et vous devez tenir compte des connexions du prédécesseur et du successeur lors de l&#39;insertion / suppression.,Wat is het grootste nadeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,Extra ruimte nodig om de rugwijzers op te bergen.,Je moet bijhouden waar je bent en je moet bij het invoegen / verwijderen rekening houden met de voorganger en opvolger verbindingen.,В чем состоит главный недостаток двусвязного списка перед базовым связанным списком?,"Дополнительное место, необходимое для хранения обратных указателей.","Вы должны быть в курсе того, где находитесь, и учитывать соединения предшественника и преемника при вставке / удалении.",Qual è il principale svantaggio di un elenco a doppio collegamento rispetto a un elenco collegato di base?,Spazio aggiuntivo richiesto per memorizzare i puntatori indietro.,Devi stare al passo con dove ti trovi e devi considerare le connessioni predecessore e successore durante l&#39;inserimento / l&#39;eliminazione.,¿Cuál es la principal desventaja de una lista enlazada doble sobre una lista enlazada básica?,Se requiere espacio adicional para almacenar los punteros traseros.,Debe mantenerse al día con el lugar donde se encuentra y debe considerar las conexiones predecesoras y sucesoras al insertar / eliminar.,Jaka jest główna wada listy podwójnie połączonej w porównaniu z listą podstawową?,Wymagane dodatkowe miejsce do przechowywania wskazówek.,"Musisz nadążyć za tym, gdzie jesteś i musisz wziąć pod uwagę połączenia poprzednika i następcy podczas wstawiania / usuwania.",Nhược điểm chính của danh sách liên kết kép so với danh sách liên kết cơ bản là gì?,Cần thêm không gian để lưu các con trỏ ngược.,Bạn phải theo kịp vị trí của mình và bạn phải xem xét các kết nối tiền nhiệm và kế thừa khi chèn / xóa.,基本的なリンクリストに対する二重リンクリストの主な欠点は何ですか？,バックポインタを格納するために必要な追加スペース。,挿入/削除するときは、現在の場所に遅れずについていく必要があり、先行接続と後続接続を考慮する必要があります。,与基本链表相比，双链表的主要缺点是什么？,存储后退指针所需的额外空间。,您必须跟上您所在的位置，并且在插入/删除时必须考虑之前和之后的连接。,ما هو العيب الرئيسي لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,مطلوب مساحة إضافية لتخزين المؤشرات الخلفية.,يجب عليك مواكبة مكانك وعليك مراعاة الاتصالات السابقة واللاحقة عند الإدراج / الحذف.,Який головний недолік подвійно пов’язаного списку перед основним пов’язаним списком?,Для зберігання зворотних покажчиків потрібно додатковий простір.,"Ви повинні йти в ногу з тим, де ви знаходитесь, і ви повинні враховувати попередні та наступні з&#39;єднання під час вставки / видалення.",Qual é a principal desvantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,Espaço extra necessário para armazenar os ponteiros de trás.,Você deve acompanhar onde está e deve considerar as conexões predecessora e sucessora ao inserir / excluir.,ضرر اصلی یک لیست پیوندی مضاعف نسبت به یک لیست پیوندی اصلی چیست؟,فضای اضافی برای ذخیره نشانگرهای عقب مورد نیاز است.,شما باید در جایی که هستید همگام باشید و باید اتصالات سلف و جانشین را هنگام درج / حذف در نظر بگیرید.,Quin és el principal desavantatge d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,Espai addicional necessari per emmagatzemar els punteres posteriors.,Heu de mantenir-vos al dia on esteu i heu de tenir en compte les connexions predecessores i successores a l’hora d’inserir / suprimir.,Који је главни недостатак двоструко повезане листе у односу на основну повезану листу?,Додатни простор потребан за чување задњих показивача.,Морате ићи у корак са својим местом и приликом уметања / брисања морате узети у обзир везе претходника и наследника.,Apa kerugian utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,Ruang ekstra diperlukan untuk menyimpan penunjuk belakang.,Anda harus mengikuti di mana Anda berada dan Anda harus mempertimbangkan pendahulu dan koneksi penerus saat memasukkan / menghapus.,Hva er den største ulempen med en dobbeltkoblet liste i forhold til en grunnkoblet liste?,Ekstra plass kreves for å lagre bakpekerne.,"Du må følge med hvor du er, og du må ta hensyn til forgjengeren og etterfølgerforbindelsene når du setter inn / sletter.",기본 연결 목록에 비해 이중 연결 목록의 주요 단점은 무엇입니까?,백 포인터를 저장하려면 추가 공간이 필요합니다.,현재 위치를 파악하고 삽입 / 삭제할 때 선행 및 후속 연결을 고려해야합니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein haitta verrattuna linkitettyyn perusluetteloon?,Ylimääräinen tila tarvitaan takaosoittimien tallentamiseen.,"Sinun on pysyttävä mukana missä olet ja sinun on otettava huomioon edeltäjän ja seuraajayhteydet, kun lisäät / poistat.",Mi a kettős linkelésű lista fő hátránya az alap linkelt listával szemben?,További hely szükséges a hátsó mutatók tárolásához.,"Lépést kell tartania a jelenlegi helyével, és a beszúrásnál / törlésnél figyelembe kell vennie az előd és az utód kapcsolatokat.",Jaká je hlavní nevýhoda seznamu s dvojitým propojením oproti základnímu?,K uložení zadních ukazatelů je zapotřebí více místa.,"Musíte držet krok s tím, kde jste, a musíte při vkládání / mazání vzít v úvahu připojení předchůdce a nástupce.",Koji je glavni nedostatak dvostruko povezane liste u odnosu na osnovnu povezanu listu?,Dodatni prostor potreban za spremanje stražnjih pokazivača.,Morate ići u korak s onim što jeste i prilikom umetanja / brisanja morate uzeti u obzir veze prethodnika i nasljednika.
80,80,589,3.6,omitting the base case or writing the recursive call so that it does not converge upon the base case.,"If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",5.0,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,"Auslassen des Basisfalls oder Schreiben des rekursiven Aufrufs, damit er nicht auf den Basisfall konvergiert.","Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.",ang pagwagtang sa base case o pagsulat sa recursive call aron dili kini magtapok sa base case.,Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,utelämna basfallet eller skriva det rekursiva samtalet så att det inte konvergerar i basfallet.,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,en omettant le cas de base ou en écrivant l&#39;appel récursif afin qu&#39;il ne converge pas vers le cas de base.,Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,het weglaten van het basisgeval of het schrijven van de recursieve aanroep zodat deze niet convergeert naar het basisgeval.,Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.","исключение базового случая или запись рекурсивного вызова, чтобы он не сходился с базовым случаем.","Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,omettendo il caso base o scrivendo la chiamata ricorsiva in modo che non converga sul caso base.,"Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,omitiendo el caso base o escribiendo la llamada recursiva para que no converja sobre el caso base.,Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,"pomijanie przypadku podstawowego lub zapisywanie wywołania rekurencyjnego, aby nie zbiegało się z przypadkiem podstawowym.","Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",bỏ qua trường hợp cơ sở hoặc viết lời gọi đệ quy để nó không hội tụ trên trường hợp cơ sở.,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,基本ケースを省略したり、再帰呼び出しを記述して、基本ケースに収束しないようにします。,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,省略基本情况或编写递归调用，以使其不会收敛于基本情况。,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,حذف الحالة الأساسية أو كتابة المكالمة العودية بحيث لا تتقارب مع الحالة الأساسية.,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.","опускання базового випадку або запис рекурсивного виклику, щоб він не сходився до базового випадку.","Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,omitindo o caso base ou escrevendo a chamada recursiva para que não convirja para o caso base.,هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,حذف پرونده اصلی یا نوشتن فراخوان بازگشتی تا در پرونده پایه همگرا نباشد.,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,ometre la minúscula o escriure la trucada recursiva perquè no convergeixi en la minúscula.,"При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,изостављање основног случаја или писање рекурзивног позива тако да се не конвергира у основни случај.,"Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.",menghilangkan kasus dasar atau menulis panggilan rekursif sehingga tidak menyatu dengan kasus dasar.,Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.",utelate basissaken eller skrive det rekursive anropet slik at det ikke konvergerer i basissaken.,재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,기본 사례를 생략하거나 기본 사례에 수렴하지 않도록 재귀 호출을 작성합니다.,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,"jättämällä perustapaus pois tai kirjoittamalla rekursiivinen puhelu niin, että se ei lähene perustasoon.",A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.","az alapeset elhagyása vagy a rekurzív hívás megírása, hogy az ne konvergáljon az alap esethez.",Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.","vynechání základního případu nebo zápis rekurzivního volání tak, aby se nespojovalo se základním případem.","Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,izostavljanje osnovnog slučaja ili pisanje rekurzivnog poziva tako da se ne konvergira na osnovni slučaj.
81,81,1380,8.3,"Make an array, make the bottom at spot 0, make the last spot in the array the top, and increment top when you ad","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.5,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Erstellen Sie ein Array, machen Sie den unteren Punkt an Punkt 0, machen Sie den letzten Punkt im Array oben und erhöhen Sie den oberen Punkt, wenn Sie Anzeigen schalten",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.","Paghimo usa ka laray, paghimo sa ubos sa lugar nga 0, paghimo sa katapusan nga lugar sa laray sa taas, ug pagdugang sa taas kung nag-ad ka",Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.","Gör en matris, gör botten vid plats 0, gör den sista platsen i matrisen till toppen och öka toppen när du annonserar",Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.","Créez un tableau, placez le bas au point 0, placez le dernier point du tableau en haut et incrémentez le haut lorsque vous annoncez",Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.","Maak een array, maak de onderkant op plek 0, maak de laatste plek in de array bovenaan en verhoog de bovenkant wanneer je adverteert",Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","Создайте массив, сделайте нижнюю точку в точке 0, сделайте последнюю точку в массиве верхней и увеличьте верхнюю часть, когда вы объявляете",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.","Crea un array, rendi il punto inferiore in corrispondenza del punto 0, rendi l&#39;ultimo punto dell&#39;array in alto e incrementa il massimo quando fai un annuncio",¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.","Haga una matriz, coloque la parte inferior en el punto 0, haga que el último lugar de la matriz sea la parte superior e incremente la parte superior cuando publique",Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","Utwórz tablicę, ustaw dół w miejscu 0, ostatnie miejsce w tablicy ustaw na górze i zwiększaj na górze podczas reklamy",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.","Tạo một mảng, đặt dưới cùng ở vị trí 0, đặt vị trí cuối cùng trong mảng là trên cùng và tăng lên trên cùng khi bạn quảng cáo",配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,配列を作成し、スポット0で下部を作成し、配列の最後のスポットを上部にし、広告を表示するときに上部をインクリメントします,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,制作一个数组，将底部的位置设为0，将数组中的最后一个位置设为顶部，并在您投放广告时增加顶部,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,أنشئ مصفوفة ، واجعل الجزء السفلي في النقطة 0 ، واجعل آخر بقعة في المصفوفة في الأعلى ، وقم بزيادة القمة عند الإعلان,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","Створіть масив, зробіть знизу в місці 0, зробіть останнє місце в масиві верхом і збільште верх, коли ви рекламуєте",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.","Faça uma matriz, faça a parte inferior no ponto 0, torne o último ponto da matriz no topo e incremente o topo quando você anunciar",چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,یک آرایه درست کنید ، قسمت پایینی آن را در نقطه 0 قرار دهید ، آخرین نقطه آرایه را به قسمت بالا تبدیل کنید و وقتی تبلیغ می کنید ، آن را افزایش دهید,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.","Feu una matriu, marqueu la part inferior al punt 0, feu l&#39;últim lloc de la matriu a la part superior i incrementeu la part superior quan publiqueu",Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.","Направите низ, направите дно на месту 0, последње место у низу учините врхом и повећајте врх када оглашавате",Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.","Buatlah sebuah larik, jadikan bagian bawah di tempat 0, jadikan tempat terakhir dalam larik di bagian atas, dan tambah atas",Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.","Lag en matrise, gjør bunnen på punkt 0, gjør den siste plasseringen i matrisen øverst, og øk toppen når du annonserer",어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,"배열을 만들고, 아래쪽을 0으로 만들고, 배열의 마지막 지점을 위쪽으로 만들고, 광고 할 때 위쪽을 증가시킵니다.",Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","Tee taulukko, tee alareuna paikasta 0, tee matriisin viimeinen kohta ylhäältä ja lisää ylhäältä, kun ilmoitat",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.","Készítsen tömböt, tegye az alsó pontot a 0-ra, tegye a tömb utolsó helyét a tetejére, és növelje a tetejét, amikor hirdet",Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","Vytvořte pole, vytvořte dolní část na místě 0, vytvořte poslední místo v poli horní a zvyšte horní část, když inzerujete",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.","Napravite niz, napravite dno na mjestu 0, posljednje mjesto u nizu učinite vrhom i povećajte vrh kada oglašavate"
82,82,2163,12.1,A pointer is a variable that contains the memory address of a given value.,The address of a location in memory.,What is a pointer?,5.0,Die Adresse eines Speicherorts.,Was ist ein Zeiger?,"Ein Zeiger ist eine Variable, die die Speicheradresse eines bestimmten Werts enthält.",Unsa ang usa ka pointer?,Ang adres sa usa ka lokasyon sa memorya.,Ang usa ka pointer usa ka variable nga adunay sulud nga memorya sa usa ka gihatag nga kantidad.,Vad är en pekare?,Adressen till en plats i minnet.,En pekare är en variabel som innehåller minnesadressen för ett visst värde.,Qu&#39;est-ce qu&#39;un pointeur?,L&#39;adresse d&#39;un emplacement en mémoire.,Un pointeur est une variable qui contient l&#39;adresse mémoire d&#39;une valeur donnée.,Wat is een aanwijzer?,Het adres van een locatie in het geheugen.,Een pointer is een variabele die het geheugenadres van een bepaalde waarde bevat.,Что такое указатель?,Адрес места в памяти.,"Указатель - это переменная, которая содержит адрес памяти заданного значения.",Cos&#39;è un puntatore?,L&#39;indirizzo di una posizione in memoria.,Un puntatore è una variabile che contiene l&#39;indirizzo di memoria di un dato valore.,¿Qué es un puntero?,La dirección de una ubicación en la memoria.,Un puntero es una variable que contiene la dirección de memoria de un valor dado.,Co to jest wskaźnik?,Adres lokalizacji w pamięci.,Wskaźnik to zmienna zawierająca adres pamięci danej wartości.,Con trỏ là gì?,Địa chỉ của một vị trí trong bộ nhớ.,Con trỏ là một biến chứa địa chỉ bộ nhớ của một giá trị nhất định.,ポインタとは何ですか？,メモリ内の場所のアドレス。,ポインタは、指定された値のメモリアドレスを含む変数です。,什么是指针？,内存中位置的地址。,指针是包含给定值的内存地址的变量。,ما هو المؤشر؟,عنوان موقع في الذاكرة.,المؤشر هو متغير يحتوي على عنوان الذاكرة لقيمة معينة.,Що таке вказівник?,Адреса місця в пам&#39;яті.,"Покажчик - це змінна, що містить адресу пам&#39;яті заданого значення.",O que é um ponteiro?,O endereço de um local na memória.,Um ponteiro é uma variável que contém o endereço de memória de um determinado valor.,اشاره گر چیست؟,آدرس مکانی در حافظه.,اشاره گر متغیری است که حاوی آدرس حافظه یک مقدار معین است.,Què és un punter?,L&#39;adreça d&#39;una ubicació a la memòria.,Un punter és una variable que conté l&#39;adreça de memòria d&#39;un valor determinat.,Шта је показивач?,Адреса локације у меморији.,Показивач је променљива која садржи меморијску адресу дате вредности.,Apa itu penunjuk?,Alamat lokasi di memori.,Pointer adalah variabel yang berisi alamat memori dari nilai tertentu.,Hva er en peker?,Adressen til en plassering i minnet.,En peker er en variabel som inneholder minneadressen til en gitt verdi.,포인터 란 무엇입니까?,메모리에있는 위치의 주소.,포인터는 주어진 값의 메모리 주소를 포함하는 변수입니다.,Mikä on osoitin?,Muistissa olevan sijainnin osoite.,"Osoitin on muuttuja, joka sisältää tietyn arvon muistiosoitteen.",Mi az a mutató?,A memóriában lévő hely címe.,"A mutató egy olyan változó, amely egy adott érték memória címét tartalmazza.",Co je to ukazatel?,Adresa umístění v paměti.,"Ukazatel je proměnná, která obsahuje adresu paměti dané hodnoty.",Šta je pokazivač?,Adresa lokacije u memoriji.,Pokazivač je varijabla koja sadrži memorijsku adresu date vrijednosti.
83,83,1812,10.5,"it is a binary tree where each node has a unique key, the left child of a node has only values less than that node, and the right child of each node has higher values than that node.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,What is a binary search tree?,5.0,"Ein Binärbaum mit der Eigenschaft, dass für jeden Knoten das linke Kind kleiner als das übergeordnete Element ist, was wiederum kleiner als das rechte Kind ist.",Was ist ein binärer Suchbaum?,"Es ist ein Binärbaum, in dem jeder Knoten einen eindeutigen Schlüssel hat, das linke Kind eines Knotens nur Werte hat, die kleiner als dieser Knoten sind, und das rechte Kind jedes Knotens höhere Werte als dieser Knoten hat.",Unsa ang usa ka puno nga pagpangita sa binary?,Ang usa ka binary nga kahoy nga adunay kabtangan nga alang sa bisan unsang node ang wala nga bata mas gamay kaysa sa ginikanan nga sa baylo mas gamay kaysa sa tuo nga bata.,"kini usa ka binary nga kahoy diin ang matag node adunay usa ka talagsaon nga yawi, ang wala nga bata sa usa ka node adunay mga kantidad nga mas gamay kaysa sa node, ug ang tama nga bata sa matag node adunay mas taas nga mga kantidad kaysa sa node.",Vad är ett binärt sökträd?,Ett binärt träd som har egenskapen att för vilken nod som helst är det vänstra barnet mindre än föräldern som i sin tur är mindre än det högra barnet.,"det är ett binärt träd där varje nod har en unik nyckel, det vänstra barnet till en nod har endast värden mindre än den noden och det högra barnet i varje nod har högre värden än den noden.",Qu&#39;est-ce qu&#39;un arbre de recherche binaire?,"Un arbre binaire qui a la propriété que pour tout nœud, l&#39;enfant gauche est plus petit que le parent qui à son tour est plus petit que l&#39;enfant droit.","c&#39;est un arbre binaire où chaque nœud a une clé unique, l&#39;enfant gauche d&#39;un nœud n&#39;a que des valeurs inférieures à ce nœud, et l&#39;enfant droit de chaque nœud a des valeurs plus élevées que ce nœud.",Wat is een binaire zoekboom?,"Een binaire boom die de eigenschap heeft dat voor elk knooppunt het linkerkind kleiner is dan de ouder, die op zijn beurt kleiner is dan het rechterkind.","het is een binaire boom waarin elk knooppunt een unieke sleutel heeft, het linkerkind van een knooppunt alleen waarden heeft die kleiner zijn dan dat knooppunt, en het rechterkind van elk knooppunt heeft hogere waarden dan dat knooppunt.",Что такое двоичное дерево поиска?,"Бинарное дерево, обладающее тем свойством, что для любого узла левый дочерний элемент меньше, чем родительский, который, в свою очередь, меньше, чем правый дочерний элемент.","это двоичное дерево, где каждый узел имеет уникальный ключ, левый дочерний элемент узла имеет только значения меньше, чем этот узел, а правый дочерний элемент каждого узла имеет более высокие значения, чем этот узел.",Cos&#39;è un albero di ricerca binario?,Un albero binario che ha la proprietà che per ogni nodo il figlio sinistro è più piccolo del genitore che a sua volta è più piccolo del figlio destro.,"è un albero binario in cui ogni nodo ha una chiave univoca, il figlio sinistro di un nodo ha solo valori inferiori a quel nodo e il figlio destro di ogni nodo ha valori più alti di quel nodo.",¿Qué es un árbol de búsqueda binario?,"Un árbol binario que tiene la propiedad de que para cualquier nodo el hijo izquierdo es más pequeño que el padre, que a su vez es más pequeño que el hijo derecho.","es un árbol binario donde cada nodo tiene una clave única, el hijo izquierdo de un nodo solo tiene valores menores que ese nodo, y el hijo derecho de cada nodo tiene valores más altos que ese nodo.",Co to jest drzewo wyszukiwania binarnego?,"Drzewo binarne, które ma tę właściwość, że dla każdego węzła lewe dziecko jest mniejsze niż rodzic, które z kolei jest mniejsze niż prawe dziecko.","jest to drzewo binarne, w którym każdy węzeł ma unikalny klucz, lewe dziecko węzła ma tylko wartości mniejsze niż ten węzeł, a prawe dziecko każdego węzła ma wyższe wartości niż ten węzeł.",Cây tìm kiếm nhị phân là gì?,"Một cây nhị phân có thuộc tính mà đối với bất kỳ nút nào, nút con bên trái đều nhỏ hơn nút cha, lần lượt nhỏ hơn nút con bên phải.","nó là một cây nhị phân trong đó mỗi nút có một khóa duy nhất, nút con bên trái của một nút chỉ có các giá trị nhỏ hơn nút đó và nút con bên phải của mỗi nút có giá trị cao hơn nút đó.",二分探索木とは何ですか？,どのノードでも、左の子が親よりも小さく、親が右の子よりも小さいというプロパティを持つ二分木。,これは、各ノードが一意のキーを持ち、ノードの左側の子がそのノードよりも小さい値のみを持ち、各ノードの右側の子がそのノードよりも高い値を持つ二分木です。,什么是二叉搜索树？,具有以下属性的二叉树：对于任何节点，左子节点小于父节点，而父节点又比右子节点小。,它是一棵二叉树，其中每个节点都有唯一的键，一个节点的左子节点只有比该节点小的值，而每个节点的右子节点都有比该节点高的值。,ما هي شجرة البحث الثنائية؟,شجرة ثنائية لها خاصية أن الطفل الأيسر لأي عقدة يكون أصغر من الأصل الذي بدوره أصغر من الطفل الأيمن.,إنها شجرة ثنائية حيث تحتوي كل عقدة على مفتاح فريد ، والطفل الأيسر للعقدة يحتوي فقط على قيم أقل من تلك العقدة ، والطفل الأيمن لكل عقدة له قيم أعلى من تلك العقدة.,Що таке бінарне дерево пошуку?,"Бінарне дерево, яке має властивість, що для будь-якого вузла лівий дочірній елемент менший за батьківський, який, у свою чергу, менший від правого дочірнього.","це бінарне дерево, де кожен вузол має унікальний ключ, ліва дочірня частина вузла має лише значення, менші за цей вузол, а права дочірня частина кожного вузла має вищі значення, ніж цей вузол.",O que é uma árvore de pesquisa binária?,"Uma árvore binária que possui a propriedade de que, para qualquer nó, o filho esquerdo é menor que o pai que, por sua vez, é menor que o filho direito.","é uma árvore binária onde cada nó possui uma chave única, o filho esquerdo de um nó possui apenas valores menores do que aquele nó e o filho direito de cada nó possui valores mais altos do que aquele nó.",درخت جستجوی باینری چیست؟,یک درخت باینری است که خاصیتی دارد که برای هر گره کودک چپ کوچکتر از والد است که به نوبه خود کوچکتر از فرزند راست است.,این یک درخت باینری است که در آن هر گره یک کلید منحصر به فرد دارد ، فرزند سمت چپ یک گره فقط مقادیر کمتری از آن گره دارد و فرزند راست هر گره مقادیر بیشتری از آن گره دارد.,Què és un arbre de cerca binari?,"Un arbre binari que té la propietat que per a qualsevol node el fill esquerre és més petit que el pare, que al seu torn és més petit que el fill dret.","és un arbre binari on cada node té una clau única, el fill esquerre d&#39;un node només té valors inferiors a aquest node i el fill dret de cada node té valors superiors a aquest node.",Шта је бинарно стабло претраживања?,Бинарно стабло које има својство да је за било који чвор лево дете мање од родитеља које је пак мање од десног детета.,"то је бинарно стабло где сваки чвор има јединствени кључ, лево дете чвора има само вредности мање од тог чвора, а десно дете сваког чвора има веће вредности од тог чвора.",Apa itu pohon pencarian biner?,Sebuah pohon biner yang memiliki properti yang untuk setiap node anak kiri lebih kecil dari induk yang pada gilirannya lebih kecil dari anak kanan.,"Ini adalah pohon biner dimana setiap node memiliki kunci unik, anak kiri dari sebuah node hanya memiliki nilai yang lebih kecil dari node tersebut, dan anak kanan dari setiap node memiliki nilai yang lebih tinggi dari node tersebut.",Hva er et binært søketre?,Et binært tre som har den egenskapen at for hvilken som helst node er det venstre barnet mindre enn foreldren som igjen er mindre enn det høyre barnet.,"det er et binært tre der hver node har en unik nøkkel, det venstre barnet til en node har bare verdier mindre enn den noden, og det høyre barnet til hver node har høyere verdier enn den noden.",이진 검색 트리 란 무엇입니까?,모든 노드에 대해 왼쪽 자식이 부모보다 작고 오른쪽 자식보다 작은 속성을 가진 이진 트리입니다.,"이것은 각 노드가 고유 한 키를 갖고, 노드의 왼쪽 자식이 해당 노드보다 작은 값만 갖고, 각 노드의 오른쪽 자식이 해당 노드보다 높은 값을 갖는 이진 트리입니다.",Mikä on binaarinen hakupuu?,"Binaarinen puu, jolla on ominaisuus, että minkä tahansa solmun vasen lapsi on pienempi kuin vanhempi, joka puolestaan on pienempi kuin oikea lapsi.","se on binääripuu, jossa jokaisella solmulla on yksilöllinen avain, solmun vasemmalla alatasolla on vain arvot, jotka ovat pienempiä kuin kyseisen solmun, ja kunkin solmun oikealla alatasolla on korkeammat arvot kuin kyseisellä solmulla.",Mi az a bináris keresési fa?,"Egy bináris fa, amelynek az a tulajdonsága, hogy bármelyik csomópontnál a bal gyermek kisebb, mint a szülő, ami viszont kisebb, mint a jobb gyermek.","ez egy bináris fa, ahol minden csomópontnak egyedi kulcsa van, egy csomópont bal gyermekének csak ennél a csomópontnál kisebb értékei vannak, és az egyes csomópontok jobb gyermekeinek magasabb értékei vannak, mint annak a csomópontnak.",Co je to binární vyhledávací strom?,"Binární strom, který má vlastnost, že pro jakýkoli uzel je levé dítě menší než nadřazený, což je zase menší než pravé dítě.","je to binární strom, kde každý uzel má jedinečný klíč, levé dítě uzlu má pouze hodnoty menší než tento uzel a pravé dítě každého uzlu má vyšší hodnoty než tento uzel.",Što je binarno stablo pretraživanja?,Binarno stablo koje ima svojstvo da je za bilo koji čvor lijevo dijete manje od roditelja koje je pak manje od desnog djeteta.,"to je binarno stablo u kojem svaki čvor ima jedinstveni ključ, lijevo podređeno mjesto čvora ima samo vrijednosti manje od tog čvora, a desno dijete svakog čvora ima veće vrijednosti od tog čvora."
84,84,297,2.4,When a class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When does C++ create a default constructor?,5.0,"Wenn kein Konstruktor angegeben ist, stellt der Compiler standardmäßig einen bereit. Wenn für eine Klasse ein Konstruktor definiert ist, erstellt der Compiler keinen Standardkonstruktor.",Wann erstellt C ++ einen Standardkonstruktor?,Wenn eine Klasse keinen Konstruktor explizit enthält.,Kanus-a maghimo ang C ++ usa ka default nga magtutukod?,"Kung wala gihatag ang magtutukod, ang tagatala naghatag usa ingon default. Kung ang usa ka magtutukod gihubit alang sa usa ka klase, ang tagtipon dili maghimo usa ka default nga magtutukod.",Kung ang usa ka klase dili tin-aw nga kauban sa usa ka magtutukod.,När skapar C ++ en standardkonstruktör?,Om ingen konstruktör tillhandahålls tillhandahåller kompilatorn en som standard. Om en konstruktör är definierad för en klass skapar inte kompilatorn en standardkonstruktör.,När en klass inte uttryckligen innehåller en konstruktör.,Quand C ++ crée-t-il un constructeur par défaut?,"Si aucun constructeur n&#39;est fourni, le compilateur en fournit un par défaut. Si un constructeur est défini pour une classe, le compilateur ne crée pas de constructeur par défaut.",Lorsqu&#39;une classe n&#39;inclut pas explicitement un constructeur.,Wanneer maakt C ++ een standaardconstructor?,"Als er geen constructor is opgegeven, biedt de compiler er standaard een aan. Als een constructor is gedefinieerd voor een klasse, maakt de compiler geen standaardconstructor.",Wanneer een klasse niet expliciet een constructor bevat.,Когда C ++ создает конструктор по умолчанию?,"Если конструктор не указан, компилятор предоставляет его по умолчанию. Если для класса определен конструктор, компилятор не создает конструктор по умолчанию.",Когда класс явно не включает конструктор.,Quando C ++ crea un costruttore predefinito?,"Se non viene fornito alcun costruttore, il compilatore ne fornisce uno per impostazione predefinita. Se un costruttore è definito per una classe, il compilatore non crea un costruttore predefinito.",Quando una classe non include esplicitamente un costruttore.,¿Cuándo crea C ++ un constructor predeterminado?,"Si no se proporciona ningún constructor, el compilador proporciona uno por defecto. Si se define un constructor para una clase, el compilador no crea un constructor predeterminado.",Cuando una clase no incluye explícitamente un constructor.,Kiedy C ++ tworzy domyślny konstruktor?,"Jeśli nie podano konstruktora, kompilator udostępnia go domyślnie. Jeśli konstruktor jest zdefiniowany dla klasy, kompilator nie tworzy konstruktora domyślnego.",Gdy klasa nie zawiera jawnie konstruktora.,Khi nào C ++ tạo một phương thức khởi tạo mặc định?,"Nếu không có hàm tạo nào được cung cấp, trình biên dịch sẽ cung cấp một hàm tạo theo mặc định. Nếu một phương thức khởi tạo được định nghĩa cho một lớp, trình biên dịch không tạo một phương thức khởi tạo mặc định.",Khi một lớp không bao gồm một phương thức khởi tạo một cách rõ ràng.,C ++はいつデフォルトのコンストラクターを作成しますか？,コンストラクターが提供されていない場合、コンパイラーはデフォルトでコンストラクターを提供します。クラスにコンストラクターが定義されている場合、コンパイラーはデフォルトのコンストラクターを作成しません。,クラスにコンストラクターが明示的に含まれていない場合。,C ++何时创建默认构造函数？,如果未提供构造函数，则编译器默认提供一个构造函数。如果为类定义了构造函数，则编译器不会创建默认构造函数。,当类没有显式包括构造函数时。,متى تقوم C ++ بإنشاء مُنشئ افتراضي؟,إذا لم يتم توفير مُنشئ ، يوفر المترجم واحدًا افتراضيًا. إذا تم تعريف مُنشئ لفئة ، فلن يقوم المترجم بإنشاء مُنشئ افتراضي.,عندما لا يتضمن الفصل صراحة المنشئ.,Коли C ++ створює конструктор за замовчуванням?,"Якщо конструктор не вказаний, компілятор надає такий за замовчуванням. Якщо для класу визначено конструктор, компілятор не створює конструктор за замовчуванням.",Коли клас явно не включає конструктор.,Quando C ++ cria um construtor padrão?,"Se nenhum construtor for fornecido, o compilador fornece um por padrão. Se um construtor é definido para uma classe, o compilador não cria um construtor padrão.",Quando uma classe não inclui explicitamente um construtor.,C ++ چه زمانی سازنده پیش فرض ایجاد می کند؟,اگر سازنده ای ارائه نشده باشد ، کامپایلر به طور پیش فرض سازنده ای را ارائه می دهد. اگر سازنده ای برای یک کلاس تعریف شده باشد ، کامپایلر یک سازنده پیش فرض ایجاد نمی کند.,وقتی یک کلاس صریحاً شامل یک سازنده نباشد.,Quan crea C ++ un constructor per defecte?,"Si no es proporciona cap constructor, el compilador en proporciona un per defecte. Si es defineix un constructor per a una classe, el compilador no crea un constructor per defecte.",Quan una classe no inclou explícitament un constructor.,Када Ц ++ креира подразумевани конструктор?,"Ако није наведен ниједан конструктор, компајлер га подразумевано нуди. Ако је конструктор дефинисан за класу, компајлер не креира подразумевани конструктор.",Када класа експлицитно не садржи конструктор.,Kapan C ++ membuat konstruktor default?,"Jika tidak ada konstruktor yang disediakan, kompilator menyediakannya secara default. Jika konstruktor ditentukan untuk kelas, kompilator tidak membuat konstruktor default.",Ketika kelas tidak secara eksplisit menyertakan konstruktor.,Når oppretter C ++ en standardkonstruktør?,"Hvis ingen konstruktører er gitt, gir kompilatoren en som standard. Hvis en konstruktør er definert for en klasse, lager ikke kompilatoren en standardkonstruktør.",Når en klasse ikke eksplisitt inkluderer en konstruktør.,C ++는 언제 기본 생성자를 생성합니까?,생성자가 제공되지 않으면 컴파일러는 기본적으로 생성자를 제공합니다. 생성자가 클래스에 대해 정의 된 경우 컴파일러는 기본 생성자를 만들지 않습니다.,클래스에 생성자가 명시 적으로 포함되지 않은 경우.,Milloin C ++ luo oletusrakentajan?,"Jos rakennuttajaa ei ole, kääntäjä antaa sellaisen oletusarvoisesti. Jos luokalle on määritetty konstruktori, kääntäjä ei luo oletusrakentajaa.",Kun luokka ei nimenomaisesti sisällä konstruktoria.,Mikor hoz létre a C ++ egy alapértelmezett konstruktort?,"Ha nincs megadva konstruktor, akkor a fordító alapértelmezés szerint biztosít egyet. Ha egy osztályhoz definiált egy konstruktort, akkor a fordító nem hoz létre alapértelmezett konstruktort.",Amikor egy osztály nem tartalmaz kifejezetten konstruktort.,Kdy C ++ vytvoří výchozí konstruktor?,"Pokud není k dispozici žádný konstruktor, kompilátor ho ve výchozím nastavení poskytuje. Pokud je pro třídu definován konstruktor, kompilátor nevytvoří výchozí konstruktor.",Když třída výslovně neobsahuje konstruktor.,Kada C ++ kreira zadani konstruktor?,"Ako nije naveden nijedan konstruktor, kompajler ga prema zadanim postavkama daje. Ako je konstruktor definiran za klasu, kompajler ne stvara zadani konstruktor.",Kada klasa ne sadrži eksplicitno konstruktor.
85,85,2348,12.7,"The main operations in a stack are push and pop. Push adds an item to the top of the stack, pop removes the top item from the stack.",push and pop,What are the main operations associated with a stack?,5.0,Push and Pop,"Was sind die Hauptoperationen, die mit einem Stapel verbunden sind?","Die Hauptoperationen in einem Stapel sind Push und Pop. Push fügt ein Element oben im Stapel hinzu, Pop entfernt das oberste Element vom Stapel.",Unsa ang mga punoan nga operasyon nga kauban sa usa ka stack?,iduso ug pop,"Ang nag-unang operasyon sa usa ka stack mao ang push ug pop. Ang pagduso nagdugang usa ka butang sa taas sa stack, gitangtang sa pop ang top item gikan sa stack.",Vilka är de viktigaste operationerna i samband med en stack?,tryck och knäpp,"De viktigaste operationerna i en stack är push och pop. Push lägger till ett objekt överst i bunten, pop tar bort det översta objektet från bunten.",Quelles sont les principales opérations associées à une pile?,pousser et pop,"Les principales opérations dans une pile sont push et pop. Push ajoute un élément au sommet de la pile, pop supprime l&#39;élément supérieur de la pile.",Wat zijn de belangrijkste bewerkingen die aan een stapel zijn gekoppeld?,duwen en knallen,"De belangrijkste bewerkingen in een stapel zijn push en pop. Push voegt een item toe aan de bovenkant van de stapel, pop verwijdert het bovenste item van de stapel.",Какие основные операции связаны со стеком?,толкать и хлопать,"Основные операции в стеке - это push и pop. Push добавляет элемент в верхнюю часть стека, pop удаляет верхний элемент из стека.",Quali sono le principali operazioni associate a uno stack?,spingere e pop,"Le operazioni principali in uno stack sono push e pop. Push aggiunge un elemento in cima alla pila, pop rimuove l&#39;elemento in cima alla pila.",¿Cuáles son las principales operaciones asociadas con una pila?,empujar y hacer estallar,"Las operaciones principales en una pila son push y pop. Push agrega un elemento a la parte superior de la pila, pop elimina el elemento superior de la pila.",Jakie są główne operacje związane ze stosem?,push i pop,"Główne operacje na stosie to push i pop. Push dodaje element na wierzch stosu, pop usuwa górny element ze stosu.",Các hoạt động chính được liên kết với một ngăn xếp là gì?,đẩy và bật,"Các hoạt động chính trong một ngăn xếp là đẩy và bật. Đẩy thêm một mục vào đầu ngăn xếp, bật lên sẽ xóa mục trên cùng khỏi ngăn xếp.",スタックに関連する主な操作は何ですか？,プッシュアンドポップ,スタックの主な操作はプッシュとポップです。プッシュはスタックの一番上にアイテムを追加し、ポップはスタックから一番上のアイテムを削除します。,与堆栈相关的主要操作是什么？,推和弹出,堆栈中的主要操作是推入和弹出。推将一个项目添加到堆栈的顶部，弹出将其从堆栈中删除。,ما هي العمليات الرئيسية المرتبطة بمكدس؟,ادفع وبوب,العمليات الرئيسية في المكدس هي الدفع والفرقعة. يضيف Push عنصرًا إلى أعلى المكدس ، بينما يزيل البوب العنصر العلوي من المكدس.,Які основні операції пов’язані зі стеком?,натискання та поп,"Основними операціями в стеку є натискання та натискання. Push додає елемент у верхню частину стека, pop видаляє верхній елемент із стека.",Quais são as principais operações associadas a uma pilha?,empurre e estale,"As principais operações em uma pilha são push e pop. Push adiciona um item ao topo da pilha, pop remove o item superior da pilha.",اصلی ترین عملیات مرتبط با پشته چیست؟,فشار و پاپ,عملیات اصلی در یک پشته فشار و پاپ است. فشار یک مورد را به بالای پشته اضافه می کند ، پاپ مورد بالا را از پشته حذف می کند.,Quines són les principals operacions associades a una pila?,empenta i esclata,"Les principals operacions d’una pila són push i pop. Push afegeix un element a la part superior de la pila, pop treu l&#39;element superior de la pila.",Које су главне операције повезане са стеком?,гурај и пуцај,"Главне операције у гомили су пусх и поп. Пусх додаје ставку на врх стека, поп уклања горњу ставку из стека.",Apa operasi utama yang terkait dengan tumpukan?,push dan pop,"Operasi utama dalam tumpukan adalah push dan pop. Push menambahkan item ke atas tumpukan, pop menghapus item teratas dari tumpukan.",Hva er de viktigste operasjonene knyttet til en stabel?,push og pop,"Hovedoperasjonene i en bunke er push og pop. Push legger til et element på toppen av bunken, pop fjerner det øverste elementet fra bunken.",스택과 관련된 주요 작업은 무엇입니까?,밀고 팝,스택의 주요 작업은 푸시 및 팝입니다. 푸시는 스택 맨 위에 항목을 추가하고 팝은 스택에서 맨 위 항목을 제거합니다.,Mitkä ovat pinoon liittyvät päätoiminnot?,työnnä ja pop,"Nipun päätoiminnot ovat push ja pop. Push lisää kohteen pinon yläosaan, pop poistaa ylimmän kohteen pinosta.",Melyek a veremhez kapcsolódó főbb műveletek?,nyomja és pattog,"A veremben a fő műveletek a push és a pop. A Push elemet ad a verem tetejére, a pop eltávolítja a legfelső elemet a veremből.",Jaké jsou hlavní operace spojené se zásobníkem?,push a pop,"Hlavní operace v zásobníku jsou push a pop. Push přidá položku do horní části zásobníku, pop odebere horní položku ze zásobníku.",Koje su glavne operacije povezane sa stogom?,guraj i pucaj,"Glavne operacije u hrpi su push i pop. Push dodaje stavku na vrh hrpe, pop uklanja gornju stavku iz gomile."
86,86,1987,11.5,a function that calls itself untill it reaches a base case.,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine Funktion, die sich selbst aufruft, bis sie einen Basisfall erreicht.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,usa ka kalihokan nga nagtawag sa iyang kaugalingon hangtod nga nakaabut sa us aka base nga kaso.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,en funktion som kallar sig tills den når ett basfall.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,une fonction qui s&#39;appelle elle-même jusqu&#39;à ce qu&#39;elle atteigne un cas de base.,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,een functie die zichzelf aanroept totdat het een basisscenario bereikt.,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","функция, которая вызывает сама себя, пока не достигнет базового случая.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,una funzione che chiama se stessa fino a quando non raggiunge un caso base.,¿Qué es una función recursiva?,Una función que se llama a sí misma.,una función que se llama a sí misma hasta que alcanza un caso base.,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","funkcja, która wywołuje samą siebie, dopóki nie osiągnie przypadku podstawowego.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,một hàm gọi chính nó cho đến khi nó đạt đến một trường hợp cơ sở.,再帰関数とは何ですか？,自分自身を呼び出す関数。,ベースケースに到達するまで自分自身を呼び出す関数。,什么是递归函数？,调用自身的函数。,直到达到基本情况才调用自身的函数。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,دالة تستدعي نفسها حتى تصل إلى حالة أساسية.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","функція, яка викликає себе, доки не досягне базового випадку.",O que é uma função recursiva?,Uma função que chama a si mesma.,uma função que chama a si mesma até chegar a um caso base.,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,تابعی که خود را صدا می زند تا زمانی که به یک حالت اصلی برسد.,Què és una funció recursiva?,Una funció que s’autodenomina.,una funció que s’autodenomina fins que arriba a un cas base.,Шта је рекурзивна функција?,Функција која себе позива.,функција која се позива док не достигне основни случај.,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,fungsi yang memanggil dirinya sendiri hingga mencapai kasus dasar.,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,en funksjon som kaller seg til den når en basissak.,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,기본 케이스에 도달 할 때까지 자신을 호출하는 함수.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","toiminto, joka kutsuu itseään, kunnes se saavuttaa perustapauksen.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","egy olyan függvény, amely addig hívja magát, amíg el nem ér egy alapesetet.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","funkce, která si říká, dokud nedosáhne základního případu.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,funkcija koja se poziva dok ne dostigne osnovni slučaj.
87,87,957,6.1,a pointer holds a memory location,A variable that contains the address in memory of another variable.,What is a pointer?,4.5,"Eine Variable, die die Adresse im Speicher einer anderen Variablen enthält.",Was ist ein Zeiger?,Ein Zeiger enthält einen Speicherort,Unsa ang usa ka pointer?,Usa ka variable nga adunay sulud nga panumduman sa uban pa nga variable.,ang usa ka pointer naghupot usa ka lokasyon sa memorya,Vad är en pekare?,En variabel som innehåller adressen i minnet för en annan variabel.,en pekare har en minnesplats,Qu&#39;est-ce qu&#39;un pointeur?,Une variable qui contient l&#39;adresse en mémoire d&#39;une autre variable.,un pointeur contient un emplacement mémoire,Wat is een aanwijzer?,Een variabele die het adres in het geheugen van een andere variabele bevat.,een aanwijzer bevat een geheugenlocatie,Что такое указатель?,"Переменная, содержащая адрес в памяти другой переменной.",указатель содержит ячейку памяти,Cos&#39;è un puntatore?,Una variabile che contiene l&#39;indirizzo in memoria di un&#39;altra variabile.,un puntatore contiene una posizione di memoria,¿Qué es un puntero?,Una variable que contiene la dirección en memoria de otra variable.,un puntero tiene una ubicación de memoria,Co to jest wskaźnik?,"Zmienna, która zawiera adres w pamięci innej zmiennej.",wskaźnik zawiera miejsce w pamięci,Con trỏ là gì?,Một biến chứa địa chỉ trong bộ nhớ của một biến khác.,một con trỏ giữ một vị trí bộ nhớ,ポインタとは何ですか？,別の変数のメモリ内のアドレスを含む変数。,ポインタはメモリ位置を保持します,什么是指针？,一个变量，包含另一个变量在内存中的地址。,指针保存一个内存位置,ما هو المؤشر؟,متغير يحتوي على العنوان في ذاكرة متغير آخر.,المؤشر يحمل موقع الذاكرة,Що таке вказівник?,"Змінна, що містить адресу в пам&#39;яті іншої змінної.",покажчик містить місце в пам&#39;яті,O que é um ponteiro?,Uma variável que contém o endereço na memória de outra variável.,um ponteiro contém um local de memória,اشاره گر چیست؟,متغیری که حاوی آدرس در حافظه متغیر دیگر است.,یک نشانگر یک مکان حافظه را نگه می دارد,Què és un punter?,Una variable que conté l&#39;adreça en memòria d&#39;una altra variable.,un punter té una ubicació de memòria,Шта је показивач?,Променљива која садржи адресу у меморији друге променљиве.,показивач држи меморијску локацију,Apa itu penunjuk?,Variabel yang berisi alamat dalam memori variabel lain.,penunjuk menyimpan lokasi memori,Hva er en peker?,En variabel som inneholder adressen i minnet til en annen variabel.,en peker har en minneplassering,포인터 란 무엇입니까?,다른 변수의 메모리에 주소를 포함하는 변수입니다.,포인터는 메모리 위치를 보유,Mikä on osoitin?,"Muuttuja, joka sisältää osoitteen toisen muuttujan muistissa.",osoittimella on muistipaikka,Mi az a mutató?,"Olyan változó, amely egy másik változó memóriájában tartalmazza a címet.",egy mutató memóriahelyet tart,Co je to ukazatel?,"Proměnná, která obsahuje adresu v paměti jiné proměnné.",ukazatel obsahuje místo v paměti,Šta je pokazivač?,Varijabla koja sadrži adresu u memoriji druge varijable.,pokazivač sadrži memorijsku lokaciju
88,88,1071,6.5,the size in bytes needed to store the object in memory,The size in bytes of its operand.,What does the sizeof operator return?,4.5,Die Größe des Operanden in Byte.,Was gibt die Größe des Operators zurück?,"Die Größe in Byte, die zum Speichern des Objekts im Speicher benötigt wird",Unsa man ang pagbalik sa sizeof operator?,Ang kadako sa mga byte sa operand niini.,ang kadako sa mga byte nga kinahanglan aron tipigan ang butang sa memorya,Vad returnerar operatörens storlek?,Storleken i byte för dess operand.,storleken i byte som behövs för att lagra objektet i minnet,Que renvoie l&#39;opérateur sizeof?,La taille en octets de son opérande.,la taille en octets nécessaire pour stocker l&#39;objet en mémoire,Wat levert de grootte van de operator op?,De grootte in bytes van de operand.,de grootte in bytes die nodig is om het object in het geheugen op te slaan,Что возвращает оператор sizeof?,Размер в байтах его операнда.,"размер в байтах, необходимый для хранения объекта в памяти",Cosa restituisce la dimensione dell&#39;operatore?,La dimensione in byte del suo operando.,la dimensione in byte necessaria per memorizzare l&#39;oggetto in memoria,¿Qué devuelve el tamaño del operador?,El tamaño en bytes de su operando.,el tamaño en bytes necesario para almacenar el objeto en la memoria,Jaki jest zwracany operator sizeof?,Rozmiar argumentu w bajtach.,rozmiar w bajtach potrzebny do przechowywania obiektu w pamięci,Toán tử sizeof trả về gì?,Kích thước tính bằng byte của toán hạng của nó.,kích thước tính bằng byte cần thiết để lưu đối tượng trong bộ nhớ,sizeof演算子は何を返しますか？,オペランドのバイト単位のサイズ。,オブジェクトをメモリに格納するために必要なバイト単位のサイズ,sizeof运算符返回什么？,其操作数的大小（以字节为单位）。,在内存中存储对象所需的字节大小,ماذا يعود حجم المشغل؟,الحجم بالبايت لمعاملها.,الحجم بالبايت المطلوب لتخزين الكائن في الذاكرة,Що повертає оператор sizeof?,Розмір операнда в байтах.,"розмір у байтах, необхідний для зберігання об’єкта в пам’яті",O que o operador sizeof retorna?,O tamanho em bytes de seu operando.,o tamanho em bytes necessários para armazenar o objeto na memória,عملگر sizeof چه چیزی برمی گرداند؟,اندازه در بایت عملوند آن.,اندازه در بایت مورد نیاز برای ذخیره شی در حافظه,Què retorna l’operador sizeof?,La mida en bytes del seu operand.,la mida en bytes necessària per emmagatzemar l&#39;objecte a la memòria,Шта враћа величина оператора?,Величина операнда у бајтовима.,величина у бајтовима потребна за чување објекта у меморији,Berapa ukuran yang dikembalikan operator?,Ukuran dalam byte dari operannya.,ukuran dalam byte yang dibutuhkan untuk menyimpan objek dalam memori,Hva returnerer operatørens størrelse?,Størrelsen i byte av operanden.,størrelsen i byte som trengs for å lagre objektet i minnet,sizeof 연산자는 무엇을 반환합니까?,피연산자의 크기 (바이트)입니다.,객체를 메모리에 저장하는 데 필요한 크기 (바이트),Mitä operaattorin koko palauttaa?,Operandin koko tavuina.,"koko tavuina, joka tarvitaan objektin tallentamiseen muistiin",Mit ad vissza az operátor mérete?,Operandusának mérete bájtokban.,az objektum memóriában történő tárolásához szükséges bájtok mérete,Co vrátí operátor sizeof?,Velikost jeho operandu v bajtech.,velikost v bajtech potřebná k uložení objektu do paměti,Šta vraća veličina operatora?,Veličina operanda u bajtovima.,veličina u bajtovima potrebna za spremanje objekta u memoriju
89,89,1194,7.3,Linked list has an increase complexity of the implementation. The linked list has an array that keeps growing which leads to a increase in memory.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",What is the main advantage of arrays over linked lists?,2.5,"Auf die Elemente in einem Array kann direkt zugegriffen werden (im Gegensatz zu verknüpften Listen, die eine iterative Durchquerung erfordern).",Was ist der Hauptvorteil von Arrays gegenüber verknüpften Listen?,"Die verknüpfte Liste hat eine zunehmende Komplexität der Implementierung. Die verknüpfte Liste enthält ein Array, das ständig wächst, was zu einer Erhöhung des Speichers führt.",Unsa man ang punoan nga bentaha sa mga han-ay sa mga nalambigit nga lista?,"Ang mga elemento sa usa ka laray mahimong direkta nga ma-access (sukwahi sa mga nalambigit nga lista, nga nanginahanglan iterative traversal).",Ang lista sa naka-link adunay pagdugang nga pagkakumplikado sa pagpatuman. Ang nalista nga lista adunay usa ka han-ay nga padayon nga nagtubo nga mosangput sa pagdugang sa memorya.,Vad är den största fördelen med matriser jämfört med länkade listor?,"Elementen i en matris kan nås direkt (i motsats till länkade listor, som kräver iterativ genomgång).",Länkad lista har en ökad komplexitet i implementeringen. Den länkade listan har en matris som fortsätter växa vilket leder till en ökning av minnet.,Quel est le principal avantage des tableaux par rapport aux listes chaînées?,"Les éléments d&#39;un tableau sont accessibles directement (par opposition aux listes chaînées, qui nécessitent un parcours itératif).","La liste liée a une complexité croissante de la mise en œuvre. La liste chaînée a un tableau qui ne cesse de croître, ce qui entraîne une augmentation de la mémoire.",Wat is het belangrijkste voordeel van arrays ten opzichte van gekoppelde lijsten?,"De elementen in een array zijn direct toegankelijk (in tegenstelling tot gekoppelde lijsten, die iteratief moeten doorlopen).","Linked list heeft een toenemende complexiteit van de implementatie. De gekoppelde lijst heeft een array die blijft groeien, wat leidt tot een toename van het geheugen.",В чем основное преимущество массивов перед связанными списками?,"К элементам в массиве можно обращаться напрямую (в отличие от связанных списков, требующих итеративного обхода).","Связанный список имеет повышенную сложность реализации. В связанном списке есть массив, который постоянно увеличивается, что приводит к увеличению объема памяти.",Qual è il vantaggio principale degli array rispetto agli elenchi collegati?,"È possibile accedere direttamente agli elementi di un array (al contrario degli elenchi collegati, che richiedono un attraversamento iterativo).",L&#39;elenco collegato presenta una complessità crescente dell&#39;implementazione. L&#39;elenco collegato ha una matrice che continua a crescere che porta ad un aumento della memoria.,¿Cuál es la principal ventaja de las matrices sobre las listas enlazadas?,"Se puede acceder directamente a los elementos de una matriz (a diferencia de las listas vinculadas, que requieren un recorrido iterativo).","La lista vinculada tiene una mayor complejidad de implementación. La lista vinculada tiene una matriz que sigue creciendo, lo que conduce a un aumento de la memoria.",Jaka jest główna zaleta tablic w porównaniu z listami połączonymi?,"Do elementów tablicy można uzyskać bezpośredni dostęp (w przeciwieństwie do połączonych list, które wymagają iteracyjnego przechodzenia).","Lista połączona zwiększa złożoność implementacji. Lista połączona zawiera tablicę, która stale rośnie, co prowadzi do zwiększenia ilości pamięci.",Ưu điểm chính của mảng so với danh sách liên kết là gì?,"Các phần tử trong một mảng có thể được truy cập trực tiếp (trái ngược với danh sách được liên kết, yêu cầu truyền tải lặp đi lặp lại).",Danh sách được liên kết làm tăng độ phức tạp của việc triển khai. Danh sách liên kết có một mảng liên tục phát triển dẫn đến tăng bộ nhớ.,リンクリストに対する配列の主な利点は何ですか？,配列内の要素には直接アクセスできます（反復トラバーサルを必要とするリンクリストとは対照的です）。,リンクリストを使用すると、実装が複雑になります。リンクリストには、メモリの増加につながる成長を続ける配列があります。,与链接列表相比，数组的主要优点是什么？,数组中的元素可以直接访问（与链表相反，后者需要迭代遍历）。,链表增加了实现的复杂性。链表具有不断增长的数组，这会导致内存增加。,ما هي الميزة الرئيسية للمصفوفات على القوائم المرتبطة؟,يمكن الوصول إلى العناصر الموجودة في المصفوفة مباشرةً (على عكس القوائم المرتبطة التي تتطلب اجتيازًا تكراريًا).,القائمة المرتبطة لديها زيادة تعقيد التنفيذ. تحتوي القائمة المرتبطة على مصفوفة تستمر في النمو مما يؤدي إلى زيادة الذاكرة.,Яка головна перевага масивів над пов’язаними списками?,"До елементів у масиві можна отримати прямий доступ (на відміну від зв’язаних списків, які вимагають ітеративного обходу).","Пов’язаний список збільшує складність реалізації. Зв’язаний список має масив, який постійно зростає, що призводить до збільшення пам’яті.",Qual é a principal vantagem dos arrays em relação às listas vinculadas?,"Os elementos em uma matriz podem ser acessados diretamente (em oposição às listas vinculadas, que exigem travessia iterativa).","A lista vinculada tem um aumento da complexidade da implementação. A lista vinculada possui uma matriz que continua crescendo, o que leva a um aumento na memória.",مزیت اصلی آرایه ها نسبت به لیست های پیونددار چیست؟,به عناصر موجود در یک آرایه می توان مستقیماً دسترسی داشت (در مقابل لیست های پیوندی که به پیمایش تکراری نیاز دارند).,لیست پیوندی پیچیدگی پیاده سازی را افزایش می دهد. لیست پیوندی دارای آرایه ای است که مدام در حال رشد است و منجر به افزایش حافظه می شود.,Quin és el principal avantatge de les matrius sobre les llistes enllaçades?,"Es pot accedir directament als elements d’una matriu (a diferència de les llistes enllaçades, que requereixen un recorregut iteratiu).","La llista enllaçada augmenta la complexitat de la implementació. La llista enllaçada té una matriu que continua creixent, cosa que comporta un augment de la memòria.",Која је главна предност низа у односу на повезане листе?,"Елементима у низу може се приступити директно (за разлику од повезаних листа, које захтевају итеративно обилажење).",Повезана листа повећава сложеност примене. Повезана листа има низ који непрестано расте што доводи до повећања меморије.,Apa keuntungan utama array dibandingkan daftar tertaut?,"Elemen-elemen dalam sebuah array dapat diakses secara langsung (sebagai kebalikan dari daftar tertaut, yang membutuhkan traversal berulang).",Daftar tertaut memiliki peningkatan kompleksitas penerapan. Daftar tertaut memiliki larik yang terus berkembang yang mengarah pada peningkatan memori.,Hva er den største fordelen med matriser i forhold til koblede lister?,"Elementene i en matrise kan fås direkte (i motsetning til koblede lister, som krever iterativ gjennomgang).","Koblet liste har økt kompleksitet i implementeringen. Den koblede listen har en matrise som fortsetter å vokse, noe som fører til økt minne.",연결된 목록에 비해 배열의 주요 이점은 무엇입니까?,배열의 요소는 직접 액세스 할 수 있습니다 (반복 순회가 필요한 연결 목록과 반대).,연결된 목록은 구현의 복잡성을 증가시킵니다. 연결된 목록에는 메모리가 증가하는 계속 증가하는 배열이 있습니다.,Mikä on matriisien tärkein etu linkitettyihin luetteloihin nähden?,"Taulukon elementteihin pääsee suoraan (toisin kuin linkitetyt luettelot, jotka edellyttävät iteratiivista kulkua).","Linkitetyn luettelon toteutus on yhä monimutkaisempaa. Linkitetyllä luettelolla on joukko, joka kasvaa jatkuvasti, mikä johtaa muistin lisääntymiseen.",Mi a tömbök fő előnye a kapcsolt listákkal szemben?,"A tömb elemeihez közvetlenül lehet hozzáférni (szemben az összekapcsolt listákkal, amelyek iteratív bejárást igényelnek).","Az összekapcsolt lista a megvalósítást egyre bonyolultabbá teszi. A linkelt listának van egy tömbje, amely folyamatosan növekszik, ami a memória növekedéséhez vezet.",Jaká je hlavní výhoda polí oproti propojeným seznamům?,"K prvkům v poli lze přistupovat přímo (na rozdíl od propojených seznamů, které vyžadují iterativní procházení).","Propojený seznam zvyšuje složitost implementace. Propojený seznam má pole, které neustále roste, což vede ke zvýšení paměti.",Koja je glavna prednost polja nad povezanim listama?,"Elementima u nizu može se pristupiti izravno (za razliku od povezanih lista, koje zahtijevaju iterativno obilaženje).",Povezana lista povećava složenost implementacije. Povezana lista ima niz koji neprestano raste što dovodi do povećanja memorije.
90,90,120,1.5,"A variable is a location in the computer's memory where a value can be stored for use by a program. Each variable has a name, a value, a type and a size.",A location in memory that can store a value.,What is a variable?,5.0,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,"Eine Variable ist ein Ort im Speicher des Computers, an dem ein Wert zur Verwendung durch ein Programm gespeichert werden kann. Jede Variable hat einen Namen, einen Wert, einen Typ und eine Größe.",Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,"Ang usa ka variable usa ka lokasyon sa memorya sa kompyuter diin ang usa ka kantidad mahimong tipigan aron magamit sa usa ka programa. Ang matag variable adunay usa ka ngalan, usa ka kantidad, usa ka klase ug usa ka gidak-on.",Vad är en variabel?,En plats i minnet som kan lagra ett värde.,"En variabel är en plats i datorns minne där ett värde kan lagras för användning av ett program. Varje variabel har ett namn, ett värde, en typ och en storlek.",Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,"Une variable est un emplacement dans la mémoire de l&#39;ordinateur où une valeur peut être stockée pour être utilisée par un programme. Chaque variable a un nom, une valeur, un type et une taille.",Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,"Een variabele is een locatie in het computergeheugen waar een waarde kan worden opgeslagen voor gebruik door een programma. Elke variabele heeft een naam, een waarde, een type en een grootte.",Что такое переменная?,"Место в памяти, в котором может храниться значение.","Переменная - это место в памяти компьютера, где значение может быть сохранено для использования программой. У каждой переменной есть имя, значение, тип и размер.",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,"Una variabile è una posizione nella memoria del computer in cui un valore può essere memorizzato per essere utilizzato da un programma. Ogni variabile ha un nome, un valore, un tipo e una dimensione.",¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,"Una variable es una ubicación en la memoria de la computadora donde se puede almacenar un valor para que lo use un programa. Cada variable tiene un nombre, un valor, un tipo y un tamaño.",Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.","Zmienna to miejsce w pamięci komputera, w którym można zapisać wartość do wykorzystania przez program. Każda zmienna ma nazwę, wartość, typ i rozmiar.",Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,"Biến là một vị trí trong bộ nhớ của máy tính nơi một giá trị có thể được lưu trữ để sử dụng bởi một chương trình. Mỗi biến có tên, giá trị, kiểu và kích thước.",変数とは何ですか？,値を格納できるメモリ内の場所。,変数は、プログラムで使用するために値を格納できるコンピュータのメモリ内の場所です。各変数には、名前、値、タイプ、およびサイズがあります。,什么是变量？,内存中可以存储值的位置。,变量是计算机内存中可以存储值以供程序使用的位置。每个变量都有一个名称，一个值，一个类型和一个大小。,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,المتغير هو موقع في ذاكرة الكمبيوتر حيث يمكن تخزين قيمة لاستخدامها بواسطة برنامج. لكل متغير اسم وقيمة ونوع وحجم.,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","Змінна - це місце в пам&#39;яті комп&#39;ютера, де значення може зберігатися для використання програмою. Кожна змінна має ім&#39;я, значення, тип і розмір.",O que é uma variável?,Um local na memória que pode armazenar um valor.,"Uma variável é um local na memória do computador onde um valor pode ser armazenado para uso por um programa. Cada variável possui um nome, um valor, um tipo e um tamanho.",متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,متغیر مکانی در حافظه رایانه است که می توان مقداری را برای استفاده توسط برنامه ذخیره کرد. هر متغیر دارای یک نام ، یک مقدار ، یک نوع و اندازه است.,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,"Una variable és una ubicació a la memòria de l&#39;ordinador on es pot emmagatzemar un valor per al seu ús per un programa. Cada variable té un nom, un valor, un tipus i una mida.",Шта је променљива?,Локација у меморији која може да ускладишти вредност.,"Варијабла је место у меморији рачунара на коме вредност може да се ускладишти за употребу у програму. Свака променљива има име, вредност, тип и величину.",Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,"Variabel adalah lokasi di memori komputer di mana nilai dapat disimpan untuk digunakan oleh program. Setiap variabel memiliki nama, nilai, jenis dan ukuran.",Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,"En variabel er et sted i datamaskinens minne der en verdi kan lagres for bruk av et program. Hver variabel har et navn, en verdi, en type og en størrelse.",변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,"변수는 프로그램에서 사용하기 위해 값을 저장할 수있는 컴퓨터 메모리의 위치입니다. 각 변수에는 이름, 값, 유형 및 크기가 있습니다.",Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.","Muuttuja on paikka tietokoneen muistissa, johon arvo voidaan tallentaa ohjelman käyttöä varten. Jokaisella muuttujalla on nimi, arvo, tyyppi ja koko.",Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.","A változó az a hely a számítógép memóriájában, ahol egy érték tárolható egy program számára. Minden változónak van neve, értéke, típusa és mérete.",Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.","Proměnná je umístění v paměti počítače, kde lze uložit hodnotu pro použití programem. Každá proměnná má název, hodnotu, typ a velikost.",Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,"Varijabla je mjesto u memoriji računara gdje se vrijednost može pohraniti za upotrebu u programu. Svaka varijabla ima ime, vrijednost, tip i veličinu."
91,91,1386,8.3,"with the element added to the array, so that the last element added is at the end, and when the element is popped it takes the last element off the array","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.0,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Wenn das Element dem Array hinzugefügt wird, befindet sich das zuletzt hinzugefügte Element am Ende. Wenn das Element eingeblendet wird, wird das letzte Element aus dem Array entfernt",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.","uban ang elemento nga gidugang sa laray, aron ang katapusang elemento nga nadugang naa sa katapusan, ug kung ang elemento na-pop up gikuha ang katapusang elemento sa laray",Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.","med elementet adderat till arrayen, så att det sista elementet som läggs till är i slutet, och när elementet poppas tar det det sista elementet från arrayen",Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.","avec l&#39;élément ajouté au tableau, de sorte que le dernier élément ajouté soit à la fin, et lorsque l&#39;élément est popped, il enlève le dernier élément du tableau",Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.","met het element toegevoegd aan de array, zodat het laatst toegevoegde element zich aan het einde bevindt, en wanneer het element wordt gepopt, wordt het laatste element van de array verwijderd",Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","с элементом, добавленным в массив, так что последний добавленный элемент находится в конце, а когда элемент выталкивается, он берет последний элемент из массива",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.","con l&#39;elemento aggiunto all&#39;array, in modo che l&#39;ultimo elemento aggiunto sia alla fine, e quando l&#39;elemento viene estratto, toglie l&#39;ultimo elemento dall&#39;array",¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.","con el elemento agregado a la matriz, de modo que el último elemento agregado esté al final, y cuando el elemento se abre, quita el último elemento de la matriz",Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","z elementem dodanym do tablicy, tak że ostatni dodany element znajduje się na końcu, a gdy element jest zdejmowany, zdejmuje ostatni element z tablicy",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.","với phần tử được thêm vào mảng, do đó phần tử cuối cùng được thêm vào ở cuối và khi phần tử được bật lên, phần tử cuối cùng ra khỏi mảng",配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,要素が配列に追加された状態で、最後に追加された要素が最後になり、要素がポップされると、最後の要素が配列から削除されます。,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,将元素添加到数组中，以便最后添加的元素位于末尾，当元素弹出时，它将最后一个元素从数组中移出,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,مع إضافة العنصر إلى المصفوفة ، بحيث يكون آخر عنصر مضاف في النهاية ، وعندما يُفرقع العنصر فإنه يأخذ العنصر الأخير من المصفوفة,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","з елементом, доданим до масиву, так що останній доданий елемент знаходиться в кінці, і коли елемент вискакує, він знімає останній елемент з масиву",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.","com o elemento adicionado à matriz, de modo que o último elemento adicionado esteja no final, e quando o elemento é exibido, ele remove o último elemento da matriz",چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,با عنصر اضافه شده به آرایه ، به طوری که آخرین عنصر اضافه شده در انتها باشد ، و هنگامی که عنصر ظاهر می شود ، آخرین عنصر را از آرایه خارج می کند,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.","amb l&#39;element afegit a la matriu, de manera que l&#39;últim element afegit es troba al final, i quan apareix l&#39;element, treu l&#39;últim element de la matriu",Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.","с елементом доданим у низ, тако да је задњи додани елемент на крају, а када се елемент појави, он уклања последњи елемент из низа",Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.","dengan elemen yang ditambahkan ke larik, sehingga elemen terakhir yang ditambahkan berada di bagian akhir, dan ketika elemen dimunculkan, elemen terakhir akan diambil dari larik",Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.","med elementet lagt til matrisen, slik at det siste elementet som er lagt til er på slutten, og når elementet poppes, tar det det siste elementet fra matrisen",어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,요소가 배열에 추가되어 마지막 요소가 마지막에 추가되고 요소가 팝되면 배열에서 마지막 요소가 제거됩니다.,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","elementin ollessa lisätty taulukkoon siten, että viimeinen lisätty elementti on lopussa, ja kun elementti ponnahtaa, se vie viimeisen elementin pois taulukosta",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.","a tömbhöz hozzáadott elemmel úgy, hogy az utolsó hozzáadott elem a végén legyen, és amikor az elem felpattan, az utolsó elemet leveszi a tömbről",Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","s prvkem přidaným do pole, takže poslední přidaný prvek je na konci, a když je prvek vyskočený, odebere poslední prvek z pole",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.","s elementom dodanim u niz, tako da je zadnji dodani element na kraju, a kada se element pojavi, on uklanja posljednji element iz niza"
92,92,1825,10.6,Left Child -&gt; Parent -&gt; Right Child,"Traverse the left subtree, then the root, then the right subtree.",What is the inorder traversal of a binary tree?,5.0,"Durchqueren Sie den linken Teilbaum, dann die Wurzel und dann den rechten Teilbaum.",Was ist die Inorder Traversal eines Binärbaums?,Linkes Kind -&gt; Eltern -&gt; Rechtes Kind,Unsa man ang inorder traversal sa usa ka binary nga kahoy?,"Pagtabok sa wala nga subtree, pagkahuman sa gamot, pagkahuman sa tuo nga subtree.",Wala nga Bata -&gt; Ginikanan -&gt; Tama nga Bata,Vad är inorder traversal av ett binärt träd?,"Korsa vänster subtree, sedan roten, sedan höger subtree.",Vänsterbarn -&gt; Förälder -&gt; Högerbarn,Quelle est la traversée en ordre d&#39;un arbre binaire?,"Traversez le sous-arbre gauche, puis la racine, puis le sous-arbre droit.",Enfant gauche -&gt; Parent -&gt; Enfant droit,Wat is de volgorde waarin een binaire boom wordt doorlopen?,"Beweeg de linker substructuur, dan de wortel en dan de rechter substructuur.",Linker kind -&gt; Ouder -&gt; Rechter kind,Что такое обход двоичного дерева в порядке?,"Пройдите по левому поддереву, затем по корню, затем по правому поддереву.",Левый ребенок -&gt; Родитель -&gt; Правый ребенок,Qual è l&#39;attraversamento in ordine di un albero binario?,"Attraversa la sottostruttura sinistra, quindi la radice, quindi la sottostruttura destra.",Figlio sinistro -&gt; Genitore -&gt; Figlio destro,¿Cuál es el recorrido en orden de un árbol binario?,"Atraviesa el subárbol izquierdo, luego la raíz y luego el subárbol derecho.",Hijo izquierdo -&gt; Padre -&gt; Hijo derecho,Jakie jest wewnętrzne przejście drzewa binarnego?,"Przejdź przez lewe poddrzewo, następnie korzeń, a następnie prawe poddrzewo.",Lewe dziecko -&gt; Rodzic -&gt; Prawe dziecko,Đường truyền ngang dòng của cây nhị phân là gì?,"Duyệt qua cây con bên trái, rồi đến gốc, rồi đến cây con bên phải.",Con trái -&gt; Cha mẹ -&gt; Con phải,二分木の順序のない横断とは何ですか？,左側のサブツリー、ルート、右側のサブツリーの順にトラバースします。,左の子-&gt;親-&gt;右の子,二叉树的有序遍历是什么？,遍历左子树，然后遍历根，然后遍历右子树。,左子-&gt;父-&gt;右子,ما هو الاجتياز الداخلي للشجرة الثنائية؟,اجتياز الشجرة الفرعية اليسرى ، ثم الجذر ، ثم الشجرة الفرعية اليمنى.,الطفل الأيسر -&gt; الوالد -&gt; الطفل الأيمن,Що таке обхід бінарного дерева?,"Проведіть ліве піддерево, потім корінь, потім праве піддерево.",Ліва дитина -&gt; Батько -&gt; Права дитина,Qual é a travessia em ordem de uma árvore binária?,"Percorra a subárvore esquerda, depois a raiz e a subárvore direita.",Criança Esquerda -&gt; Pai -&gt; Criança Direita,پیمایش غیرمعمول یک درخت باینری چیست؟,زیر درخت چپ ، سپس ریشه و سپس زیر درخت راست را رد کنید.,فرزند چپ -&gt; والدین -&gt; فرزند راست,Quin és el recorregut inorder d&#39;un arbre binari?,"Travesseu el subarbre esquerre, després l&#39;arrel i després el subarbre dret.",Nen esquerre -&gt; Pare -&gt; Nen dret,Шта је унутрашња преокрет бинарног стабла?,"Пређите преко левог подстабла, затим корена, па десног подстабла.",Лево дете -&gt; Родитељ -&gt; Десно дете,Apa yang dimaksud dengan inorder traversal dari pohon biner?,"Lintasi subtree kiri, lalu akar, lalu subtree kanan.",Anak Kiri -&gt; Orang Tua -&gt; Anak Kanan,Hva er inorder traversal av et binært tre?,"Kryss venstre undertre, deretter roten, deretter høyre undertre.",Venstre barn -&gt; Forelder -&gt; Høyre barn,이진 트리의 inorder traversal은 무엇입니까?,"왼쪽 하위 트리, 루트, 오른쪽 하위 트리 순으로 이동합니다.",왼쪽 자식-&gt; 부모-&gt; 오른쪽 자식,Mikä on binäärisen puun sisäinen kulku?,"Liikuta vasenta osapuuta, sitten juurta, sitten oikeaa osapuuta.",Vasen lapsi -&gt; Vanhempi -&gt; Oikea lapsi,Mi a bináris fa belső bejárása?,"Keresse meg a bal alfát, majd a gyökeret, majd a jobb alfát.",Bal gyermek -&gt; Szülő -&gt; Jobb gyermek,Co je to inorder traversal binárního stromu?,"Procházejte levým podstromem, poté kořenem a poté pravým podstromem.",Left Child -&gt; Parent -&gt; Right Child,Koja je pogreška u binarnom stablu?,"Pređite lijevo podstablo, zatim korijen, pa desno podstablo.",Lijevo dijete -&gt; Roditelj -&gt; Desno dijete
93,93,2295,12.5,"The primary advantage of linked lists over arrays is their ability to become larger or smaller as data is added and removed from the list, whereas arrays may waste memory for small data sets, and run out of space for large data sets.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",What is the advantage of linked lists over arrays?,5.0,"Verknüpfte Listen sind dynamische Strukturen, mit denen eine variable Anzahl von Elementen gespeichert werden kann.",Was ist der Vorteil von verknüpften Listen gegenüber Arrays?,"Der Hauptvorteil verknüpfter Listen gegenüber Arrays besteht darin, dass sie beim Hinzufügen und Entfernen von Daten zur Liste größer oder kleiner werden können, während Arrays möglicherweise Speicher für kleine Datensätze verschwenden und für große Datenmengen nicht mehr genügend Speicherplatz zur Verfügung stehen.",Unsa ang bentaha sa mga nalambigit nga lista sa mga pag-array?,"Ang mga nalista nga lista usa ka dinamikong istruktura, nga nagtugot sa usa ka variable number sa mga elemento nga matipigan.","Ang nag-una nga bentaha sa mga nalambigit nga lista sa mga arrays mao ang ilang abilidad nga mahimong mas dako o gamay samtang ang datos gidugang ug gikuha gikan sa lista, samtang ang mga array mahimong mag-usik sa memorya alang sa gagmay nga mga set sa datos, ug mahutdan og wanang alang sa daghang mga set sa datos.",Vilken är fördelen med länkade listor framför matriser?,Länkade listor är dynamiska strukturer som gör det möjligt att lagra ett varierande antal element.,"Den främsta fördelen med länkade listor framför matriser är deras förmåga att bli större eller mindre när data läggs till och tas bort från listan, medan matriser kan slösa bort minne för små datamängder och få slut på utrymme för stora datamängder.",Quel est l&#39;avantage des listes chaînées par rapport aux tableaux?,"Les listes liées sont des structures dynamiques, qui permettent de stocker un nombre variable d&#39;éléments.","Le principal avantage des listes liées par rapport aux tableaux est leur capacité à devenir plus grands ou plus petits à mesure que des données sont ajoutées et supprimées de la liste, tandis que les tableaux peuvent gaspiller de la mémoire pour les petits ensembles de données et manquer d&#39;espace pour les grands ensembles de données.",Wat is het voordeel van gekoppelde lijsten ten opzichte van arrays?,Gelinkte lijsten zijn dynamische structuren waarmee een variabel aantal elementen kan worden opgeslagen.,"Het belangrijkste voordeel van gekoppelde lijsten ten opzichte van arrays is dat ze groter of kleiner kunnen worden naarmate er gegevens worden toegevoegd aan en verwijderd uit de lijst, terwijl arrays geheugen kunnen verspillen aan kleine gegevenssets en te weinig ruimte hebben voor grote gegevenssets.",В чем преимущество связанных списков перед массивами?,"Связанные списки - это динамические структуры, которые позволяют хранить переменное количество элементов.","Основным преимуществом связанных списков над массивами является их способность становиться больше или меньше по мере добавления и удаления данных из списка, тогда как массивы могут тратить память на небольшие наборы данных и не хватать места для больших наборов данных.",Qual è il vantaggio degli elenchi collegati rispetto agli array?,"Gli elenchi collegati sono strutture dinamiche, che consentono di memorizzare un numero variabile di elementi.","Il vantaggio principale degli elenchi collegati rispetto agli array è la loro capacità di diventare più grandi o più piccoli man mano che i dati vengono aggiunti e rimossi dall&#39;elenco, mentre gli array possono sprecare memoria per piccoli set di dati e esaurire lo spazio per grandi set di dati.",¿Cuál es la ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas son estructuras dinámicas que permiten almacenar un número variable de elementos.,"La principal ventaja de las listas enlazadas sobre las matrices es su capacidad para aumentar o reducir el tamaño a medida que se agregan y eliminan datos de la lista, mientras que las matrices pueden desperdiciar memoria para conjuntos de datos pequeños y quedarse sin espacio para conjuntos de datos grandes.",Jaka jest przewaga połączonych list nad tablicami?,"Listy połączone to struktury dynamiczne, które pozwalają na przechowywanie zmiennej liczby elementów.","Główną zaletą list połączonych w stosunku do tablic jest ich zdolność do powiększania się lub zmniejszania w miarę dodawania i usuwania danych z listy, podczas gdy tablice mogą marnować pamięć na małe zestawy danych i zabraknąć miejsca na duże zestawy danych.",Lợi thế của danh sách liên kết so với mảng là gì?,"Danh sách được liên kết là cấu trúc động, cho phép lưu trữ một số phần tử thay đổi.","Ưu điểm chính của danh sách được liên kết so với mảng là khả năng trở nên lớn hơn hoặc nhỏ hơn khi dữ liệu được thêm vào và xóa khỏi danh sách, trong khi mảng có thể lãng phí bộ nhớ cho các tập dữ liệu nhỏ và hết dung lượng cho các tập dữ liệu lớn.",配列に対するリンクリストの利点は何ですか？,リンクリストは動的な構造であり、可変数の要素を格納できます。,配列に対するリンクリストの主な利点は、データがリストに追加されたりリストから削除されたりすると大きくなったり小さくなったりする能力ですが、配列は小さなデータセットではメモリを浪費し、大きなデータセットではスペースが不足する可能性があります。,链表相对于数组的优势是什么？,链接列表是动态结构，可以存储可变数量的元素。,链表相对于数组的主要优点是，随着从列表中添加和删除数据的能力，它们变得更大或更小，而数组可能会浪费内存以存储小型数据集，而空间不足则会占用大型数据集。,ما هي ميزة القوائم المرتبطة على المصفوفات؟,القوائم المرتبطة عبارة عن هياكل ديناميكية تسمح بتخزين عدد متغير من العناصر.,الميزة الأساسية للقوائم المرتبطة على المصفوفات هي قدرتها على أن تصبح أكبر أو أصغر عند إضافة البيانات وإزالتها من القائمة ، بينما قد تهدر المصفوفات الذاكرة لمجموعات البيانات الصغيرة ، ونفاد المساحة لمجموعات البيانات الكبيرة.,У чому перевага зв’язаних списків перед масивами?,"Зв’язані списки - це динамічні структури, які дозволяють зберігати змінну кількість елементів.","Основною перевагою зв’язаних списків над масивами є їх здатність збільшуватися чи зменшуватися, коли дані додаються та видаляються зі списку, тоді як масиви можуть витрачати пам’ять для невеликих наборів даних і втрачати місце для великих наборів даних.",Qual é a vantagem das listas vinculadas sobre os arrays?,Listas vinculadas são estruturas dinâmicas que permitem o armazenamento de um número variável de elementos.,"A principal vantagem das listas vinculadas sobre os arrays é sua capacidade de se tornarem maiores ou menores conforme os dados são adicionados e removidos da lista, enquanto os arrays podem desperdiçar memória para pequenos conjuntos de dados e ficar sem espaço para grandes conjuntos de dados.",مزیت لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی ساختارهای پویایی هستند که اجازه می دهند تعداد متغیری از عناصر ذخیره شوند.,مزیت اصلی لیست های پیوندی نسبت به آرایه ها این است که آنها می توانند با افزودن و حذف داده ها از لیست ، بزرگتر یا کوچکتر شوند ، در حالی که آرایه ها ممکن است حافظه را برای مجموعه داده های کوچک هدر دهند و فضای کافی برای مجموعه داده های بزرگ را نداشته باشند.,Quin avantatge tenen les llistes enllaçades sobre les matrius?,Les llistes enllaçades són estructures dinàmiques que permeten emmagatzemar un nombre variable d’elements.,"L’avantatge principal de les llistes enllaçades sobre les matrius és la seva capacitat de fer-se més grans o més petites a mesura que s’afegeixen i s’eliminen dades de la llista, mentre que les matrius poden malgastar memòria per a conjunts de dades petits i quedar-se sense espai per a conjunts de dades grans.",Која је предност повезаних листа над низовима?,"Повезане листе су динамичке структуре, које омогућавају чување променљивог броја елемената.","Примарна предност повезаних листа над низовима је њихова способност да постану веће или мање како се подаци додају и уклањају са листе, док низови могу трошити меморију за мале скупове података и остати без простора за велике скупове података.",Apa keuntungan dari daftar tertaut dibandingkan array?,"Daftar tertaut adalah struktur dinamis, yang memungkinkan penyimpanan sejumlah elemen variabel.","Keuntungan utama daftar tertaut dibandingkan array adalah kemampuannya untuk menjadi lebih besar atau lebih kecil karena data ditambahkan dan dihapus dari daftar, sedangkan array dapat membuang memori untuk kumpulan data kecil, dan kehabisan ruang untuk kumpulan data besar.",Hva er fordelen med koblede lister i forhold til matriser?,"Koblede lister er dynamiske strukturer, som gjør det mulig å lagre et variabelt antall elementer.","Den primære fordelen med koblede lister over matriser er deres evne til å bli større eller mindre ettersom data legges til og fjernes fra listen, mens matriser kan kaste bort minne for små datasett og gå tom for plass til store datasett.",배열에 비해 연결된 목록의 장점은 무엇입니까?,"연결된 목록은 동적 구조로, 다양한 수의 요소를 저장할 수 있습니다.","배열에 비해 연결된 목록의 주요 이점은 데이터가 목록에서 추가 및 제거 될 때 더 커지거나 작아 질 수있는 반면, 배열은 작은 데이터 세트의 경우 메모리를 낭비하고 큰 데이터 세트의 경우 공간이 부족할 수 있다는 것입니다.",Mikä on linkitettyjen luetteloiden etu matriiseihin verrattuna?,"Linkitetyt luettelot ovat dynaamisia rakenteita, joiden avulla voidaan tallentaa vaihteleva määrä elementtejä.","Linkitettyjen luetteloiden ensisijainen etu matriiseihin nähden on niiden kyky muuttua suuremmaksi tai pienemmäksi, kun tietoja lisätään ja poistetaan luettelosta, kun taas matriisit saattavat tuhlata muistia pienille tietojoukoille ja loppua tilaa suurille tietojoukoille.",Mi az előnye a kapcsolt listáknak a tömbökkel szemben?,"Az összekapcsolt listák dinamikus struktúrák, amelyek változó számú elem tárolását teszik lehetővé.","Az összekapcsolt listák elsődleges előnye a tömbökkel szemben az, hogy nagyobbak vagy kisebbek lehetnek, mivel az adatokat hozzáadják és eltávolítják a listáról, míg a tömbök kis memóriakészleteket pazarolhatnak, és nagy adathalmazok számára elfogyhat a hely.",Jaká je výhoda propojených seznamů oproti polím?,"Propojené seznamy jsou dynamické struktury, které umožňují uložit proměnný počet prvků.","Primární výhodou propojených seznamů oproti polím je jejich schopnost zvětšovat nebo zmenšovat se při přidávání a odebírání dat ze seznamu, zatímco pole mohou plýtvat pamětí pro malé datové sady a docházet jim místo pro velké datové sady.",Koja je prednost povezanih lista nad nizovima?,"Povezane liste su dinamičke strukture, koje omogućuju pohranjivanje promjenjivog broja elemenata.","Primarna prednost povezanih popisa nad nizovima je njihova sposobnost da postanu veće ili manje kako se podaci dodaju i uklanjaju s popisa, dok nizovi mogu trošiti memoriju za male skupove podataka i ostati bez prostora za velike skupove podataka."
94,94,304,2.4,whenevery you dont specifiy your own,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When does C++ create a default constructor?,5.0,"Wenn kein Konstruktor angegeben ist, stellt der Compiler standardmäßig einen bereit. Wenn für eine Klasse ein Konstruktor definiert ist, erstellt der Compiler keinen Standardkonstruktor.",Wann erstellt C ++ einen Standardkonstruktor?,wann immer Sie nicht Ihre eigenen spezifizieren,Kanus-a maghimo ang C ++ usa ka default nga magtutukod?,"Kung wala gihatag ang magtutukod, ang tagatala naghatag usa ingon default. Kung ang usa ka magtutukod gihubit alang sa usa ka klase, ang tagtipon dili maghimo usa ka default nga magtutukod.",kung kanus-a ka wala nimo paghunahuna nga kaugalingon nimo,När skapar C ++ en standardkonstruktör?,Om ingen konstruktör tillhandahålls tillhandahåller kompilatorn en som standard. Om en konstruktör är definierad för en klass skapar inte kompilatorn en standardkonstruktör.,när du inte anger din egen,Quand C ++ crée-t-il un constructeur par défaut?,"Si aucun constructeur n&#39;est fourni, le compilateur en fournit un par défaut. Si un constructeur est défini pour une classe, le compilateur ne crée pas de constructeur par défaut.",quand vous ne spécifiez pas le vôtre,Wanneer maakt C ++ een standaardconstructor?,"Als er geen constructor is opgegeven, biedt de compiler er standaard een aan. Als een constructor is gedefinieerd voor een klasse, maakt de compiler geen standaardconstructor.",telkens als u uw eigen niet specificeert,Когда C ++ создает конструктор по умолчанию?,"Если конструктор не указан, компилятор предоставляет его по умолчанию. Если для класса определен конструктор, компилятор не создает конструктор по умолчанию.",когда вы не укажете свой собственный,Quando C ++ crea un costruttore predefinito?,"Se non viene fornito alcun costruttore, il compilatore ne fornisce uno per impostazione predefinita. Se un costruttore è definito per una classe, il compilatore non crea un costruttore predefinito.",ogni volta che non specifichi il tuo,¿Cuándo crea C ++ un constructor predeterminado?,"Si no se proporciona ningún constructor, el compilador proporciona uno por defecto. Si se define un constructor para una clase, el compilador no crea un constructor predeterminado.",siempre que no especifiques el tuyo,Kiedy C ++ tworzy domyślny konstruktor?,"Jeśli nie podano konstruktora, kompilator udostępnia go domyślnie. Jeśli konstruktor jest zdefiniowany dla klasy, kompilator nie tworzy konstruktora domyślnego.","za każdym razem, gdy nie określisz własnego",Khi nào C ++ tạo một phương thức khởi tạo mặc định?,"Nếu không có hàm tạo nào được cung cấp, trình biên dịch sẽ cung cấp một hàm tạo theo mặc định. Nếu một phương thức khởi tạo được định nghĩa cho một lớp, trình biên dịch không tạo một phương thức khởi tạo mặc định.",bất cứ khi nào bạn không xác định của riêng bạn,C ++はいつデフォルトのコンストラクターを作成しますか？,コンストラクターが提供されていない場合、コンパイラーはデフォルトでコンストラクターを提供します。クラスにコンストラクターが定義されている場合、コンパイラーはデフォルトのコンストラクターを作成しません。,あなたがあなた自身を特定しないときはいつでも,C ++何时创建默认构造函数？,如果未提供构造函数，则编译器默认提供一个构造函数。如果为类定义了构造函数，则编译器不会创建默认构造函数。,每当你不指定自己的,متى تقوم C ++ بإنشاء مُنشئ افتراضي؟,إذا لم يتم توفير مُنشئ ، يوفر المترجم واحدًا افتراضيًا. إذا تم تعريف مُنشئ لفئة ، فلن يقوم المترجم بإنشاء مُنشئ افتراضي.,عندما لا تحددها بنفسك,Коли C ++ створює конструктор за замовчуванням?,"Якщо конструктор не вказаний, компілятор надає такий за замовчуванням. Якщо для класу визначено конструктор, компілятор не створює конструктор за замовчуванням.",де б ти не вказував свій власний,Quando C ++ cria um construtor padrão?,"Se nenhum construtor for fornecido, o compilador fornece um por padrão. Se um construtor é definido para uma classe, o compilador não cria um construtor padrão.",sempre que você não especifica o seu próprio,C ++ چه زمانی سازنده پیش فرض ایجاد می کند؟,اگر سازنده ای ارائه نشده باشد ، کامپایلر به طور پیش فرض سازنده ای را ارائه می دهد. اگر سازنده ای برای یک کلاس تعریف شده باشد ، کامپایلر یک سازنده پیش فرض ایجاد نمی کند.,هر وقت خودتان را مشخص نکنید,Quan crea C ++ un constructor per defecte?,"Si no es proporciona cap constructor, el compilador en proporciona un per defecte. Si es defineix un constructor per a una classe, el compilador no crea un constructor per defecte.",sempre que no especifiqueu la vostra,Када Ц ++ креира подразумевани конструктор?,"Ако није наведен ниједан конструктор, компајлер га подразумевано нуди. Ако је конструктор дефинисан за класу, компајлер не креира подразумевани конструктор.",где год не наведете своје,Kapan C ++ membuat konstruktor default?,"Jika tidak ada konstruktor yang disediakan, kompilator menyediakannya secara default. Jika konstruktor ditentukan untuk kelas, kompilator tidak membuat konstruktor default.",ketika Anda tidak menentukan milik Anda sendiri,Når oppretter C ++ en standardkonstruktør?,"Hvis ingen konstruktører er gitt, gir kompilatoren en som standard. Hvis en konstruktør er definert for en klasse, lager ikke kompilatoren en standardkonstruktør.",når du ikke spesifiserer din egen,C ++는 언제 기본 생성자를 생성합니까?,생성자가 제공되지 않으면 컴파일러는 기본적으로 생성자를 제공합니다. 생성자가 클래스에 대해 정의 된 경우 컴파일러는 기본 생성자를 만들지 않습니다.,당신은 당신 자신을 지정하지 않을 때마다,Milloin C ++ luo oletusrakentajan?,"Jos rakennuttajaa ei ole, kääntäjä antaa sellaisen oletusarvoisesti. Jos luokalle on määritetty konstruktori, kääntäjä ei luo oletusrakentajaa.",aina kun et määritä omaa,Mikor hoz létre a C ++ egy alapértelmezett konstruktort?,"Ha nincs megadva konstruktor, akkor a fordító alapértelmezés szerint biztosít egyet. Ha egy osztályhoz definiált egy konstruktort, akkor a fordító nem hoz létre alapértelmezett konstruktort.",amikor nem határozza meg a sajátját,Kdy C ++ vytvoří výchozí konstruktor?,"Pokud není k dispozici žádný konstruktor, kompilátor ho ve výchozím nastavení poskytuje. Pokud je pro třídu definován konstruktor, kompilátor nevytvoří výchozí konstruktor.",kdykoli neurčíte své vlastní,Kada C ++ kreira zadani konstruktor?,"Ako nije naveden nijedan konstruktor, kompajler ga prema zadanim postavkama daje. Ako je konstruktor definiran za klasu, kompajler ne stvara zadani konstruktor.",gdje god ne navedete svoje
95,95,195,1.7,"While loop evaluates its expression at the top of its loop and decides if it needs to execute, and the do-while always executes at least once and then evaluates its expression at the bottom of its loop.",The block inside a do...while statement will execute at least once.,What is the main difference between a while and a do...while statement?,5.0,Der Block in einer do ... while-Anweisung wird mindestens einmal ausgeführt.,Was ist der Hauptunterschied zwischen einer while- und einer do ... while-Anweisung?,"Die while-Schleife wertet ihren Ausdruck am oberen Rand ihrer Schleife aus und entscheidet, ob sie ausgeführt werden muss. Die do-while-Schleife wird immer mindestens einmal ausgeführt und wertet dann ihren Ausdruck am unteren Rand der Schleife aus.",Unsa ang punoan nga kalainan tali sa usa ka samtang ug usa nga buhaton ... samtang pahayag?,Ang bloke sa sulud sa usa ka buhaton ... samtang ang pahayag magpatuman labing menos kausa.,"Samtang gisusi sa loop ang ekspresyon niini sa tumoy nga loop niini ug gihukman kung kini kinahanglan nga ipatuman, ug ang do-while kanunay nagpatuman labing menos kausa ug pagkahuman gisusi ang ekspresyon niini sa ilawom sa loop.",Vad är den största skillnaden mellan ett tag och ett do ... while-uttalande?,Blocket inuti ett do ... while-uttalande kommer att köras minst en gång.,"While loop utvärderar sitt uttryck högst upp i loop och bestämmer om det behöver exekveras, och do-while körs alltid åtminstone en gång och utvärderar sedan sitt uttryck längst ner i loop.",Quelle est la principale différence entre une déclaration while et une déclaration do ... while?,Le bloc à l&#39;intérieur d&#39;une instruction do ... while s&#39;exécutera au moins une fois.,"La boucle While évalue son expression en haut de sa boucle et décide si elle doit s&#39;exécuter, et le do-while s&#39;exécute toujours au moins une fois, puis évalue son expression au bas de sa boucle.",Wat is het belangrijkste verschil tussen een while en een do ... while-verklaring?,Het blok binnen een do ... while-instructie wordt minstens één keer uitgevoerd.,"While-lus evalueert zijn uitdrukking bovenaan zijn lus en beslist of hij moet worden uitgevoerd, en de do-while wordt altijd minstens één keer uitgevoerd en evalueert dan zijn uitdrukking onderaan zijn lus.",В чем основное различие между оператором while и do ... while?,Блок внутри оператора do ... while будет выполнен как минимум один раз.,"Цикл while оценивает свое выражение в верхней части своего цикла и решает, нужно ли ему выполнять, а do-while всегда выполняется хотя бы один раз, а затем оценивает свое выражение в конце цикла.",Qual è la differenza principale tra un&#39;istruzione while e a do ... while?,Il blocco all&#39;interno di un&#39;istruzione do ... while verrà eseguito almeno una volta.,"Il ciclo While valuta la sua espressione all&#39;inizio del suo ciclo e decide se deve essere eseguito, e il do-while viene eseguito sempre almeno una volta e poi valuta la sua espressione alla fine del suo ciclo.",¿Cuál es la principal diferencia entre una declaración while y do ... while?,El bloque dentro de una instrucción do ... while se ejecutará al menos una vez.,"Mientras que el bucle evalúa su expresión en la parte superior de su bucle y decide si debe ejecutarse, el do-while siempre se ejecuta al menos una vez y luego evalúa su expresión en la parte inferior de su bucle.",Jaka jest główna różnica między stwierdzeniem a while a do ... while?,Blok wewnątrz instrukcji do ... while zostanie wykonany co najmniej raz.,"Pętla While ocenia swoje wyrażenie na początku swojej pętli i decyduje, czy musi zostać wykonana, a funkcja do-while zawsze wykonuje co najmniej raz, a następnie ocenia swoje wyrażenie na dole pętli.",Sự khác biệt chính giữa câu lệnh while và do ... while là gì?,Khối bên trong câu lệnh do ... while sẽ thực thi ít nhất một lần.,Vòng lặp while đánh giá biểu thức của nó ở đầu vòng lặp và quyết định xem nó có cần thực thi hay không và do-while luôn thực thi ít nhất một lần và sau đó đánh giá biểu thức của nó ở cuối vòng lặp.,whileステートメントとdo ... whileステートメントの主な違いは何ですか？,do ... whileステートメント内のブロックは、少なくとも1回実行されます。,whileループは、ループの先頭で式を評価して実行する必要があるかどうかを判断し、do-whileは常に少なくとも1回実行してから、ループの下部で式を評価します。,while和do ... while语句之间的主要区别是什么？,do ... while语句中的块将至少执行一次。,while循环在其循环的顶部评估其表达式，并确定是否需要执行，而do-while总是至少执行一次，然后在其循环的底部评估其表达式。,ما هو الفرق الرئيسي بين جملة while و a do ... while؟,سيتم تنفيذ الكتلة داخل بيان do ... while مرة واحدة على الأقل.,تقوم while loop بتقييم تعبيرها في الجزء العلوي من حلقتها وتقرر ما إذا كانت بحاجة إلى التنفيذ ، ويتم تنفيذ do-while دائمًا مرة واحدة على الأقل ثم تقوم بتقييم تعبيرها في الجزء السفلي من الحلقة.,Яка головна різниця між твердженням while та do ... while?,Блок усередині оператора do ... while виконуватиметься принаймні один раз.,"Цикл while обчислює свій вираз у верхній частині свого циклу і вирішує, чи потрібно його виконувати, а виконуваний документ завжди виконує принаймні один раз, а потім оцінює свій вираз внизу свого циклу.",Qual é a principal diferença entre a instrução while e do ... while?,O bloco dentro de uma instrução do ... while será executado pelo menos uma vez.,"O loop while avalia sua expressão no topo de seu loop e decide se ele precisa ser executado, e o do-while sempre é executado pelo menos uma vez e então avalia sua expressão na parte inferior de seu loop.",تفاوت اصلی میان جمله و حالات do ... while چیست؟,بلوک داخل دستور do ... while حداقل یک بار اجرا می شود.,حلقه در حالی که بیان خود را در بالای حلقه خود ارزیابی می کند و تصمیم می گیرد که آیا لازم است اجرا شود ، و do-while همیشه حداقل یک بار اجرا می شود و سپس بیان آن را در پایین حلقه خود ارزیابی می کند.,Quina és la diferència principal entre una afirmació mentre que una sentència do ... while?,El bloc dins d&#39;una sentència do ... while s&#39;executarà almenys una vegada.,"While loop avalua la seva expressió a la part superior del bucle i decideix si cal executar-lo, i el do-while sempre s’executa almenys una vegada i després avalua la seva expressió a la part inferior del bucle.",Која је главна разлика између изјаве неко време и уради ... док?,Блок унутар наредбе до ... вхиле извршиће се најмање једном.,"Док петља процењује свој израз на врху своје петље и одлучује да ли треба да се изврши, а до-вхиле се извршава увек најмање једном, а затим процењује свој израз на дну своје петље.",Apa perbedaan utama antara pernyataan while dan do ... while?,Blok di dalam pernyataan do ... while akan dieksekusi setidaknya sekali.,"While loop mengevaluasi ekspresinya di bagian atas loop dan memutuskan apakah ia perlu dieksekusi, dan do-while selalu mengeksekusi setidaknya sekali dan kemudian mengevaluasi ekspresinya di bagian bawah loop.",Hva er hovedforskjellen mellom en stund og en gjør ... mens uttalelse?,Blokken inne i en gjør ... mens uttalelsen vil kjøres minst en gang.,"Mens loop evaluerer uttrykket sitt øverst i loop og bestemmer om det må utføres, og do-while kjøres alltid minst en gang og evaluerer deretter uttrykket nederst i loop.",while과 do ... while 문의 주요 차이점은 무엇입니까?,do ... while 문 내부의 블록은 한 번 이상 실행됩니다.,While 루프는 루프의 맨 위에서 표현식을 평가하고 실행해야하는지 여부를 결정하고 do-while은 항상 적어도 한 번 실행 한 다음 루프의 맨 아래에서 표현식을 평가합니다.,Mikä on tärkein ero hetken ja tekemisen ... lausunnon välillä?,Lohko do ... while-lauseen sisällä suoritetaan ainakin kerran.,"Vaikka silmukka arvioi lausekkeensa silmukan yläosassa ja päättää, tarvitseeko se suorittaa, ja do-while suorittaa aina ainakin kerran ja sitten arvioi lausekkeensa silmukan alareunassa.",Mi a fő különbség egy idő és egy tennivaló ... kijelentés között?,A blokk a do ... while utasításban legalább egyszer végrehajtásra kerül.,"Míg a hurok kiértékeli a hurok tetején lévő kifejezést, és eldönti, hogy végre kell-e hajtania, a do-while mindig legalább egyszer végrehajtja, majd kiértékeli a hurok alján lévő kifejezést.",Jaký je hlavní rozdíl mezi příkazem while a do ... while?,Blok uvnitř příkazu do ... while se provede alespoň jednou.,"Zatímco smyčka vyhodnotí svůj výraz v horní části své smyčky a rozhodne, zda je potřeba provést, a do-while se vždy provede alespoň jednou a poté vyhodnotí svůj výraz v dolní části své smyčky.",Koja je glavna razlika između izjave neko vrijeme i do ... while?,Blok unutar naredbe do ... while izvršit će se najmanje jednom.,"Dok petlja procjenjuje svoj izraz na vrhu svoje petlje i odlučuje treba li izvršiti, a do-while uvijek izvršava barem jednom, a zatim procjenjuje svoj izraz na dnu svoje petlje."
96,96,40,1.2,"The refining step, the production step, and the maintenance stage.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),What stages in the software life cycle are influenced by the testing stage?,3.5,Die Teststufe kann sowohl die Codierungsstufe (Phase 5) als auch die Lösungsverfeinerungsstufe (Phase 7) beeinflussen.,Welche Phasen im Software-Lebenszyklus werden von der Testphase beeinflusst?,"Der Raffinierungsschritt, der Produktionsschritt und die Wartungsphase.",Unsang mga yugto sa siklo sa kinabuhi sa software ang naimpluwensyahan sa yugto sa pagsulay?,Ang yugto sa pagsulay mahimong makaimpluwensya sa pareho nga yugto sa pag-coding (yugto 5) ug ang yugto sa pagpino sa solusyon (yugto 7),"Ang lakang sa pagdalisay, ang lakang sa produksyon, ug ang yugto sa pagpadayon.",Vilka steg i programvarans livscykel påverkas av testfasen?,Teststeget kan påverka både kodningssteget (fas 5) och lösningsförfiningssteget (fas 7),"Raffineringssteget, produktionssteget och underhållssteget.",Quelles étapes du cycle de vie du logiciel sont influencées par l&#39;étape de test?,L&#39;étape de test peut influencer à la fois l&#39;étape de codage (phase 5) et l&#39;étape de raffinement de la solution (phase 7),"L&#39;étape de raffinage, l&#39;étape de production et l&#39;étape de maintenance.",Welke fasen in de levenscyclus van software worden beïnvloed door de testfase?,De testfase kan zowel de coderingsfase (fase 5) als de oplossingsverfijningsfase (fase 7) beïnvloeden,"De raffinagestap, de productiestap en de onderhoudsfase.",На какие этапы жизненного цикла ПО влияет этап тестирования?,"Этап тестирования может влиять как на этап кодирования (этап 5), так и на этап уточнения решения (этап 7).","Этап очистки, этап производства и этап обслуживания.",Quali fasi del ciclo di vita del software sono influenzate dalla fase di test?,La fase di test può influenzare sia la fase di codifica (fase 5) che la fase di affinamento della soluzione (fase 7),"La fase di raffinazione, la fase di produzione e la fase di manutenzione.",¿Qué etapas del ciclo de vida del software están influenciadas por la etapa de prueba?,La etapa de prueba puede influir tanto en la etapa de codificación (fase 5) como en la etapa de refinamiento de la solución (fase 7),"La etapa de refinación, la etapa de producción y la etapa de mantenimiento.",Na jakie etapy cyklu życia oprogramowania wpływa etap testowania?,"Etap testowania może wpływać zarówno na etap kodowania (faza 5), jak i na etap udoskonalania rozwiązania (faza 7)","Etap rafinacji, etap produkcji i etap konserwacji.",Giai đoạn nào trong vòng đời phần mềm bị ảnh hưởng bởi giai đoạn kiểm thử?,Giai đoạn thử nghiệm có thể ảnh hưởng đến cả giai đoạn mã hóa (giai đoạn 5) và giai đoạn tinh chỉnh giải pháp (giai đoạn 7),"Bước tinh chế, bước sản xuất và công đoạn bảo dưỡng.",ソフトウェアライフサイクルのどの段階がテスト段階の影響を受けますか？,テスト段階は、コーディング段階（フェーズ5）とソリューションの改良段階（フェーズ7）の両方に影響を与える可能性があります。,精製段階、生産段階、および保守段階。,测试阶段会影响软件生命周期的哪些阶段？,测试阶段可以影响编码阶段（阶段5）和解决方案优化阶段（阶段7）,精炼步骤，生产步骤和维护阶段。,ما هي مراحل دورة حياة البرنامج التي تتأثر بمرحلة الاختبار؟,يمكن أن تؤثر مرحلة الاختبار على كل من مرحلة التشفير (المرحلة 5) ومرحلة تحسين الحل (المرحلة 7),خطوة التكرير وخطوة الإنتاج ومرحلة الصيانة.,На які етапи життєвого циклу програмного забезпечення впливає етап тестування?,"Стадія випробування може впливати як на стадію кодування (фаза 5), так і на стадію доробки розчину (фаза 7)","Етап переробки, етап виробництва та етап технічного обслуговування.",Que fases do ciclo de vida do software são influenciadas pela fase de teste?,O estágio de teste pode influenciar tanto o estágio de codificação (fase 5) quanto o estágio de refinamento da solução (fase 7),"A etapa de refino, a etapa de produção e a etapa de manutenção.",چه مرحله هایی از چرخه عمر نرم افزار تحت تأثیر مرحله آزمایش قرار می گیرند؟,مرحله آزمایش می تواند هم در مرحله کدگذاری (مرحله 5) و هم در مرحله تصفیه محلول (مرحله 7) تأثیر بگذارد.,مرحله تصفیه ، مرحله تولید و مرحله نگهداری.,Quines etapes del cicle de vida del programari estan influïdes per la fase de proves?,L&#39;etapa de prova pot influir tant en l&#39;etapa de codificació (fase 5) com en l&#39;etapa de refinament de la solució (fase 7),"El pas de refinament, el de producció i el de manteniment.",На које фазе у животном циклусу софтвера утиче фаза тестирања?,Фаза испитивања може утицати и на фазу кодирања (фаза 5) и на фазу усавршавања раствора (фаза 7),"Корак рафинирања, корак производње и фаза одржавања.",Tahapan apa dalam siklus hidup perangkat lunak yang dipengaruhi oleh tahap pengujian?,Tahap pengujian dapat mempengaruhi tahap pengkodean (tahap 5) dan tahap perbaikan solusi (tahap 7),"Tahap pemurnian, tahap produksi, dan tahap pemeliharaan.",Hvilke stadier i programvarens livssyklus påvirkes av testfasen?,Testfasen kan påvirke både kodingsfasen (fase 5) og løsningsfinesseringen (fase 7),"Raffineringstrinnet, produksjonstrinnet og vedlikeholdstrinnet.",테스트 단계의 영향을받는 소프트웨어 수명주기의 단계는 무엇입니까?,테스트 단계는 코딩 단계 (5 단계)와 솔루션 개선 단계 (7 단계) 모두에 영향을 미칠 수 있습니다.,"정제 단계, 생산 단계 및 유지 관리 단계.",Mihin ohjelmiston elinkaaren vaiheisiin testausvaihe vaikuttaa?,Testausvaihe voi vaikuttaa sekä koodausvaiheeseen (vaihe 5) että liuoksen jalostusvaiheeseen (vaihe 7),"Jalostusvaihe, tuotantovaihe ja huoltovaihe.",A szoftver életciklusának mely szakaszait befolyásolja a tesztelési szakasz?,"A tesztelési szakasz befolyásolhatja mind a kódolási (5. fázis), mind az oldat-finomítási fázist (7. fázis)","A finomítási, a gyártási és a karbantartási lépés.",Na jaké fáze životního cyklu softwaru má fáze testování vliv?,"Fáze testování může ovlivnit jak fázi kódování (fáze 5), tak fázi zdokonalení řešení (fáze 7)","Krok rafinace, krok výroby a fáze údržby.",Na koje faze u životnom ciklusu softvera utiče faza testiranja?,Faza ispitivanja može utjecati i na fazu kodiranja (faza 5) i na fazu usavršavanja rastvora (faza 7),"Korak rafiniranja, korak proizvodnje i faza održavanja."
97,97,2323,12.6,"A queue is a linear, first-in first-out data structure. Data must be accessed in the same order it was put into the queue, so only the oldest item in the queue is accessible at any time. Main functions defined are enqueue and dequeue.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,5.0,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Eine Warteschlange ist eine lineare First-In-First-Out-Datenstruktur. Auf Daten muss in derselben Reihenfolge zugegriffen werden, in der sie in die Warteschlange gestellt wurden, sodass jederzeit nur auf das älteste Element in der Warteschlange zugegriffen werden kann. Die definierten Hauptfunktionen sind Enqueue und Dequeue.",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,"Ang usa ka pila mao ang usa ka linear, first-in first-out nga istruktura sa datos. Ang data kinahanglan ma-access sa parehas nga han-ay nga gibutang sa pila, busa ang labing karaan nga butang sa pila ang ma-access bisan unsang orasa. Gihubit ang mga punoan nga gimbuhaton mao ang enqueue ug dequeue.",Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,"En kö är en linjär, först in först ut-datastruktur. Data måste nås i samma ordning som de placerades i kön, så att endast det äldsta objektet i kön är tillgängligt när som helst. De definierade huvudfunktionerna är enqueue och dequeue.",Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.","Une file d&#39;attente est une structure de données linéaire, premier entré, premier sorti. Les données doivent être accessibles dans le même ordre dans lequel elles ont été placées dans la file d&#39;attente, de sorte que seul l&#39;élément le plus ancien de la file d&#39;attente est accessible à tout moment. Les principales fonctions définies sont la mise en file d&#39;attente et la suppression de la file d&#39;attente.",Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,"Een wachtrij is een lineaire, first-in-first-out datastructuur. Gegevens moeten worden geopend in dezelfde volgorde als waarin ze in de wachtrij zijn geplaatst, dus alleen het oudste item in de wachtrij is op elk moment toegankelijk. De belangrijkste gedefinieerde functies zijn enqueue en dequeue.",Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","Очередь - это линейная структура данных по принципу «первым пришел - первым обслужен». Доступ к данным должен осуществляться в том же порядке, в котором они были помещены в очередь, поэтому в любой момент доступен только самый старый элемент в очереди. Определены основные функции: постановка в очередь и удаление из очереди.",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,"Una coda è una struttura dati lineare, first-in first-out. È necessario accedere ai dati nello stesso ordine in cui sono stati inseriti nella coda, quindi solo l&#39;elemento più vecchio nella coda è accessibile in qualsiasi momento. Le funzioni principali definite sono enqueue e dequeue.",¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.","Una cola es una estructura de datos lineal, primero en entrar, primero en salir. Se debe acceder a los datos en el mismo orden en que se colocaron en la cola, por lo que solo se puede acceder al elemento más antiguo de la cola en cualquier momento. Las funciones principales definidas son poner en cola y sacar de cola.",Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","Kolejka to liniowa struktura danych „pierwszy na wejściu, pierwszy na wyjściu”. Dane muszą być dostępne w tej samej kolejności, w jakiej zostały umieszczone w kolejce, aby w każdej chwili dostępna była tylko najstarsza pozycja w kolejce. Główne zdefiniowane funkcje to enqueue i dequeue.",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,"Hàng đợi là một cấu trúc dữ liệu tuyến tính, nhập trước xuất trước. Dữ liệu phải được truy cập theo đúng thứ tự đã được đưa vào hàng đợi, vì vậy chỉ có thể truy cập vào mục cũ nhất trong hàng đợi bất kỳ lúc nào. Các chức năng chính được định nghĩa là enqueue và dequeue.",キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,キューは、線形の先入れ先出しデータ構造です。データは、キューに入れられたのと同じ順序でアクセスする必要があるため、キュー内の最も古いアイテムのみにいつでもアクセスできます。定義されている主な機能は、エンキューとデキューです。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,队列是线性的先进先出数据结构。必须以与放入队列中相同的顺序访问数据，因此任何时候都只能访问队列中最旧的项目。定义的主要功能是入队和出队。,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,قائمة الانتظار هي هيكل بيانات خطي يدخل أولاً يصرف أولاً. يجب الوصول إلى البيانات بنفس الترتيب الذي تم وضعها به في قائمة الانتظار ، لذلك لا يمكن الوصول إلا إلى العنصر الأقدم في قائمة الانتظار في أي وقت. الوظائف الرئيسية المحددة هي قائمة الانتظار و dequeue.,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","Черга - це лінійна структура даних, яка вперше з’являється. Доступ до даних повинен здійснюватися в тому самому порядку, в якому він був поміщений в чергу, тому в будь-який час доступний лише найстаріший елемент у черзі. Основними визначеними функціями є enqueue і dequeue.",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.","Uma fila é uma estrutura de dados linear, primeiro a entrar, primeiro a sair. Os dados devem ser acessados na mesma ordem em que foram colocados na fila, portanto, apenas o item mais antigo da fila pode ser acessado a qualquer momento. As funções principais definidas são enfileirar e retirar da fila.",صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,صف یک ساختار داده ای خطی است که برای اولین بار در آن قرار می گیرد. داده ها باید به همان ترتیب قرار گرفته در صف قرار گیرند ، بنابراین در هر زمان فقط قدیمی ترین مورد در صف قابل دسترسی است. توابع اصلی تعریف شده enqueue و dequeue هستند.,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,"Una cua és una estructura de dades lineal, la primera entrada per primera vegada. S&#39;ha d&#39;accedir a les dades en el mateix ordre en què es van posar a la cua, de manera que només es pot accedir a l&#39;element més antic de la cua en qualsevol moment. Les funcions principals definides són enqueue i dequeue.",Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,"Ред је линеарна, прва у структури података која се први пут појављује. Подацима се мора приступити истим редоследом у којем су стављени у ред, тако да је у сваком тренутку доступна само најстарија ставка у реду. Главне функције дефинисане су енкуеуе и декуеуе.",Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,"Antrian adalah struktur data linier, masuk pertama keluar pertama. Data harus diakses dalam urutan yang sama dengan yang dimasukkan ke dalam antrian, jadi hanya item terlama dalam antrian yang dapat diakses kapan saja. Fungsi utama yang didefinisikan adalah enqueue dan dequeue.",Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,"En kø er en lineær, først inn først ut-datastruktur. Data må nås i samme rekkefølge som de ble satt i køen, så bare det eldste elementet i køen er tilgjengelig når som helst. Hovedfunksjonene som er definert er enqueue og dequeue.",대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,큐는 선형의 선입 선출 데이터 구조입니다. 데이터는 큐에 넣은 순서대로 액세스해야하므로 큐에서 가장 오래된 항목 만 언제든지 액세스 할 수 있습니다. 정의 된 주요 기능은 인큐 및 디큐입니다.,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","Jono on lineaarinen, ensimmäinen sisään-ulos-ulos-tietorakenne. Tietoja on käytettävä samassa järjestyksessä kuin ne asetettiin jonoon, joten vain jonon vanhin kohde on käytettävissä milloin tahansa. Päätoiminnot ovat enqueue ja dequeue.",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","A várakozási sor egy lineáris, az első be az első kimenetbe adatstruktúra. Az adatokhoz ugyanabban a sorrendben kell hozzáférni, mint amilyeneket a sorba tettek, így bármikor csak a sor legrégebbi eleme érhető el. A fő funkciók az enqueue és a dequeue.",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","Fronta je lineární datová struktura „první do první“. K datům je třeba přistupovat ve stejném pořadí, v jakém byly zařazeny do fronty, takže je kdykoli přístupná pouze nejstarší položka ve frontě. Hlavní definované funkce jsou enqueue a dequeue.",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,"Red čekanja je linearna, prva u strukturi podataka koja prvi izlazi. Podacima se mora pristupiti istim redoslijedom u kojem su stavljeni u red, tako da je u bilo kojem trenutku dostupna samo najstarija stavka u redu. Glavne funkcije definirane su enqueue i dequeue."
98,98,650,4.1,within the brackets or by using an initializer list.,"In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,5.0,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?",innerhalb der Klammern oder mithilfe einer Initialisierungsliste.,Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.",sulud sa mga bracket o pinaagi sa paggamit sa usa ka lista sa inisyal.,Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,inom parentes eller med en initialiseringslista.,Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,entre crochets ou en utilisant une liste d&#39;initialiseurs.,Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.",tussen haakjes of door een initialisatielijst te gebruiken.,Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,в скобках или с помощью списка инициализаторов.,Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,tra parentesi o utilizzando un elenco di inizializzatori.,¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.",entre corchetes o utilizando una lista de inicializadores.,Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,w nawiasach lub przy użyciu listy inicjalizacyjnej.,Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,trong dấu ngoặc hoặc bằng cách sử dụng danh sách trình khởi tạo.,配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,括弧内に、または初期化子リストを使用して。,指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,在方括号内或使用初始化程序列表。,ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,داخل الأقواس أو باستخدام قائمة مُهيئ.,Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,в дужках або за допомогою списку ініціалізаторів.,Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,dentro dos colchetes ou usando uma lista de inicializadores.,دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,در داخل پرانتز یا با استفاده از لیست اولیه ساز,Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,dins dels claudàtors o mitjançant una llista d&#39;inicialitzadors.,Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,у заградама или помоћу листе иницијализатора.,Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.",dalam tanda kurung atau dengan menggunakan daftar penginisialisasi.,Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.",innenfor parentesene eller ved å bruke en initialiseringsliste.,배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,괄호 안에 또는 이니셜 라이저 목록을 사용하여.,Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,suluissa tai käyttämällä alustusluetteloa.,Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.",a zárójelben vagy az inicializáló lista használatával.,Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,v závorkách nebo pomocí seznamu inicializátorů.,Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,unutar zagrada ili pomoću liste inicijalizatora.
99,99,321,2.4,When you dont specify any constructors.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When does C++ create a default constructor?,5.0,"Wenn kein Konstruktor angegeben ist, stellt der Compiler standardmäßig einen bereit. Wenn für eine Klasse ein Konstruktor definiert ist, erstellt der Compiler keinen Standardkonstruktor.",Wann erstellt C ++ einen Standardkonstruktor?,Wenn Sie keine Konstruktoren angeben.,Kanus-a maghimo ang C ++ usa ka default nga magtutukod?,"Kung wala gihatag ang magtutukod, ang tagatala naghatag usa ingon default. Kung ang usa ka magtutukod gihubit alang sa usa ka klase, ang tagtipon dili maghimo usa ka default nga magtutukod.",Kung dili nimo gipiho ang bisan unsang mga magtutukod.,När skapar C ++ en standardkonstruktör?,Om ingen konstruktör tillhandahålls tillhandahåller kompilatorn en som standard. Om en konstruktör är definierad för en klass skapar inte kompilatorn en standardkonstruktör.,När du inte anger några konstruktörer.,Quand C ++ crée-t-il un constructeur par défaut?,"Si aucun constructeur n&#39;est fourni, le compilateur en fournit un par défaut. Si un constructeur est défini pour une classe, le compilateur ne crée pas de constructeur par défaut.",Lorsque vous ne spécifiez aucun constructeur.,Wanneer maakt C ++ een standaardconstructor?,"Als er geen constructor is opgegeven, biedt de compiler er standaard een aan. Als een constructor is gedefinieerd voor een klasse, maakt de compiler geen standaardconstructor.",Als u geen constructors opgeeft.,Когда C ++ создает конструктор по умолчанию?,"Если конструктор не указан, компилятор предоставляет его по умолчанию. Если для класса определен конструктор, компилятор не создает конструктор по умолчанию.",Когда вы не указываете никаких конструкторов.,Quando C ++ crea un costruttore predefinito?,"Se non viene fornito alcun costruttore, il compilatore ne fornisce uno per impostazione predefinita. Se un costruttore è definito per una classe, il compilatore non crea un costruttore predefinito.",Quando non si specifica alcun costruttore.,¿Cuándo crea C ++ un constructor predeterminado?,"Si no se proporciona ningún constructor, el compilador proporciona uno por defecto. Si se define un constructor para una clase, el compilador no crea un constructor predeterminado.",Cuando no especifica ningún constructor.,Kiedy C ++ tworzy domyślny konstruktor?,"Jeśli nie podano konstruktora, kompilator udostępnia go domyślnie. Jeśli konstruktor jest zdefiniowany dla klasy, kompilator nie tworzy konstruktora domyślnego.",Gdy nie określisz żadnych konstruktorów.,Khi nào C ++ tạo một phương thức khởi tạo mặc định?,"Nếu không có hàm tạo nào được cung cấp, trình biên dịch sẽ cung cấp một hàm tạo theo mặc định. Nếu một phương thức khởi tạo được định nghĩa cho một lớp, trình biên dịch không tạo một phương thức khởi tạo mặc định.",Khi bạn không chỉ định bất kỳ hàm tạo nào.,C ++はいつデフォルトのコンストラクターを作成しますか？,コンストラクターが提供されていない場合、コンパイラーはデフォルトでコンストラクターを提供します。クラスにコンストラクターが定義されている場合、コンパイラーはデフォルトのコンストラクターを作成しません。,コンストラクターを指定しない場合。,C ++何时创建默认构造函数？,如果未提供构造函数，则编译器默认提供一个构造函数。如果为类定义了构造函数，则编译器不会创建默认构造函数。,当您不指定任何构造函数时。,متى تقوم C ++ بإنشاء مُنشئ افتراضي؟,إذا لم يتم توفير مُنشئ ، يوفر المترجم واحدًا افتراضيًا. إذا تم تعريف مُنشئ لفئة ، فلن يقوم المترجم بإنشاء مُنشئ افتراضي.,عندما لا تحدد أي صانعين.,Коли C ++ створює конструктор за замовчуванням?,"Якщо конструктор не вказаний, компілятор надає такий за замовчуванням. Якщо для класу визначено конструктор, компілятор не створює конструктор за замовчуванням.",Коли ви не вказуєте ніяких конструкторів.,Quando C ++ cria um construtor padrão?,"Se nenhum construtor for fornecido, o compilador fornece um por padrão. Se um construtor é definido para uma classe, o compilador não cria um construtor padrão.",Quando você não especifica nenhum construtor.,C ++ چه زمانی سازنده پیش فرض ایجاد می کند؟,اگر سازنده ای ارائه نشده باشد ، کامپایلر به طور پیش فرض سازنده ای را ارائه می دهد. اگر سازنده ای برای یک کلاس تعریف شده باشد ، کامپایلر یک سازنده پیش فرض ایجاد نمی کند.,وقتی هیچ سازنده ای را مشخص نمی کنید.,Quan crea C ++ un constructor per defecte?,"Si no es proporciona cap constructor, el compilador en proporciona un per defecte. Si es defineix un constructor per a una classe, el compilador no crea un constructor per defecte.",Quan no especifiqueu cap constructor.,Када Ц ++ креира подразумевани конструктор?,"Ако није наведен ниједан конструктор, компајлер га подразумевано нуди. Ако је конструктор дефинисан за класу, компајлер не креира подразумевани конструктор.",Када не наведете ниједан конструктор.,Kapan C ++ membuat konstruktor default?,"Jika tidak ada konstruktor yang disediakan, kompilator menyediakannya secara default. Jika konstruktor ditentukan untuk kelas, kompilator tidak membuat konstruktor default.",Saat Anda tidak menentukan konstruktor apa pun.,Når oppretter C ++ en standardkonstruktør?,"Hvis ingen konstruktører er gitt, gir kompilatoren en som standard. Hvis en konstruktør er definert for en klasse, lager ikke kompilatoren en standardkonstruktør.",Når du ikke spesifiserer noen konstruktører.,C ++는 언제 기본 생성자를 생성합니까?,생성자가 제공되지 않으면 컴파일러는 기본적으로 생성자를 제공합니다. 생성자가 클래스에 대해 정의 된 경우 컴파일러는 기본 생성자를 만들지 않습니다.,생성자를 지정하지 않을 때.,Milloin C ++ luo oletusrakentajan?,"Jos rakennuttajaa ei ole, kääntäjä antaa sellaisen oletusarvoisesti. Jos luokalle on määritetty konstruktori, kääntäjä ei luo oletusrakentajaa.",Kun et määritä mitään rakentajia.,Mikor hoz létre a C ++ egy alapértelmezett konstruktort?,"Ha nincs megadva konstruktor, akkor a fordító alapértelmezés szerint biztosít egyet. Ha egy osztályhoz definiált egy konstruktort, akkor a fordító nem hoz létre alapértelmezett konstruktort.",Ha nem ad meg semmilyen konstruktort.,Kdy C ++ vytvoří výchozí konstruktor?,"Pokud není k dispozici žádný konstruktor, kompilátor ho ve výchozím nastavení poskytuje. Pokud je pro třídu definován konstruktor, kompilátor nevytvoří výchozí konstruktor.",Když neurčíte žádné konstruktory.,Kada C ++ kreira zadani konstruktor?,"Ako nije naveden nijedan konstruktor, kompajler ga prema zadanim postavkama daje. Ako je konstruktor definiran za klasu, kompajler ne stvara zadani konstruktor.",Kada ne navedete nijedan konstruktor.
100,100,1195,7.3,You don't have to iterate through the entire list to access elements.,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",What is the main advantage of arrays over linked lists?,4.5,"Auf die Elemente in einem Array kann direkt zugegriffen werden (im Gegensatz zu verknüpften Listen, die eine iterative Durchquerung erfordern).",Was ist der Hauptvorteil von Arrays gegenüber verknüpften Listen?,"Sie müssen nicht die gesamte Liste durchlaufen, um auf Elemente zuzugreifen.",Unsa man ang punoan nga bentaha sa mga han-ay sa mga nalambigit nga lista?,"Ang mga elemento sa usa ka laray mahimong direkta nga ma-access (sukwahi sa mga nalambigit nga lista, nga nanginahanglan iterative traversal).",Dili nimo kinahanglan nga sulayan ang tibuuk nga lista aron maka-access sa mga elemento.,Vad är den största fördelen med matriser jämfört med länkade listor?,"Elementen i en matris kan nås direkt (i motsats till länkade listor, som kräver iterativ genomgång).",Du behöver inte gå igenom hela listan för att komma åt element.,Quel est le principal avantage des tableaux par rapport aux listes chaînées?,"Les éléments d&#39;un tableau sont accessibles directement (par opposition aux listes chaînées, qui nécessitent un parcours itératif).",Vous n&#39;avez pas à parcourir la liste entière pour accéder aux éléments.,Wat is het belangrijkste voordeel van arrays ten opzichte van gekoppelde lijsten?,"De elementen in een array zijn direct toegankelijk (in tegenstelling tot gekoppelde lijsten, die iteratief moeten doorlopen).",U hoeft niet de hele lijst te doorlopen om toegang te krijgen tot elementen.,В чем основное преимущество массивов перед связанными списками?,"К элементам в массиве можно обращаться напрямую (в отличие от связанных списков, требующих итеративного обхода).",Вам не нужно перебирать весь список для доступа к элементам.,Qual è il vantaggio principale degli array rispetto agli elenchi collegati?,"È possibile accedere direttamente agli elementi di un array (al contrario degli elenchi collegati, che richiedono un attraversamento iterativo).",Non è necessario scorrere l&#39;intero elenco per accedere agli elementi.,¿Cuál es la principal ventaja de las matrices sobre las listas enlazadas?,"Se puede acceder directamente a los elementos de una matriz (a diferencia de las listas vinculadas, que requieren un recorrido iterativo).",No tiene que recorrer toda la lista para acceder a los elementos.,Jaka jest główna zaleta tablic w porównaniu z listami połączonymi?,"Do elementów tablicy można uzyskać bezpośredni dostęp (w przeciwieństwie do połączonych list, które wymagają iteracyjnego przechodzenia).","Nie musisz przeglądać całej listy, aby uzyskać dostęp do elementów.",Ưu điểm chính của mảng so với danh sách liên kết là gì?,"Các phần tử trong một mảng có thể được truy cập trực tiếp (trái ngược với danh sách được liên kết, yêu cầu truyền tải lặp đi lặp lại).",Bạn không phải lặp lại toàn bộ danh sách để truy cập các phần tử.,リンクリストに対する配列の主な利点は何ですか？,配列内の要素には直接アクセスできます（反復トラバーサルを必要とするリンクリストとは対照的です）。,要素にアクセスするためにリスト全体を繰り返す必要はありません。,与链接列表相比，数组的主要优点是什么？,数组中的元素可以直接访问（与链表相反，后者需要迭代遍历）。,您不必遍历整个列表即可访问元素。,ما هي الميزة الرئيسية للمصفوفات على القوائم المرتبطة؟,يمكن الوصول إلى العناصر الموجودة في المصفوفة مباشرةً (على عكس القوائم المرتبطة التي تتطلب اجتيازًا تكراريًا).,ليس عليك تكرار القائمة بأكملها للوصول إلى العناصر.,Яка головна перевага масивів над пов’язаними списками?,"До елементів у масиві можна отримати прямий доступ (на відміну від зв’язаних списків, які вимагають ітеративного обходу).","Вам не потрібно переглядати весь список, щоб отримати доступ до елементів.",Qual é a principal vantagem dos arrays em relação às listas vinculadas?,"Os elementos em uma matriz podem ser acessados diretamente (em oposição às listas vinculadas, que exigem travessia iterativa).",Você não precisa iterar por toda a lista para acessar os elementos.,مزیت اصلی آرایه ها نسبت به لیست های پیونددار چیست؟,به عناصر موجود در یک آرایه می توان مستقیماً دسترسی داشت (در مقابل لیست های پیوندی که به پیمایش تکراری نیاز دارند).,برای دسترسی به عناصر نیازی نیست که کل لیست را تکرار کنید.,Quin és el principal avantatge de les matrius sobre les llistes enllaçades?,"Es pot accedir directament als elements d’una matriu (a diferència de les llistes enllaçades, que requereixen un recorregut iteratiu).",No haureu de recórrer tota la llista per accedir als elements.,Која је главна предност низа у односу на повезане листе?,"Елементима у низу може се приступити директно (за разлику од повезаних листа, које захтевају итеративно обилажење).","Да бисте приступили елементима, не морате да прегледате целу листу.",Apa keuntungan utama array dibandingkan daftar tertaut?,"Elemen-elemen dalam sebuah array dapat diakses secara langsung (sebagai kebalikan dari daftar tertaut, yang membutuhkan traversal berulang).",Anda tidak perlu mengulang seluruh daftar untuk mengakses elemen.,Hva er den største fordelen med matriser i forhold til koblede lister?,"Elementene i en matrise kan fås direkte (i motsetning til koblede lister, som krever iterativ gjennomgang).",Du trenger ikke å gjenta gjennom hele listen for å få tilgang til elementer.,연결된 목록에 비해 배열의 주요 이점은 무엇입니까?,배열의 요소는 직접 액세스 할 수 있습니다 (반복 순회가 필요한 연결 목록과 반대).,요소에 액세스하기 위해 전체 목록을 반복 할 필요가 없습니다.,Mikä on matriisien tärkein etu linkitettyihin luetteloihin nähden?,"Taulukon elementteihin pääsee suoraan (toisin kuin linkitetyt luettelot, jotka edellyttävät iteratiivista kulkua).","Sinun ei tarvitse toistaa koko luetteloa, jotta pääset käsiksi elementteihin.",Mi a tömbök fő előnye a kapcsolt listákkal szemben?,"A tömb elemeihez közvetlenül lehet hozzáférni (szemben az összekapcsolt listákkal, amelyek iteratív bejárást igényelnek).",Az elemek eléréséhez nem kell a teljes listát iterálni.,Jaká je hlavní výhoda polí oproti propojeným seznamům?,"K prvkům v poli lze přistupovat přímo (na rozdíl od propojených seznamů, které vyžadují iterativní procházení).",Pro přístup k prvkům nemusíte iterovat celý seznam.,Koja je glavna prednost polja nad povezanim listama?,"Elementima u nizu može se pristupiti izravno (za razliku od povezanih lista, koje zahtijevaju iterativno obilaženje).","Da biste pristupili elementima, ne morate pregledavati cijelu listu."
101,101,934,5.4,"A list size of 1, where it is already sorted.",When the size of the array to be sorted is 1 (or 2),What is the base case for a recursive implementation of merge sort?,5.0,Wenn die Größe des zu sortierenden Arrays 1 (oder 2) beträgt,Was ist der Basisfall für eine rekursive Implementierung der Zusammenführungssortierung?,"Eine Listengröße von 1, wo sie bereits sortiert ist.",Unsa man ang basehan nga kaso alang sa usa ka recursive nga pagpatuman sa merge sort?,Kung ang gidak-on sa laray nga paghan-ay mao ang 1 (o 2),"Usa ka gidak-on sa lista sa 1, diin kini gihan-ay na.",Vad är grunden för ett rekursivt genomförande av sammanslagningssortering?,När storleken på matrisen som ska sorteras är 1 (eller 2),"En liststorlek på 1, där den redan är sorterad.",Quel est le cas de base pour une implémentation récursive du tri par fusion?,Lorsque la taille du tableau à trier est 1 (ou 2),"Une taille de liste de 1, où elle est déjà triée.",Wat is het basisscenario voor een recursieve implementatie van samenvoegsortering?,Als de grootte van de te sorteren array 1 (of 2) is,"Een lijstgrootte van 1, waar deze al is gesorteerd.",Каков базовый случай рекурсивной реализации сортировки слиянием?,Когда размер сортируемого массива равен 1 (или 2),"Размер списка 1, в котором он уже отсортирован.",Qual è il caso di base per un&#39;implementazione ricorsiva di merge sort?,Quando la dimensione dell&#39;array da ordinare è 1 (o 2),"Un elenco di dimensioni pari a 1, dove è già ordinato.",¿Cuál es el caso base para una implementación recursiva del tipo de combinación?,Cuando el tamaño de la matriz a ordenar es 1 (o 2),"Un tamaño de lista de 1, donde ya está ordenado.",Jaki jest podstawowy przypadek rekurencyjnej implementacji sortowania przez scalanie?,Gdy rozmiar sortowanej tablicy to 1 (lub 2),"Lista o rozmiarze 1, gdzie jest już posortowana.",Trường hợp cơ sở cho việc triển khai đệ quy sắp xếp hợp nhất là gì?,Khi kích thước của mảng được sắp xếp là 1 (hoặc 2),"Kích thước danh sách là 1, nơi nó đã được sắp xếp.",マージソートの再帰的実装の基本ケースは何ですか？,ソートする配列のサイズが1（または2）の場合,リストサイズは1で、すでに並べ替えられています。,递归实现合并排序的基本情况是什么？,当要排序的数组的大小为1（或2）时,列表大小为1的地方，已经对其进行了排序。,ما هي الحالة الأساسية للتنفيذ العودي لفرز الدمج؟,عندما يكون حجم المصفوفة المراد فرزها 1 (أو 2),حجم قائمة 1 ، حيث تم فرزها بالفعل.,Який базовий випадок для рекурсивної реалізації злиття?,Коли розмір сортуваного масиву дорівнює 1 (або 2),"Розмір списку 1, де він уже відсортований.",Qual é o caso base para uma implementação recursiva de merge sort?,Quando o tamanho da matriz a ser classificada é 1 (ou 2),"Um tamanho de lista de 1, onde já está classificado.",مورد اصلی برای اجرای بازگشتی نوع ادغام چیست؟,وقتی اندازه آرایه ای که مرتب می شود 1 (یا 2) باشد,اندازه لیست 1 است ، جایی که قبلا مرتب شده است.,Quin és el cas bàsic per a una implementació recursiva del tipus de combinació?,Quan la mida de la matriu a ordenar és 1 (o 2),"Una mida de llista 1, on ja està ordenada.",Који је основни случај за рекурзивну имплементацију сортирања спајања?,Када је величина низа за сортирање 1 (или 2),"Величина листе 1, где је већ сортирана.",Apa kasus dasar untuk implementasi rekursif dari merge sort?,Jika ukuran larik yang akan diurutkan adalah 1 (atau 2),"Ukuran daftar 1, yang sudah diurutkan.",Hva er grunnlag for en rekursiv implementering av sammenslåingssortering?,Når størrelsen på matrisen som skal sorteres er 1 (eller 2),"En listestørrelse på 1, der den allerede er sortert.",병합 정렬을 재귀 적으로 구현하는 기본 사례는 무엇입니까?,정렬 할 배열의 크기가 1 (또는 2) 인 경우,이미 정렬 된 목록 크기 1입니다.,Mikä on yhdistämisen lajittelun rekursiivisen toteutuksen perusta?,Kun lajiteltavan taulukon koko on 1 (tai 2),"Luettelokoko 1, missä se on jo lajiteltu.",Mi az alapesete az egyesítés rendezésének rekurzív megvalósításának?,Amikor a rendezendő tömb mérete 1 (vagy 2),"1-es listaméret, ahol már rendezve van.",Jaký je základní případ rekurzivní implementace typu sloučení?,"Když je velikost pole, které má být tříděno, 1 (nebo 2)","Velikost seznamu 1, kde je již seřazen.",Koji je osnovni slučaj za rekurzivnu implementaciju spajanja sortiranja?,Kada je veličina niza za sortiranje 1 (ili 2),"Veličina liste 1, gdje je već sortirana."
102,102,171,1.6,"Variables are declared in the main function, before any operation is   attempted with the variables.",Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Where are variables declared in a C++ program?,2.0,Variablen können überall in einem Programm deklariert werden. Sie können innerhalb einer Funktion (lokale Variablen) oder außerhalb der Funktionen (globale Variablen) deklariert werden.,Wo werden Variablen in einem C ++ - Programm deklariert?,"Variablen werden in der Hauptfunktion deklariert, bevor eine Operation mit den Variablen versucht wird.",Asa man ang mga variable nga gideklara sa usa ka C ++ nga programa?,Ang mga variable mahimo ipahayag bisan diin sa usa ka programa. Mahimo sila madeklara sa sulud sa usa ka pagpaandar (mga lokal nga baryable) o sa gawas sa mga gimbuhaton (global variable),"Ang mga variable gipahayag sa panguna nga gimbuhaton, sa wala pa gisulayan ang bisan unsang operasyon sa mga variable.",Var deklareras variabler i ett C ++ - program?,Variabler kan deklareras var som helst i ett program. De kan deklareras i en funktion (lokala variabler) eller utanför funktionerna (globala variabler),Variabler deklareras i huvudfunktionen innan någon operation försöks med variablerna.,Où les variables sont-elles déclarées dans un programme C ++?,Les variables peuvent être déclarées n&#39;importe où dans un programme. Ils peuvent être déclarés à l&#39;intérieur d&#39;une fonction (variables locales) ou en dehors des fonctions (variables globales),"Les variables sont déclarées dans la fonction main, avant toute tentative d&#39;opération avec les variables.",Waar worden variabelen gedeclareerd in een C ++ -programma?,Variabelen kunnen overal in een programma worden gedeclareerd. Ze kunnen worden gedeclareerd binnen een functie (lokale variabelen) of buiten de functies (globale variabelen),"Variabelen worden gedeclareerd in de hoofdfunctie, voordat een bewerking wordt geprobeerd met de variabelen.",Где объявлены переменные в программе на C ++?,Переменные можно объявлять в любом месте программы. Они могут быть объявлены внутри функции (локальные переменные) или вне функций (глобальные переменные).,"Переменные объявляются в основной функции до того, как с переменными будет предпринята какая-либо операция.",Dove sono le variabili dichiarate in un programma C ++?,Le variabili possono essere dichiarate ovunque in un programma. Possono essere dichiarati all&#39;interno di una funzione (variabili locali) o all&#39;esterno delle funzioni (variabili globali),"Le variabili vengono dichiarate nella funzione principale, prima di tentare qualsiasi operazione con le variabili.",¿Dónde se declaran las variables en un programa C ++?,Las variables se pueden declarar en cualquier lugar de un programa. Pueden declararse dentro de una función (variables locales) o fuera de las funciones (variables globales),"Las variables se declaran en la función principal, antes de intentar cualquier operación con las variables.",Gdzie są zmienne zadeklarowane w programie C ++?,Zmienne można zadeklarować w dowolnym miejscu programu. Można je zadeklarować wewnątrz funkcji (zmienne lokalne) lub poza funkcjami (zmienne globalne),"Zmienne są deklarowane w funkcji main, przed podjęciem jakiejkolwiek operacji ze zmiennymi.",Các biến được khai báo ở đâu trong một chương trình C ++?,Các biến có thể được khai báo ở bất kỳ đâu trong chương trình. Chúng có thể được khai báo bên trong một hàm (biến cục bộ) hoặc bên ngoài hàm (biến toàn cục),"Các biến được khai báo trong hàm main, trước khi thực hiện bất kỳ thao tác nào với các biến.",C ++プログラムで変数はどこで宣言されていますか？,変数は、プログラム内のどこでも宣言できます。これらは、関数内（ローカル変数）または関数外（グローバル変数）で宣言できます。,変数は、変数を使用して操作が試行される前に、main関数で宣言されます。,C ++程序中的变量在哪里声明？,变量可以在程序中的任何位置声明。可以在函数内部（局部变量）或函数外部（全局变量）声明它们,在尝试对变量进行任何操作之前，先在主函数中声明变量。,أين يتم التصريح عن المتغيرات في برنامج C ++؟,يمكن التصريح عن المتغيرات في أي مكان في البرنامج. يمكن التصريح عنها داخل دالة (المتغيرات المحلية) أو خارج الوظائف (المتغيرات العالمية),يتم التصريح عن المتغيرات في الوظيفة الرئيسية ، قبل محاولة أي عملية باستخدام المتغيرات.,"Де змінні, оголошені в програмі на C ++?",Змінні можуть бути оголошені в будь-якому місці програми. Вони можуть бути оголошені всередині функції (локальні змінні) або поза функціями (глобальні змінні),"Змінні оголошуються в основній функції, перш ніж виконувати будь-яку операцію зі змінними.",Onde as variáveis são declaradas em um programa C ++?,As variáveis podem ser declaradas em qualquer lugar em um programa. Eles podem ser declarados dentro de uma função (variáveis locais) ou fora das funções (variáveis globais),"As variáveis são declaradas na função principal, antes que qualquer operação seja tentada com as variáveis.",متغیرها در یک برنامه C ++ کجا اعلام می شوند؟,متغیرها را می توان در هر کجای یک برنامه اعلام کرد. آنها را می توان در داخل یک تابع (متغیرهای محلی) یا خارج از توابع (متغیرهای جهانی) اعلام کرد,قبل از اینکه هر عملیاتی با متغیرها انجام شود ، متغیرها در عملکرد اصلی اعلام می شوند.,On es declaren les variables en un programa C ++?,Les variables es poden declarar a qualsevol lloc del programa. Es poden declarar dins d&#39;una funció (variables locals) o fora de les funcions (variables globals),"Les variables es declaren a la funció principal, abans d&#39;intentar qualsevol operació amb les variables.",Где су променљиве декларисане у програму Ц ++?,Променљиве се могу декларисати било где у програму. Могу се декларисати унутар функције (локалне променљиве) или изван функције (глобалне променљиве),"Променљиве су декларисане у главној функцији, пре него што се покуша било која операција са променљивим.",Di mana variabel dideklarasikan dalam program C ++?,Variabel dapat dideklarasikan dimanapun dalam program. Mereka dapat dideklarasikan di dalam fungsi (variabel lokal) atau di luar fungsi (variabel global),"Variabel dideklarasikan di fungsi utama, sebelum operasi apa pun dilakukan dengan variabel.",Hvor er variabler deklarert i et C ++ - program?,Variabler kan deklareres hvor som helst i et program. De kan deklareres i en funksjon (lokale variabler) eller utenfor funksjonene (globale variabler),Variabler blir deklarert i hovedfunksjonen før noen operasjoner forsøkes med variablene.,C ++ 프로그램에서 변수는 어디에 선언되어 있습니까?,변수는 프로그램의 어느 곳에서나 선언 할 수 있습니다. 함수 내부 (로컬 변수) 또는 함수 외부 (전역 변수)에서 선언 할 수 있습니다.,변수에 대한 작업이 시도되기 전에 변수는 주 함수에서 선언됩니다.,Missä muuttujat ilmoitetaan C ++ -ohjelmassa?,Muuttujat voidaan ilmoittaa missä tahansa ohjelmassa. Ne voidaan ilmoittaa funktion sisällä (paikalliset muuttujat) tai toimintojen ulkopuolella (yleiset muuttujat),"Muuttujat ilmoitetaan pääfunktiossa, ennen kuin mitään muuttujien käyttöä yritetään.",Hol vannak deklarálva a változók egy C ++ programban?,A változókat bárhol deklarálhatjuk egy programban. Deklarálhatók egy függvényen belül (helyi változók) vagy a függvényeken kívül (globális változók),"A változókat a fő függvényben deklaráljuk, mielőtt bármilyen műveletet megkísérelnénk a változókkal.",Kde jsou proměnné deklarovány v programu C ++?,Proměnné lze deklarovat kdekoli v programu. Mohou být deklarovány uvnitř funkce (lokální proměnné) nebo mimo funkce (globální proměnné),Proměnné jsou deklarovány v hlavní funkci před pokusem o jakoukoli operaci s proměnnými.,Gdje su varijable deklarirane u programu C ++?,Varijable se mogu deklarirati bilo gdje u programu. Mogu se deklarirati unutar funkcije (lokalne varijable) ili izvan funkcije (globalne varijable),"Varijable su deklarirane u glavnoj funkciji, prije nego što se pokuša bilo koja operacija s varijablama."
103,103,2255,12.4,"Selection sort is usually a recursive sorting method where you divide the elements to be sorted in half repeatedly. You then sort the smallest case, then work your way up, sorting each until they are all sorted.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Briefly, how does selection sort work?",2.5,Es wählt das Minimum aus einem Array aus und platziert es an der ersten Position. Anschließend wählt es das Minimum aus dem Rest des Arrays aus und platziert es an der zweiten Position und so weiter.,"Kurz gesagt, wie funktioniert die Auswahlsortierung?","Die Auswahlsortierung ist normalerweise eine rekursive Sortiermethode, bei der Sie die zu sortierenden Elemente wiederholt in zwei Hälften teilen. Sie sortieren dann den kleinsten Fall, arbeiten sich dann nach oben und sortieren jeden, bis alle sortiert sind.","Sa mubu, giunsa molihok ang pagpili?","Gipili niini ang minimum gikan sa usa ka laray ug gibutang kini sa una nga posisyon, unya gipili niini ang minimum gikan sa nahabilin nga laray ug gibutang kini sa ikaduhang posisyon, ug uban pa.","Ang pagpili sa pagpili sagad usa ka recursive sorting nga pamaagi diin gibahinbahin nimo ang mga elemento nga gihan-ay sa katunga nga balikbalik. Pagkahuman nimo paghan-ay ang labing gamay nga kaso, pagkahuman paglihok, paghan-ay ang matag usa hangtod nga silang tanan nahusay.","Kortfattat, hur fungerar urvalssortering?","Det väljer minimum från en array och placerar det på den första positionen, sedan väljer det minimum från resten av arrayen och placerar det på den andra positionen och så vidare.",Markeringssortering är vanligtvis en rekursiv sorteringsmetod där du delar elementen som ska sorteras i två gånger upprepade gånger. Du sorterar sedan det minsta fallet och jobbar dig uppåt och sorterar var och en tills de är sorterade.,"En bref, comment fonctionne le tri par sélection?","Il sélectionne le minimum dans un tableau et le place sur la première position, puis il sélectionne le minimum dans le reste du tableau et le place sur la deuxième position, et ainsi de suite.","Le tri par sélection est généralement une méthode de tri récursive dans laquelle vous divisez les éléments à trier en deux à plusieurs reprises. Vous triez ensuite le plus petit cas, puis progressez, en triant chacun jusqu&#39;à ce qu&#39;ils soient tous triés.","In het kort, hoe werkt selectiesortering?","Het selecteert het minimum uit een array en plaatst het op de eerste positie, vervolgens selecteert het het minimum uit de rest van de array en plaatst het op de tweede positie, enzovoort.","Selectie sorteren is meestal een recursieve sorteermethode waarbij u de te sorteren elementen herhaaldelijk in twee deelt. Vervolgens sorteer je het kleinste doosje, werk je omhoog en sorteer je ze allemaal totdat ze allemaal gesorteerd zijn.","Вкратце, как работает сортировка выбора?","Он выбирает минимум из массива и помещает его в первую позицию, затем выбирает минимум из остальной части массива и помещает его во вторую позицию, и так далее.","Сортировка по выбору - это обычно рекурсивный метод сортировки, при котором вы повторно разделяете элементы, которые нужно отсортировать пополам. Затем вы сортируете самый маленький случай, а затем продвигаетесь вверх, сортируя каждый, пока все они не будут отсортированы.","In breve, come funziona l&#39;ordinamento per selezione?","Seleziona il minimo da un array e lo posiziona sulla prima posizione, quindi seleziona il minimo dal resto dell&#39;array e lo posiziona sulla seconda posizione e così via.","L&#39;ordinamento per selezione è solitamente un metodo di ordinamento ricorsivo in cui dividi ripetutamente a metà gli elementi da ordinare. Quindi si ordina il caso più piccolo, quindi si procede verso l&#39;alto, ordinando ciascuno fino a quando non sono tutti ordinati.","Brevemente, ¿cómo funciona la clasificación por selección?","Selecciona el mínimo de una matriz y lo coloca en la primera posición, luego selecciona el mínimo del resto de la matriz y lo coloca en la segunda posición, y así sucesivamente.","La clasificación por selección suele ser un método de clasificación recursivo en el que divide los elementos que se van a clasificar por la mitad repetidamente. Luego, clasifica el caso más pequeño, luego avanza hacia arriba, clasificando cada uno hasta que estén todos ordenados.","Krótko, jak działa sortowanie przez wybór?","Wybiera minimum z tablicy i umieszcza je na pierwszej pozycji, następnie wybiera minimum z reszty tablicy i umieszcza je na drugiej pozycji i tak dalej.","Sortowanie przez wybór jest zwykle rekurencyjną metodą sortowania, w której elementy do sortowania są dzielone na pół wielokrotnie. Następnie sortujesz najmniejsze przypadki, a następnie przechodzisz w górę, sortując każdą, aż wszystkie zostaną posortowane.","Tóm lại, cách sắp xếp lựa chọn hoạt động như thế nào?","Nó chọn giá trị tối thiểu từ một mảng và đặt nó vào vị trí đầu tiên, sau đó nó chọn giá trị tối thiểu từ phần còn lại của mảng và đặt nó vào vị trí thứ hai, v.v.","Sắp xếp lựa chọn thường là một phương pháp sắp xếp đệ quy trong đó bạn chia các phần tử được sắp xếp thành một nửa lặp đi lặp lại. Sau đó, bạn sắp xếp trường hợp nhỏ nhất, sau đó làm việc theo cách của bạn, sắp xếp từng trường hợp cho đến khi chúng được sắp xếp hết.",簡単に言えば、選択ソートはどのように機能しますか？,配列から最小値を選択して最初の位置に配置し、次に配列の残りの部分から最小値を選択して2番目の位置に配置します。,選択ソートは通常、ソートする要素を半分に繰り返し分割する再帰的なソート方法です。次に、最小のケースを並べ替えてから、すべてが並べ替えられるまでそれぞれを並べ替えます。,简要地说，选择排序如何工作？,它从数组中选择最小值并将其放置在第一个位置，然后从数组其余部分中选择最小值并将其放置在第二个位置，依此类推。,选择排序通常是一种递归排序方法，您可以将要排序的元素重复分成两半。然后，您对最小的案例进行排序，然后逐步进行，对每个案例进行排序，直到全部排序为止。,باختصار ، كيف يعمل فرز الاختيار؟,يختار الحد الأدنى من المصفوفة ويضعه في الموضع الأول ، ثم يختار الحد الأدنى من باقي المصفوفة ويضعه في الموضع الثاني ، وهكذا.,عادةً ما يكون فرز التحديد طريقة فرز متكررة حيث تقوم بتقسيم العناصر ليتم فرزها إلى نصفين بشكل متكرر. تقوم بعد ذلك بفرز أصغر حالة ، ثم العمل في طريقك ، وفرز كل حالة حتى يتم فرزها جميعًا.,"Коротко, як працює сортування підбору?","Він вибирає мінімум з масиву і розміщує його на першій позиції, потім він вибирає мінімум з решти масиву і розміщує його на другій позиції тощо.","Сортування виділення - це, як правило, рекурсивний метод сортування, при якому елементи, що підлягають сортуванню, розділяються неодноразово. Потім ви сортуєте найменший випадок, а потім працюєте вгору, сортуючи кожен, поки всі вони не будуть відсортовані.","Resumidamente, como funciona a classificação por seleção?","Ele seleciona o mínimo de uma matriz e o coloca na primeira posição, em seguida, seleciona o mínimo do resto da matriz e o coloca na segunda posição, e assim por diante.","A classificação por seleção é geralmente um método de classificação recursiva em que você divide os elementos a serem classificados ao meio repetidamente. Em seguida, você classifica o menor caso e, em seguida, avança, classificando cada um até que todos estejam classificados.",به طور خلاصه ، نحوه انتخاب چگونه کار می کند؟,حداقل را از یک آرایه انتخاب کرده و در موقعیت اول قرار می دهد ، سپس حداقل را از بقیه آرایه انتخاب کرده و در موقعیت دوم قرار می دهد و غیره.,مرتب سازی انتخاب معمولاً یک روش مرتب سازی بازگشتی است که در آن عناصر مرتب شده را به طور مکرر به نصف تقسیم می کنید. سپس کوچکترین حالت را مرتب می کنید ، سپس کار را بالا می برید و هر کدام را مرتب می کنید تا همه مرتب شوند.,"Breument, com funciona la selecció?","Selecciona el mínim d’una matriu i el col·loca a la primera posició, després selecciona el mínim de la resta de la matriu i el col·loca a la segona posició, etc.","L’ordenació per selecció sol ser un mètode d’ordenació recursiva on es divideixen els elements que s’ordenaran per la meitat repetidament. A continuació, ordeneu el cas més petit i, tot seguit, aneu avançant, ordenant-los fins que estiguin tots ordenats.","Укратко, како функционише сортирање селекције?","Одабире минимум из низа и поставља га на прво место, затим одабире минимум из остатка низа и поставља га на друго место, и тако даље.","Селекционо сортирање је обично рекурзивна метода сортирања где више пута поделите елементе који се сортирају на пола. Затим сортирате најмањи случај, а затим напредујете, сортирајући сваки док се сви не сортирају.","Secara singkat, bagaimana cara kerja urutan seleksi?","Ini memilih minimum dari sebuah array dan menempatkannya di posisi pertama, kemudian memilih minimum dari sisa array dan menempatkannya di posisi kedua, dan seterusnya.","Sortir pilihan biasanya merupakan metode pengurutan rekursif di mana Anda membagi elemen yang akan diurutkan menjadi dua secara berulang. Anda kemudian mengurutkan kasus terkecil, lalu melanjutkan ke atas, menyortir masing-masing hingga semuanya diurutkan.","Kort fortalt, hvordan fungerer utvalgssortering?","Den velger minimum fra en matrise og plasserer den på første posisjon, deretter velger den minimum fra resten av matrisen og plasserer den på den andre posisjonen, og så videre.","Valgsortering er vanligvis en rekursiv sorteringsmetode der du deler elementene som skal sorteres i to ganger. Deretter sorterer du den minste saken, deretter jobber du deg opp, sorterer hver til de er sortert.",간단히 말해서 선택 정렬은 어떻게 작동합니까?,배열에서 최소값을 선택하여 첫 번째 위치에 배치 한 다음 나머지 배열에서 최소값을 선택하여 두 번째 위치에 배치하는 식입니다.,선택 정렬은 일반적으로 정렬 할 요소를 반복적으로 반으로 나누는 재귀 정렬 방법입니다. 그런 다음 가장 작은 케이스를 정렬 한 다음 위로 올라가서 모두 정렬 될 때까지 각각 정렬합니다.,"Lyhyesti, miten valintalaji toimii?","Se valitsee matriisin matriisista ja sijoittaa sen ensimmäiseen sijaintiin, sitten se valitsee minimin matriisin lopusta ja sijoittaa sen toiseen sijaintiin jne.","Valintalajittelu on yleensä rekursiivinen lajittelumenetelmä, jossa lajiteltavat elementit jaetaan toistuvasti kahtia. Lajittelet sitten pienimmän tapauksen ja jatkat sitten ylöspäin, lajittelemalla kukin, kunnes ne kaikki on lajiteltu.","Röviden, hogyan működik a válogatás?","Egy tömbből kiválasztja a minimumot, és az első pozícióba helyezi, majd a tömb többi részéből kiválasztja a minimumot, és a második pozícióba helyezi, és így tovább.","A kiválasztási rendezés általában rekurzív rendezési módszer, ahol a rendezni kívánt elemeket ismételten felezi. Ezután szétválogatja a legkisebb eseteket, majd felfelé haladva rendezi mindet, amíg mindegyik rendezésre nem kerül.","Stručně, jak funguje výběrové třídění?","Vybírá minimum z pole a umístí ho na první pozici, poté vybere minimum ze zbytku pole a umístí ho na druhou pozici atd.","Třídění výběru je obvykle rekurzivní metoda třídění, kdy opakovaně dělíte prvky, které mají být tříděny. Potom seřadíte nejmenší případ, poté se propracujete nahoru a seřadíte je každý, dokud nebudou všechny seřazeny.","Ukratko, kako funkcionira sortiranje odabira?","Odabire minimum iz niza i postavlja ga na prvo mjesto, zatim odabire minimum iz ostatka niza i postavlja ga na drugo mjesto itd.","Selekcijsko sortiranje je obično rekurzivna metoda sortiranja kod koje više puta podijelite elemente koji se sortiraju na pola. Zatim sortirate najmanji slučaj, a zatim napredujete, sortirajući svaki dok se svi ne sortiraju."
104,104,1658,9.6,push,push,What is the stack operation corresponding to the enqueue operation in queues?,5.0,drücken,"Was ist die Stapeloperation, die der Warteschlangenoperation in Warteschlangen entspricht?",drücken,Unsa ang operasyon sa stack nga katumbas sa enqueue nga operasyon sa mga pila?,iduso,iduso,Vad motsvarar stackoperationen enqueue-operationen i köer?,tryck,tryck,Quelle est l&#39;opération de pile correspondant à l&#39;opération de mise en file d&#39;attente dans les files d&#39;attente?,poussez,poussez,Wat is de stapelbewerking die overeenkomt met de bewerking in wachtrij plaatsen?,Duwen,Duwen,Какая операция стека соответствует операции постановки в очередь в очередях?,От себя,От себя,Qual è l&#39;operazione di stack corrispondente all&#39;operazione di accodamento nelle code?,spingere,spingere,¿Cuál es la operación de pila correspondiente a la operación de puesta en cola en colas?,empujar,empujar,Jaka jest operacja na stosie odpowiadająca operacji umieszczania w kolejce w kolejkach?,Pchać,Pchać,Hoạt động ngăn xếp tương ứng với hoạt động xếp hàng trong hàng đợi là gì?,đẩy,đẩy,キュー内のエンキュー操作に対応するスタック操作とは何ですか？,押す,押す,与队列中的入队操作相对应的堆栈操作是什么？,推,推,ما هي عملية المكدس المقابلة لعملية قائمة الانتظار في قوائم الانتظار؟,إدفع,إدفع,"Що таке операція стеку, що відповідає операції черги в чергах?",штовхати,штовхати,Qual é a operação de pilha correspondente à operação de enfileiramento nas filas?,empurrar,empurrar,عملیات پشته متناسب با عملیات enqueue در صف چیست؟,فشار دادن,فشار دادن,Quina és l&#39;operació de pila corresponent a l&#39;operació de cola a les cues?,empènyer,empènyer,Која је операција стека која одговара операцији чекања у редовима?,гурати,гурати,Apa operasi stack yang sesuai dengan operasi enqueue dalam antrian?,Dorong,Dorong,Hva tilsvarer stackoperasjonen enqueue-operasjonen i køer?,trykk,trykk,대기열에 넣는 작업에 해당하는 스택 작업은 무엇입니까?,푸시,푸시,Mikä pinooperaatio vastaa jonojen enqueue-operaatiota?,työntää,työntää,"Mi a verem művelet, amely megfelel a sorok enqueue műveletének?",nyom,nyom,Co je operace zásobníku odpovídající operaci zařazení do fronty?,tlačit,tlačit,Koja je operacija slaganja koja odgovara operaciji čekanja u redovima?,gurnuti,gurnuti
105,105,2144,11.1,"Take an array and split it into two, then solve these simpler problems and merge the two answers in correct order.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Briefly describe in one sentence how does merge sort work?,5.0,"Es teilt das ursprüngliche Array in zwei Teile, sortiert jede der beiden Hälften und führt dann die sortierten Arrays zusammen.","Beschreiben Sie in einem Satz kurz, wie das Zusammenführen von Sortierungen funktioniert.",Nehmen Sie ein Array und teilen Sie es in zwei Teile. Lösen Sie dann diese einfacheren Probleme und führen Sie die beiden Antworten in der richtigen Reihenfolge zusammen.,Sa mubu nga paghulagway sa usa ka tudling-pulong kung giunsa molihok ang paghiusa?,"Gibahin niini ang orihinal nga laray sa duha, gisagol ang matag usa sa duha ka bahin, ug pagkahuman gisagol ang mga gihan-ay nga mga array.","Pagkuha og usa ka han-ay ug bahinon kini sa duha, pagkahuman sulbara ang labi ka yano nga mga problema ug paghiusa ang duha nga mga tubag sa husto nga pagkahan-ay.",Beskriv kortfattat i en mening hur fungerar merge sort?,"Den delar upp den ursprungliga matrisen i två, sorterar var och en av de två halvorna och slår sedan ihop de sorterade matriserna.","Ta en matris och dela den i två, lösa sedan dessa enklare problem och slå samman de två svaren i rätt ordning.",Décrivez brièvement en une phrase comment fonctionne le tri par fusion?,"Il divise le tableau d&#39;origine en deux, trie chacune des deux moitiés, puis fusionne les tableaux triés.","Prenez un tableau et divisez-le en deux, puis résolvez ces problèmes plus simples et fusionnez les deux réponses dans le bon ordre.",Beschrijf kort in één zin hoe werkt samenvoegsortering?,"Het splitst de oorspronkelijke array in tweeën, sorteert elk van de twee helften en voegt vervolgens de gesorteerde arrays samen.","Neem een array en splits deze in twee, los deze eenvoudigere problemen op en voeg de twee antwoorden in de juiste volgorde samen.","Кратко опишите одним предложением, как работает сортировка слиянием?","Он разбивает исходный массив на две части, сортирует каждую из двух половин, а затем объединяет отсортированные массивы.","Возьмите массив и разделите его на два, затем решите эти более простые задачи и объедините два ответа в правильном порядке.",Descrivi brevemente in una frase come funziona il merge sort?,"Divide l&#39;array originale in due, ordina ciascuna delle due metà e quindi unisce gli array ordinati.","Prendi un array e dividilo in due, quindi risolvi questi problemi più semplici e unisci le due risposte nell&#39;ordine corretto.",Describe brevemente en una oración cómo funciona la ordenación por combinación.,"Divide la matriz original en dos, ordena cada una de las dos mitades y luego fusiona las matrices ordenadas.","Tome una matriz y divídala en dos, luego resuelva estos problemas más simples y combine las dos respuestas en el orden correcto.","Krótko opisz w jednym zdaniu, jak działa sortowanie przez scalanie?","Dzieli oryginalną tablicę na dwie części, sortuje każdą z dwóch połówek, a następnie łączy posortowane tablice.","Weź tablicę i podziel ją na dwie części, a następnie rozwiąż te prostsze problemy i połącz dwie odpowiedzi we właściwej kolejności.",Mô tả ngắn gọn trong một câu cách sắp xếp hợp nhất hoạt động như thế nào?,"Nó chia mảng ban đầu thành hai, sắp xếp từng mảng trong số hai nửa, sau đó hợp nhất các mảng đã sắp xếp.","Lấy một mảng và chia nó thành hai, sau đó giải các bài toán đơn giản hơn này và hợp nhất hai câu trả lời theo đúng thứ tự.",マージソートはどのように機能するのかを一文で簡単に説明してください。,元の配列を2つに分割し、2つの半分のそれぞれを並べ替えてから、並べ替えられた配列をマージします。,配列を取得して2つに分割し、これらの単純な問題を解決して、2つの答えを正しい順序でマージします。,用一句话简单描述合并排序是如何工作的？,它将原始数组分为两部分，对两个半部分分别进行排序，然后合并排序后的数组。,取一个数组并将其拆分为两个，然后解决这些较简单的问题，并以正确的顺序合并两个答案。,صف بإيجاز في جملة واحدة كيف يعمل دمج الفرز؟,يقسم المصفوفة الأصلية إلى قسمين ، يفرز كل من النصفين ، ثم يدمج المصفوفات التي تم فرزها.,خذ مصفوفة وقسمها إلى قسمين ، ثم حل هذه المسائل الأبسط وادمج الإجابتين بالترتيب الصحيح.,"Коротко опишіть одним реченням, як працює сортування злиттям?","Він розбиває вихідний масив на дві частини, сортує кожну з двох половин, а потім об&#39;єднує відсортовані масиви.","Візьміть масив і розділіть його на дві частини, а потім розв’яжіть ці простіші завдання та об’єднайте дві відповіді у правильному порядку.",Descreva resumidamente em uma frase como funciona a classificação por mesclagem?,"Ele divide o array original em dois, classifica cada uma das duas metades e, em seguida, mescla os arrays classificados.","Pegue um array e divida-o em dois, então resolva esses problemas mais simples e mescle as duas respostas na ordem correta.",به طور خلاصه در یک جمله توضیح دهید که چگونه ادغام مرتب سازی کار می کند؟,آرایه اصلی را به دو قسمت تقسیم می کند ، هر دو نیمه را مرتب می کند و سپس آرایه های مرتب شده را ادغام می کند.,یک آرایه بگیرید و آن را به دو قسمت تقسیم کنید ، سپس این مشکلات ساده را حل کنید و دو پاسخ را به ترتیب صحیح ادغام کنید.,Descriviu breument en una frase com funciona la classificació per fusió?,"Divideix la matriu original en dos, ordena cadascuna de les dues meitats i després fusiona les matrius ordenades.","Agafeu una matriu i dividiu-la en dos, després resoleu aquests problemes més simples i combineu les dues respostes en l&#39;ordre correcte.",Укратко опишите у једној реченици како функционише сортирање спајањем?,"Првобитни низ дели на две, сортира сваку од две половине, а затим обједињује сортиране низове.","Узмите низ и поделите га на два, а затим решите ове једноставније задатке и обједините два одговора у правилном редоследу.",Jelaskan secara singkat dalam satu kalimat bagaimana cara kerja merge sort?,"Ini membagi larik asli menjadi dua, mengurutkan masing-masing dari dua bagian, lalu menggabungkan larik yang diurutkan.","Ambil sebuah larik dan bagi menjadi dua, lalu selesaikan soal-soal yang lebih sederhana ini dan gabungkan kedua jawaban tersebut dalam urutan yang benar.",Beskriv kort i en setning hvordan fungerer sammenslåing?,"Den deler den originale matrisen i to, sorterer hver av de to halvdelene, og fletter deretter de sorterte matriser.","Ta en matrise og del den i to, løs deretter disse enklere problemene og slå sammen de to svarene i riktig rekkefølge.",병합 정렬이 어떻게 작동하는지 한 문장으로 간단히 설명해주세요.,원래 배열을 두 개로 분할하고 두 반쪽을 각각 정렬 한 다음 정렬 된 배열을 병합합니다.,배열을 두 개로 나눈 다음이 간단한 문제를 풀고 두 답을 올바른 순서로 병합합니다.,"Kuvaile lyhyesti yhdessä lauseessa, kuinka lajittelu toimii?","Se jakaa alkuperäisen taulukon kahteen osaan, lajittelee molemmat puoliskot ja yhdistää sitten lajitellut taulukot.","Ota matriisi ja jaa se kahteen osaan, ratkaise sitten nämä yksinkertaisemmat ongelmat ja yhdistä nämä kaksi vastausta oikeassa järjestyksessä.","Röviden írja le egy mondatban, hogyan működik az egyesítés rendezése?","Az eredeti tömböt kettéválasztja, a két felet rendezi, majd egyesíti a rendezett tömböket.","Vegyünk egy tömböt, és osszuk ketté, majd oldjuk meg ezeket az egyszerűbb feladatokat, és egyesítsük a két választ a megfelelő sorrendben.","Stručně popište jednou větou, jak funguje sloučení?","Rozdělí původní pole na dvě, roztřídí každou ze dvou polovin a poté sloučí seřazená pole.","Vezměte pole a rozdělte ho na dvě, pak vyřešte tyto jednodušší problémy a sloučte dvě odpovědi ve správném pořadí.",Ukratko u jednoj rečenici opišite kako funkcionira sortiranje spajanja?,"Izvorni niz dijeli na dvije, sortira svaku od dvije polovice, a zatim spaja sortirane nizove.","Uzmite niz i podijelite ga na dva, a zatim riješite ove jednostavnije probleme i spojite dva odgovora u ispravnom redoslijedu."
106,106,1143,7.1,"A data structure in a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.",A collection of elements that can be allocated dynamically.,What is a linked list?,4.5,"Eine Sammlung von Elementen, die dynamisch zugewiesen werden können.",Was ist eine verknüpfte Liste?,"Eine Datenstruktur in einer Folge von Knoten, die jeweils beliebige Datenfelder und eine oder zwei Referenzen (&quot;Links&quot;) enthalten, die auf den nächsten und / oder vorherigen Knoten verweisen.",Unsa ang usa ka nalakip nga lista?,Usa ka koleksyon sa mga elemento nga mahimong gigahin nga dinamiko.,"Usa ka istruktura sa datos sa usa ka han-ay sa mga node, nga ang matag usa adunay sulud nga mga kawad-an nga datos sa datos ug usa o duha nga pakisayran (&quot;mga link&quot;) nga nagtudlo sa sunod ug / o mga nangaging node.",Vad är en länkad lista?,En samling element som kan tilldelas dynamiskt.,"En datastruktur i en sekvens av noder, var och en innehållande godtyckliga datafält och en eller två referenser (&quot;länkar&quot;) som pekar på nästa och / eller tidigare noder.",Qu&#39;est-ce qu&#39;une liste chaînée?,Une collection d&#39;éléments qui peuvent être alloués dynamiquement.,"Une structure de données dans une séquence de nœuds, chacun contenant des champs de données arbitraires et une ou deux références («liens») pointant vers les nœuds suivants et / ou précédents.",Wat is een gekoppelde lijst?,Een verzameling elementen die dynamisch kunnen worden toegewezen.,"Een datastructuur in een reeks knooppunten, elk met willekeurige datavelden en een of twee verwijzingen (&quot;links&quot;) die naar de volgende en / of vorige knooppunten wijzen.",Что такое связанный список?,"Коллекция элементов, которые можно размещать динамически.","Структура данных в последовательности узлов, каждый из которых содержит произвольные поля данных и одну или две ссылки («ссылки»), указывающие на следующий и / или предыдущий узлы.",Cos&#39;è un elenco collegato?,Una raccolta di elementi che possono essere allocati dinamicamente.,"Una struttura dati in una sequenza di nodi, ciascuno contenente campi di dati arbitrari e uno o due riferimenti (&quot;collegamenti&quot;) che puntano ai nodi successivi e / o precedenti.",¿Qué es una lista vinculada?,Una colección de elementos que se pueden asignar dinámicamente.,"Una estructura de datos en una secuencia de nodos, cada uno de los cuales contiene campos de datos arbitrarios y una o dos referencias (&quot;enlaces&quot;) que apuntan a los nodos siguientes y / o anteriores.",Co to jest lista połączona?,"Zbiór elementów, które mogą być przydzielane dynamicznie.","Struktura danych w sekwencji węzłów, z których każdy zawiera dowolne pola danych i jedno lub dwa odniesienia („łącza”) wskazujące na następne i / lub poprzednie węzły.",Danh sách liên kết là gì?,Một tập hợp các phần tử có thể được cấp phát động.,"Một cấu trúc dữ liệu trong một chuỗi các nút, mỗi nút chứa các trường dữ liệu tùy ý và một hoặc hai tham chiếu (&quot;liên kết&quot;) trỏ đến các nút tiếp theo và / hoặc trước đó.",リンクリストとは何ですか？,動的に割り当てることができる要素のコレクション。,ノードのシーケンス内のデータ構造。各ノードには、任意のデータフィールドと、次または前のノードを指す1つまたは2つの参照（「リンク」）が含まれます。,什么是链表？,可以动态分配的元素的集合。,节点序列中的数据结构，每个节点包含任意数据字段和一个或两个指向下一个和/或上一个节点的引用（“链接”）。,ما هي القائمة المرتبطة؟,مجموعة من العناصر التي يمكن تخصيصها ديناميكيًا.,هيكل بيانات في سلسلة من العقد ، كل منها يحتوي على حقول بيانات عشوائية ومرجع واحد أو اثنين (&quot;روابط&quot;) يشير إلى العقد التالية و / أو السابقة.,Що таке пов&#39;язаний список?,"Колекція елементів, які можна динамічно розподіляти.","Структура даних у послідовності вузлів, кожна з яких містить довільні поля даних та одне або два посилання (&quot;посилання&quot;), що вказують на наступний та / або попередні вузли.",O que é uma lista vinculada?,Uma coleção de elementos que podem ser alocados dinamicamente.,"Uma estrutura de dados em uma sequência de nós, cada um contendo campos de dados arbitrários e uma ou duas referências (&quot;links&quot;) apontando para o próximo e / ou nó anterior.",لیست پیوندی چیست؟,مجموعه ای از عناصر است که می تواند به صورت پویا اختصاص داده شود.,یک ساختار داده در دنباله ای از گره ها ، هر یک شامل زمینه های داده دلخواه و یک یا دو مرجع (&quot;پیوندها&quot;) به گره های بعدی و / یا قبلی است.,Què és una llista enllaçada?,Una col·lecció d’elements que es poden assignar dinàmicament.,"Una estructura de dades en una seqüència de nodes, cadascun contenint camps de dades arbitraris i una o dues referències (&quot;enllaços&quot;) que apunten als nodes següents i / o anteriors.",Шта је повезана листа?,Колекција елемената који се могу динамички доделити.,"Структура података у низу чворова, од којих сваки садржи произвољна поља података и једну или две референце („везе“) које упућују на следећи и / или претходни чвор.",Apa itu daftar tertaut?,Kumpulan elemen yang dapat dialokasikan secara dinamis.,"Struktur data dalam urutan node, masing-masing berisi kolom data arbitrer dan satu atau dua referensi (&quot;link&quot;) yang mengarah ke node berikutnya dan / atau sebelumnya.",Hva er en koblet liste?,En samling av elementer som kan tildeles dynamisk.,"En datastruktur i en sekvens av noder, som hver inneholder vilkårlige datafelt og en eller to referanser (&quot;lenker&quot;) som peker til neste og / eller forrige noder.",연결 목록이란 무엇입니까?,동적으로 할당 할 수있는 요소 모음입니다.,"노드 시퀀스의 데이터 구조로, 각각 임의의 데이터 필드와 다음 및 / 또는 이전 노드를 가리키는 하나 또는 두 개의 참조 ( &quot;링크&quot;)를 포함합니다.",Mikä on linkitetty luettelo?,"Kokoelma elementtejä, jotka voidaan allokoida dynaamisesti.","Tietorakenne solmusarjassa, joista kukin sisältää mielivaltaiset tietokentät ja yhden tai kaksi viittausta (&quot;linkit&quot;), jotka osoittavat seuraavaan ja / tai edelliseen solmuun.",Mi a linkelt lista?,Dinamikusan lefoglalható elemek gyűjteménye.,"Adatszerkezet csomópontok sorozatában, amelyek mindegyike tetszőleges adatmezőket és egy vagy két hivatkozást (&quot;linket&quot;) tartalmaz, amelyek a következő és / vagy az előző csomópontokra mutatnak.",Co je to propojený seznam?,"Kolekce prvků, které lze dynamicky přidělit.","Datová struktura v posloupnosti uzlů, z nichž každý obsahuje libovolná datová pole a jeden nebo dva odkazy („odkazy“) směřující na další a / nebo předchozí uzly.",Šta je povezana lista?,Zbirka elemenata koji se mogu dinamički dodijeliti.,"Struktura podataka u nizu čvorova, od kojih svaki sadrži proizvoljna polja podataka i jednu ili dvije reference (&quot;veze&quot;) koje upućuju na sljedeći i / ili prethodni čvor."
107,107,432,3.1,the name of the function and the types of its arguments,The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,den Namen der Funktion und die Arten ihrer Argumente,Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,ang ngalan sa pagpaandar ug mga lahi sa mga argumento niini,Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,funktionens namn och typerna av dess argument,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,le nom de la fonction et les types de ses arguments,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,de naam van de functie en de typen argumenten,Что включает в себя сигнатура функции?,Имя функции и типы параметров.,имя функции и типы ее аргументов,Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,il nome della funzione e i tipi dei suoi argomenti,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,el nombre de la función y los tipos de sus argumentos,Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,nazwa funkcji i typy jej argumentów,Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,tên của hàm và các loại đối số của nó,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数の名前とその引数のタイプ,功能签名包括什么？,函数的名称和参数的类型。,函数的名称及其参数的类型,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,اسم الوظيفة وأنواع وسائطها,Що включає підпис функції?,Назва функції та типи параметрів.,назва функції та типи її аргументів,O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,o nome da função e os tipos de seus argumentos,امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,نام تابع و انواع آرگومان های آن,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,el nom de la funció i els tipus dels seus arguments,Шта укључује потпис функције?,Назив функције и врсте параметара.,назив функције и врсте њених аргумената,Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,nama fungsi dan jenis argumennya,Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,navnet på funksjonen og typene av argumentene,함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수 이름 및 인수 유형,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,funktion nimi ja sen argumenttityypit,Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,a függvény neve és argumentumainak típusai,Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,název funkce a typy jejích argumentů,Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,naziv funkcije i vrste njenih argumenata
108,108,2331,12.7,"Pop, which removes the head, or least recently inserted node from the stack. Push, which inserts a new node at the head of the stack.",push and pop,What are the main operations associated with a stack?,5.0,Push and Pop,"Was sind die Hauptoperationen, die mit einem Stapel verbunden sind?","Pop, das den Kopf oder den zuletzt eingefügten Knoten vom Stapel entfernt. Push, wodurch ein neuer Knoten am Kopf des Stapels eingefügt wird.",Unsa ang mga punoan nga operasyon nga kauban sa usa ka stack?,iduso ug pop,"Ang Pop, nga nagtangtang sa ulo, o dili pa dugay nga gisulud node gikan sa stack. Push, nga nagsulud usa ka bag-ong node sa ulohan sa stack.",Vilka är de viktigaste operationerna i samband med en stack?,tryck och knäpp,"Pop, som tar bort huvudet eller senast infogad nod från stacken. Push, som infogar en ny nod i stapelns huvud.",Quelles sont les principales opérations associées à une pile?,pousser et pop,"Pop, qui supprime la tête ou le nœud le moins récemment inséré de la pile. Push, qui insère un nouveau nœud en tête de pile.",Wat zijn de belangrijkste bewerkingen die aan een stapel zijn gekoppeld?,duwen en knallen,"Pop, waarmee de kop of de minst recent ingevoegde knoop uit de stapel wordt verwijderd. Push, waarmee een nieuw knooppunt aan het begin van de stapel wordt ingevoegd.",Какие основные операции связаны со стеком?,толкать и хлопать,"Pop, который удаляет головку или недавно вставленный узел из стека. Push, который вставляет новый узел в начало стека.",Quali sono le principali operazioni associate a uno stack?,spingere e pop,"Pop, che rimuove la testa, o almeno il nodo inserito di recente dallo stack. Push, che inserisce un nuovo nodo in testa allo stack.",¿Cuáles son las principales operaciones asociadas con una pila?,empujar y hacer estallar,"Pop, que elimina la cabeza, o el nodo insertado menos recientemente de la pila. Push, que inserta un nuevo nodo en la cabecera de la pila.",Jakie są główne operacje związane ze stosem?,push i pop,"Pop, który usuwa nagłówek lub ostatnio wstawiony węzeł ze stosu. Push, co powoduje wstawienie nowego węzła na początku stosu.",Các hoạt động chính được liên kết với một ngăn xếp là gì?,đẩy và bật,"Pop, loại bỏ phần đầu hoặc nút ít được chèn gần đây nhất khỏi ngăn xếp. Đẩy, sẽ chèn một nút mới ở đầu ngăn xếp.",スタックに関連する主な操作は何ですか？,プッシュアンドポップ,ポップ。ヘッド、またはスタックから最近挿入されたノードを削除します。プッシュ。スタックの先頭に新しいノードを挿入します。,与堆栈相关的主要操作是什么？,推和弹出,弹出，从堆栈中删除头节点或最近插入的节点。推送，这会在堆栈的顶部插入一个新节点。,ما هي العمليات الرئيسية المرتبطة بمكدس؟,ادفع وبوب,Pop ، الذي يزيل الرأس ، أو العقدة التي تم إدخالها مؤخرًا على الأقل من المكدس. الدفع ، والذي يقوم بإدراج عقدة جديدة في رأس المكدس.,Які основні операції пов’язані зі стеком?,натискання та поп,"Поп, який видаляє головку або найменш недавно вставлений вузол зі стека. Push, який вставляє новий вузол у головку стека.",Quais são as principais operações associadas a uma pilha?,empurre e estale,"Pop, que remove a cabeça ou, pelo menos, o nó inserido recentemente da pilha. Push, que insere um novo nó no topo da pilha.",اصلی ترین عملیات مرتبط با پشته چیست؟,فشار و پاپ,Pop ، که سر را از بین می برد ، یا حداقل گره ای که اخیراً از پشته وارد شده است. Push ، که گره جدیدی را در بالای پشته قرار می دهد.,Quines són les principals operacions associades a una pila?,empenta i esclata,"Pop, que elimina el cap o el node inserit almenys recentment de la pila. Push, que insereix un nou node al cap de la pila.",Које су главне операције повезане са стеком?,гурај и пуцај,"Скок који уклања главу или најмање недавно уметнути чвор из стека. Пусх, који убацује нови чвор на челу стека.",Apa operasi utama yang terkait dengan tumpukan?,push dan pop,"Pop, yang menghilangkan head, atau node yang paling terakhir disisipkan dari stack. Dorong, yang memasukkan simpul baru di kepala tumpukan.",Hva er de viktigste operasjonene knyttet til en stabel?,push og pop,"Pop, som fjerner hodet eller senest satt inn node fra bunken. Push, som setter inn en ny node på toppen av stabelen.",스택과 관련된 주요 작업은 무엇입니까?,밀고 팝,"Pop, 스택에서 헤드 또는 가장 최근에 삽입 된 노드를 제거합니다. 푸시는 스택의 선두에 새 노드를 삽입합니다.",Mitkä ovat pinoon liittyvät päätoiminnot?,työnnä ja pop,"Pop, joka poistaa pään tai viimeisimmän lisäyksen solmusta pinosta. Työnnä, joka lisää uuden solmun pinon päähän.",Melyek a veremhez kapcsolódó főbb műveletek?,nyomja és pattog,"Pop, amely eltávolítja a fejet, vagy a legutóbb a csomópontot helyezte el a veremből. Nyomja meg, amely új csomópontot illeszt be a verem élére.",Jaké jsou hlavní operace spojené se zásobníkem?,push a pop,"Pop, který odstraní hlavu nebo nejméně nedávno vložený uzel ze zásobníku. Push, který vloží nový uzel v čele zásobníku.",Koje su glavne operacije povezane sa stogom?,guraj i pucaj,"Skok koji uklanja glavu ili najmanje nedavno umetnuti čvor iz gomile. Push, koji ubacuje novi čvor na čelu stoga."
109,109,58,1.3,"Modularability, the ability to reuse parts of the program later in another program sometimes with completely different goals for the program. Also it makes it easier to debug code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debug. Good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. ALso allows you to use inheritance and polymorphism.",Abstraction and reusability.,What are the main advantages associated with object-oriented programming?,4.5,Abstraktion und Wiederverwendbarkeit.,Was sind die Hauptvorteile der objektorientierten Programmierung?,"Modularität, die Möglichkeit, Teile des Programms später in einem anderen Programm wiederzuverwenden, manchmal mit völlig anderen Zielen für das Programm. Außerdem wird das Debuggen von Code vereinfacht, indem der Code in Klassen aufgeteilt wird, die jeweils einen bestimmten Job ausführen. Wenn das Programm bei einem Job fehlschlägt, müssen Sie nur eine Klasse debuggen. Gut für Sicherheitszwecke, da Sie es jemandem ermöglichen können, ein Programm zu verwenden, das Listen sortiert, ohne ihm Zugriff auf den Quellcode gewähren zu müssen. Außerdem können Sie Vererbung und Polymorphismus verwenden.",Unsa ang mga punoan nga bentaha nga adunay kalabotan sa object-oriented nga programa?,Abstraction ug reusability.,"Modularability, ang abilidad nga magamit pag-usab ang mga bahin sa programa sa ulahi sa laing programa usahay nga adunay hingpit nga lainlaing mga katuyoan alang sa programa. Gipasayon usab niini nga dali ang pag-debug sa code pinaagi sa pagbahin sa code sa mga klase nga matag usa naghimo sa usa ka piho nga trabaho ug kung ang programa napakyas sa usa ka trabaho adunay ka ra usa ka klase aron ma-debug. Maayo alang sa katuyoan sa seguridad tungod kay nagtugot kini kanimo nga tugutan ang usa ka tawo nga mogamit usa ka programa diin lainlain ang mga lista nga dili kinahanglan hatagan sila og access sa source code. Gitugotan ka usab sa ALO nga magamit ang panulundon ug polymorphism.",Vilka är de största fördelarna med objektorienterad programmering?,Abstraktion och återanvändbarhet.,"Modularitet, möjligheten att återanvända delar av programmet senare i ett annat program ibland med helt andra mål för programmet. Det gör det också enklare att felsöka koden genom att dela upp koden i klasser som alla gör ett specifikt jobb och när programmet misslyckas med ett jobb har du bara en klass att felsöka. Bra för säkerhetsändamål eftersom det låter dig låta någon använda ett program som sorterar listor utan att behöva ge dem tillgång till källkoden. Låter dig också använda arv och polymorfism.",Quels sont les principaux avantages associés à la programmation orientée objet?,Abstraction et réutilisabilité.,"Modularabilité, la possibilité de réutiliser ultérieurement des parties du programme dans un autre programme avec parfois des objectifs complètement différents pour le programme. De plus, cela facilite le débogage du code en divisant le code en classes qui effectuent chacune un travail spécifique et lorsque le programme échoue à un travail, vous n&#39;avez qu&#39;une seule classe à déboguer. Bon pour des raisons de sécurité car il vous permet de laisser quelqu&#39;un utiliser un programme qui trie les listes sans avoir à leur donner accès au code source. Vous permet également d&#39;utiliser l&#39;héritage et le polymorphisme.",Wat zijn de belangrijkste voordelen van objectgeoriënteerd programmeren?,Abstractie en herbruikbaarheid.,"Modularability, de mogelijkheid om delen van het programma later in een ander programma te hergebruiken, soms met totaal andere doelen voor het programma. Het maakt het ook gemakkelijker om code te debuggen door de code op te splitsen in klassen die elk een specifieke taak uitvoeren en wanneer het programma bij één taak mislukt, hoeft u slechts één klasse te debuggen. Goed voor veiligheidsdoeleinden omdat het u toestaat iemand een programma te laten gebruiken dat lijsten sorteert zonder hem toegang te geven tot de broncode. Ook kunt u overerving en polymorfisme gebruiken.",Каковы основные преимущества объектно-ориентированного программирования?,Абстракция и возможность повторного использования.,"Модулируемость, возможность повторно использовать части программы позже в другой программе, иногда с совершенно другими целями для программы. Кроме того, это упрощает отладку кода, разделяя код на классы, каждый из которых выполняет определенную работу, и когда программа дает сбой в одном задании, у вас есть только один класс для отладки. Хорошо для целей безопасности, потому что позволяет вам позволить кому-либо использовать программу, которая сортирует списки, без необходимости предоставлять им доступ к исходному коду. ТАКЖЕ позволяет использовать наследование и полиморфизм.",Quali sono i principali vantaggi associati alla programmazione orientata agli oggetti?,Astrazione e riusabilità.,"Modularità, la capacità di riutilizzare parti del programma successivamente in un altro programma a volte con obiettivi completamente diversi per il programma. Inoltre rende più facile il debug del codice suddividendo il codice in classi che svolgono ciascuna un lavoro specifico e quando il programma fallisce in un lavoro hai solo una classe per il debug. Buono per motivi di sicurezza perché ti consente di consentire a qualcuno di utilizzare un programma che ordina gli elenchi senza dover dargli accesso al codice sorgente. Inoltre ti consente di utilizzare l&#39;ereditarietà e il polimorfismo.",¿Cuáles son las principales ventajas asociadas con la programación orientada a objetos?,Abstracción y reutilización.,"Modulabilidad, la capacidad de reutilizar partes del programa más adelante en otro programa, a veces con objetivos completamente diferentes para el programa. Además, facilita la depuración del código al dividir el código en clases, cada una de las cuales realiza un trabajo específico y cuando el programa falla en un trabajo, solo tiene una clase para depurar. Bueno por motivos de seguridad porque le permite permitir que alguien use un programa que ordena listas sin tener que darles acceso al código fuente. TAMBIÉN le permite utilizar herencia y polimorfismo.",Jakie są główne zalety programowania zorientowanego obiektowo?,Abstrakcja i możliwość ponownego wykorzystania.,"Modularność, czyli możliwość ponownego wykorzystania części programu później w innym programie, czasami z zupełnie innymi celami programu. Ułatwia również debugowanie kodu, dzieląc kod na klasy, z których każda wykonuje określone zadanie, a gdy program kończy się niepowodzeniem w jednym zadaniu, masz tylko jedną klasę do debugowania. Dobre ze względów bezpieczeństwa, ponieważ pozwala pozwolić komuś na użycie programu, który sortuje listy bez konieczności udzielania im dostępu do kodu źródłowego. Umożliwia także korzystanie z dziedziczenia i polimorfizmu.",Những ưu điểm chính liên quan đến lập trình hướng đối tượng là gì?,Tính trừu tượng và khả năng tái sử dụng.,"Khả năng điều biến, khả năng sử dụng lại các phần của chương trình sau này trong một chương trình khác đôi khi với các mục tiêu hoàn toàn khác cho chương trình. Ngoài ra, nó làm cho việc gỡ lỗi mã dễ dàng hơn bằng cách chia mã thành các lớp mà mỗi lớp thực hiện một công việc cụ thể và khi chương trình bị lỗi ở một công việc, bạn chỉ có một lớp để gỡ lỗi. Tốt cho mục đích bảo mật vì nó cho phép bạn cho phép ai đó sử dụng một chương trình sắp xếp danh sách mà không cần phải cấp cho họ quyền truy cập vào mã nguồn. ALso cho phép bạn sử dụng tính kế thừa và tính đa hình.",オブジェクト指向プログラミングに関連する主な利点は何ですか？,抽象化と再利用性。,モジュール性、プログラムの一部を後で別のプログラムで再利用する機能。プログラムの目標がまったく異なる場合があります。また、コードをそれぞれ特定のジョブを実行するクラスに分割することでコードのデバッグが容易になり、プログラムが1つのジョブで失敗した場合、デバッグするクラスは1つだけになります。ソースコードへのアクセスを許可せずにリストを並べ替えるプログラムを誰かに使用させることができるため、セキュリティの目的に適しています。また、継承とポリモーフィズムを使用することもできます。,面向对象编程的主要优点是什么？,抽象和可重用性。,模块化性，即以后在另一个程序中重用程序各部分的能力，有时目标是完全不同的。此外，通过将代码划分为可以执行特定工作的类，可以更轻松地调试代码，并且当程序在一项工作中失败时，您只有一个要调试的类。对安全性有好处，因为它允许您允许某人使用对列表进行排序的程序，而不必授予他们访问源代码的权限。还可以让您使用继承和多态性。,ما هي المزايا الرئيسية المرتبطة بالبرمجة الشيئية؟,التجريد وإعادة الاستخدام.,القابلية للنمطية ، وهي القدرة على إعادة استخدام أجزاء من البرنامج لاحقًا في برنامج آخر أحيانًا بأهداف مختلفة تمامًا للبرنامج. كما أنه يجعل من السهل تصحيح أخطاء الكود عن طريق تقسيم الكود إلى فئات يقوم كل منها بعمل معين وعندما يفشل البرنامج في وظيفة واحدة ، يكون لديك فئة واحدة فقط لتصحيحها. جيد للأغراض الأمنية لأنه يسمح لك بالسماح لشخص ما باستخدام برنامج يقوم بفرز القوائم دون الحاجة إلى منحه حق الوصول إلى الكود المصدري. يسمح لك أيضًا باستخدام الميراث وتعدد الأشكال.,Які основні переваги пов’язані з об’єктно-орієнтованим програмуванням?,Абстракція та багаторазове використання.,"Модулюваність, можливість повторного використання частин програми пізніше в іншій програмі, іноді з абсолютно різними цілями програми. Крім того, це полегшує налагодження коду, поділяючи код на класи, які виконують певну роботу, і коли програма не справляється з одним завданням, у вас є лише один клас для налагодження. Це добре для цілей безпеки, оскільки це дозволяє дозволити комусь користуватися програмою, яка сортує списки, не надаючи їм доступу до вихідного коду. ALso також дозволяє використовувати успадкування та поліморфізм.",Quais são as principais vantagens associadas à programação orientada a objetos?,Abstração e reutilização.,"Modularabilidade, a capacidade de reutilizar partes do programa posteriormente em outro programa, às vezes com objetivos completamente diferentes para o programa. Além disso, torna mais fácil depurar o código, dividindo o código em classes em que cada uma faz um trabalho específico e quando o programa falha em um trabalho, você só tem uma classe para depurar. Bom para fins de segurança, porque permite que alguém use um programa que classifica listas sem ter que dar acesso ao código-fonte. Também permite que você use herança e polimorfismo.",مزایای اصلی مرتبط با برنامه نویسی شی گرا چیست؟,انتزاع و استفاده مجدد.,قابلیت تعدیل پذیری ، توانایی استفاده مجدد از قسمت هایی از برنامه بعداً در برنامه دیگری ، گاهی اوقات با اهداف کاملاً متفاوت برای برنامه. همچنین با تقسیم کد به کلاسهایی که هرکدام یک کار خاص را انجام می دهند ، اشکال زدایی کد راحت تر می شود و وقتی برنامه در یک کار شکست می خورد ، فقط یک کلاس برای اشکال زدایی دارید. برای اهداف امنیتی خوب است زیرا به شما اجازه می دهد تا کسی از برنامه ای استفاده کند که لیست ها را مرتب می کند بدون اینکه به آنها اجازه دسترسی به کد منبع را بدهد. همچنین به شما امکان می دهد از وراثت و چند شکلی استفاده کنید.,Quins són els principals avantatges associats a la programació orientada a objectes?,Abstracció i reutilització.,"Modularitat, la capacitat de reutilitzar parts del programa més endavant en un altre programa, de vegades amb objectius completament diferents per al programa. A més, facilita la depuració de codi dividint el codi en classes que fan cadascuna una feina específica i quan el programa falla en una sola feina, només teniu una classe per depurar. És bo per motius de seguretat, ja que permet deixar que algú utilitzi un programa que ordena llistes sense haver de donar-li accés al codi font. També us permet utilitzar l’herència i el polimorfisme.",Које су главне предности повезане са објектно оријентисаним програмирањем?,Апстракција и поновна употребљивост.,"Модулабилност, могућност поновне употребе делова програма касније у другом програму, понекад са потпуно различитим циљевима програма. Такође олакшава отклањање грешака кодом поделом кода на класе које раде одређени посао, а када програм не успе на једном послу, морате отклонити само једну класу. Добро у безбедносне сврхе јер вам омогућава да некоме допустите да користи програм који сортира листе, а да им не мора да омогући приступ изворном коду. Такође вам омогућава коришћење наследства и полиморфизма.",Apa keuntungan utama yang terkait dengan pemrograman berorientasi objek?,Abstraksi dan dapat digunakan kembali.,"Modularability, kemampuan untuk menggunakan kembali bagian-bagian program nanti di program lain terkadang dengan tujuan yang sama sekali berbeda untuk program tersebut. Juga lebih mudah untuk men-debug kode dengan membagi kode menjadi kelas-kelas yang masing-masing melakukan pekerjaan tertentu dan ketika program gagal pada satu pekerjaan, Anda hanya memiliki satu kelas untuk di-debug. Bagus untuk tujuan keamanan karena memungkinkan Anda mengizinkan seseorang menggunakan program yang mengurutkan daftar tanpa harus memberi mereka akses ke kode sumber. JUGA memungkinkan Anda menggunakan pewarisan dan polimorfisme.",Hva er de viktigste fordelene knyttet til objektorientert programmering?,Abstraksjon og gjenbrukbarhet.,"Modularitet, muligheten til å gjenbruke deler av programmet senere i et annet program noen ganger med helt andre mål for programmet. Det gjør det også lettere å feilsøke koden ved å dele opp koden i klasser som hver gjør en bestemt jobb, og når programmet mislykkes i en jobb, har du bare en klasse å feilsøke. Bra for sikkerhetsformål fordi det lar deg la noen bruke et program som sorterer lister uten å måtte gi dem tilgang til kildekoden. Lar deg også bruke arv og polymorfisme.",객체 지향 프로그래밍과 관련된 주요 이점은 무엇입니까?,추상화 및 재사용 성.,"모듈화 가능성, 때로는 프로그램의 완전히 다른 목표를 가진 다른 프로그램에서 나중에 프로그램의 일부를 재사용하는 기능. 또한 코드를 각각 특정 작업을 수행하는 클래스로 분할하여 코드를 디버그하기가 더 쉽고 프로그램이 한 작업에서 실패하면 디버그 할 클래스가 하나만 있습니다. 다른 사람이 소스 코드에 대한 액세스 권한을 부여하지 않고도 목록을 정렬하는 프로그램을 사용할 수 있도록하므로 보안 목적에 좋습니다. 또한 상속과 다형성을 사용할 수 있습니다.",Mitkä ovat olio-ohjelmoinnin tärkeimmät edut?,Abstraktio ja uudelleenkäytettävyys.,"Modulaarisuus, kyky käyttää uudelleen ohjelman osia myöhemmin toisessa ohjelmassa joskus täysin erilaisilla ohjelman tavoitteilla. Lisäksi koodin virheenkorjaus on helpompaa jakamalla koodi luokkiin, joista kukin tekee tietyn työn, ja kun ohjelma epäonnistuu yhdessä työssä, sinulla on vain yksi luokka virheenkorjausta varten. Hyvä turvallisuussyistä, koska sen avulla voit antaa jonkun käyttää ohjelmaa, joka lajittelee luettelot tarvitsematta antaa heille pääsyä lähdekoodiin. Lisäksi voit käyttää perintöä ja polymorfismia.",Melyek az objektum-orientált programozás fő előnyei?,Absztrakció és újrafelhasználhatóság.,"Modulálhatóság, a program egyes részeinek későbbi újrafelhasználásának képessége egy másik programban, néha teljesen más célokkal a program számára. Ez is megkönnyíti a kód hibakeresését azáltal, hogy felosztja a kódot olyan osztályokra, amelyek mindegyike egy adott munkát végez, és amikor a program egy munkában nem sikerül, akkor csak egy osztályt kell hibakeresnie. Biztonsági szempontból jó, mert lehetővé teszi, hogy valaki olyan programot használjon, amely a listákat rendezi anélkül, hogy hozzáférést kellene adnia a forráskódhoz. Az AL lehetővé teszi az öröklés és a polimorfizmus használatát is.",Jaké jsou hlavní výhody spojené s objektově orientovaným programováním?,Abstrakce a opakovaná použitelnost.,"Modulovatelnost, schopnost znovu použít části programu později v jiném programu, někdy s úplně jinými cíli pro program. Také usnadňuje ladění kódu rozdělením kódu do tříd, z nichž každý provádí konkrétní práci, a když program selže v jedné úloze, máte k ladění pouze jednu třídu. Dobré z bezpečnostních důvodů, protože vám umožňuje nechat někoho používat program, který třídí seznamy, aniž byste mu museli umožňovat přístup ke zdrojovému kódu. Také vám umožňuje použít dědičnost a polymorfismus.",Koje su glavne prednosti povezane sa objektno orijentisanim programiranjem?,Apstrakcija i ponovna upotrebljivost.,"Modulabilnost, mogućnost ponovne upotrebe dijelova programa kasnije u drugom programu, ponekad sa potpuno različitim ciljevima programa. Također olakšava otklanjanje pogrešaka kodom dijeljenjem koda na klase koje rade određeni posao, a kada program ne uspije na jednom poslu, morate otkloniti samo jednu klasu. Dobro u sigurnosne svrhe jer vam omogućava da nekome dopustite da koristi program koji sortira liste, a da im ne mora dati pristup izvornom kodu. ALso vam omogućava i upotrebu nasljedstva i polimorfizma."
110,110,1930,11.3,When the class is called by the Constructor,By using constructors.,How are objects initialized when they are created?,3.5,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,Wenn die Klasse vom Konstruktor aufgerufen wird,Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,Kung ang klase gitawagan sa Magtutukod,Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,När klassen anropas av konstruktören,Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,Lorsque la classe est appelée par le constructeur,Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,Wanneer de klasse wordt aangeroepen door de constructor,Как инициализируются объекты при их создании?,Используя конструкторы.,Когда класс вызывается конструктором,Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,Quando la classe viene chiamata dal Costruttore,¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,Cuando la clase es llamada por el Constructor,Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,Gdy klasa jest wywoływana przez Konstruktora,Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,Khi lớp được gọi bởi Constructor,オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,クラスがコンストラクターによって呼び出されたとき,创建对象时如何初始化它们？,通过使用构造函数。,构造函数调用类时,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,عندما يتم استدعاء الفصل بواسطة المنشئ,Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,Коли клас викликається конструктором,Como os objetos são inicializados quando são criados?,Usando construtores.,Quando a classe é chamada pelo Construtor,چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,وقتی کلاس توسط سازنده فراخوانی می شود,Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,Quan el constructor crida la classe,Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,Када класу позове Конструктор,Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,Ketika kelas dipanggil oleh Pembuat,Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,Når klassen kalles av konstruktøren,객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,생성자가 클래스를 호출 할 때,"Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,Kun rakentaja kutsuu luokan,"Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,Amikor az osztályt a Konstruktor hívja meg,"Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,Když je třída volána konstruktorem,Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,Kada klasu pozove konstruktor
111,111,428,3.1,"A function signature includes the name of the function and types of arguments, but not the return type.",The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,"Eine Funktionssignatur enthält den Namen der Funktion und die Argumenttypen, nicht jedoch den Rückgabetyp.",Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,"Ang usa ka pirma sa pag-andar adunay kauban nga ngalan sa pagpaandar ug mga lahi sa lantugi, apan dili ang tipo sa pagbalik.",Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,"En funktionssignatur innehåller namnet på funktionen och typer av argument, men inte returtypen.",Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,"Une signature de fonction inclut le nom de la fonction et les types d&#39;arguments, mais pas le type de retour.",Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,"Een functiehandtekening bevat de naam van de functie en typen argumenten, maar niet het retourtype.",Что включает в себя сигнатура функции?,Имя функции и типы параметров.,"Сигнатура функции включает имя функции и типы аргументов, но не тип возвращаемого значения.",Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,"Una firma di funzione include il nome della funzione e i tipi di argomenti, ma non il tipo restituito.",¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,"La firma de una función incluye el nombre de la función y los tipos de argumentos, pero no el tipo de retorno.",Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,"Podpis funkcji zawiera nazwę funkcji i typy argumentów, ale nie zawiera typu zwracanego.",Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,"Chữ ký hàm bao gồm tên của hàm và các loại đối số, nhưng không phải là kiểu trả về.",関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数のシグネチャには、関数の名前と引数の型が含まれますが、戻り値の型は含まれません。,功能签名包括什么？,函数的名称和参数的类型。,函数签名包括函数名称和参数类型，但不包括返回类型。,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,يتضمن توقيع الدالة اسم الوظيفة وأنواع الوسائط ، ولكن ليس نوع الإرجاع.,Що включає підпис функції?,Назва функції та типи параметрів.,"Підпис функції включає ім&#39;я функції та типи аргументів, але не тип повернення.",O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,"Uma assinatura de função inclui o nome da função e tipos de argumentos, mas não o tipo de retorno.",امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,یک امضای تابع شامل نام عملکرد و انواع آرگومان ها است ، اما نوع بازگشتی را شامل نمی شود.,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,"Una signatura de funció inclou el nom de la funció i els tipus d&#39;arguments, però no el tipus de retorn.",Шта укључује потпис функције?,Назив функције и врсте параметара.,"Потпис функције укључује име функције и врсте аргумената, али не и тип повратка.",Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,"Tanda tangan fungsi menyertakan nama fungsi dan tipe argumen, tetapi bukan tipe yang dikembalikan.",Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,"En funksjonssignatur inkluderer navnet på funksjonen og typer argumenter, men ikke returtypen.",함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수 서명에는 함수 이름과 인수 유형이 포함되지만 반환 유형은 포함되지 않습니다.,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,"Funktion allekirjoitus sisältää funktion nimen ja argumenttityypit, mutta ei palautustyyppiä.",Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,"A függvény-aláírás tartalmazza a függvény nevét és az argumentumtípusokat, a visszatérési típust azonban nem.",Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,"Podpis funkce zahrnuje název funkce a typy argumentů, ale nikoli návratový typ.",Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,"Potpis funkcije uključuje ime funkcije i vrste argumenata, ali ne i povratni tip."
112,112,983,6.2,returns the place in memory of that element,The memory address of its operand.,What does the address (&) operator return?,4.0,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,Gibt den Speicherort dieses Elements zurück,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,ibalik ang lugar sa panumduman sa kana nga elemento,Vad returnerar adressoperatören?,Minnesadressen för dess operand.,returnerar platsen till minnet för det elementet,Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,renvoie la place en mémoire de cet élément,Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,geeft de plaats in het geheugen van dat element terug,Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,возвращает место в памяти этого элемента,Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,restituisce il posto in memoria di quell&#39;elemento,¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,devuelve el lugar en la memoria de ese elemento,Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,zwraca miejsce w pamięci tego elementu,Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,trả về vị trí trong bộ nhớ của phần tử đó,アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,その要素のメモリ内の場所を返します,地址（＆）运算符返回什么？,其操作数的内存地址。,返回该元素在内存中的位置,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,يسترجع المكان في ذاكرة هذا العنصر,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,повертає місце в пам&#39;яті цього елемента,O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,retorna o lugar na memória daquele elemento,عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,مکان را در حافظه آن عنصر برمی گرداند,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,retorna el lloc en memòria d&#39;aquest element,Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,враћа место у меморији тог елемента,Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,mengembalikan tempat dalam memori elemen itu,Hva returnerer adresseoperatøren?,Minneadressen til operanden.,returnerer stedet til minne om det elementet,주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,해당 요소의 메모리 위치를 반환합니다.,Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,palauttaa paikan kyseisen elementin muistiin,Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,visszaadja a helyet az elem emlékezetében,Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,vrací místo v paměti daného prvku,Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,vraća mjesto u memoriji tog elementa
113,113,1943,11.3,they are initialized to a value dependent on the compiler,By using constructors.,How are objects initialized when they are created?,1.0,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,Sie werden auf einen vom Compiler abhängigen Wert initialisiert,Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,sila gisugdan sa usa ka kantidad nga nagsalig sa tagtipon,Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,de initialiseras till ett värde som är beroende av kompilatorn,Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,ils sont initialisés à une valeur dépendante du compilateur,Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,ze worden geïnitialiseerd op een waarde die afhankelijk is van de compiler,Как инициализируются объекты при их создании?,Используя конструкторы.,"они инициализируются значением, зависящим от компилятора",Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,vengono inizializzati su un valore dipendente dal compilatore,¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,se inicializan a un valor que depende del compilador,Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,są inicjalizowane na wartość zależną od kompilatora,Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,chúng được khởi tạo thành một giá trị phụ thuộc vào trình biên dịch,オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,それらはコンパイラに依存する値に初期化されます,创建对象时如何初始化它们？,通过使用构造函数。,它们被初始化为依赖于编译器的值,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,يتم تهيئتها إلى قيمة تعتمد على المترجم,Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,"вони ініціалізуються до значення, яке залежить від компілятора",Como os objetos são inicializados quando são criados?,Usando construtores.,eles são inicializados com um valor dependente do compilador,چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,مقدار آنها وابسته به کامپایلر مقداردهی اولیه می شود,Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,s’inicialitzen a un valor que depèn del compilador,Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,иницијализују се на вредност која зависи од компајлера,Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,mereka diinisialisasi ke nilai yang bergantung pada kompilator,Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,de initialiseres til en verdi avhengig av kompilatoren,객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,컴파일러에 의존하는 값으로 초기화됩니다.,"Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,ne alustetaan kääntäjästä riippuvaan arvoon,"Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,a fordítótól függő értékre inicializálják,"Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,jsou inicializovány na hodnotu závislou na kompilátoru,Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,inicijaliziraju se na vrijednost koja ovisi o prevoditelju
114,114,2074,11.8,The programmer must provide the null terminating character in a string of characters using type char[] and must also ensure that the array is large enough to contain the input string of characters and the null terminating character.,The char[] will automatically add a null \0 character at the end of the string.,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,5.0,Das Zeichen [] fügt am Ende der Zeichenfolge automatisch ein Nullzeichen \ 0 hinzu.,"Was ist der Hauptunterschied zwischen einer Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, und einer Variablen vom Typ char []?","Der Programmierer muss das nullterminierende Zeichen in einer Zeichenfolge mit dem Typ char [] bereitstellen und sicherstellen, dass das Array groß genug ist, um die eingegebene Zeichenfolge und das nullterminierende Zeichen zu enthalten.",Unsa ang punoan nga kalainan tali sa usa ka hilo sa mga karakter nga mabasa sa usa ka variable sa type string kumpara sa variable sa type char []?,Ang char [] awtomatikong magdugang usa ka null \ 0 nga karakter sa katapusan sa pisi.,Kinahanglan ihatag sa programmer ang null nga gitapos nga karakter sa us aka mga karakter gamit ang type char [] ug kinahanglan usab nga sigurohon nga ang array igoigo nga igo aron masulud ang input string sa mga karakter ug ang null terminating character.,Vad är den största skillnaden mellan en teckensträng som läses in i en variabel av typsträng kontra en variabel av typen char []?,Tecknet [] lägger automatiskt till ett null \ 0-tecken i slutet av strängen.,Programmeraren måste ange nolltermineringstecken i en teckensträng med typ char [] och måste också se till att matrisen är tillräckligt stor för att innehålla inmatningssträngen med tecken och nollavslutande karaktär.,Quelle est la principale différence entre une chaîne de caractères lue dans une variable de type string et une variable de type char []?,Le char [] ajoutera automatiquement un caractère nul \ 0 à la fin de la chaîne.,Le programmeur doit fournir le caractère de fin nul dans une chaîne de caractères en utilisant le type char [] et doit également s&#39;assurer que le tableau est suffisamment grand pour contenir la chaîne d&#39;entrée de caractères et le caractère de fin nul.,Wat is het belangrijkste verschil tussen een reeks tekens die wordt ingelezen in een variabele van het type string versus een variabele van het type char []?,Het teken [] voegt automatisch een nul \ 0 teken toe aan het einde van de string.,De programmeur moet het afsluitende null-teken in een reeks tekens opgeven met het type char [] en moet er ook voor zorgen dat de array groot genoeg is om de invoerstring met tekens en het afsluitende null-teken te bevatten.,"В чем основное отличие между строкой символов, считываемой в переменную типа string, и переменной типа char []?",Char [] автоматически добавит нулевой символ \ 0 в конец строки.,"Программист должен предоставить завершающий нулевой символ в строке символов, используя тип char [], а также должен убедиться, что массив достаточно велик, чтобы содержать входную строку символов и завершающий нулевой символ.",Qual è la principale differenza tra una stringa di caratteri che viene letta in una variabile di tipo stringa e una variabile di tipo char []?,Il carattere [] aggiungerà automaticamente un carattere null \ 0 alla fine della stringa.,Il programmatore deve fornire il carattere di terminazione null in una stringa di caratteri utilizzando il tipo char [] e deve anche assicurarsi che l&#39;array sia sufficientemente grande da contenere la stringa di caratteri di input e il carattere di terminazione null.,¿Cuál es la principal diferencia entre una cadena de caracteres que se lee en una variable de tipo cadena y una variable de tipo char []?,El char [] agregará automáticamente un carácter nulo \ 0 al final de la cadena.,El programador debe proporcionar el carácter de terminación nulo en una cadena de caracteres utilizando el tipo char [] y también debe asegurarse de que la matriz sea lo suficientemente grande para contener la cadena de caracteres de entrada y el carácter de terminación nula.,"Jaka jest główna różnica między ciągiem znaków, który jest wczytywany do zmiennej typu string, a zmienną typu char []?",Znak [] automatycznie doda znak null \ 0 na końcu ciągu.,"Programista musi podać znak kończący o wartości null w ciągu znaków przy użyciu typu char [], a także musi upewnić się, że tablica jest wystarczająco duża, aby zawierać ciąg wejściowy znaków i znak kończący o wartości null.",Sự khác biệt chính giữa một chuỗi ký tự được đọc thành một biến kiểu chuỗi so với một biến kiểu char [] là gì?,Char [] sẽ tự động thêm ký tự null \ 0 vào cuối chuỗi.,Người lập trình phải cung cấp ký tự kết thúc null trong một chuỗi ký tự sử dụng kiểu char [] và cũng phải đảm bảo rằng mảng đủ lớn để chứa chuỗi ký tự đầu vào và ký tự kết thúc null.,string型の変数とchar []型の変数に読み込まれる文字列の主な違いは何ですか？,char []は、文字列の最後にnull \ 0文字を自動的に追加します。,プログラマーは、char []型を使用して文字列にヌル終了文字を指定する必要があります。また、配列が入力文字列とヌル終了文字を含むのに十分な大きさであることを確認する必要があります。,读入string类型的变量与char []类型的变量的字符串之间的主要区别是什么？,char []将在字符串的末尾自动添加一个空\ 0字符。,程序员必须使用char []类型在字符串中提供空终止符，并且还必须确保数组足够大，以包含输入的字符串和空终止符。,ما هو الفرق الرئيسي بين سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة مقابل متغير من النوع char []؟,سيضيف الحرف [] تلقائيًا حرفًا فارغًا \ 0 في نهاية السلسلة.,يجب أن يوفر المبرمج حرف النهاية الفارغ في سلسلة من الأحرف باستخدام النوع char [] ويجب أيضًا التأكد من أن الصفيف كبير بما يكفي لاحتواء سلسلة الأحرف المدخلة وحرف النهاية الفارغ.,"Яка основна різниця між рядком символів, який зчитується у змінну типу string від змінної типу char []?",Char [] автоматично додасть нульовий символ \ 0 в кінці рядка.,"Програміст повинен надати нульовий символ закінчення в рядку символів, використовуючи тип char [], а також повинен переконатися, що масив є достатньо великим, щоб містити вхідний рядок символів і нульовий символ закінчення.",Qual é a principal diferença entre uma string de caracteres que é lida em uma variável do tipo string e uma variável do tipo char []?,O char [] adicionará automaticamente um caractere nulo \ 0 no final da string.,O programador deve fornecer o caractere de terminação nulo em uma string de caracteres usando o tipo char [] e também deve garantir que a matriz seja grande o suficiente para conter a string de entrada de caracteres e o caractere de terminação nulo.,تفاوت اصلی یک رشته از کاراکترها در یک متغیر از نوع نوع در مقابل یک متغیر از نوع char [] چیست؟,char [] به طور خودکار در انتهای رشته یک کاراکتر null \ 0 اضافه می کند.,برنامه نویس باید نویسه خاتمه دهنده null را در یک رشته از نویسه ها با استفاده از نوع char [] ارائه دهد و همچنین باید اطمینان حاصل کند که آرایه به اندازه کافی بزرگ است که شامل رشته ورودی شخصیت ها و نویسه خاتمه کننده null باشد.,Quina és la diferència principal entre una cadena de caràcters que es llegeix en una variable de tipus cadena versus una variable de tipus char []?,El caràcter [] afegirà automàticament un caràcter \ 0 nul al final de la cadena.,El programador ha de proporcionar el caràcter de finalització nul·la en una cadena de caràcters mitjançant el tipus char [] i també ha de garantir que la matriu sigui prou gran per contenir la cadena d’entrada de caràcters i el caràcter de terminació nul·la.,Која је главна разлика између низа знакова који се читају у променљиву типа стринг у односу на променљиву типа цхар []?,Цхар [] ће аутоматски додати нулл \ 0 знак на крају низа.,"Програмер мора да пружи нулти завршавајући знак у низу знакова користећи тип цхар [], а такође мора осигурати да је низ довољно велик да садржи улазни низ знакова и нулто завршавајући знак.",Apa perbedaan utama antara string karakter yang dibaca menjadi variabel tipe string versus variabel tipe char []?,Karakter [] secara otomatis akan menambahkan karakter null \ 0 di akhir string.,Programmer harus menyediakan karakter penghentian null dalam string karakter menggunakan tipe char [] dan juga harus memastikan bahwa array cukup besar untuk memuat string input karakter dan karakter penghentian null.,Hva er hovedforskjellen mellom en streng med tegn som leses inn i en variabel av typen streng versus en variabel av typen char []?,Char [] vil automatisk legge til et null \ 0 tegn på slutten av strengen.,Programmereren må oppgi nullavslutningstegnet i en streng med tegn ved hjelp av typen char [] og må også sørge for at matrisen er stor nok til å inneholde inngangsstrengen med tegn og nullavslutningstegnet.,문자열 유형의 변수와 char [] 유형의 변수로 읽어들이는 문자열의 주요 차이점은 무엇입니까?,char []는 문자열 끝에 null \ 0 문자를 자동으로 추가합니다.,프로그래머는 char [] 유형을 사용하여 문자열에 널 종료 문자를 제공해야하며 배열이 문자의 입력 문자열과 널 종료 문자를 포함 할만큼 충분히 큰지 확인해야합니다.,"Mikä on tärkein ero merkkijonossa, joka luetaan merkkijonon muuttujaksi tyypin char [] muuttujaan?",Char [] lisää merkkijonon loppuun tyhjän merkin 0.,"Ohjelmoijan on annettava tyhjä merkkijono merkkijonossa käyttäen tyyppiä char [] ja sen on myös varmistettava, että taulukko on riittävän suuri sisältämään merkkien syöttömerkkijonon ja tyhjän lopetusmerkin.","Mi a fő különbség a karakterláncok között, amelyeket string típusú változóba olvasnak, és a char [] típusú változókba?",A char [] automatikusan hozzáad egy null \ 0 karaktert a karakterlánc végéhez.,"A programozónak meg kell adnia a null befejező karaktert egy karakterláncban a char [] típus használatával, és arról is gondoskodnia kell, hogy a tömb elég nagy legyen ahhoz, hogy tartalmazza a karakterek beviteli karakterláncát és a null végződő karaktert.","Jaký je hlavní rozdíl mezi řetězcem znaků, který je načten do proměnné typu řetězec oproti proměnné typu char []?",Znak [] automaticky přidá znak null \ 0 na konec řetězce.,"Programátor musí poskytnout znak zakončení nuly v řetězci znaků pomocí typu char [] a musí také zajistit, aby bylo pole dostatečně velké, aby obsahovalo vstupní řetězec znaků a znak zakončení nuly.",Koja je glavna razlika između niza znakova koji se čitaju u varijablu tipa string u odnosu na varijablu tipa char []?,Char [] automatski će dodati null \ 0 znak na kraju niza.,"Programer mora pružiti null završavajući znak u nizu znakova koristeći tip char [], a također mora osigurati da je niz dovoljno velik da sadrži ulazni niz znakova i null završni znak."
115,115,1512,9.1,A waiting list of items that operation in a FIFO (first in first out) order.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",What is a queue?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element das letzte ist, das entfernt wird (oder das First-In-First-Out).",Was ist eine Warteschlange?,"Eine Warteliste mit Elementen, die in einer FIFO-Reihenfolge (first in first out) ausgeführt werden.",Unsa ang pila?,"Ang usa ka istraktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang ulahi nga tangtangon (o una-sa-una-nga-out)",Usa ka lista sa paghulat sa mga butang nga gipadagan sa usa ka FIFO (una sa una nga pagawas) nga han-ay.,Vad är en kö?,"En datastruktur som kan lagra element, som har den egenskapen att det senast tillagda objektet är det sista som tas bort (eller först-in-först-ut).",En väntelista över objekt som fungerar i en FIFO-ordning (först in först ut).,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le dernier à être supprimé (ou premier entré, premier sorti).","Une liste d&#39;attente d&#39;articles qui fonctionnent dans un ordre FIFO (premier entré, premier sorti).",Wat is een wachtrij?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item het laatste is dat wordt verwijderd (of first-in-first-out).",Een wachtlijst met items die in een FIFO-volgorde (first in first out) werken.,Что такое очередь?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален последним (или первым пришел - первым ушел).","Список ожидания элементов, которые работают в порядке FIFO (первым пришел - первым ушел).",Cos&#39;è una coda?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà l&#39;ultimo a essere rimosso (o first-in-first-out).",Una lista d&#39;attesa di articoli che operano in un ordine FIFO (first in first out).,¿Qué es una cola?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el último en ser eliminado (o el primero en entrar, primero en salir).","Una lista de espera de elementos que operan en un orden FIFO (primero en entrar, primero en salir).",Co to jest kolejka?,"Struktura danych, która może przechowywać elementy, która ma tę właściwość, że ostatni dodany element będzie ostatnim do usunięcia (lub pierwszy na wejściu, pierwszy na wyjściu).","Lista oczekujących pozycji, które działają w kolejności FIFO (pierwsze weszło, pierwsze wyszło).",Hàng đợi là gì?,"Một cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử cuối cùng bị xóa (hoặc nhập trước xuất trước).",Danh sách chờ các mục hoạt động theo thứ tự FIFO (nhập trước xuất trước).,キューとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最後に削除される（または先入れ先出し）というプロパティがあります。,FIFO（先入れ先出し）の順序で動作するアイテムの待機リスト。,什么是队列？,可以存储元素的数据结构，其属性为最后添加的项将是最后要删除的（或先进先出）。,以FIFO（先进先出）顺序操作的项目的等待列表。,ما هو الطابور؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون آخر عنصر تتم إزالته (أو ما يرد أولاً يخرج أولاً).,قائمة انتظار بالعناصر التي يتم تشغيلها بترتيب ما يرد أولاً يصرف أولاً (FIFO).,Що таке черга?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде останнім, який буде видалено (або перший-у-першому-вихід).","Список очікування елементів, які працюють у порядку FIFO (перший у першому вихід).",O que é uma fila?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o último a ser removido (ou primeiro a entrar, primeiro a sair).","Uma lista de espera de itens que operam em uma ordem FIFO (primeiro a entrar, primeiro a sair).",صف چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده آخرین موردی است که حذف می شود (یا اولین بار در اولین بار).,لیست انتظار مواردی که به ترتیب FIFO (اولین بار در اولین بار) کار می کنند.,Què és una cua?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà l’últim que s’eliminarà (o el primer entrant-primer sortint).",Una llista d’espera d’elements que funcionen en un ordre FIFO (primer a primer que surt).,Шта је ред?,"Структура података која може да складишти елементе, а која има својство да ће последња додата ставка бити последња која ће бити уклоњена (или прва у првом).",Листа чекања за ставке које функционишу по ФИФО (прво у првом излазу) редоследу.,Apa itu antrian?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang item terakhir ditambahkan akan menjadi yang terakhir dihapus (atau pertama masuk pertama keluar).",Daftar tunggu item yang beroperasi dalam urutan FIFO (pertama masuk pertama keluar).,Hva er kø?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det siste som blir fjernet (eller først-inn-først-ut).",En venteliste over gjenstander som fungerer i en FIFO-rekkefølge (først i første ut),대기열이란 무엇입니까?,마지막으로 추가 된 항목이 제거 될 마지막 항목 (또는 선입 선출)이라는 속성을 가진 요소를 저장할 수있는 데이터 구조입니다.,FIFO (선입 선출) 순서로 작동하는 항목의 대기 목록입니다.,Mikä on jono?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan viimeisenä (tai ensin sisään-sisään-ulos-lähtöön).","Odotusluettelo tuotteista, jotka toimivat FIFO-järjestyksessä (ensimmäinen sisään ensimmäiseksi).",Mi a sor?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az utolsó, amelyet eltávolítanak (vagy az első az elsőben ki-be).",A FIFO (first in first out) sorrendben működő tételek várólistája.,Co je to fronta?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude poslední, která bude odebrána (nebo první-první-první-ven).","Čekací seznam položek, které operují v pořadí FIFO (první do prvního ven).",Šta je red?,"Struktura podataka koja može pohraniti elemente, koja ima svojstvo da će zadnja dodana stavka biti posljednja koja će se ukloniti (ili prva u prvom pojavljivanju).",Lista čekanja za stavke koje djeluju u FIFO redoslijedu (prvi u prvom izlazu).
116,116,768,4.5,"None, just pass the array name.","All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,2.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?","Keine, übergeben Sie einfach den Array-Namen.",Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.","Wala, ipasa ra ang ngalan sa array.",Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.","Ingen, skicka bara matrisnamnet.",Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.","Aucun, transmettez simplement le nom du tableau.",Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.","Geen, geef gewoon de arraynaam door.",Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","Нет, просто передайте имя массива.",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.","Nessuno, passa semplicemente il nome dell&#39;array.",¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.","Ninguno, simplemente pase el nombre de la matriz.",Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.","Brak, po prostu podaj nazwę tablicy.",Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.","Không, chỉ cần truyền tên mảng.",多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,なし、配列名を渡すだけです。,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,无，只需传递数组名称。,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,لا شيء ، فقط قم بتمرير اسم الصفيف.,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","Жоден, просто передайте ім&#39;я масиву.",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.","Nenhum, apenas passe o nome do array.",هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,هیچ ، فقط نام آرایه را رد کنید.,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.","Cap, només heu de passar el nom de la matriu.",Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.","Ниједан, само проследите име низа.",Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.","Tidak ada, cukup berikan nama array.",Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.","Ingen, bare pass matrisenavnet.",다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,"없음, 배열 이름 만 전달하십시오.","Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.","Ei mitään, vain välitä taulukon nimi.","Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","Nincs, csak adja át a tömb nevét.",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.","Žádný, stačí předat název pole.",Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.","Ništa, samo proslijedite ime niza."
117,117,1208,7.3,"You can go up and down an array , but you can only go one direction while traversing a linked list.","The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",What is the main advantage of arrays over linked lists?,3.0,"Auf die Elemente in einem Array kann direkt zugegriffen werden (im Gegensatz zu verknüpften Listen, die eine iterative Durchquerung erfordern).",Was ist der Hauptvorteil von Arrays gegenüber verknüpften Listen?,"Sie können ein Array auf und ab bewegen, aber Sie können nur eine Richtung gehen, während Sie eine verknüpfte Liste durchlaufen.",Unsa man ang punoan nga bentaha sa mga han-ay sa mga nalambigit nga lista?,"Ang mga elemento sa usa ka laray mahimong direkta nga ma-access (sukwahi sa mga nalambigit nga lista, nga nanginahanglan iterative traversal).","Mahimo ka nga magsaka ug mag-uswag sa usa ka laray, apan usa ra ka direksyon ang mahimo nimo nga agian samtang nag-agi sa usa ka nalakip nga lista.",Vad är den största fördelen med matriser jämfört med länkade listor?,"Elementen i en matris kan nås direkt (i motsats till länkade listor, som kräver iterativ genomgång).","Du kan gå upp och ner i en matris, men du kan bara gå en riktning när du går igenom en länkad lista.",Quel est le principal avantage des tableaux par rapport aux listes chaînées?,"Les éléments d&#39;un tableau sont accessibles directement (par opposition aux listes chaînées, qui nécessitent un parcours itératif).","Vous pouvez monter et descendre un tableau, mais vous ne pouvez aller que dans une direction tout en parcourant une liste liée.",Wat is het belangrijkste voordeel van arrays ten opzichte van gekoppelde lijsten?,"De elementen in een array zijn direct toegankelijk (in tegenstelling tot gekoppelde lijsten, die iteratief moeten doorlopen).","U kunt een array op en neer gaan, maar u kunt maar in één richting gaan tijdens het doorlopen van een gekoppelde lijst.",В чем основное преимущество массивов перед связанными списками?,"К элементам в массиве можно обращаться напрямую (в отличие от связанных списков, требующих итеративного обхода).","Вы можете перемещаться вверх и вниз по массиву, но вы можете двигаться только в одном направлении при обходе связанного списка.",Qual è il vantaggio principale degli array rispetto agli elenchi collegati?,"È possibile accedere direttamente agli elementi di un array (al contrario degli elenchi collegati, che richiedono un attraversamento iterativo).","Puoi andare su e giù per un array, ma puoi andare solo in una direzione mentre attraversi un elenco collegato.",¿Cuál es la principal ventaja de las matrices sobre las listas enlazadas?,"Se puede acceder directamente a los elementos de una matriz (a diferencia de las listas vinculadas, que requieren un recorrido iterativo).","Puede subir y bajar una matriz, pero solo puede ir en una dirección mientras recorre una lista vinculada.",Jaka jest główna zaleta tablic w porównaniu z listami połączonymi?,"Do elementów tablicy można uzyskać bezpośredni dostęp (w przeciwieństwie do połączonych list, które wymagają iteracyjnego przechodzenia).","Możesz poruszać się w górę iw dół tablicy, ale możesz iść tylko w jednym kierunku podczas przeglądania połączonej listy.",Ưu điểm chính của mảng so với danh sách liên kết là gì?,"Các phần tử trong một mảng có thể được truy cập trực tiếp (trái ngược với danh sách được liên kết, yêu cầu truyền tải lặp đi lặp lại).","Bạn có thể đi lên và xuống một mảng, nhưng bạn chỉ có thể đi theo một hướng khi duyệt qua danh sách được liên kết.",リンクリストに対する配列の主な利点は何ですか？,配列内の要素には直接アクセスできます（反復トラバーサルを必要とするリンクリストとは対照的です）。,配列を上下に移動できますが、リンクリストをトラバースしている間は一方向にしか移動できません。,与链接列表相比，数组的主要优点是什么？,数组中的元素可以直接访问（与链表相反，后者需要迭代遍历）。,您可以在数组上上下移动，但是在遍历链表时只能沿一个方向前进。,ما هي الميزة الرئيسية للمصفوفات على القوائم المرتبطة؟,يمكن الوصول إلى العناصر الموجودة في المصفوفة مباشرةً (على عكس القوائم المرتبطة التي تتطلب اجتيازًا تكراريًا).,يمكنك الانتقال لأعلى ولأسفل في مصفوفة ، لكن لا يمكنك السير إلا في اتجاه واحد أثناء عبور قائمة مرتبطة.,Яка головна перевага масивів над пов’язаними списками?,"До елементів у масиві можна отримати прямий доступ (на відміну від зв’язаних списків, які вимагають ітеративного обходу).","Ви можете переходити вгору та вниз по масиву, але ви можете рухатись лише в одному напрямку під час обходу пов’язаного списку.",Qual é a principal vantagem dos arrays em relação às listas vinculadas?,"Os elementos em uma matriz podem ser acessados diretamente (em oposição às listas vinculadas, que exigem travessia iterativa).","Você pode subir e descer uma matriz, mas só pode ir em uma direção ao percorrer uma lista vinculada.",مزیت اصلی آرایه ها نسبت به لیست های پیونددار چیست؟,به عناصر موجود در یک آرایه می توان مستقیماً دسترسی داشت (در مقابل لیست های پیوندی که به پیمایش تکراری نیاز دارند).,می توانید یک آرایه را بالا و پایین کنید ، اما فقط می توانید در حالی که لیست پیوندی را رد می کنید به یک جهت بروید.,Quin és el principal avantatge de les matrius sobre les llistes enllaçades?,"Es pot accedir directament als elements d’una matriu (a diferència de les llistes enllaçades, que requereixen un recorregut iteratiu).","Podeu pujar i baixar una matriu, però només podeu anar en una direcció mentre travesseu una llista enllaçada.",Која је главна предност низа у односу на повезане листе?,"Елементима у низу може се приступити директно (за разлику од повезаних листа, које захтевају итеративно обилажење).","Можете ићи горе-доле низом, али можете ићи само у једном смеру док обилазите повезану листу.",Apa keuntungan utama array dibandingkan daftar tertaut?,"Elemen-elemen dalam sebuah array dapat diakses secara langsung (sebagai kebalikan dari daftar tertaut, yang membutuhkan traversal berulang).","Anda dapat naik dan turun sebuah larik, tetapi Anda hanya dapat pergi satu arah saat melintasi daftar tertaut.",Hva er den største fordelen med matriser i forhold til koblede lister?,"Elementene i en matrise kan fås direkte (i motsetning til koblede lister, som krever iterativ gjennomgang).","Du kan gå opp og ned en matrise, men du kan bare gå en retning mens du krysser en koblet liste.",연결된 목록에 비해 배열의 주요 이점은 무엇입니까?,배열의 요소는 직접 액세스 할 수 있습니다 (반복 순회가 필요한 연결 목록과 반대).,배열을 위아래로 이동할 수 있지만 연결된 목록을 탐색하는 동안 한 방향으로 만 이동할 수 있습니다.,Mikä on matriisien tärkein etu linkitettyihin luetteloihin nähden?,"Taulukon elementteihin pääsee suoraan (toisin kuin linkitetyt luettelot, jotka edellyttävät iteratiivista kulkua).","Voit mennä ylös ja alas taulukossa, mutta voit mennä vain yhteen suuntaan, kun kulket linkitettyä luetteloa.",Mi a tömbök fő előnye a kapcsolt listákkal szemben?,"A tömb elemeihez közvetlenül lehet hozzáférni (szemben az összekapcsolt listákkal, amelyek iteratív bejárást igényelnek).","Felfelé és lefelé haladhat egy tömbben, de csak egy irányba haladhat, miközben egy összekapcsolt listán halad.",Jaká je hlavní výhoda polí oproti propojeným seznamům?,"K prvkům v poli lze přistupovat přímo (na rozdíl od propojených seznamů, které vyžadují iterativní procházení).","Můžete procházet pole nahoru a dolů, ale při procházení propojeným seznamem můžete jít pouze jedním směrem.",Koja je glavna prednost polja nad povezanim listama?,"Elementima u nizu može se pristupiti izravno (za razliku od povezanih lista, koje zahtijevaju iterativno obilaženje).","Možete ići gore i dolje nizom, ali možete ići samo u jednom smjeru dok obilazite povezanu listu."
118,118,56,1.2,coding,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),What stages in the software life cycle are influenced by the testing stage?,3.0,Die Teststufe kann sowohl die Codierungsstufe (Phase 5) als auch die Lösungsverfeinerungsstufe (Phase 7) beeinflussen.,Welche Phasen im Software-Lebenszyklus werden von der Testphase beeinflusst?,Codierung,Unsang mga yugto sa siklo sa kinabuhi sa software ang naimpluwensyahan sa yugto sa pagsulay?,Ang yugto sa pagsulay mahimong makaimpluwensya sa pareho nga yugto sa pag-coding (yugto 5) ug ang yugto sa pagpino sa solusyon (yugto 7),pag-coding,Vilka steg i programvarans livscykel påverkas av testfasen?,Teststeget kan påverka både kodningssteget (fas 5) och lösningsförfiningssteget (fas 7),kodning,Quelles étapes du cycle de vie du logiciel sont influencées par l&#39;étape de test?,L&#39;étape de test peut influencer à la fois l&#39;étape de codage (phase 5) et l&#39;étape de raffinement de la solution (phase 7),codage,Welke fasen in de levenscyclus van software worden beïnvloed door de testfase?,De testfase kan zowel de coderingsfase (fase 5) als de oplossingsverfijningsfase (fase 7) beïnvloeden,codering,На какие этапы жизненного цикла ПО влияет этап тестирования?,"Этап тестирования может влиять как на этап кодирования (этап 5), так и на этап уточнения решения (этап 7).",кодирование,Quali fasi del ciclo di vita del software sono influenzate dalla fase di test?,La fase di test può influenzare sia la fase di codifica (fase 5) che la fase di affinamento della soluzione (fase 7),codifica,¿Qué etapas del ciclo de vida del software están influenciadas por la etapa de prueba?,La etapa de prueba puede influir tanto en la etapa de codificación (fase 5) como en la etapa de refinamiento de la solución (fase 7),codificación,Na jakie etapy cyklu życia oprogramowania wpływa etap testowania?,"Etap testowania może wpływać zarówno na etap kodowania (faza 5), jak i na etap udoskonalania rozwiązania (faza 7)",kodowanie,Giai đoạn nào trong vòng đời phần mềm bị ảnh hưởng bởi giai đoạn kiểm thử?,Giai đoạn thử nghiệm có thể ảnh hưởng đến cả giai đoạn mã hóa (giai đoạn 5) và giai đoạn tinh chỉnh giải pháp (giai đoạn 7),mã hóa,ソフトウェアライフサイクルのどの段階がテスト段階の影響を受けますか？,テスト段階は、コーディング段階（フェーズ5）とソリューションの改良段階（フェーズ7）の両方に影響を与える可能性があります。,コーディング,测试阶段会影响软件生命周期的哪些阶段？,测试阶段可以影响编码阶段（阶段5）和解决方案优化阶段（阶段7）,编码,ما هي مراحل دورة حياة البرنامج التي تتأثر بمرحلة الاختبار؟,يمكن أن تؤثر مرحلة الاختبار على كل من مرحلة التشفير (المرحلة 5) ومرحلة تحسين الحل (المرحلة 7),الترميز,На які етапи життєвого циклу програмного забезпечення впливає етап тестування?,"Стадія випробування може впливати як на стадію кодування (фаза 5), так і на стадію доробки розчину (фаза 7)",кодування,Que fases do ciclo de vida do software são influenciadas pela fase de teste?,O estágio de teste pode influenciar tanto o estágio de codificação (fase 5) quanto o estágio de refinamento da solução (fase 7),codificação,چه مرحله هایی از چرخه عمر نرم افزار تحت تأثیر مرحله آزمایش قرار می گیرند؟,مرحله آزمایش می تواند هم در مرحله کدگذاری (مرحله 5) و هم در مرحله تصفیه محلول (مرحله 7) تأثیر بگذارد.,برنامه نویسی,Quines etapes del cicle de vida del programari estan influïdes per la fase de proves?,L&#39;etapa de prova pot influir tant en l&#39;etapa de codificació (fase 5) com en l&#39;etapa de refinament de la solució (fase 7),codificació,На које фазе у животном циклусу софтвера утиче фаза тестирања?,Фаза испитивања може утицати и на фазу кодирања (фаза 5) и на фазу усавршавања раствора (фаза 7),кодирање,Tahapan apa dalam siklus hidup perangkat lunak yang dipengaruhi oleh tahap pengujian?,Tahap pengujian dapat mempengaruhi tahap pengkodean (tahap 5) dan tahap perbaikan solusi (tahap 7),pengkodean,Hvilke stadier i programvarens livssyklus påvirkes av testfasen?,Testfasen kan påvirke både kodingsfasen (fase 5) og løsningsfinesseringen (fase 7),koding,테스트 단계의 영향을받는 소프트웨어 수명주기의 단계는 무엇입니까?,테스트 단계는 코딩 단계 (5 단계)와 솔루션 개선 단계 (7 단계) 모두에 영향을 미칠 수 있습니다.,코딩,Mihin ohjelmiston elinkaaren vaiheisiin testausvaihe vaikuttaa?,Testausvaihe voi vaikuttaa sekä koodausvaiheeseen (vaihe 5) että liuoksen jalostusvaiheeseen (vaihe 7),koodaus,A szoftver életciklusának mely szakaszait befolyásolja a tesztelési szakasz?,"A tesztelési szakasz befolyásolhatja mind a kódolási (5. fázis), mind az oldat-finomítási fázist (7. fázis)",kódolás,Na jaké fáze životního cyklu softwaru má fáze testování vliv?,"Fáze testování může ovlivnit jak fázi kódování (fáze 5), tak fázi zdokonalení řešení (fáze 7)",kódování,Na koje faze u životnom ciklusu softvera utiče faza testiranja?,Faza ispitivanja može utjecati i na fazu kodiranja (faza 5) i na fazu usavršavanja rastvora (faza 7),kodiranje
119,119,1114,6.7,a pointer to a function,The address of the location in memory where the function code resides.,What is a function pointer?,3.5,"Die Adresse des Speicherorts, an dem sich der Funktionscode befindet.",Was ist ein Funktionszeiger?,ein Zeiger auf eine Funktion,Unsa ang usa ka function pointer?,Ang adres sa lokasyon sa panumduman diin nagpuyo ang function code.,usa ka pointer sa usa ka kalihokan,Vad är en funktionspekare?,Adressen till platsen i minnet där funktionskoden finns.,en pekare till en funktion,Qu&#39;est-ce qu&#39;un pointeur de fonction?,L&#39;adresse de l&#39;emplacement en mémoire où réside le code de fonction.,un pointeur vers une fonction,Wat is een functie-aanwijzer?,Het adres van de locatie in het geheugen waar de functiecode zich bevindt.,een aanwijzer naar een functie,Что такое указатель на функцию?,"Адрес места в памяти, где находится код функции.",указатель на функцию,Cos&#39;è un puntatore a funzione?,L&#39;indirizzo della posizione in memoria in cui risiede il codice funzione.,un puntatore a una funzione,¿Qué es un puntero de función?,La dirección de la ubicación en la memoria donde reside el código de función.,un puntero a una función,Co to jest wskaźnik funkcji?,"Adres lokalizacji w pamięci, w której znajduje się kod funkcji.",wskaźnik do funkcji,Con trỏ hàm là gì?,Địa chỉ của vị trí trong bộ nhớ nơi mã hàm cư trú.,một con trỏ đến một hàm,関数ポインタとは何ですか？,機能コードが存在するメモリ内の場所のアドレス。,関数へのポインタ,什么是函数指针？,功能代码所在的内存位置的地址。,指向函数的指针,ما هو مؤشر الوظيفة؟,عنوان الموقع في الذاكرة حيث يوجد رمز الوظيفة.,مؤشر إلى وظيفة,Що таке покажчик функції?,"Адреса місця в пам&#39;яті, де знаходиться код функції.",вказівник на функцію,O que é um ponteiro de função?,O endereço do local na memória onde o código de função reside.,um ponteiro para uma função,نشانگر عملکرد چیست؟,آدرس مکانی در حافظه که کد عملکرد در آن قرار دارد.,یک اشاره گر به یک تابع,Què és un punter de funció?,L&#39;adreça de la ubicació a la memòria on resideix el codi de funció.,un punter cap a una funció,Шта је показивач функције?,Адреса локације у меморији на којој се налази код функције.,показивач на функцију,Apa itu penunjuk fungsi?,Alamat lokasi di memori tempat kode fungsi berada.,penunjuk ke suatu fungsi,Hva er en funksjonspeker?,Adressen til stedet i minnet der funksjonskoden ligger.,en peker til en funksjon,함수 포인터 란 무엇입니까?,기능 코드가있는 메모리의 위치 주소입니다.,함수에 대한 포인터,Mikä on funktion osoitin?,"Sen muistin sijainnin osoite, jossa toimintokoodi sijaitsee.",osoitin toiminnolle,Mi az a funkciómutató?,"A memória azon helyének címe, ahol a funkciókód található.",egy függvény mutatója,Co je ukazatel funkce?,"Adresa umístění v paměti, kde se nachází funkční kód.",ukazatel na funkci,Što je pokazivač funkcije?,Adresa lokacije u memoriji na kojoj se nalazi kôd funkcije.,pokazivač na funkciju
120,120,2166,12.1,A data type that points to an address in memory which contains certain information. Used for pass-by-reference to save memory.,The address of a location in memory.,What is a pointer?,5.0,Die Adresse eines Speicherorts.,Was ist ein Zeiger?,"Ein Datentyp, der auf eine Adresse im Speicher verweist, die bestimmte Informationen enthält. Wird als Referenz verwendet, um Speicherplatz zu sparen.",Unsa ang usa ka pointer?,Ang adres sa usa ka lokasyon sa memorya.,Usa ka tipo sa datos nga nagpunting sa usa ka adres sa panumduman nga adunay sulud nga kasayuran. Gigamit alang sa pass-by-reference aron makatipig ang memorya.,Vad är en pekare?,Adressen till en plats i minnet.,En datatyp som pekar på en adress i minnet som innehåller viss information. Används som referens för att spara minne.,Qu&#39;est-ce qu&#39;un pointeur?,L&#39;adresse d&#39;un emplacement en mémoire.,Un type de données qui pointe vers une adresse en mémoire qui contient certaines informations. Utilisé pour le passage par référence pour économiser de la mémoire.,Wat is een aanwijzer?,Het adres van een locatie in het geheugen.,Een gegevenstype dat verwijst naar een adres in het geheugen dat bepaalde informatie bevat. Wordt gebruikt voor pass-by-reference om geheugen te besparen.,Что такое указатель?,Адрес места в памяти.,"Тип данных, указывающий на адрес в памяти, который содержит определенную информацию. Используется для передачи по ссылке для экономии памяти.",Cos&#39;è un puntatore?,L&#39;indirizzo di una posizione in memoria.,Un tipo di dati che punta a un indirizzo in memoria che contiene determinate informazioni. Utilizzato come riferimento per risparmiare memoria.,¿Qué es un puntero?,La dirección de una ubicación en la memoria.,Un tipo de datos que apunta a una dirección en la memoria que contiene cierta información. Se utiliza para pasar por referencia para ahorrar memoria.,Co to jest wskaźnik?,Adres lokalizacji w pamięci.,Typ danych wskazujący na adres w pamięci zawierający określone informacje. Służy do przekazywania przez odniesienie w celu oszczędzania pamięci.,Con trỏ là gì?,Địa chỉ của một vị trí trong bộ nhớ.,Một kiểu dữ liệu trỏ đến một địa chỉ trong bộ nhớ chứa thông tin nhất định. Được sử dụng để chuyển qua tham chiếu nhằm tiết kiệm bộ nhớ.,ポインタとは何ですか？,メモリ内の場所のアドレス。,特定の情報を含むメモリ内のアドレスを指すデータ型。メモリを節約するための参照渡しに使用されます。,什么是指针？,内存中位置的地址。,指向内存中包含某些信息的地址的数据类型。用于通过引用以节省内存。,ما هو المؤشر؟,عنوان موقع في الذاكرة.,نوع بيانات يشير إلى عنوان في الذاكرة يحتوي على معلومات معينة. تستخدم للمرجع التمريري لحفظ الذاكرة.,Що таке вказівник?,Адреса місця в пам&#39;яті.,"Тип даних, який вказує на адресу в пам&#39;яті, яка містить певну інформацію. Використовується для передачі-посилання для економії пам’яті.",O que é um ponteiro?,O endereço de um local na memória.,Um tipo de dados que aponta para um endereço na memória que contém certas informações. Usado para passagem por referência para economizar memória.,اشاره گر چیست؟,آدرس مکانی در حافظه.,یک نوع داده که به آدرسی در حافظه اشاره دارد که حاوی اطلاعات خاصی است. برای صرفه جویی در حافظه استفاده می شود.,Què és un punter?,L&#39;adreça d&#39;una ubicació a la memòria.,Un tipus de dades que apunta a una adreça a la memòria que conté certa informació. S’utilitza per passar-per-referència per estalviar memòria.,Шта је показивач?,Адреса локације у меморији.,Тип података који упућује на адресу у меморији која садржи одређене информације. Користи се за прослеђивање референци ради уштеде меморије.,Apa itu penunjuk?,Alamat lokasi di memori.,Jenis data yang menunjuk ke alamat di memori yang berisi informasi tertentu. Digunakan sebagai referensi lewat untuk menghemat memori.,Hva er en peker?,Adressen til en plassering i minnet.,En datatype som peker til en adresse i minnet som inneholder viss informasjon. Brukes som referanse for å spare minne.,포인터 란 무엇입니까?,메모리에있는 위치의 주소.,특정 정보를 포함하는 메모리의 주소를 가리키는 데이터 유형입니다. 메모리를 절약하기 위해 참조에 의한 전달에 사용됩니다.,Mikä on osoitin?,Muistissa olevan sijainnin osoite.,"Tietotyyppi, joka osoittaa muistissa olevaan osoitteeseen, joka sisältää tiettyjä tietoja. Käytetään ohivirtaukseen muistin säästämiseksi.",Mi az a mutató?,A memóriában lévő hely címe.,"Adattípus, amely a memóriában található címre mutat, amely bizonyos információkat tartalmaz. A memória megtakarításához utólagos hivatkozásra használják.",Co je to ukazatel?,Adresa umístění v paměti.,"Datový typ, který ukazuje na adresu v paměti, která obsahuje určité informace. Slouží k předávání pro úsporu paměti.",Šta je pokazivač?,Adresa lokacije u memoriji.,Tip podataka koji upućuje na adresu u memoriji koja sadrži određene informacije. Koristi se za prosljeđivanje radi uštede memorije.
121,121,2398,12.9,"If the node is a leaf, just set it's parent's pointer to null and delete it, if it has a single child, set the parent's pointer to the child and delete; if it has two children, set the node to one of the middle children and remove that child from its previous position as a leaf (rightmost child of the left subtree or leftmost child of the right subtree).","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,5.0,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,"Wenn der Knoten ein Blatt ist, setzen Sie einfach den Zeiger des Elternteils auf null und löschen Sie ihn. Wenn er ein einzelnes Kind hat, setzen Sie den Zeiger des Elternteils auf das Kind und löschen Sie es. Wenn es zwei untergeordnete Elemente hat, setzen Sie den Knoten auf eines der mittleren untergeordneten Elemente und entfernen Sie dieses untergeordnete Element von seiner vorherigen Position als Blatt (rechtes Kind des linken Teilbaums oder linkes Kind des rechten Teilbaums).",Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).","Kung ang node usa ka dahon, itakda ra ang tudlo sa ginikanan nga i-null ug tangtang kini, kung adunay kini usa ka anak, itakda ang tudlo sa ginikanan sa bata ug tangtanga; kung adunay kini duha ka mga anak, itakda ang node sa usa sa mga tunga nga bata ug kuhaa ang kana nga bata gikan sa naunang posisyon niini ingon usa ka dahon (tuo nga anak sa wala nga subtree o wala nga bata sa tuo nga subtree).",Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,"Om noden är ett blad ställer du bara in föräldrarnas pekare på null och tar bort den. Om den har ett enda barn, ställ in föräldrarnas pekare till barnet och ta bort; om den har två barn, ställer du in noden till ett av de mellersta barnen och tar bort barnet från dess tidigare position som ett blad (längst till höger i det vänstra underträdet eller längst till vänster i det högra underträdet).",Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).","Si le nœud est une feuille, définissez simplement le pointeur de son parent sur null et supprimez-le, s&#39;il a un seul enfant, définissez le pointeur du parent sur l&#39;enfant et supprimez; s&#39;il a deux enfants, définissez le nœud sur l&#39;un des enfants du milieu et supprimez cet enfant de sa position précédente en tant que feuille (enfant le plus à droite du sous-arbre gauche ou enfant le plus à gauche du sous-arbre droit).",Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,"Als het knooppunt een blad is, zet dan de aanwijzer van de ouder op nul en verwijder het. Als het een enkel kind heeft, zet dan de aanwijzer van de ouder op het kind en verwijder; als het twee kinderen heeft, stelt u het knooppunt in op een van de middelste kinderen en verwijdert u dat kind uit zijn vorige positie als een blad (meest rechtse kind van de linker substructuur of meest linkse kind van de rechter substructuur).",Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","Если узел является листом, просто установите указатель его родителя на null и удалите его, если у него есть единственный дочерний элемент, установите указатель родителя на дочерний элемент и удалите; если у него два дочерних элемента, установите для узла один из средних дочерних элементов и удалите этот дочерний элемент из его предыдущей позиции в качестве листа (крайний правый дочерний элемент левого поддерева или крайний левый дочерний элемент правого поддерева).",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).","Se il nodo è una foglia, basta impostare il puntatore del genitore su null ed eliminarlo, se ha un solo figlio, impostare il puntatore del genitore sul figlio ed eliminare; se ha due figli, imposta il nodo su uno dei figli centrali e rimuovi quel figlio dalla sua posizione precedente come foglia (figlio più a destra del sottoalbero sinistro o figlio più a sinistra del sottoalbero destro).",¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).","Si el nodo es una hoja, simplemente establezca el puntero del padre en nulo y elimínelo, si tiene un solo hijo, establezca el puntero del padre en el hijo y elimine; si tiene dos hijos, establezca el nodo en uno de los hijos del medio y elimine ese hijo de su posición anterior como hoja (hijo más a la derecha del subárbol izquierdo o hijo más a la izquierda del subárbol derecho).",Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).","Jeśli węzeł jest liściem, po prostu ustaw wskaźnik rodzica na null i usuń go, jeśli ma jedno dziecko, ustaw wskaźnik rodzica na dziecko i usuń; jeśli ma dwoje dzieci, ustaw węzeł na jedno ze środkowych elementów potomnych i usuń to dziecko z jego poprzedniej pozycji jako liść (skrajnie prawe dziecko lewego poddrzewa lub skrajne lewe dziecko prawego poddrzewa).",Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).","Nếu nút là một lá, chỉ cần đặt con trỏ của nó thành null và xóa nó, nếu nó có một con, hãy đặt con trỏ của cha thành con và xóa; nếu nó có hai nút con, hãy đặt nút thành một trong các nút con ở giữa và xóa nút con đó khỏi vị trí trước đó của nó làm lá (con ngoài cùng bên phải của cây con bên trái hoặc con ngoài cùng bên trái của cây con bên phải).",二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,ノードがリーフの場合は、親のポインタをnullに設定して削除します。子が1つしかない場合は、親のポインタを子に設定して削除します。子が2つある場合は、ノードを中央の子の1つに設定し、その子をリーフとしての前の位置から削除します（左のサブツリーの右端の子または右のサブツリーの左端の子）。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,如果该节点是叶子，则将其父对象的指针设置为null并删除它；如果该节点具有单个孩子，则将父对象的指针设置为该孩子并删除；如果它有两个子代，则将节点设置为中间子代之一，并将该子代从其先前位置中移除为叶子（左子树的最右子代或右子树的最左子代）。,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,إذا كانت العقدة عبارة عن ورقة ، فقم فقط بتعيين مؤشر الأصل الخاص بها على قيمة خالية وحذفها ، وإذا كان لديها طفل واحد ، فقم بتعيين مؤشر الوالد على الطفل وحذفه ؛ إذا كان لديها طفلان ، فقم بتعيين العقدة على أحد الأطفال الأوسطين وقم بإزالة هذا الطفل من موضعه السابق بصفته ورقة (الطفل الموجود في أقصى اليمين للشجرة الفرعية اليسرى أو الطفل الموجود في أقصى اليسار للشجرة الفرعية اليمنى).,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).","Якщо вузол є листом, просто встановіть його батьківський покажчик на нуль і видаліть його, якщо він має єдину дочірню організацію, встановіть батьківський покажчик на дочірній і видаліть; якщо у нього двоє дітей, встановіть вузол на одного з середніх дітей і видаліть цю дитину з попереднього положення як лист (крайню праву дочку лівого піддерева або крайню ліву дочку правого піддерева).",Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,"Se o nó for uma folha, basta definir o ponteiro do pai como nulo e excluí-lo; se tiver um único filho, definir o ponteiro do pai para o filho e excluir; se ele tiver dois filhos, defina o nó para um dos filhos do meio e remova esse filho de sua posição anterior como uma folha (filho mais à direita da subárvore esquerda ou filho mais à esquerda da subárvore direita).",چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,اگر گره یک برگ است ، فقط نشانگر والدین را تنظیم کنید تا آن را خنثی کرده و حذف کند ، اگر یک فرزند دارد ، نشانگر والدین را روی کودک تنظیم کنید و حذف کنید. اگر دو فرزند دارد ، گره را به یکی از بچه های میانی تنظیم کنید و آن کودک را از موقعیت قبلی خود به عنوان یک برگ خارج کنید (سمت راست ترین فرزند زیر شاخه چپ یا چپ ترین فرزند زیر درخت راست).,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).","Si el node és una fulla, només heu d’establir el punter del pare a nul i suprimir-lo; si té un sol fill, configureu el punter del pare al fill i suprimiu-lo; si té dos fills, configureu el node en un dels fills mitjans i traieu aquest nen de la seva posició anterior com a fulla (fill més a la dreta del subarbre esquerre o fill més a l&#39;esquerra del subarbre dret).",Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).","Ако је чвор лист, само подесите његов родитељски показивач на нулу и избришите га, ако има једно дете, поставите родитељски показивач на дете и избришите; ако има двоје деце, поставите чвор на једно од средње деце и уклоните то дете из претходног положаја као лист (крајње десно дете левог подстабла или крајње лево дете десног подстабла).",Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).","Jika node adalah sebuah daun, setel pointer orangtuanya menjadi null dan hapus, jika node memiliki satu anak, setel pointer orang tua ke anak tersebut dan hapus; jika ia memiliki dua anak, atur simpul ke salah satu anak tengah dan hapus anak itu dari posisi sebelumnya sebagai daun (anak paling kanan dari sub pohon kiri atau anak paling kiri dari sub pohon kanan).",Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).","Hvis noden er et blad, er det bare å sette foreldrenes peker til null og slette den. Hvis den har et enkelt barn, sett foreldrenes peker til barnet og slett; hvis den har to barn, setter du noden til et av de midterste barna og fjerner barnet fra dets forrige posisjon som et blad (høyre barn av venstre undertre eller venstre barn av høyre undertre).",이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,"노드가 리프 인 경우 부모의 포인터를 null로 설정하고 삭제하고, 자식이 단일 인 경우 부모의 포인터를 자식으로 설정하고 삭제합니다. 자식이 두 개인 경우 노드를 중간 자식 중 하나로 설정하고 리프로 이전 위치에서 해당 자식을 제거합니다 (왼쪽 하위 트리의 가장 오른쪽 자식 또는 오른쪽 하위 트리의 맨 왼쪽 자식).",Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,"Jos solmu on lehti, aseta vain sen vanhemman osoitin nollaksi ja poista se, jos sillä on yksi lapsi, aseta vanhemman osoitin lapselle ja poista; jos sillä on kaksi lasta, aseta solmu toiselle keskimmäisestä lapsesta ja poista lapsi edellisestä sijainnistaan lehdenä (vasemman alipuun oikeanpuoleisin lapsi tai oikean alipuun vasemmanpuoleisin lapsi).",Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","Ha a csomópont levél, csak állítsa nullára a szülő mutatóját, és törölje, ha egyetlen gyermeke van, állítsa a szülő mutatóját a gyermekre, és törölje; ha két gyermeke van, állítsa a csomópontot az egyik középső gyermekhez, és távolítsa el azt a gyereket az előző helyzetéből, mint levél (a bal alfa jobb szélső gyermeke vagy a jobb alfa jobb szélső gyermeke).",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,"Pokud je uzel list, stačí nastavit jeho nadřazený ukazatel na null a odstranit jej, pokud má jedno podřízené, nastavit nadřazený ukazatel na podřízený a odstranit; pokud má dvě děti, nastavte uzel na jednu ze středních dětí a odeberte ji z její předchozí polohy jako list (dítě zcela vpravo levého podstromu nebo dítě úplně vlevo pravého podstromu).",Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).","Ako je čvor list, samo postavite njegov roditeljski pokazivač na nulu i izbrišite ga, ako ima jedno dijete, postavite roditeljski pokazivač na dijete i izbrišite; ako ima dvoje djece, postavite čvor na jedno od srednje djece i uklonite to dijete iz prethodnog položaja kao list (krajnje desno dijete lijevog podstabla ili krajnje lijevo dijete desnog podstabla)."
122,122,767,4.5,"at least 2, but it should always equal the number of dimensions that the argument is expecting... like...  blah[][][][] will require 4 dimensional array input. blah[][][] will require a 3 dimensional array. blah[][] will require a 2 dimensional array.","All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,3.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?","mindestens 2, aber es sollte immer der Anzahl der Dimensionen entsprechen, die das Argument erwartet ... wie ... blah [] [] [] [] erfordert eine 4-dimensionale Array-Eingabe. blah [] [] [] erfordert ein dreidimensionales Array. blah [] [] erfordert ein zweidimensionales Array.",Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.","labing menos 2, apan kinahanglan kanunay nga managsama ang gidaghanon sa mga sukat nga gipaabut sa lantugi ... sama sa ... blah [] [] [] [] manginahanglan 4 nga dimensional nga pag-input sa array. blah [] [] [] manginahanglan usa ka 3 dimensional nga han-ay. blah [] [] magkinahanglan usa ka 2 nga dimensional nga han-ay.",Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.","minst 2, men det ska alltid vara lika med antalet dimensioner som argumentet förväntar sig ... som ... bla [] [] [] [] kräver 4-dimensionell matrisinmatning. blah [] [] [] kräver en tredimensionell matris. blah [] [] kräver en tvådimensionell matris.",Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.","au moins 2, mais il doit toujours être égal au nombre de dimensions que l&#39;argument attend ... comme ... bla [] [] [] [] nécessitera une entrée de tableau à 4 dimensions. blah [] [] [] nécessitera un tableau en 3 dimensions. blah [] [] nécessitera un tableau à 2 dimensions.",Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.","tenminste 2, maar het moet altijd gelijk zijn aan het aantal dimensies dat het argument verwacht ... zoals ... blah [] [] [] [] zal 4 dimensionale array-invoer vereisen. blah [] [] [] vereist een driedimensionale array. blah [] [] vereist een tweedimensionale array.",Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","минимум 2, но он всегда должен быть равен количеству измерений, ожидаемых аргументом ... например ... blah [] [] [] [] потребует ввода 4-х мерного массива. blah [] [] [] потребуется трехмерный массив. blah [] [] потребуется двумерный массив.",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.","almeno 2, ma dovrebbe sempre essere uguale al numero di dimensioni che l&#39;argomento si aspetta ... come ... blah [] [] [] [] richiederà l&#39;input di un array quadridimensionale. blah [] [] [] richiederà un array tridimensionale. blah [] [] richiederà un array bidimensionale.",¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.","al menos 2, pero siempre debe ser igual al número de dimensiones que espera el argumento ... como ... blah [] [] [] [] requerirá una entrada de matriz de 4 dimensiones. blah [] [] [] requerirá una matriz tridimensional. blah [] [] requerirá una matriz bidimensional.",Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.","co najmniej 2, ale zawsze powinno być równe liczbie wymiarów, których oczekuje argument ... np. ... bla [] [] [] [] będzie wymagało wprowadzenia czterowymiarowej tablicy. blah [] [] [] będzie wymagać trójwymiarowej tablicy. blah [] [] będzie wymagało dwuwymiarowej tablicy.",Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.","ít nhất là 2, nhưng nó phải luôn bằng số thứ nguyên mà đối số đang mong đợi ... chẳng hạn như ... blah [] [] [] [] sẽ yêu cầu đầu vào mảng 4 chiều. blah [] [] [] sẽ yêu cầu một mảng 3 chiều. blah [] [] sẽ yêu cầu một mảng 2 chiều.",多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,少なくとも2つですが、引数が期待する次元の数と常に等しくなければなりません...のように... blah [] [] [] []には4次元の配列入力が必要です。 blah [] [] []には3次元配列が必要です。 blah [] []には2次元配列が必要です。,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,至少2，但它应始终等于参数期望的维数。例如... blah [] [] [] []将需要4维数组输入。 blah [] [] []将需要一个3维数组。 blah [] []将需要一个二维数组。,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,2 على الأقل ، ولكن يجب أن يساوي دائمًا عدد الأبعاد التي تتوقعها الحجة ... مثل ... بلاه [] [] [] [] سيتطلب مدخلات مصفوفة رباعية الأبعاد. سيتطلب بلاه [] [] [] مصفوفة ثلاثية الأبعاد. سيتطلب بلاه [] [] مصفوفة ثنائية الأبعاد.,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","принаймні 2, але вона завжди повинна дорівнювати кількості вимірів, яку очікує аргумент ... як ... бла [] [] [] [] [] вимагатиме введення 4-мірного масиву. blah [] [] [] вимагатиме тривимірного масиву. blah [] [] вимагатиме двовимірного масиву.",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.","pelo menos 2, mas deve sempre ser igual ao número de dimensões que o argumento está esperando ... como ... blá [] [] [] [] exigirá entrada de matriz de 4 dimensões. blah [] [] [] exigirá uma matriz tridimensional. blah [] [] exigirá uma matriz bidimensional.",هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,حداقل 2 ، اما باید همیشه برابر با ابعادی باشد که آرگومان انتظار دارد ... مانند ... blah [] [] [] [] به ورودی آرایه 4 بعدی احتیاج دارد. blah [] [] [] به یک آرایه 3 بعدی احتیاج دارد. blah [] [] به یک آرایه 2 بعدی احتیاج دارد.,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.","com a mínim 2, però sempre hauria de ser igual al nombre de dimensions que espera l&#39;argument ... com ... bla [] [] [] [] requerirà una entrada de matriu de 4 dimensions. bla [] [] [] requerirà una matriu tridimensional. bla [] [] requerirà una matriu bidimensional.",Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.","најмање 2, али увек треба да буде једнак броју димензија које аргумент очекује ... попут ... блах [] [] [] [] ће бити потребан четвородимензионални унос низа. блах [] [] [] ће захтевати тродимензионални низ. блах [] [] ће захтевати дводимензионални низ.",Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.","setidaknya 2, tetapi harus selalu sama dengan jumlah dimensi yang diharapkan argumen ... seperti ... bla [] [] [] [] akan memerlukan input array 4 dimensi. bla [] [] [] akan membutuhkan larik 3 dimensi. bla [] [] akan membutuhkan larik 2 dimensi.",Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.","minst 2, men det skal alltid være lik antall dimensjoner som argumentet forventer ... som ... bla [] [] [] [] vil kreve 4-dimensjonal matriseinngang. bla [] [] [] vil kreve en tredimensjonal matrise. bla [] [] vil kreve en todimensjonal matrise.",다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,적어도 2 개이지만 인수가 예상하는 차원 수와 항상 같아야합니다. 예 : blah [] [] [] []에는 4 차원 배열 입력이 필요합니다. blah [] [] []에는 3 차원 배열이 필요합니다. blah [] []에는 2 차원 배열이 필요합니다.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.","vähintään 2, mutta sen tulisi aina olla yhtä suuri kuin argumenttien odottamien ulottuvuuksien määrä ... kuten ... blah [] [] [] [] vaatii 4-ulotteisen taulukon syötteen. blah [] [] [] vaatii kolmiulotteisen taulukon. blah [] [] vaatii 2-ulotteisen taulukon.","Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","legalább 2, de mindig meg kell egyeznie az argumentum által várt dimenziók számával ... például ... blah [] [] [] [] 4 dimenziós tömb bemenetre lesz szükség. blah [] [] [] háromdimenziós tömbre lesz szükség. blah [] [] kétdimenziós tömbre lesz szükség.",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.","alespoň 2, ale vždy by se měl rovnat počtu dimenzí, které argument očekává ... jako ... bla [] [] [] [] bude vyžadovat vstup 4 dimenzionálního pole. bla [] [] [] bude vyžadovat trojrozměrné pole. bla [] [] bude vyžadovat dvourozměrné pole.",Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.","najmanje 2, ali uvijek treba biti jednak broju dimenzija koje argument očekuje ... poput ... blah [] [] [] [] će trebati četverodimenzionalni unos niza. blah [] [] [] trebat će trodimenzionalni niz. blah [] [] će trebati dvodimenzionalni niz."
123,123,692,4.3,Arrays are passed to functions by reference.,by reference.,How are arrays passed to functions?,5.0,durch Bezugnahme.,Wie werden Arrays an Funktionen übergeben?,Arrays werden als Referenz an Funktionen übergeben.,Giunsa ang pagpasa sa mga array sa mga gimbuhaton?,pinaagi sa pakisayran.,Ang mga array gipasa sa mga gimbuhaton pinaagi sa pakisayran.,Hur skickas matriser till funktioner?,genom hänvisning.,Arrayer skickas till funktioner via referens.,Comment les tableaux sont-ils passés aux fonctions?,par référence.,Les tableaux sont passés aux fonctions par référence.,Hoe worden arrays doorgegeven aan functies?,door verwijzing.,Arrays worden door middel van verwijzing aan functies doorgegeven.,Как массивы передаются функциям?,по ссылке.,Массивы передаются функциям по ссылке.,Come vengono passati gli array alle funzioni?,come riferimento.,Gli array vengono passati alle funzioni per riferimento.,¿Cómo se pasan las matrices a las funciones?,por referencia.,Las matrices se pasan a funciones por referencia.,W jaki sposób tablice są przekazywane do funkcji?,przez odniesienie.,Tablice są przekazywane do funkcji przez odwołanie.,Mảng được truyền cho các hàm như thế nào?,bằng cách tham khảo.,Mảng được chuyển đến các hàm bằng tham chiếu.,配列はどのように関数に渡されますか？,参照による。,配列は参照によって関数に渡されます。,数组如何传递给函数？,引用。,数组通过引用传递给函数。,كيف يتم تمرير المصفوفات إلى الوظائف؟,بالتزكية.,يتم تمرير المصفوفات إلى الوظائف بالرجوع إليها.,Як масиви передаються функціям?,за посиланням.,Масиви передаються функціям за посиланням.,Como os arrays são passados para as funções?,por referência.,Os arrays são passados para funções por referência.,چگونه آرایه ها به توابع منتقل می شوند؟,با مرجع.,آرایه ها با مرجع به توابع منتقل می شوند.,Com es passen les matrius a les funcions?,per referència.,Les matrius es passen a les funcions per referència.,Како се низови преносе функцијама?,по референци.,Низови се функцијама преносе референцом.,Bagaimana array diteruskan ke fungsi?,dengan referensi.,Array diteruskan ke fungsi dengan referensi.,Hvordan overføres matriser til funksjoner?,som referanse.,Arrays overføres til funksjoner ved referanse.,배열은 함수에 어떻게 전달됩니까?,참고로.,배열은 참조를 통해 함수에 전달됩니다.,Kuinka taulukot välitetään funktioille?,viittaamalla.,Taulukot välitetään toiminnoille viitteellä.,Hogyan adják át a tömbök a függvényeknek?,referencia alapján.,A tömböket hivatkozással továbbítják a függvényeknek.,Jak jsou pole předávána funkcím?,Odkazem.,Pole se předávají funkcím odkazem.,Kako se nizovi prenose funkcijama?,putem reference.,Nizovi se referencama prosljeđuju funkcijama.
124,124,1900,11.2,Public Private,Private and public.,What are the access-specifiers that can be used in a C++ class definition?,5.0,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,Öffentlich Privat,Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,Public Pribado,Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,Offentlig-privat,Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,Public-privé,Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,Publiek privaat,Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,Государственное частное,Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,Pubblico privato,¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,Publico privado,"Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,Publiczny prywatny,Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,Công tư,C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,官民,C ++类定义中可以使用哪些访问说明符？,私人和公共。,公私,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,عام خاص,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,Державно-приватна,Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,Público Privado,مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,عمومی خصوصی,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,Públic privat,Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,Јавно приватно,Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,Privasi Umum,Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,Offentlig privat,C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,퍼블릭 프라이빗,"Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,Julkinen yksityinen,Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,Közlegény,"Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,Veřejné soukromé,Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,Javno privatno
125,125,464,3.2,Global variables have a file scope,File scope.,What is the scope of global variables?,5.0,Dateibereich.,Was ist der Umfang globaler Variablen?,Globale Variablen haben einen Dateibereich,Unsa ang kasangkaran sa mga variable sa kalibutan?,Sakup sa file.,Ang mga variable sa kalibutan adunay usa ka sakop sa file,Vad är omfattningen av globala variabler?,Filomfång.,Globala variabler har ett filomfång,Quelle est la portée des variables globales?,Portée du fichier.,Les variables globales ont une portée de fichier,Wat is de omvang van globale variabelen?,Bestandsbereik.,Globale variabelen hebben een bestandsbereik,Каков объем глобальных переменных?,Область файла.,Глобальные переменные имеют область видимости файла,Qual è l&#39;ambito delle variabili globali?,Ambito del file.,Le variabili globali hanno un ambito di file,¿Cuál es el alcance de las variables globales?,Alcance del archivo.,Las variables globales tienen un alcance de archivo,Jaki jest zakres zmiennych globalnych?,Zakres plików.,Zmienne globalne mają zasięg pliku,Phạm vi của các biến toàn cục là gì?,Phạm vi tệp.,Biến toàn cục có phạm vi tệp,グローバル変数のスコープは何ですか？,ファイルスコープ。,グローバル変数にはファイルスコープがあります,全局变量的范围是什么？,文件范围。,全局变量具有文件范围,ما هو نطاق المتغيرات العالمية؟,نطاق الملف.,المتغيرات العامة لها نطاق ملف,Який обсяг глобальних змінних?,Обсяг файлу.,Глобальні змінні мають обсяг файлу,Qual é o escopo das variáveis globais?,Escopo do arquivo.,Variáveis globais têm um escopo de arquivo,دامنه متغیرهای جهانی چیست؟,دامنه پرونده,متغیرهای جهانی دامنه پرونده دارند,Quin és l&#39;abast de les variables globals?,Abast del fitxer.,Les variables globals tenen un abast de fitxer,Који је опсег глобалних променљивих?,Обим датотеке.,Глобалне променљиве имају опсег датотеке,Apa ruang lingkup variabel global?,Ruang lingkup file.,Variabel global memiliki ruang lingkup file,Hva er omfanget av globale variabler?,Filomfang.,Globale variabler har et filomfang,전역 변수의 범위는 무엇입니까?,파일 범위.,전역 변수에는 파일 범위가 있습니다.,Mikä on globaalien muuttujien laajuus?,Tiedoston laajuus.,Globaaleilla muuttujilla on tiedostomuoto,Mi a globális változók hatóköre?,A fájl terjedelme.,A globális változók fájlkörei vannak,Jaký je rozsah globálních proměnných?,Rozsah souboru.,Globální proměnné mají rozsah souboru,Koji je opseg globalnih varijabli?,Opseg datoteke.,Globalne varijable imaju opseg datoteke
126,126,2000,11.5,A recursive function only knows how to solve base cases  A recursive function calls itself directly or indirectly until a base case is reached.,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine rekursive Funktion kann nur Basisfälle lösen. Eine rekursive Funktion ruft sich direkt oder indirekt auf, bis ein Basisfall erreicht ist.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,Ang usa ka recursive function nahibal-an ra kung unsaon pagsulbad ang mga base nga kaso Ang usa ka recursive function nagtawag sa iyang kaugalingon nga direkta o dili direkta hangtod nga naabut ang usa ka base case.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,En rekursiv funktion vet bara hur man löser basfall En rekursiv funktion kallar sig direkt eller indirekt tills ett basfall uppnås.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,Une fonction récursive ne sait résoudre que des cas de base Une fonction récursive s&#39;appelle elle-même directement ou indirectement jusqu&#39;à ce qu&#39;un cas de base soit atteint.,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,Een recursieve functie weet alleen basisscenario&#39;s op te lossen Een recursieve functie roept zichzelf direct of indirect aan tot een basisscenario is bereikt.,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","Рекурсивная функция знает только, как решать базовые случаи. Рекурсивная функция вызывает себя прямо или косвенно, пока не будет достигнут базовый вариант.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,Una funzione ricorsiva sa solo come risolvere i casi base Una funzione ricorsiva chiama se stessa direttamente o indirettamente finché non viene raggiunto un caso base.,¿Qué es una función recursiva?,Una función que se llama a sí misma.,Una función recursiva solo sabe cómo resolver casos base. Una función recursiva se llama a sí misma directa o indirectamente hasta que se alcanza un caso base.,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","Funkcja rekurencyjna wie tylko, jak rozwiązywać przypadki podstawowe. Funkcja rekurencyjna wywołuje samą siebie bezpośrednio lub pośrednio, aż do osiągnięcia przypadku podstawowego.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,Một hàm đệ quy chỉ biết cách giải quyết các trường hợp cơ sở Một hàm đệ quy gọi chính nó một cách trực tiếp hoặc gián tiếp cho đến khi đạt đến một trường hợp cơ sở.,再帰関数とは何ですか？,自分自身を呼び出す関数。,再帰関数は、基本ケースを解決する方法しか知りません。再帰関数は、基本ケースに到達するまで、直接または間接的に自分自身を呼び出します。,什么是递归函数？,调用自身的函数。,递归函数仅知道如何解决基本情况。递归函数直接或间接调用自身，直到达到基本情况为止。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,لا تعرف الوظيفة العودية سوى كيفية حل الحالات الأساسية. تستدعي الدالة العودية نفسها بشكل مباشر أو غير مباشر حتى يتم الوصول إلى الحالة الأساسية.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","Рекурсивна функція знає лише, як вирішувати базові випадки. Рекурсивна функція викликає себе безпосередньо або опосередковано, поки не буде досягнуто базовий випадок.",O que é uma função recursiva?,Uma função que chama a si mesma.,Uma função recursiva só sabe como resolver casos base. Uma função recursiva chama a si mesma direta ou indiretamente até que um caso base seja alcançado.,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,یک تابع بازگشتی فقط می داند چگونه موارد پایه را حل کند یک تابع بازگشتی خود را مستقیم یا غیرمستقیم فرا می خواند تا زمانی که به یک پرونده پایه برسید.,Què és una funció recursiva?,Una funció que s’autodenomina.,Una funció recursiva només sap resoldre casos base. Una funció recursiva s’anomena directa o indirectament fins que s’arriba a un cas base.,Шта је рекурзивна функција?,Функција која себе позива.,Рекурзивна функција зна само како да реши основне случајеве Рекурзивна функција се позива директно или индиректно док се не постигне основни случај.,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,Fungsi rekursif hanya mengetahui cara menyelesaikan kasus dasar. Fungsi rekursif memanggil dirinya sendiri secara langsung atau tidak langsung hingga kasus dasar tercapai.,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,En rekursiv funksjon vet bare hvordan man skal løse basissaker En rekursiv funksjon kaller seg direkte eller indirekte til en basissak er nådd.,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,재귀 함수는 기본 케이스를 해결하는 방법 만 알고 있습니다. 재귀 함수는 기본 케이스에 도달 할 때까지 직접 또는 간접적으로 자신을 호출합니다.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","Rekursiivinen funktio tietää vain, kuinka ratkaista perustapaukset. Rekursiivinen funktio kutsuu itseään suoraan tai epäsuorasti, kunnes perustapaus on saavutettu.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","A rekurzív függvény csak azt tudja, hogyan oldja meg az alapeseteket. A rekurzív függvény közvetlenül vagy közvetve hívja magát, amíg el nem éri az alapesetet.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","Rekurzivní funkce ví pouze řešení základních případů Rekurzivní funkce se volá přímo nebo nepřímo, dokud není dosaženo základního případu.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,Rekurzivna funkcija zna samo kako riješiti osnovne slučajeve Rekurzivna funkcija se poziva direktno ili indirektno dok se ne postigne osnovni slučaj.
127,127,2303,12.6,A queue is an abstract data type that performs operations on both ends of the list and exhibits first-in first-out behavior.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,5.0,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Eine Warteschlange ist ein abstrakter Datentyp, der Operationen an beiden Enden der Liste ausführt und ein First-In-First-Out-Verhalten aufweist.",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,Ang usa ka pila mao ang usa ka dili mahimo nga tipo sa datos nga nagpatuman sa mga operasyon sa parehas nga mga katapusan sa lista ug gipakita ang una nga paglihok sa una nga paggawas.,Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,En kö är en abstrakt datatyp som utför operationer i båda ändarna av listan och uppvisar först-in först-ut-beteende.,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.","Une file d&#39;attente est un type de données abstrait qui effectue des opérations aux deux extrémités de la liste et présente un comportement premier entré, premier sorti.",Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,Een wachtrij is een abstract gegevenstype dat bewerkingen aan beide uiteinden van de lijst uitvoert en first-in first-out-gedrag vertoont.,Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","Очередь - это абстрактный тип данных, который выполняет операции на обоих концах списка и демонстрирует поведение «первым пришел - первым обслужен».",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,Una coda è un tipo di dati astratto che esegue operazioni su entrambe le estremità dell&#39;elenco e presenta un comportamento first-in first-out.,¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.","Una cola es un tipo de datos abstracto que realiza operaciones en ambos extremos de la lista y muestra un comportamiento de primero en entrar, primero en salir.",Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","Kolejka to abstrakcyjny typ danych, który wykonuje operacje na obu końcach listy i wykazuje zachowanie pierwszy na wejściu, pierwszy na wyjściu.",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,Hàng đợi là một kiểu dữ liệu trừu tượng thực hiện các hoạt động ở cả hai đầu của danh sách và thể hiện hành vi nhập trước xuất trước.,キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,キューは、リストの両端で操作を実行し、先入れ先出し動作を示す抽象データ型です。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,队列是一种抽象数据类型，它在列表的两端执行操作，并表现出先进先出的行为。,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,قائمة الانتظار هي نوع بيانات مجردة ينفذ عمليات على طرفي القائمة ويعرض سلوك الوارد أولاً يصرف أولاً.,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","Черга - це абстрактний тип даних, який виконує операції з обох кінців списку та демонструє поведінку першого входу.",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.","Uma fila é um tipo de dado abstrato que executa operações em ambas as extremidades da lista e exibe um comportamento de primeiro a entrar, primeiro a sair.",صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,صف یک نوع داده انتزاعی است که عملیات را در هر دو انتهای لیست انجام می دهد و اولین بار در اولین رفتار را نشان می دهد.,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,Una cua és un tipus de dades abstractes que realitzen operacions als dos extrems de la llista i mostren un comportament de primer a primer que surt.,Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,Ред је апстрактни тип података који изводи операције на оба краја листе и испољава понашање „први-први-изашао“.,Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,Antrian adalah tipe data abstrak yang melakukan operasi di kedua ujung daftar dan menunjukkan perilaku pertama masuk pertama keluar.,Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,En kø er en abstrakt datatype som utfører operasjoner i begge ender av listen og viser først-inn først-ut-oppførsel.,대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,큐는 목록의 양쪽 끝에서 작업을 수행하고 선입 선출 동작을 나타내는 추상 데이터 유형입니다.,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","Jonot ovat abstrakteja tietotyyppejä, jotka suorittavat toimintoja luettelon molemmissa päissä ja osoittavat käyttäytymistä ensiksi sisään.",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","A várakozási sor egy absztrakt adattípus, amely a lista mindkét végén műveleteket hajt végre, és az első az elsőben kimenőben viselkedést mutat.",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","Fronta je abstraktní datový typ, který provádí operace na obou koncích seznamu a vykazuje chování first-in first-out.",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,Red čekanja je apstraktni tip podataka koji izvodi operacije na oba kraja popisa i pokazuje ponašanje first-out first out.
128,128,737,4.4,"static arrays keep the values after the end of a function, while non static reinitialize every time.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","What is the difference between an array declared as static, and one that is not?",5.0,"Die als statisch deklarierten Arrays leben während der gesamten Laufzeit des Programms. Das heißt, sie werden nur einmal initialisiert, wenn die Funktion, die das Array deklariert, zum ersten Mal aufgerufen wird.",Was ist der Unterschied zwischen einem als statisch deklarierten und einem nicht statischen Array?,"Statische Arrays behalten die Werte nach dem Ende einer Funktion bei, während nicht statische Arrays jedes Mal neu initialisiert werden.","Unsa ang kalainan tali sa usa ka laray nga gideklara nga static, ug usa nga dili?","Ang mga array gideklara nga static live sa tibuuk nga kinabuhi sa programa; kana mao, gisugdan ra sila kausa, kung ang pagpaandar nga nagpahayag sa pag-ayo una kini gitawag.","Ang mga static array nga gihuptan ang mga kantidad pagkahuman sa katapusan sa usa ka pag-andar, samtang ang dili static nga pagpabag-o sa matag higayon.",Vad är skillnaden mellan en matris som deklareras som statisk och en som inte är det?,"Arraysna som deklareras som statiska lever hela programmets livstid; det vill säga de initialiseras bara en gång, när den funktion som deklarerar matrisen kallas den först.","statiska matriser behåller värdena efter slutet av en funktion, medan icke-statisk återinitialiseras varje gång.",Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,"Les tableaux déclarés statiques vivent tout au long de la vie du programme; c&#39;est-à-dire qu&#39;ils ne sont initialisés qu&#39;une seule fois, lorsque la fonction qui déclare le tableau est appelée pour la première fois.","les tableaux statiques conservent les valeurs après la fin d&#39;une fonction, tandis que les tableaux non statiques se réinitialisent à chaque fois.",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,"De arrays die als statisch zijn gedeclareerd, leven gedurende de levensduur van het programma; dat wil zeggen, ze worden slechts één keer geïnitialiseerd, wanneer de functie die de array declareert voor het eerst wordt aangeroepen.","statische arrays behouden de waarden na het einde van een functie, terwijl niet-statische arrays elke keer opnieuw worden geïnitialiseerd.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?","Массивы, объявленные как статические, живут в течение всего времени работы программы; то есть они инициализируются только один раз при первом вызове функции, объявляющей массив.","статические массивы сохраняют значения после окончания функции, а нестатические повторно инициализируются каждый раз.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,"Gli array dichiarati come statici sono attivi per tutta la durata del programma; cioè, vengono inizializzati solo una volta, quando la funzione che dichiara l&#39;array viene chiamata per la prima volta.","gli array statici mantengono i valori dopo la fine di una funzione, mentre quelli non statici vengono reinizializzati ogni volta.",¿Cuál es la diferencia entre una matriz declarada como estática y una que no lo es?,"Las matrices declaradas como estáticas viven durante toda la vida del programa; es decir, se inicializan solo una vez, cuando se llama por primera vez a la función que declara la matriz.","Los arreglos estáticos mantienen los valores después del final de una función, mientras que los no estáticos se reinicializan cada vez.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice zadeklarowane jako statyczne na żywo przez cały czas trwania programu; to znaczy, są inicjowane tylko raz, kiedy funkcja deklarująca tablicę jest wywoływana jako pierwsza.","tablice statyczne zachowują wartości po zakończeniu funkcji, podczas gdy statyczne są ponownie inicjowane za każdym razem.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng được khai báo là sống tĩnh trong suốt vòng đời của chương trình; nghĩa là chúng chỉ được khởi tạo một lần khi hàm khai báo mảng mà nó được gọi lần đầu tiên.,"các mảng tĩnh giữ các giá trị sau khi kết thúc một hàm, trong khi các mảng không tĩnh bắt đầu lại mọi lúc.",静的として宣言された配列とそうでない配列の違いは何ですか？,静的として宣言された配列は、プログラムの存続期間を通じて有効です。つまり、配列を宣言する関数が最初に呼び出されたときに、一度だけ初期化されます。,静的配列は関数の終了後も値を保持しますが、非静的配列は毎回再初期化します。,声明为静态的数组与未声明为静态的数组有什么区别？,声明为静态的数组在程序的整个生命周期内都有效；也就是说，当第一次调用声明数组的函数时，它们仅初始化一次。,静态数组会在函数结束后保留值，而非静态每次都会重新初始化。,ما الفرق بين المصفوفة المعلنة على أنها ثابتة والمصفوفة التي لا يتم الإعلان عنها؟,تعيش المصفوفات المعلنة على أنها ثابتة طوال عمر البرنامج ؛ أي ، يتم تهيئتها مرة واحدة فقط ، عندما يتم استدعاء الوظيفة التي تعلن عن المصفوفة لأول مرة.,تحتفظ المصفوفات الثابتة بالقيم بعد نهاية الدالة ، بينما تتم إعادة التهيئة غير الثابتة في كل مرة.,"У чому різниця між масивом, оголошеним як статичний, і масивом, який не є?","Масиви, оголошені як статичні живі протягом усього терміну служби програми; тобто вони ініціалізуються лише один раз, коли функція, яка оголошує масив, вона викликається вперше.","статичні масиви зберігають значення після закінчення функції, а нестатичні кожен раз повторно ініціалізують.",Qual é a diferença entre uma matriz declarada como estática e outra que não é?,"Os arrays declarados como estáticos vivem durante toda a vida do programa; ou seja, eles são inicializados apenas uma vez, quando a função que declara o array é chamada pela primeira vez.","arrays estáticos mantêm os valores após o final de uma função, enquanto os não estáticos reinicializam todas as vezes.",چه تفاوتی بین آرایه ای که بصورت استاتیک اعلام می شود و دیگری نیست؟,آرایه هایی که به عنوان ایستا در طول زندگی برنامه اعلام می شوند. یعنی فقط یک بار مقداردهی اولیه می شود ، وقتی تابعی که آرایه را برای اولین بار فراخوانی می کند.,آرایه های استاتیک مقادیر را پس از پایان یک تابع حفظ می کنند ، در حالی که هر بار غیر استاتیک مجدداً تنظیم مجدد می شوند.,Quina diferència hi ha entre una matriu declarada com estàtica i una que no ho és?,"Les matrius declarades estàtiques en directe durant tota la vida del programa; és a dir, només s’inicialitzen una vegada, quan s’anomena per primera vegada la funció que declara la matriu.","les matrius estàtiques mantenen els valors després de finalitzar una funció, mentre que no estàtiques es reinicialitzen cada vegada.",Која је разлика између низа који је проглашен статичким и оног који није?,"Низови декларисани као статични уживо током целог животног века програма; то јест, иницијализују се само једном, када се функција која декларише низ прво позове.","статички низови задржавају вредности након завршетка функције, док се нестатички сваки пут реиницијализују.","Apa perbedaan antara array yang dideklarasikan sebagai statis, dan yang tidak?","Array dideklarasikan sebagai live statis selama program berjalan; artinya, mereka diinisialisasi hanya sekali, ketika fungsi yang mendeklarasikan array yang dipanggil pertama kali.","array statis menyimpan nilai setelah akhir fungsi, sementara non-statis diinisialisasi ulang setiap saat.","Hva er forskjellen mellom en matrise erklært som statisk, og en som ikke er det?","Arrangementene erklært som statisk lever gjennom hele programmets levetid; det vil si at de initialiseres bare en gang, når funksjonen som erklærer matrisen den først ble kalt.","statiske arrays beholder verdiene etter at en funksjon er avsluttet, mens ikke-statisk initialiseres på nytt hver gang.",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,"정적으로 선언 된 배열은 프로그램의 수명 내내 살아 있습니다. 즉, 배열을 선언하는 함수가 처음 호출 될 때 한 번만 초기화됩니다.",정적 배열은 함수가 끝난 후에도 값을 유지하는 반면 비 정적 배열은 매번 다시 초기화합니다.,"Mitä eroa on staattiseksi ilmoitetun taulukon ja sellaisen välillä, joka ei ole staattinen?","Staattisiksi ilmoitetut taulukot elävät ohjelman koko elinkaaren ajan; eli ne alustetaan vain kerran, kun ensin kutsutaan funktio, joka ilmoittaa matriisin.","staattiset taulukot pitävät arvot toiminnon päättymisen jälkeen, kun taas ei-staattiset uudelleenalustus joka kerta.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikusnak nyilvánított tömbök a program teljes élettartama alatt élnek; vagyis csak egyszer inicializálódnak, amikor először meghívják azt a függvényt, amely deklarálja a tömböt.","a statikus tömbök megtartják az értékeket a függvény vége után, míg a nem statikus tömbök minden alkalommal újraindulnak.","Jaký je rozdíl mezi polem deklarovaným jako statické a tím, které není?","Pole deklarovaná jako statická živá po celou dobu životnosti programu; to znamená, že jsou inicializovány pouze jednou, když je funkce, která deklaruje pole, které je nejprve voláno.","statická pole udržují hodnoty po skončení funkce, zatímco nestatické znovu inicializují pokaždé.",Koja je razlika između niza koji je deklariran kao statičan i onog koji nije?,"Nizovi deklarirani kao statični uživo tijekom cijelog životnog vijeka programa; to jest, inicijaliziraju se samo jednom, kada se funkcija koja deklarira niz prvi put pozove.","statički nizovi zadržavaju vrijednosti nakon završetka funkcije, dok se nestatički svaki put ponovno inicijaliziraju."
129,129,2154,11.1,merge sort divides the data into halves until data of one element is reached and then merges each element together according to its placement in comparison to the rest of the data,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Briefly describe in one sentence how does merge sort work?,5.0,"Es teilt das ursprüngliche Array in zwei Teile, sortiert jede der beiden Hälften und führt dann die sortierten Arrays zusammen.","Beschreiben Sie in einem Satz kurz, wie das Zusammenführen von Sortierungen funktioniert.","Die Zusammenführungssortierung teilt die Daten in Hälften, bis die Daten eines Elements erreicht sind, und führt dann jedes Element entsprechend seiner Platzierung im Vergleich zu den übrigen Daten zusammen",Sa mubu nga paghulagway sa usa ka tudling-pulong kung giunsa molihok ang paghiusa?,"Gibahin niini ang orihinal nga laray sa duha, gisagol ang matag usa sa duha ka bahin, ug pagkahuman gisagol ang mga gihan-ay nga mga array.",gibahinbahin sa pagbahinbahin ang datos sa mga bahin hangtod nga ang datos sa usa ka elemento naabut ug pagkahuman gisagol ang matag elemento sama sa pagbutang niini kung itandi sa nahabilin nga datos,Beskriv kortfattat i en mening hur fungerar merge sort?,"Den delar upp den ursprungliga matrisen i två, sorterar var och en av de två halvorna och slår sedan ihop de sorterade matriserna.",sammanslagningssortering delar data i halvor tills data för ett element nås och slår sedan samman varje element i enlighet med dess placering jämfört med resten av data,Décrivez brièvement en une phrase comment fonctionne le tri par fusion?,"Il divise le tableau d&#39;origine en deux, trie chacune des deux moitiés, puis fusionne les tableaux triés.","le tri par fusion divise les données en deux jusqu&#39;à ce que les données d&#39;un élément soient atteintes, puis fusionne chaque élément en fonction de son emplacement par rapport au reste des données",Beschrijf kort in één zin hoe werkt samenvoegsortering?,"Het splitst de oorspronkelijke array in tweeën, sorteert elk van de twee helften en voegt vervolgens de gesorteerde arrays samen.",samenvoegen sorteert de gegevens in twee helften totdat gegevens van één element zijn bereikt en voegt vervolgens elk element samen op basis van de plaatsing in vergelijking met de rest van de gegevens,"Кратко опишите одним предложением, как работает сортировка слиянием?","Он разбивает исходный массив на две части, сортирует каждую из двух половин, а затем объединяет отсортированные массивы.","Сортировка слиянием делит данные на половинки до тех пор, пока не будут достигнуты данные одного элемента, а затем объединяет каждый элемент вместе в соответствии с его размещением по сравнению с остальными данными",Descrivi brevemente in una frase come funziona il merge sort?,"Divide l&#39;array originale in due, ordina ciascuna delle due metà e quindi unisce gli array ordinati.","unisci ordinamento divide i dati in metà finché non vengono raggiunti i dati di un elemento, quindi unisce ogni elemento insieme in base alla sua posizione rispetto al resto dei dati",Describe brevemente en una oración cómo funciona la ordenación por combinación.,"Divide la matriz original en dos, ordena cada una de las dos mitades y luego fusiona las matrices ordenadas.",fusionar ordenación divide los datos en mitades hasta que se alcanzan los datos de un elemento y luego fusiona cada elemento de acuerdo con su ubicación en comparación con el resto de los datos,"Krótko opisz w jednym zdaniu, jak działa sortowanie przez scalanie?","Dzieli oryginalną tablicę na dwie części, sortuje każdą z dwóch połówek, a następnie łączy posortowane tablice.","scalanie sortowanie dzieli dane na połowy, aż do osiągnięcia danych jednego elementu, a następnie łączy każdy element razem zgodnie z jego umiejscowieniem w porównaniu z resztą danych",Mô tả ngắn gọn trong một câu cách sắp xếp hợp nhất hoạt động như thế nào?,"Nó chia mảng ban đầu thành hai, sắp xếp từng mảng trong số hai nửa, sau đó hợp nhất các mảng đã sắp xếp.",sắp xếp hợp nhất chia dữ liệu thành một nửa cho đến khi đạt đến dữ liệu của một phần tử và sau đó hợp nhất từng phần tử với nhau theo vị trí của nó so với phần còn lại của dữ liệu,マージソートはどのように機能するのかを一文で簡単に説明してください。,元の配列を2つに分割し、2つの半分のそれぞれを並べ替えてから、並べ替えられた配列をマージします。,マージソートは、1つの要素のデータに到達するまでデータを半分に分割し、残りのデータと比較した配置に従って各要素をマージします。,用一句话简单描述合并排序是如何工作的？,它将原始数组分为两部分，对两个半部分分别进行排序，然后合并排序后的数组。,merge sort将数据分为两半，直到到达一个元素的数据为止，然后根据与其他数据相比的位置将每个元素合并在一起,صف بإيجاز في جملة واحدة كيف يعمل دمج الفرز؟,يقسم المصفوفة الأصلية إلى قسمين ، يفرز كل من النصفين ، ثم يدمج المصفوفات التي تم فرزها.,دمج الفرز يقسم البيانات إلى نصفين حتى يتم الوصول إلى بيانات عنصر واحد ثم يدمج كل عنصر معًا وفقًا لموضعه مقارنة ببقية البيانات,"Коротко опишіть одним реченням, як працює сортування злиттям?","Він розбиває вихідний масив на дві частини, сортує кожну з двох половин, а потім об&#39;єднує відсортовані масиви.","сортування злиттям ділить дані на половинки, поки не будуть досягнуті дані одного елемента, а потім об&#39;єднує кожен елемент відповідно до місця розташування порівняно з рештою даних",Descreva resumidamente em uma frase como funciona a classificação por mesclagem?,"Ele divide o array original em dois, classifica cada uma das duas metades e, em seguida, mescla os arrays classificados.",merge sort divide os dados em metades até que os dados de um elemento sejam alcançados e então mescla cada elemento de acordo com sua colocação em comparação com o resto dos dados,به طور خلاصه در یک جمله توضیح دهید که چگونه ادغام مرتب سازی کار می کند؟,آرایه اصلی را به دو قسمت تقسیم می کند ، هر دو نیمه را مرتب می کند و سپس آرایه های مرتب شده را ادغام می کند.,ادغام مرتب سازی داده ها را به نصف تقسیم می کند تا زمانی که به داده های یک عنصر برسیم و سپس هر عنصر را با توجه به قرارگیری آن در مقایسه با بقیه داده ها با هم ادغام می کنیم,Descriviu breument en una frase com funciona la classificació per fusió?,"Divideix la matriu original en dos, ordena cadascuna de les dues meitats i després fusiona les matrius ordenades.","L&#39;ordenació de fusió divideix les dades en meitats fins que s&#39;arriba a les dades d&#39;un element i, a continuació, combina cada element segons la seva ubicació en comparació amb la resta de dades",Укратко опишите у једној реченици како функционише сортирање спајањем?,"Првобитни низ дели на две, сортира сваку од две половине, а затим обједињује сортиране низове.","сортирање стапања дели податке на половине док се не достигну подаци једног елемента, а затим обједињује сваки елемент заједно према његовом положају у поређењу са остатком података",Jelaskan secara singkat dalam satu kalimat bagaimana cara kerja merge sort?,"Ini membagi larik asli menjadi dua, mengurutkan masing-masing dari dua bagian, lalu menggabungkan larik yang diurutkan.",merge sort membagi data menjadi dua bagian hingga data dari satu elemen tercapai dan kemudian menggabungkan setiap elemen bersama-sama sesuai dengan penempatannya dibandingkan dengan data lainnya,Beskriv kort i en setning hvordan fungerer sammenslåing?,"Den deler den originale matrisen i to, sorterer hver av de to halvdelene, og fletter deretter de sorterte matriser.","flettesortering deler dataene i halvdeler til dataene til ett element er nådd, og deretter flettes hvert element sammen i henhold til dets plassering i forhold til resten av dataene",병합 정렬이 어떻게 작동하는지 한 문장으로 간단히 설명해주세요.,원래 배열을 두 개로 분할하고 두 반쪽을 각각 정렬 한 다음 정렬 된 배열을 병합합니다.,병합 정렬은 한 요소의 데이터에 도달 할 때까지 데이터를 반으로 나눈 다음 나머지 데이터와 비교하여 배치에 따라 각 요소를 병합합니다.,"Kuvaile lyhyesti yhdessä lauseessa, kuinka lajittelu toimii?","Se jakaa alkuperäisen taulukon kahteen osaan, lajittelee molemmat puoliskot ja yhdistää sitten lajitellut taulukot.","yhdistämislajittelu jakaa tiedot puolikkaiksi, kunnes yhden elementin tiedot on saavutettu, ja yhdistää sitten kunkin elementin yhteen sijoittelunsa mukaan muuhun dataan verrattuna","Röviden írja le egy mondatban, hogyan működik az egyesítés rendezése?","Az eredeti tömböt kettéválasztja, a két felet rendezi, majd egyesíti a rendezett tömböket.","az egyesítés rendezés felosztja az adatokat felekre, amíg el nem éri az egyik elem adatait, majd egyesíti az elemeket az elhelyezésüknek megfelelően a többi adathoz képest","Stručně popište jednou větou, jak funguje sloučení?","Rozdělí původní pole na dvě, roztřídí každou ze dvou polovin a poté sloučí seřazená pole.","merge sort rozděluje data na poloviny, dokud nejsou dosažena data jednoho prvku, a poté sloučí každý prvek dohromady podle jeho umístění ve srovnání se zbytkem dat",Ukratko u jednoj rečenici opišite kako funkcionira sortiranje spajanja?,"Izvorni niz dijeli na dvije, sortira svaku od dvije polovice, a zatim spaja sortirane nizove.","sortiranje spajanja dijeli podatke na polovice dok se ne dosegnu podaci jednog elementa, a zatim spaja svaki element zajedno prema njegovom položaju u odnosu na ostatak podataka"
130,130,671,4.2,A char array reads a string as each individual character. A string literal array reads the entire string.,The strings declared using an array of characters have a null element added at the end of the array.,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,3.0,Bei den mit einem Zeichenarray deklarierten Zeichenfolgen wird am Ende des Arrays ein Nullelement hinzugefügt.,"Was ist der Hauptunterschied zwischen Zeichenfolgen, die mit dem Typ string deklariert wurden, und Zeichenfolgen, die mit einem Array von Zeichen deklariert wurden?",Ein char-Array liest eine Zeichenfolge als jedes einzelne Zeichen. Ein String-Literal-Array liest den gesamten String.,Unsa ang punoan nga kalainan tali sa mga lubid nga gideklara nga gigamit ang type string kumpara sa mga string nga gideklara gamit ang usa ka han-ay nga mga karakter?,Ang mga kuwerdas nga gideklara gamit ang usa ka han-ay sa mga karakter adunay usa ka null nga elemento nga gidugang sa katapusan sa laray.,Gibasa sa usa ka char array ang usa ka string sama sa matag indibidwal nga karakter. Gibasa sa usa ka string nga literal nga array ang tibuuk nga pisi.,Vad är den största skillnaden mellan strängar som deklareras med hjälp av typsträngen kontra strängar som deklareras med en rad tecken?,Strängarna som deklareras med en rad tecken har ett nollelement som läggs till i slutet av matrisen.,En char-array läser en sträng som varje enskild karaktär. En strängbokstavlig matris läser hela strängen.,Quelle est la principale différence entre les chaînes déclarées à l&#39;aide de la chaîne de type et les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères?,Les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères ont un élément nul ajouté à la fin du tableau.,Un tableau char lit une chaîne comme chaque caractère individuel. Un tableau littéral de chaîne lit la chaîne entière.,Wat is het belangrijkste verschil tussen strings die zijn gedeclareerd met behulp van het type string versus strings die zijn gedeclareerd met een reeks tekens?,"De strings die zijn gedeclareerd met behulp van een reeks tekens, hebben een null-element toegevoegd aan het einde van de reeks.",Een char-array leest een string als elk afzonderlijk teken. Een letterlijke reeks van een reeks leest de hele reeks.,"В чем основное различие между строками, объявленными с использованием строки типа, и строками, объявленными с использованием массива символов?","Строки, объявленные с использованием массива символов, имеют нулевой элемент, добавленный в конец массива.",Массив char считывает строку как каждый отдельный символ. Массив строковых литералов считывает всю строку.,Qual è la principale differenza tra le stringhe dichiarate utilizzando il tipo stringa e le stringhe dichiarate utilizzando un array di caratteri?,Le stringhe dichiarate utilizzando un array di caratteri hanno un elemento nullo aggiunto alla fine dell&#39;array.,Un array di caratteri legge una stringa come ogni singolo carattere. Una matrice letterale stringa legge l&#39;intera stringa.,¿Cuál es la principal diferencia entre las cadenas declaradas con el tipo cadena y las cadenas declaradas con una matriz de caracteres?,Las cadenas declaradas usando una matriz de caracteres tienen un elemento nulo agregado al final de la matriz.,Una matriz de caracteres lee una cadena como cada carácter individual. Una matriz literal de cadena lee la cadena completa.,Jaka jest główna różnica między ciągami zadeklarowanymi przy użyciu typu string a ciągami zadeklarowanymi przy użyciu tablicy znaków?,Ciągi zadeklarowane przy użyciu tablicy znaków mają na końcu dodany element o wartości null.,Tablica znaków odczytuje ciąg jako każdy pojedynczy znak. Tablica literałów ciągów odczytuje cały ciąg.,Sự khác biệt chính giữa các chuỗi được khai báo bằng cách sử dụng chuỗi kiểu so với các chuỗi được khai báo bằng cách sử dụng một mảng ký tự là gì?,Các chuỗi được khai báo bằng cách sử dụng một mảng ký tự có một phần tử rỗng được thêm vào cuối mảng.,Mảng char đọc một chuỗi dưới dạng từng ký tự riêng lẻ. Một mảng ký tự chuỗi đọc toàn bộ chuỗi.,文字列型を使用して宣言された文字列と文字の配列を使用して宣言された文字列の主な違いは何ですか？,文字の配列を使用して宣言された文字列には、配列の最後にnull要素が追加されています。,char配列は、文字列を個々の文字として読み取ります。文字列リテラル配列は、文字列全体を読み取ります。,使用字符串类型声明的字符串与使用字符数组声明的字符串之间的主要区别是什么？,使用字符数组声明的字符串在数组末尾添加了一个null元素。,一个char数组读取一个字符串作为每个单独的字符。字符串文字数组读取整个字符串。,ما هو الفرق الرئيسي بين الجمل المعلنة باستخدام سلسلة النوع مقابل الجمل المعلنة باستخدام مصفوفة من الأحرف؟,السلاسل المعلنة باستخدام مصفوفة من الأحرف لها عنصر فارغ يضاف في نهاية المصفوفة.,يقرأ صفيف char سلسلة مثل كل حرف فردي. سلسلة حرفية تقرأ السلسلة بأكملها.,"Яка основна різниця між рядками, оголошеними за допомогою типу string, від рядків, оголошених за допомогою масиву символів?","Рядки, оголошені за допомогою масиву символів, мають нульовий елемент, доданий в кінці масиву.",Масив char читає рядок як кожен окремий символ. Масив літерального рядка читає весь рядок.,Qual é a principal diferença entre strings declaradas usando o tipo string e strings declaradas usando uma matriz de caracteres?,As strings declaradas usando uma matriz de caracteres têm um elemento nulo adicionado ao final da matriz.,Uma matriz char lê uma string como cada caractere individual. Um array literal de string lê toda a string.,تفاوت اصلی رشته های اعلام شده با استفاده از نوع رشته در مقابل رشته های اعلام شده با استفاده از آرایه ای از کاراکترها چیست؟,رشته هایی که با استفاده از یک آرایه از کاراکترها اعلان می شوند ، یک عنصر تهی در انتهای آرایه اضافه می کنند.,یک آرایه char یک رشته را به عنوان هر کاراکتر جداگانه می خواند. یک آرایه به معنای واقعی کل رشته را می خواند.,Quina és la diferència principal entre les cadenes declarades mitjançant el tipus de cadena i les cadenes declarades mitjançant una matriu de caràcters?,Les cadenes declarades mitjançant una matriu de caràcters tenen un element nul afegit al final de la matriu.,Una matriu de caràcters llegeix una cadena com cada caràcter individual. Una matriu literal de cadena llegeix tota la cadena.,Која је главна разлика између низова декларисаних помоћу типа стринг у односу на низове декларисаних помоћу низа знакова?,Низови декларисани помоћу низа знакова имају нулти елемент додан на крају низа.,Низ знакова чита низ као сваки појединачни знак. Низ литералних низова чита читав низ.,Apa perbedaan utama antara string yang dideklarasikan menggunakan tipe string versus string yang dideklarasikan menggunakan array karakter?,String yang dideklarasikan menggunakan array karakter memiliki elemen null yang ditambahkan di akhir array.,Array karakter membaca string sebagai masing-masing karakter individu. Array literal string membaca seluruh string.,Hva er hovedforskjellen mellom strenger deklarert ved hjelp av typestrengen versus strenger deklarert ved hjelp av en rekke tegn?,Strengene deklarert ved hjelp av en rekke tegn har et nullelement lagt til på slutten av matrisen.,En char-array leser en streng som hvert enkelt tegn. En streng bokstavelig matrise leser hele strengen.,문자열 유형을 사용하여 선언 된 문자열과 문자 배열을 사용하여 선언 된 문자열의 주요 차이점은 무엇입니까?,문자 배열을 사용하여 선언 된 문자열에는 배열 끝에 null 요소가 추가됩니다.,char 배열은 각 개별 문자로 문자열을 읽습니다. 문자열 리터럴 배열은 전체 문자열을 읽습니다.,Mikä on tärkein ero merkkijonolla ilmoitettujen merkkijonojen ja merkkijonoa käyttäen ilmoitettujen merkkijonojen välillä?,Merkkijonoa käyttäen ilmoitetuissa merkkijonoissa taulukon loppuun lisätään nollaelementti.,Char-taulukko lukee merkkijonon jokaisena yksittäisenä merkkinä. Merkkijonon kirjaimellinen taulukko lukee koko merkkijonon.,Mi a fő különbség a karakterlánc használatával deklarált karakterláncok és a tömb karakterrel deklarált karakterláncok között?,A karaktertömb felhasználásával deklarált karakterláncok null elemet adnak a tömb végén.,A char tömb minden egyes karakterként karakterláncot olvas. A karakterlánc tömb elolvassa a teljes karakterláncot.,Jaký je hlavní rozdíl mezi řetězci deklarovanými pomocí řetězce typu oproti řetězcům deklarovaným pomocí pole znaků?,Řetězce deklarované pomocí pole znaků mají na konci pole přidán nulový prvek.,Pole char čte řetězec jako každý jednotlivý znak. Řetězcové literálové pole čte celý řetězec.,Koja je glavna razlika između nizova deklarisanih pomoću tipa string naspram nizova deklarisanih pomoću niza znakova?,Nizovi deklarirani pomoću niza znakova imaju nulti element dodan na kraju niza.,Polje char čita niz kao svaki pojedinačni znak. Niz literalnih nizova čita čitav niz.
131,131,954,6.1,A pointer is a variable which stores the address of another variable.,A variable that contains the address in memory of another variable.,What is a pointer?,5.0,"Eine Variable, die die Adresse im Speicher einer anderen Variablen enthält.",Was ist ein Zeiger?,"Ein Zeiger ist eine Variable, die die Adresse einer anderen Variablen speichert.",Unsa ang usa ka pointer?,Usa ka variable nga adunay sulud nga panumduman sa uban pa nga variable.,Ang usa ka pointer usa ka variable diin gitipig ang adres sa uban pa nga variable.,Vad är en pekare?,En variabel som innehåller adressen i minnet för en annan variabel.,En pekare är en variabel som lagrar adressen till en annan variabel.,Qu&#39;est-ce qu&#39;un pointeur?,Une variable qui contient l&#39;adresse en mémoire d&#39;une autre variable.,Un pointeur est une variable qui stocke l&#39;adresse d&#39;une autre variable.,Wat is een aanwijzer?,Een variabele die het adres in het geheugen van een andere variabele bevat.,Een pointer is een variabele die het adres van een andere variabele opslaat.,Что такое указатель?,"Переменная, содержащая адрес в памяти другой переменной.","Указатель - это переменная, в которой хранится адрес другой переменной.",Cos&#39;è un puntatore?,Una variabile che contiene l&#39;indirizzo in memoria di un&#39;altra variabile.,Un puntatore è una variabile che memorizza l&#39;indirizzo di un&#39;altra variabile.,¿Qué es un puntero?,Una variable que contiene la dirección en memoria de otra variable.,Un puntero es una variable que almacena la dirección de otra variable.,Co to jest wskaźnik?,"Zmienna, która zawiera adres w pamięci innej zmiennej.","Wskaźnik to zmienna, która przechowuje adres innej zmiennej.",Con trỏ là gì?,Một biến chứa địa chỉ trong bộ nhớ của một biến khác.,Con trỏ là một biến lưu trữ địa chỉ của một biến khác.,ポインタとは何ですか？,別の変数のメモリ内のアドレスを含む変数。,ポインタは、別の変数のアドレスを格納する変数です。,什么是指针？,一个变量，包含另一个变量在内存中的地址。,指针是一个变量，用于存储另一个变量的地址。,ما هو المؤشر؟,متغير يحتوي على العنوان في ذاكرة متغير آخر.,المؤشر هو متغير يخزن عنوان متغير آخر.,Що таке вказівник?,"Змінна, що містить адресу в пам&#39;яті іншої змінної.","Покажчик - це змінна, яка зберігає адресу іншої змінної.",O que é um ponteiro?,Uma variável que contém o endereço na memória de outra variável.,Um ponteiro é uma variável que armazena o endereço de outra variável.,اشاره گر چیست؟,متغیری که حاوی آدرس در حافظه متغیر دیگر است.,اشاره گر متغیری است که آدرس متغیر دیگر را ذخیره می کند.,Què és un punter?,Una variable que conté l&#39;adreça en memòria d&#39;una altra variable.,Un punter és una variable que emmagatzema l&#39;adreça d&#39;una altra variable.,Шта је показивач?,Променљива која садржи адресу у меморији друге променљиве.,Показивач је променљива која чува адресу друге променљиве.,Apa itu penunjuk?,Variabel yang berisi alamat dalam memori variabel lain.,Pointer adalah variabel yang menyimpan alamat variabel lain.,Hva er en peker?,En variabel som inneholder adressen i minnet til en annen variabel.,En peker er en variabel som lagrer adressen til en annen variabel.,포인터 란 무엇입니까?,다른 변수의 메모리에 주소를 포함하는 변수입니다.,포인터는 다른 변수의 주소를 저장하는 변수입니다.,Mikä on osoitin?,"Muuttuja, joka sisältää osoitteen toisen muuttujan muistissa.","Osoitin on muuttuja, joka tallentaa toisen muuttujan osoitteen.",Mi az a mutató?,"Olyan változó, amely egy másik változó memóriájában tartalmazza a címet.","A mutató egy olyan változó, amely egy másik változó címét tárolja.",Co je to ukazatel?,"Proměnná, která obsahuje adresu v paměti jiné proměnné.","Ukazatel je proměnná, která ukládá adresu jiné proměnné.",Šta je pokazivač?,Varijabla koja sadrži adresu u memoriji druge varijable.,Pokazivač je varijabla koja čuva adresu druge varijable.
132,132,936,5.4,O(nlog(n)),When the size of the array to be sorted is 1 (or 2),What is the base case for a recursive implementation of merge sort?,2.0,Wenn die Größe des zu sortierenden Arrays 1 (oder 2) beträgt,Was ist der Basisfall für eine rekursive Implementierung der Zusammenführungssortierung?,O (nlog (n)),Unsa man ang basehan nga kaso alang sa usa ka recursive nga pagpatuman sa merge sort?,Kung ang gidak-on sa laray nga paghan-ay mao ang 1 (o 2),O (nlog (n)),Vad är grunden för ett rekursivt genomförande av sammanslagningssortering?,När storleken på matrisen som ska sorteras är 1 (eller 2),O (nlog (n)),Quel est le cas de base pour une implémentation récursive du tri par fusion?,Lorsque la taille du tableau à trier est 1 (ou 2),O (nlog (n)),Wat is het basisscenario voor een recursieve implementatie van samenvoegsortering?,Als de grootte van de te sorteren array 1 (of 2) is,O (nlog (n)),Каков базовый случай рекурсивной реализации сортировки слиянием?,Когда размер сортируемого массива равен 1 (или 2),O (nlog (n)),Qual è il caso di base per un&#39;implementazione ricorsiva di merge sort?,Quando la dimensione dell&#39;array da ordinare è 1 (o 2),O (nlog (n)),¿Cuál es el caso base para una implementación recursiva del tipo de combinación?,Cuando el tamaño de la matriz a ordenar es 1 (o 2),O (nlog (n)),Jaki jest podstawowy przypadek rekurencyjnej implementacji sortowania przez scalanie?,Gdy rozmiar sortowanej tablicy to 1 (lub 2),O (nlog (n)),Trường hợp cơ sở cho việc triển khai đệ quy sắp xếp hợp nhất là gì?,Khi kích thước của mảng được sắp xếp là 1 (hoặc 2),O (nlog (n)),マージソートの再帰的実装の基本ケースは何ですか？,ソートする配列のサイズが1（または2）の場合,O（nlog（n））,递归实现合并排序的基本情况是什么？,当要排序的数组的大小为1（或2）时,O（nlog（n））,ما هي الحالة الأساسية للتنفيذ العودي لفرز الدمج؟,عندما يكون حجم المصفوفة المراد فرزها 1 (أو 2),O (nlog (n)),Який базовий випадок для рекурсивної реалізації злиття?,Коли розмір сортуваного масиву дорівнює 1 (або 2),O (nlog (n)),Qual é o caso base para uma implementação recursiva de merge sort?,Quando o tamanho da matriz a ser classificada é 1 (ou 2),O (nlog (n)),مورد اصلی برای اجرای بازگشتی نوع ادغام چیست؟,وقتی اندازه آرایه ای که مرتب می شود 1 (یا 2) باشد,O (nlog (n)),Quin és el cas bàsic per a una implementació recursiva del tipus de combinació?,Quan la mida de la matriu a ordenar és 1 (o 2),O (nlog (n)),Који је основни случај за рекурзивну имплементацију сортирања спајања?,Када је величина низа за сортирање 1 (или 2),О (нлог (н)),Apa kasus dasar untuk implementasi rekursif dari merge sort?,Jika ukuran larik yang akan diurutkan adalah 1 (atau 2),O (nlog (n)),Hva er grunnlag for en rekursiv implementering av sammenslåingssortering?,Når størrelsen på matrisen som skal sorteres er 1 (eller 2),O (nlog (n)),병합 정렬을 재귀 적으로 구현하는 기본 사례는 무엇입니까?,정렬 할 배열의 크기가 1 (또는 2) 인 경우,O (nlog (n)),Mikä on yhdistämisen lajittelun rekursiivisen toteutuksen perusta?,Kun lajiteltavan taulukon koko on 1 (tai 2),O (nlog (n)),Mi az alapesete az egyesítés rendezésének rekurzív megvalósításának?,Amikor a rendezendő tömb mérete 1 (vagy 2),O (nlog (n)),Jaký je základní případ rekurzivní implementace typu sloučení?,"Když je velikost pole, které má být tříděno, 1 (nebo 2)",O (nlog (n)),Koji je osnovni slučaj za rekurzivnu implementaciju spajanja sortiranja?,Kada je veličina niza za sortiranje 1 (ili 2),O (nlog (n))
133,133,660,4.2,"strings that are used in an char array are much easier to manipulate than as a string object, because each character is stored separately rather than as a whole",The strings declared using an array of characters have a null element added at the end of the array.,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,2.5,Bei den mit einem Zeichenarray deklarierten Zeichenfolgen wird am Ende des Arrays ein Nullelement hinzugefügt.,"Was ist der Hauptunterschied zwischen Zeichenfolgen, die mit dem Typ string deklariert wurden, und Zeichenfolgen, die mit einem Array von Zeichen deklariert wurden?","Zeichenfolgen, die in einem char-Array verwendet werden, sind viel einfacher zu bearbeiten als als Zeichenfolgenobjekt, da jedes Zeichen separat und nicht als Ganzes gespeichert wird",Unsa ang punoan nga kalainan tali sa mga lubid nga gideklara nga gigamit ang type string kumpara sa mga string nga gideklara gamit ang usa ka han-ay nga mga karakter?,Ang mga kuwerdas nga gideklara gamit ang usa ka han-ay sa mga karakter adunay usa ka null nga elemento nga gidugang sa katapusan sa laray.,"Ang mga kuwerdas nga gigamit sa usa ka char array labi ka kadali nga makamaniobra kaysa usa ka string nga butang, tungod kay ang matag karakter gitipig nga bulag kaysa usa ka tibuuk",Vad är den största skillnaden mellan strängar som deklareras med hjälp av typsträngen kontra strängar som deklareras med en rad tecken?,Strängarna som deklareras med en rad tecken har ett nollelement som läggs till i slutet av matrisen.,"strängar som används i en char array är mycket lättare att manipulera än som ett strängobjekt, eftersom varje tecken lagras separat snarare än som en helhet",Quelle est la principale différence entre les chaînes déclarées à l&#39;aide de la chaîne de type et les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères?,Les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères ont un élément nul ajouté à la fin du tableau.,"les chaînes utilisées dans un tableau de caractères sont beaucoup plus faciles à manipuler que comme un objet chaîne, car chaque caractère est stocké séparément plutôt que dans son ensemble",Wat is het belangrijkste verschil tussen strings die zijn gedeclareerd met behulp van het type string versus strings die zijn gedeclareerd met een reeks tekens?,"De strings die zijn gedeclareerd met behulp van een reeks tekens, hebben een null-element toegevoegd aan het einde van de reeks.","strings die in een char-array worden gebruikt, zijn veel gemakkelijker te manipuleren dan als een string-object, omdat elk teken afzonderlijk wordt opgeslagen in plaats van als een geheel","В чем основное различие между строками, объявленными с использованием строки типа, и строками, объявленными с использованием массива символов?","Строки, объявленные с использованием массива символов, имеют нулевой элемент, добавленный в конец массива.","строками, которые используются в массиве символов, намного проще манипулировать, чем как строковым объектом, потому что каждый символ хранится отдельно, а не целиком",Qual è la principale differenza tra le stringhe dichiarate utilizzando il tipo stringa e le stringhe dichiarate utilizzando un array di caratteri?,Le stringhe dichiarate utilizzando un array di caratteri hanno un elemento nullo aggiunto alla fine dell&#39;array.,"le stringhe utilizzate in un array di caratteri sono molto più facili da manipolare che come un oggetto stringa, perché ogni carattere è memorizzato separatamente piuttosto che come un intero",¿Cuál es la principal diferencia entre las cadenas declaradas con el tipo cadena y las cadenas declaradas con una matriz de caracteres?,Las cadenas declaradas usando una matriz de caracteres tienen un elemento nulo agregado al final de la matriz.,"Las cadenas que se utilizan en una matriz de caracteres son mucho más fáciles de manipular que como un objeto de cadena, porque cada carácter se almacena por separado en lugar de como un todo",Jaka jest główna różnica między ciągami zadeklarowanymi przy użyciu typu string a ciągami zadeklarowanymi przy użyciu tablicy znaków?,Ciągi zadeklarowane przy użyciu tablicy znaków mają na końcu dodany element o wartości null.,"ciągi znaków używane w tablicy znaków są znacznie łatwiejsze w obsłudze niż jako obiekt typu string, ponieważ każdy znak jest przechowywany osobno, a nie jako całość",Sự khác biệt chính giữa các chuỗi được khai báo bằng cách sử dụng chuỗi kiểu so với các chuỗi được khai báo bằng cách sử dụng một mảng ký tự là gì?,Các chuỗi được khai báo bằng cách sử dụng một mảng ký tự có một phần tử rỗng được thêm vào cuối mảng.,"các chuỗi được sử dụng trong một mảng char dễ thao tác hơn nhiều so với dưới dạng một đối tượng chuỗi, bởi vì mỗi ký tự được lưu trữ riêng biệt thay vì toàn bộ",文字列型を使用して宣言された文字列と文字の配列を使用して宣言された文字列の主な違いは何ですか？,文字の配列を使用して宣言された文字列には、配列の最後にnull要素が追加されています。,char配列で使用される文字列は、各文字が全体としてではなく個別に格納されるため、文字列オブジェクトとしてよりも操作がはるかに簡単です。,使用字符串类型声明的字符串与使用字符数组声明的字符串之间的主要区别是什么？,使用字符数组声明的字符串在数组末尾添加了一个null元素。,与用作字符串对象相比，在char数组中使用的字符串要容易得多，因为每个字符都单独存储而不是整体存储,ما هو الفرق الرئيسي بين الجمل المعلنة باستخدام سلسلة النوع مقابل الجمل المعلنة باستخدام مصفوفة من الأحرف؟,السلاسل المعلنة باستخدام مصفوفة من الأحرف لها عنصر فارغ يضاف في نهاية المصفوفة.,السلاسل المستخدمة في مصفوفة char أسهل بكثير في التعامل معها من كونها كائن سلسلة ، لأن كل حرف يتم تخزينه بشكل منفصل بدلاً من تخزينه ككل,"Яка основна різниця між рядками, оголошеними за допомогою типу string, від рядків, оголошених за допомогою масиву символів?","Рядки, оголошені за допомогою масиву символів, мають нульовий елемент, доданий в кінці масиву.","рядками, які використовуються в масиві char, набагато легше маніпулювати, ніж як об&#39;єкт рядка, оскільки кожен символ зберігається окремо, а не як ціле",Qual é a principal diferença entre strings declaradas usando o tipo string e strings declaradas usando uma matriz de caracteres?,As strings declaradas usando uma matriz de caracteres têm um elemento nulo adicionado ao final da matriz.,"strings que são usadas em uma matriz char são muito mais fáceis de manipular do que como um objeto de string, porque cada caractere é armazenado separadamente em vez de como um todo",تفاوت اصلی رشته های اعلام شده با استفاده از نوع رشته در مقابل رشته های اعلام شده با استفاده از آرایه ای از کاراکترها چیست؟,رشته هایی که با استفاده از یک آرایه از کاراکترها اعلان می شوند ، یک عنصر تهی در انتهای آرایه اضافه می کنند.,رشته هایی که در یک آرایه char استفاده می شوند بسیار راحت تر از یک رشته رشته هستند ، زیرا هر کاراکتر به طور جداگانه ذخیره می شود نه به عنوان یک کل,Quina és la diferència principal entre les cadenes declarades mitjançant el tipus de cadena i les cadenes declarades mitjançant una matriu de caràcters?,Les cadenes declarades mitjançant una matriu de caràcters tenen un element nul afegit al final de la matriu.,"les cadenes que s&#39;utilitzen en una matriu de caràcters són molt més fàcils de manipular que com a objecte de cadena, perquè cada caràcter s&#39;emmagatzema per separat en lloc de ser un conjunt",Која је главна разлика између низова декларисаних помоћу типа стринг у односу на низове декларисаних помоћу низа знакова?,Низови декларисани помоћу низа знакова имају нулти елемент додан на крају низа.,"стринговима који се користе у низу цхар много је лакше манипулисати него објектом стринга, јер се сваки знак чува одвојено, а не као целина",Apa perbedaan utama antara string yang dideklarasikan menggunakan tipe string versus string yang dideklarasikan menggunakan array karakter?,String yang dideklarasikan menggunakan array karakter memiliki elemen null yang ditambahkan di akhir array.,"string yang digunakan dalam array karakter jauh lebih mudah untuk dimanipulasi daripada sebagai objek string, karena setiap karakter disimpan secara terpisah daripada secara keseluruhan",Hva er hovedforskjellen mellom strenger deklarert ved hjelp av typestrengen versus strenger deklarert ved hjelp av en rekke tegn?,Strengene deklarert ved hjelp av en rekke tegn har et nullelement lagt til på slutten av matrisen.,"strenger som brukes i en char array er mye lettere å manipulere enn som et strengobjekt, fordi hvert tegn er lagret separat i stedet for som en helhet",문자열 유형을 사용하여 선언 된 문자열과 문자 배열을 사용하여 선언 된 문자열의 주요 차이점은 무엇입니까?,문자 배열을 사용하여 선언 된 문자열에는 배열 끝에 null 요소가 추가됩니다.,문자 배열에 사용되는 문자열은 각 문자가 전체가 아닌 개별적으로 저장되기 때문에 문자열 객체보다 조작하기가 훨씬 쉽습니다.,Mikä on tärkein ero merkkijonolla ilmoitettujen merkkijonojen ja merkkijonoa käyttäen ilmoitettujen merkkijonojen välillä?,Merkkijonoa käyttäen ilmoitetuissa merkkijonoissa taulukon loppuun lisätään nollaelementti.,"merkkijonossa käytettäviä merkkijonoja on paljon helpompi käsitellä kuin merkkijono-esineinä, koska kukin merkki tallennetaan erikseen eikä kokonaisuutena",Mi a fő különbség a karakterlánc használatával deklarált karakterláncok és a tömb karakterrel deklarált karakterláncok között?,A karaktertömb felhasználásával deklarált karakterláncok null elemet adnak a tömb végén.,"A char tömbben használt karakterláncokat sokkal könnyebb kezelni, mint string objektumként, mert az egyes karaktereket külön, nem pedig egészben tárolják",Jaký je hlavní rozdíl mezi řetězci deklarovanými pomocí řetězce typu oproti řetězcům deklarovaným pomocí pole znaků?,Řetězce deklarované pomocí pole znaků mají na konci pole přidán nulový prvek.,"s řetězci, které se používají v poli char, je mnohem snazší manipulovat než s řetězcovým objektem, protože každý znak je uložen samostatně, nikoli jako celek",Koja je glavna razlika između nizova deklarisanih pomoću tipa string naspram nizova deklarisanih pomoću niza znakova?,Nizovi deklarirani pomoću niza znakova imaju nulti element dodan na kraju niza.,"nizovima koji se koriste u nizu char mnogo je lakše manipulirati nego kao objektom niza, jer se svaki znak pohranjuje zasebno, a ne kao cjelina"
134,134,2370,12.8,The Euler tour traverses through the tree in a rubber-band style shape.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,3.5,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,Die Euler-Tour führt in Form eines Gummibands durch den Baum.,Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.",Ang pagbiyahe sa Euler molatas sa kahoy sa usa ka estilo nga goma-band.,Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.",Euler-turen går genom trädet i gummibandstil.,Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.",La visite d&#39;Euler traverse l&#39;arbre dans une forme de style élastique.,Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.",De Euler-tour gaat door de boom in de vorm van een elastiekje.,Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.",Тур Эйлера проходит через дерево в форме резиновой ленты.,Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.",Il tour di Eulero attraversa l&#39;albero in una forma in stile elastico.,¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.",El recorrido de Euler atraviesa el árbol en forma de goma elástica.,Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.",Wycieczka Euler prowadzi przez drzewo w kształcie gumki.,Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.",Chuyến tham quan Euler đi qua cái cây theo hình dạng dây cao su.,木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,オイラーツアーは、輪ゴムスタイルの形で木を横断します。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,欧拉之旅以橡皮筋样式穿过树。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,تمر جولة أويلر عبر الشجرة في شكل شريط مطاطي.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.",Тур Ейлера проходить крізь дерево у формі гумки.,O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.",O passeio de Euler atravessa a árvore em forma de elástico.,پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,تور اولر به شکل باند لاستیکی از میان درخت عبور می کند.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.",El recorregut d&#39;Euler recorre l&#39;arbre en forma de goma.,Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.",Еулер-ова турнеја пролази кроз дрво у облику гумице.,Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.",Tur Euler melintasi pohon dalam bentuk gaya karet gelang.,Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.",Euler-turen går gjennom treet i en elastisk form.,나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.",오일러 투어는 고무 밴드 스타일로 나무를 가로지 릅니다.,Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.",Euler-kiertue kulkee puun läpi kuminauhatyyppisenä.,Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.",Az Euler túra gumiszalag stílusban halad át a fán.,Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.",Prohlídka Euler prochází stromem ve tvaru gumičky.,Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.",Eulerova turneja prolazi kroz drvo u obliku gume.
135,135,50,1.2,coding and refining,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),What stages in the software life cycle are influenced by the testing stage?,5.0,Die Teststufe kann sowohl die Codierungsstufe (Phase 5) als auch die Lösungsverfeinerungsstufe (Phase 7) beeinflussen.,Welche Phasen im Software-Lebenszyklus werden von der Testphase beeinflusst?,Codierung und Verfeinerung,Unsang mga yugto sa siklo sa kinabuhi sa software ang naimpluwensyahan sa yugto sa pagsulay?,Ang yugto sa pagsulay mahimong makaimpluwensya sa pareho nga yugto sa pag-coding (yugto 5) ug ang yugto sa pagpino sa solusyon (yugto 7),pag-coding ug pagpino,Vilka steg i programvarans livscykel påverkas av testfasen?,Teststeget kan påverka både kodningssteget (fas 5) och lösningsförfiningssteget (fas 7),kodning och raffinering,Quelles étapes du cycle de vie du logiciel sont influencées par l&#39;étape de test?,L&#39;étape de test peut influencer à la fois l&#39;étape de codage (phase 5) et l&#39;étape de raffinement de la solution (phase 7),codage et raffinage,Welke fasen in de levenscyclus van software worden beïnvloed door de testfase?,De testfase kan zowel de coderingsfase (fase 5) als de oplossingsverfijningsfase (fase 7) beïnvloeden,codering en verfijning,На какие этапы жизненного цикла ПО влияет этап тестирования?,"Этап тестирования может влиять как на этап кодирования (этап 5), так и на этап уточнения решения (этап 7).",кодирование и уточнение,Quali fasi del ciclo di vita del software sono influenzate dalla fase di test?,La fase di test può influenzare sia la fase di codifica (fase 5) che la fase di affinamento della soluzione (fase 7),codifica e raffinamento,¿Qué etapas del ciclo de vida del software están influenciadas por la etapa de prueba?,La etapa de prueba puede influir tanto en la etapa de codificación (fase 5) como en la etapa de refinamiento de la solución (fase 7),codificación y refinamiento,Na jakie etapy cyklu życia oprogramowania wpływa etap testowania?,"Etap testowania może wpływać zarówno na etap kodowania (faza 5), jak i na etap udoskonalania rozwiązania (faza 7)",kodowanie i udoskonalanie,Giai đoạn nào trong vòng đời phần mềm bị ảnh hưởng bởi giai đoạn kiểm thử?,Giai đoạn thử nghiệm có thể ảnh hưởng đến cả giai đoạn mã hóa (giai đoạn 5) và giai đoạn tinh chỉnh giải pháp (giai đoạn 7),mã hóa và tinh chỉnh,ソフトウェアライフサイクルのどの段階がテスト段階の影響を受けますか？,テスト段階は、コーディング段階（フェーズ5）とソリューションの改良段階（フェーズ7）の両方に影響を与える可能性があります。,コーディングと洗練,测试阶段会影响软件生命周期的哪些阶段？,测试阶段可以影响编码阶段（阶段5）和解决方案优化阶段（阶段7）,编码和提炼,ما هي مراحل دورة حياة البرنامج التي تتأثر بمرحلة الاختبار؟,يمكن أن تؤثر مرحلة الاختبار على كل من مرحلة التشفير (المرحلة 5) ومرحلة تحسين الحل (المرحلة 7),الترميز والتكرير,На які етапи життєвого циклу програмного забезпечення впливає етап тестування?,"Стадія випробування може впливати як на стадію кодування (фаза 5), так і на стадію доробки розчину (фаза 7)",кодування та уточнення,Que fases do ciclo de vida do software são influenciadas pela fase de teste?,O estágio de teste pode influenciar tanto o estágio de codificação (fase 5) quanto o estágio de refinamento da solução (fase 7),codificação e refinamento,چه مرحله هایی از چرخه عمر نرم افزار تحت تأثیر مرحله آزمایش قرار می گیرند؟,مرحله آزمایش می تواند هم در مرحله کدگذاری (مرحله 5) و هم در مرحله تصفیه محلول (مرحله 7) تأثیر بگذارد.,کدگذاری و تصفیه,Quines etapes del cicle de vida del programari estan influïdes per la fase de proves?,L&#39;etapa de prova pot influir tant en l&#39;etapa de codificació (fase 5) com en l&#39;etapa de refinament de la solució (fase 7),codificació i refinament,На које фазе у животном циклусу софтвера утиче фаза тестирања?,Фаза испитивања може утицати и на фазу кодирања (фаза 5) и на фазу усавршавања раствора (фаза 7),кодирање и пречишћавање,Tahapan apa dalam siklus hidup perangkat lunak yang dipengaruhi oleh tahap pengujian?,Tahap pengujian dapat mempengaruhi tahap pengkodean (tahap 5) dan tahap perbaikan solusi (tahap 7),pengkodean dan pemurnian,Hvilke stadier i programvarens livssyklus påvirkes av testfasen?,Testfasen kan påvirke både kodingsfasen (fase 5) og løsningsfinesseringen (fase 7),koding og raffinering,테스트 단계의 영향을받는 소프트웨어 수명주기의 단계는 무엇입니까?,테스트 단계는 코딩 단계 (5 단계)와 솔루션 개선 단계 (7 단계) 모두에 영향을 미칠 수 있습니다.,코딩 및 정제,Mihin ohjelmiston elinkaaren vaiheisiin testausvaihe vaikuttaa?,Testausvaihe voi vaikuttaa sekä koodausvaiheeseen (vaihe 5) että liuoksen jalostusvaiheeseen (vaihe 7),koodaus ja tarkentaminen,A szoftver életciklusának mely szakaszait befolyásolja a tesztelési szakasz?,"A tesztelési szakasz befolyásolhatja mind a kódolási (5. fázis), mind az oldat-finomítási fázist (7. fázis)",kódolás és finomítás,Na jaké fáze životního cyklu softwaru má fáze testování vliv?,"Fáze testování může ovlivnit jak fázi kódování (fáze 5), tak fázi zdokonalení řešení (fáze 7)",kódování a rafinace,Na koje faze u životnom ciklusu softvera utiče faza testiranja?,Faza ispitivanja može utjecati i na fazu kodiranja (faza 5) i na fazu usavršavanja rastvora (faza 7),kodiranje i prečišćavanje
136,136,2027,11.6,"Using an iterative function, which repeats a specified operation or set of operations until a terminating point or base case is reached.",Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?","Verwenden einer iterativen Funktion, die eine bestimmte Operation oder einen Satz von Operationen wiederholt, bis ein Endpunkt oder Basisfall erreicht ist.",Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,"Paggamit us aka iterative function, diin gisubli ang usa ka gipiho nga operasyon o hugpong sa mga operasyon hangtod naabut ang usa ka pagtapos nga punto o base case.",Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,"Med en iterativ funktion, som upprepar en specifik operation eller uppsättning operationer tills en avslutande punkt eller basfall uppnås.",Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,"Utilisation d&#39;une fonction itérative, qui répète une opération ou un ensemble d&#39;opérations spécifié jusqu&#39;à ce qu&#39;un point de fin ou un cas de base soit atteint.",Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,"Met behulp van een iteratieve functie, die een opgegeven bewerking of reeks bewerkingen herhaalt totdat een eindpunt of basisscenario is bereikt.","Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,"Использование итеративной функции, которая повторяет указанную операцию или набор операций до тех пор, пока не будет достигнута конечная точка или базовый случай.",Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,"Utilizzo di una funzione iterativa, che ripete un&#39;operazione o un insieme di operazioni specificati fino a quando non viene raggiunto un punto di terminazione o un caso base.",¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,"Usar una función iterativa, que repite una operación o un conjunto de operaciones especificado hasta que se alcanza un punto de terminación o un caso base.","Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,"Korzystanie z funkcji iteracyjnej, która powtarza określoną operację lub zestaw operacji do momentu osiągnięcia punktu końcowego lub przypadku bazowego.",Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,"Sử dụng một hàm lặp, lặp lại một hoạt động hoặc tập hợp các hoạt động đã chỉ định cho đến khi đạt đến điểm kết thúc hoặc trường hợp cơ sở.",再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,終了点または基本ケースに到達するまで、指定された操作または操作のセットを繰り返す反復関数を使用します。,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,使用迭代函数，该函数重复指定的操作或一组操作，直到达到终止点或基本情况为止。,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,استخدام دالة تكرارية تكرر عملية محددة أو مجموعة من العمليات حتى يتم الوصول إلى نقطة إنهاء أو حالة أساسية.,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,"Використовуючи ітераційну функцію, яка повторює задану операцію або набір операцій, поки не буде досягнуто кінцевої точки або базового випадку.",Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,"Usando uma função iterativa, que repete uma operação especificada ou conjunto de operações até que um ponto final ou caso base seja alcançado.",روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,با استفاده از یک تابع تکرار شونده ، که یک عملیات مشخص یا مجموعه ای از عملیات را تا رسیدن به نقطه پایان یا حالت پایه تکرار می کند.,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,"Utilitzant una funció iterativa, que repeteix una operació especificada o un conjunt d’operacions fins que s’arriba a un punt final o un cas base.",Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,Коришћењем итеративне функције која понавља одређену операцију или скуп операција док се не постигне завршна тачка или основни случај.,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,"Menggunakan fungsi iteratif, yang mengulangi operasi atau rangkaian operasi tertentu hingga titik akhir atau kasus dasar tercapai.",Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,Ved hjelp av en iterativ funksjon som gjentar en spesifisert operasjon eller et sett med operasjoner til et avslutningspunkt eller basissak er nådd.,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,종료 지점 또는 기본 케이스에 도달 할 때까지 지정된 작업 또는 작업 집합을 반복하는 반복 함수를 사용합니다.,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,"Käyttämällä iteratiivista funktiota, joka toistaa määritetyn operaation tai toimintaryhmän, kunnes päätepiste tai perustapaus on saavutettu.",Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,"Olyan iteratív függvény használatával, amely megismétel egy megadott műveletet vagy műveletsorozatot, amíg el nem ér egy végpontot vagy alapesetet.","Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,"Pomocí iterační funkce, která opakuje zadanou operaci nebo sadu operací, dokud není dosaženo koncového bodu nebo základního případu.",Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,Upotreba iterativne funkcije koja ponavlja zadanu operaciju ili skup operacija dok se ne postigne završna točka ili osnovni slučaj.
137,137,2357,12.7,push and pop,push and pop,What are the main operations associated with a stack?,5.0,Push and Pop,"Was sind die Hauptoperationen, die mit einem Stapel verbunden sind?",Push and Pop,Unsa ang mga punoan nga operasyon nga kauban sa usa ka stack?,iduso ug pop,iduso ug pop,Vilka är de viktigaste operationerna i samband med en stack?,tryck och knäpp,tryck och knäpp,Quelles sont les principales opérations associées à une pile?,pousser et pop,pousser et pop,Wat zijn de belangrijkste bewerkingen die aan een stapel zijn gekoppeld?,duwen en knallen,duwen en knallen,Какие основные операции связаны со стеком?,толкать и хлопать,толкать и хлопать,Quali sono le principali operazioni associate a uno stack?,spingere e pop,spingere e pop,¿Cuáles son las principales operaciones asociadas con una pila?,empujar y hacer estallar,empujar y hacer estallar,Jakie są główne operacje związane ze stosem?,push i pop,push i pop,Các hoạt động chính được liên kết với một ngăn xếp là gì?,đẩy và bật,đẩy và bật,スタックに関連する主な操作は何ですか？,プッシュアンドポップ,プッシュアンドポップ,与堆栈相关的主要操作是什么？,推和弹出,推和弹出,ما هي العمليات الرئيسية المرتبطة بمكدس؟,ادفع وبوب,ادفع وبوب,Які основні операції пов’язані зі стеком?,натискання та поп,натискання та поп,Quais são as principais operações associadas a uma pilha?,empurre e estale,empurre e estale,اصلی ترین عملیات مرتبط با پشته چیست؟,فشار و پاپ,فشار و پاپ,Quines són les principals operacions associades a una pila?,empenta i esclata,empenta i esclata,Које су главне операције повезане са стеком?,гурај и пуцај,гурај и пуцај,Apa operasi utama yang terkait dengan tumpukan?,push dan pop,push dan pop,Hva er de viktigste operasjonene knyttet til en stabel?,push og pop,push og pop,스택과 관련된 주요 작업은 무엇입니까?,밀고 팝,밀고 팝,Mitkä ovat pinoon liittyvät päätoiminnot?,työnnä ja pop,työnnä ja pop,Melyek a veremhez kapcsolódó főbb műveletek?,nyomja és pattog,nyomja és pattog,Jaké jsou hlavní operace spojené se zásobníkem?,push a pop,push a pop,Koje su glavne operacije povezane sa stogom?,guraj i pucaj,guraj i pucaj
138,138,968,6.1,variable that points to the memory address of another variable and it is type specific.,A variable that contains the address in memory of another variable.,What is a pointer?,5.0,"Eine Variable, die die Adresse im Speicher einer anderen Variablen enthält.",Was ist ein Zeiger?,"Variable, die auf die Speicheradresse einer anderen Variablen verweist und typspezifisch ist.",Unsa ang usa ka pointer?,Usa ka variable nga adunay sulud nga panumduman sa uban pa nga variable.,variable nga nagpunting sa memory address sa lain nga variable ug kini piho nga tipo.,Vad är en pekare?,En variabel som innehåller adressen i minnet för en annan variabel.,variabel som pekar på minnesadressen till en annan variabel och den är typspecifik.,Qu&#39;est-ce qu&#39;un pointeur?,Une variable qui contient l&#39;adresse en mémoire d&#39;une autre variable.,variable qui pointe vers l&#39;adresse mémoire d&#39;une autre variable et qui est spécifique au type.,Wat is een aanwijzer?,Een variabele die het adres in het geheugen van een andere variabele bevat.,variabele die verwijst naar het geheugenadres van een andere variabele en het type specifiek is.,Что такое указатель?,"Переменная, содержащая адрес в памяти другой переменной.","переменная, которая указывает на адрес в памяти другой переменной и зависит от типа.",Cos&#39;è un puntatore?,Una variabile che contiene l&#39;indirizzo in memoria di un&#39;altra variabile.,variabile che punta all&#39;indirizzo di memoria di un&#39;altra variabile ed è specifica del tipo.,¿Qué es un puntero?,Una variable que contiene la dirección en memoria de otra variable.,variable que apunta a la dirección de memoria de otra variable y es de tipo específico.,Co to jest wskaźnik?,"Zmienna, która zawiera adres w pamięci innej zmiennej.","zmienna, która wskazuje na adres pamięci innej zmiennej i jest zależna od typu.",Con trỏ là gì?,Một biến chứa địa chỉ trong bộ nhớ của một biến khác.,biến trỏ đến địa chỉ bộ nhớ của một biến khác và nó là kiểu cụ thể.,ポインタとは何ですか？,別の変数のメモリ内のアドレスを含む変数。,別の変数のメモリアドレスを指す変数で、タイプ固有です。,什么是指针？,一个变量，包含另一个变量在内存中的地址。,变量指向另一个变量的内存地址，并且是类型特定的。,ما هو المؤشر؟,متغير يحتوي على العنوان في ذاكرة متغير آخر.,متغير يشير إلى عنوان الذاكرة لمتغير آخر وهو نوع محدد.,Що таке вказівник?,"Змінна, що містить адресу в пам&#39;яті іншої змінної.","змінна, яка вказує на адресу пам&#39;яті іншої змінної, і вона специфічна для типу.",O que é um ponteiro?,Uma variável que contém o endereço na memória de outra variável.,variável que aponta para o endereço de memória de outra variável e é específica do tipo.,اشاره گر چیست؟,متغیری که حاوی آدرس در حافظه متغیر دیگر است.,متغیری که به آدرس حافظه متغیر دیگری اشاره می کند و نوع خاصی است.,Què és un punter?,Una variable que conté l&#39;adreça en memòria d&#39;una altra variable.,variable que apunta a l&#39;adreça de memòria d&#39;una altra variable i és específica del tipus.,Шта је показивач?,Променљива која садржи адресу у меморији друге променљиве.,променљива која показује на адресу меморије друге променљиве и она је специфична за тип.,Apa itu penunjuk?,Variabel yang berisi alamat dalam memori variabel lain.,variabel yang menunjuk ke alamat memori variabel lain dan itu adalah jenis tertentu.,Hva er en peker?,En variabel som inneholder adressen i minnet til en annen variabel.,"variabel som peker på minneadressen til en annen variabel, og den er typespesifikk.",포인터 란 무엇입니까?,다른 변수의 메모리에 주소를 포함하는 변수입니다.,다른 변수의 메모리 주소를 가리키는 변수이며 유형에 따라 다릅니다.,Mikä on osoitin?,"Muuttuja, joka sisältää osoitteen toisen muuttujan muistissa.","muuttuja, joka osoittaa toisen muuttujan muistiosoitteeseen ja se on tyyppikohtainen.",Mi az a mutató?,"Olyan változó, amely egy másik változó memóriájában tartalmazza a címet.","változó, amely egy másik változó memória címére mutat, és típusspecifikus.",Co je to ukazatel?,"Proměnná, která obsahuje adresu v paměti jiné proměnné.","proměnná, která ukazuje na adresu paměti jiné proměnné a je typově specifická.",Šta je pokazivač?,Varijabla koja sadrži adresu u memoriji druge varijable.,varijabla koja upućuje na memorijsku adresu druge varijable i ona je specifična za tip.
139,139,1631,9.5,list based.  It can dynamically grow and has fewer restrictions.,"Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred for a queue, and why?",5.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird für eine Warteschlange bevorzugt und warum?,Listenbasiert. Es kann dynamisch wachsen und hat weniger Einschränkungen.,"Kinsa nga pagpatuman (nakabase sa laraw kumpara sa lista) ang gipili alang sa usa ka pila, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)",gipasukad sa lista. Mahimo kini madasigon nga pagtubo ug adunay gamay nga mga pagdili.,"Vilken implementering (arraybaserad kontra listbaserad) är att föredra för en kö, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),lista baserad. Den kan växa dynamiskt och har färre begränsningar.,"Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée pour une file d&#39;attente, et pourquoi?","Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)",basé sur une liste. Il peut se développer dynamiquement et a moins de restrictions.,"Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur voor een wachtrij, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)",lijst gebaseerd. Het kan dynamisch groeien en kent minder beperkingen.,Какая реализация (на основе массива или на основе списка) предпочтительнее для очереди и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)",список на основе. Он может динамически расти и имеет меньше ограничений.,Quale implementazione (basata su array o basata su elenco) è preferita per una coda e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)",basato su elenco. Può crescere dinamicamente e ha meno restrizioni.,¿Qué implementación (basada en matrices o basada en listas) se prefiere para una cola y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)",basado en lista. Puede crecer dinámicamente y tiene menos restricciones.,Która implementacja (oparta na tablicy czy oparta na liście) jest preferowana dla kolejki i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)",na podstawie listy. Może dynamicznie rosnąć i ma mniej ograniczeń.,Việc triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên cho hàng đợi và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)",dựa trên danh sách. Nó có thể phát triển linh hoạt và có ít hạn chế hơn.,キューにはどの実装（配列ベースとリストベース）が優先されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リストベース。動的に成長でき、制限が少なくなります。,队列首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,基于列表。它可以动态增长并且具有更少的限制。,ما هو التنفيذ المفضل لقائمة الانتظار ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),قائمة على أساس. يمكن أن تنمو بشكل ديناميكي ولها قيود أقل.,"Яка реалізація (на основі масиву проти списку) є кращою для черги, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)",на основі списку. Він може динамічно рости і має менше обмежень.,Qual implementação (baseada em matriz vs. baseada em lista) é preferida para uma fila e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)",baseado em lista. Ele pode crescer dinamicamente e tem menos restrições.,کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) برای یک صف ترجیح داده می شود و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),بر اساس لیست. این می تواند به صورت پویا رشد کند و محدودیت های کمتری دارد.,Quina implementació (basada en matriu vs. basada en llista) es prefereix per a una cua i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)",llista basada. Pot créixer dinàmicament i té menys restriccions.,Која имплементација (заснована на низу на основу листе) је пожељна за ред и зашто?,"На основу везе, јер су динамични (без ограничења величине)",заснован на листи. Може динамички да расте и има мање ограничења.,"Implementasi mana (berbasis array vs. berbasis daftar) yang lebih disukai untuk antrian, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)",daftar berdasarkan. Itu dapat tumbuh secara dinamis dan memiliki lebih sedikit batasan.,"Hvilken implementering (arraybasert vs. listebasert) foretrekkes for en kø, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)",listebasert. Den kan vokse dynamisk og har færre restriksjoner.,대기열에 대해 선호되는 구현 (배열 기반 대 목록 기반)은 무엇이며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",목록 기반. 동적으로 성장할 수 있으며 제한이 적습니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on jonossa suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)",luettelopohjainen. Se voi kasvaa dynaamisesti ja sillä on vähemmän rajoituksia.,"Melyik implementációt (tömb alapú vagy lista alapú) részesítik előnyben a sorban, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","lista alapján. Dinamikusan növekedhet, és kevesebb korlátozása van.",Která implementace (založená na poli vs. založená na seznamu) je pro frontu upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)",na základě seznamu. Může dynamicky růst a má méně omezení.,Koja je implementacija (zasnovana na nizu ili na bazi popisa) poželjna za red i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)",zasnovan na listi. Može dinamički rasti i ima manje ograničenja.
140,140,2278,12.5,"Linked lists do not have a definite size. They can be as big or as small as needed, and they don't have to allocate extra memory for elements you don't need. Arrays size must be defined.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",What is the advantage of linked lists over arrays?,5.0,"Verknüpfte Listen sind dynamische Strukturen, mit denen eine variable Anzahl von Elementen gespeichert werden kann.",Was ist der Vorteil von verknüpften Listen gegenüber Arrays?,"Verknüpfte Listen haben keine bestimmte Größe. Sie können so groß oder so klein wie nötig sein und müssen keinen zusätzlichen Speicher für Elemente zuweisen, die Sie nicht benötigen. Die Größe der Arrays muss definiert werden.",Unsa ang bentaha sa mga nalambigit nga lista sa mga pag-array?,"Ang mga nalista nga lista usa ka dinamikong istruktura, nga nagtugot sa usa ka variable number sa mga elemento nga matipigan.","Ang mga nalista nga lista wala’y piho nga kadako. Mahimo sila sama ka kadako o kutob sa kinahanglan, ug dili nila kinahanglan nga igahin ang dugang nga memorya alang sa mga elemento nga dili nimo kinahanglan. Kinahanglan ipasabut ang gidak-on sa mga array.",Vilken är fördelen med länkade listor framför matriser?,Länkade listor är dynamiska strukturer som gör det möjligt att lagra ett varierande antal element.,"Länkade listor har ingen bestämd storlek. De kan vara så stora eller så små som behövs, och de behöver inte tilldela extra minne för element du inte behöver. Arrays storlek måste definieras.",Quel est l&#39;avantage des listes chaînées par rapport aux tableaux?,"Les listes liées sont des structures dynamiques, qui permettent de stocker un nombre variable d&#39;éléments.","Les listes liées n&#39;ont pas de taille définie. Ils peuvent être aussi grands ou aussi petits que nécessaire, et ils n&#39;ont pas à allouer de mémoire supplémentaire pour les éléments dont vous n&#39;avez pas besoin. La taille des tableaux doit être définie.",Wat is het voordeel van gekoppelde lijsten ten opzichte van arrays?,Gelinkte lijsten zijn dynamische structuren waarmee een variabel aantal elementen kan worden opgeslagen.,"Gelinkte lijsten hebben geen definitieve grootte. Ze kunnen zo groot of zo klein zijn als nodig is, en ze hoeven geen extra geheugen toe te wijzen voor elementen die u niet nodig hebt. De grootte van de matrix moet worden gedefinieerd.",В чем преимущество связанных списков перед массивами?,"Связанные списки - это динамические структуры, которые позволяют хранить переменное количество элементов.","Связанные списки не имеют определенного размера. Они могут быть настолько большими или маленькими, насколько это необходимо, и им не нужно выделять дополнительную память для элементов, которые вам не нужны. Размер массивов должен быть определен.",Qual è il vantaggio degli elenchi collegati rispetto agli array?,"Gli elenchi collegati sono strutture dinamiche, che consentono di memorizzare un numero variabile di elementi.",Gli elenchi collegati non hanno una dimensione definita. Possono essere grandi o piccoli a seconda delle necessità e non devono allocare memoria aggiuntiva per elementi non necessari. È necessario definire la dimensione degli array.,¿Cuál es la ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas son estructuras dinámicas que permiten almacenar un número variable de elementos.,"Las listas vinculadas no tienen un tamaño definido. Pueden ser tan grandes o tan pequeños como sea necesario, y no tienen que asignar memoria adicional para los elementos que no necesita. Se debe definir el tamaño de las matrices.",Jaka jest przewaga połączonych list nad tablicami?,"Listy połączone to struktury dynamiczne, które pozwalają na przechowywanie zmiennej liczby elementów.","Połączone listy nie mają określonego rozmiaru. Mogą być tak duże lub tak małe, jak potrzeba, i nie muszą przydzielać dodatkowej pamięci dla elementów, których nie potrzebujesz. Należy zdefiniować rozmiar tablic.",Lợi thế của danh sách liên kết so với mảng là gì?,"Danh sách được liên kết là cấu trúc động, cho phép lưu trữ một số phần tử thay đổi.",Danh sách được liên kết không có kích thước xác định. Chúng có thể lớn hoặc nhỏ tùy theo nhu cầu và chúng không phải cấp thêm bộ nhớ cho các phần tử bạn không cần. Kích thước mảng phải được xác định.,配列に対するリンクリストの利点は何ですか？,リンクリストは動的な構造であり、可変数の要素を格納できます。,リンクリストのサイズは明確ではありません。それらは必要に応じて大きくても小さくてもかまいません。また、不要な要素に追加のメモリを割り当てる必要はありません。配列サイズを定義する必要があります。,链表相对于数组的优势是什么？,链接列表是动态结构，可以存储可变数量的元素。,链接列表没有确定的大小。它们可以根据需要大小而定，并且不必为不需要的元素分配额外的内存。必须定义数组大小。,ما هي ميزة القوائم المرتبطة على المصفوفات؟,القوائم المرتبطة عبارة عن هياكل ديناميكية تسمح بتخزين عدد متغير من العناصر.,القوائم المرتبطة ليس لها حجم محدد. يمكن أن تكون كبيرة أو صغيرة حسب الحاجة ، ولا يتعين عليهم تخصيص ذاكرة إضافية للعناصر التي لا تحتاج إليها. يجب تحديد حجم المصفوفات.,У чому перевага зв’язаних списків перед масивами?,"Зв’язані списки - це динамічні структури, які дозволяють зберігати змінну кількість елементів.","Пов’язані списки не мають певного розміру. Вони можуть бути як великими, так і маленькими, скільки потрібно, і їм не потрібно виділяти додаткову пам’ять для елементів, які вам не потрібні. Розмір масивів повинен бути визначений.",Qual é a vantagem das listas vinculadas sobre os arrays?,Listas vinculadas são estruturas dinâmicas que permitem o armazenamento de um número variável de elementos.,As listas vinculadas não têm um tamanho definido. Eles podem ser tão grandes ou tão pequenos quanto necessário e não precisam alocar memória extra para os elementos de que você não precisa. O tamanho dos arrays deve ser definido.,مزیت لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی ساختارهای پویایی هستند که اجازه می دهند تعداد متغیری از عناصر ذخیره شوند.,لیست های پیوندی اندازه مشخصی ندارند. آنها می توانند به اندازه بزرگ یا کوچک باشند و نیازی به اختصاص حافظه اضافی برای عناصر مورد نیاز شما نیستند. اندازه آرایه ها باید تعریف شود.,Quin avantatge tenen les llistes enllaçades sobre les matrius?,Les llistes enllaçades són estructures dinàmiques que permeten emmagatzemar un nombre variable d’elements.,Les llistes enllaçades no tenen una mida definida. Poden ser tan grans o tan petites com calgui i no han d’assignar memòria addicional per als elements que no necessiteu. Cal definir la mida de les matrius.,Која је предност повезаних листа над низовима?,"Повезане листе су динамичке структуре, које омогућавају чување променљивог броја елемената.",Повезане листе немају одређену величину. Могу бити велике или мале по потреби и не морају да додељују додатну меморију за елементе који вам нису потребни. Величина низова мора бити дефинисана.,Apa keuntungan dari daftar tertaut dibandingkan array?,"Daftar tertaut adalah struktur dinamis, yang memungkinkan penyimpanan sejumlah elemen variabel.","Daftar tertaut tidak memiliki ukuran yang pasti. Mereka bisa sebesar atau sekecil yang dibutuhkan, dan mereka tidak harus mengalokasikan memori ekstra untuk elemen yang tidak Anda perlukan. Ukuran array harus ditentukan.",Hva er fordelen med koblede lister i forhold til matriser?,"Koblede lister er dynamiske strukturer, som gjør det mulig å lagre et variabelt antall elementer.","Koblede lister har ikke en bestemt størrelse. De kan være så store eller så små som nødvendig, og de trenger ikke å tildele ekstra minne til elementer du ikke trenger. Arrays størrelse må defineres.",배열에 비해 연결된 목록의 장점은 무엇입니까?,"연결된 목록은 동적 구조로, 다양한 수의 요소를 저장할 수 있습니다.",연결된 목록의 크기는 한정되어 있지 않습니다. 필요한만큼 크거나 작을 수 있으며 필요하지 않은 요소에 대해 추가 메모리를 할당 할 필요가 없습니다. 배열 크기를 정의해야합니다.,Mikä on linkitettyjen luetteloiden etu matriiseihin verrattuna?,"Linkitetyt luettelot ovat dynaamisia rakenteita, joiden avulla voidaan tallentaa vaihteleva määrä elementtejä.","Linkitetyillä luetteloilla ei ole tarkkaa kokoa. Ne voivat olla niin suuria tai pieniä kuin tarvitaan, eikä heidän tarvitse varata ylimääräistä muistia elementeille, joita et tarvitse. Taulukoiden koko on määriteltävä.",Mi az előnye a kapcsolt listáknak a tömbökkel szemben?,"Az összekapcsolt listák dinamikus struktúrák, amelyek változó számú elem tárolását teszik lehetővé.","Az összekapcsolt listáknak nincs meghatározott méretük. Lehetnek olyan nagyok vagy kicsiek, amennyire szükség van, és nem kell külön memóriát lefoglalniuk az Ön számára nem szükséges elemekhez. Meg kell határozni a tömbök méretét.",Jaká je výhoda propojených seznamů oproti polím?,"Propojené seznamy jsou dynamické struktury, které umožňují uložit proměnný počet prvků.","Propojené seznamy nemají určitou velikost. Mohou být tak velké nebo malé, jak je potřeba, a nemusí přidělit další paměť pro prvky, které nepotřebujete. Musí být definována velikost polí.",Koja je prednost povezanih lista nad nizovima?,"Povezane liste su dinamičke strukture, koje omogućuju pohranjivanje promjenjivog broja elemenata.",Povezane liste nemaju određenu veličinu. Mogu biti velike ili male po potrebi i ne moraju dodijeliti dodatnu memoriju za elemente koji vam nisu potrebni. Veličina polja mora biti definirana.
141,141,65,1.3,Encapsulation-objects combine data and operations Inheritance- classes can inherit properties from other classes Polymorphism- Objects can determine appropriate operations at execution time,Abstraction and reusability.,What are the main advantages associated with object-oriented programming?,2.5,Abstraktion und Wiederverwendbarkeit.,Was sind die Hauptvorteile der objektorientierten Programmierung?,Kapselungsobjekte kombinieren Daten und Operationen Vererbungsklassen können Eigenschaften von anderen Klassen erben. Polymorphismus-Objekte können geeignete Operationen zur Ausführungszeit bestimmen,Unsa ang mga punoan nga bentaha nga adunay kalabotan sa object-oriented nga programa?,Abstraction ug reusability.,Ang mga Encapsulation-object naghiusa sa datos ug mga operasyon Panulundon- ang mga klase mahimo’g makapanag-iya mga kabtangan gikan sa ubang klase nga Polymorphism- Ang mga butang mahimo nga magtino sa angay nga operasyon sa oras sa pagpatuman,Vilka är de största fördelarna med objektorienterad programmering?,Abstraktion och återanvändbarhet.,Inkapslingsobjekt kombinerar data och operationer Arv- klasser kan ärva egenskaper från andra klasser Polymorfism- Objekt kan bestämma lämpliga operationer vid körningstid,Quels sont les principaux avantages associés à la programmation orientée objet?,Abstraction et réutilisabilité.,Les objets d&#39;encapsulation combinent des données et des opérations Héritage - les classes peuvent hériter des propriétés d&#39;autres classes Polymorphisme - Les objets peuvent déterminer les opérations appropriées au moment de l&#39;exécution,Wat zijn de belangrijkste voordelen van objectgeoriënteerd programmeren?,Abstractie en herbruikbaarheid.,Encapsulation-objecten combineren gegevens en bewerkingen Overervingsklassen kunnen eigenschappen van andere klassen overnemen Polymorfisme - Objecten kunnen de juiste bewerkingen bepalen tijdens de uitvoering,Каковы основные преимущества объектно-ориентированного программирования?,Абстракция и возможность повторного использования.,Объекты инкапсуляции объединяют данные и операции. Классы наследования могут наследовать свойства от других классов. Полиморфизм. Объекты могут определять соответствующие операции во время выполнения.,Quali sono i principali vantaggi associati alla programmazione orientata agli oggetti?,Astrazione e riusabilità.,Gli oggetti di incapsulamento combinano dati e operazioni Ereditarietà: le classi possono ereditare proprietà da altre classi Polimorfismo: gli oggetti possono determinare le operazioni appropriate al momento dell&#39;esecuzione,¿Cuáles son las principales ventajas asociadas con la programación orientada a objetos?,Abstracción y reutilización.,Los objetos de encapsulación combinan datos y operaciones Herencia: las clases pueden heredar propiedades de otras clases Polimorfismo: los objetos pueden determinar las operaciones apropiadas en el momento de la ejecución,Jakie są główne zalety programowania zorientowanego obiektowo?,Abstrakcja i możliwość ponownego wykorzystania.,Hermetyzacja - obiekty łączą dane i operacje Dziedziczenie - klasy mogą dziedziczyć właściwości z innych klas Polimorfizm - obiekty mogą określać odpowiednie operacje w czasie wykonywania,Những ưu điểm chính liên quan đến lập trình hướng đối tượng là gì?,Tính trừu tượng và khả năng tái sử dụng.,Các đối tượng đóng gói kết hợp dữ liệu và hoạt động Kế thừa- các lớp có thể kế thừa các thuộc tính từ các lớp khác Tính đa hình- Các đối tượng có thể xác định các hoạt động thích hợp tại thời điểm thực thi,オブジェクト指向プログラミングに関連する主な利点は何ですか？,抽象化と再利用性。,カプセル化-オブジェクトはデータと操作を組み合わせる継承-クラスは他のクラスからプロパティを継承できますポリモーフィズム-オブジェクトは実行時に適切な操作を決定できます,面向对象编程的主要优点是什么？,抽象和可重用性。,封装对象结合了数据和操作继承类可以从其他类继承属性多态对象可以在执行时确定适当的操作,ما هي المزايا الرئيسية المرتبطة بالبرمجة الشيئية؟,التجريد وإعادة الاستخدام.,كائنات التغليف تجمع البيانات والعمليات الوراثة- يمكن للفئات أن ترث الخصائص من الفئات الأخرى تعدد الأشكال- يمكن للكائنات تحديد العمليات المناسبة في وقت التنفيذ,Які основні переваги пов’язані з об’єктно-орієнтованим програмуванням?,Абстракція та багаторазове використання.,Об’єкти інкапсуляції поєднують дані та операції Спадщина - класи можуть успадковувати властивості від інших класів Поліморфізм - Об’єкти можуть визначати відповідні операції під час виконання,Quais são as principais vantagens associadas à programação orientada a objetos?,Abstração e reutilização.,Objetos de encapsulamento combinam dados e operações Classes de herança podem herdar propriedades de outras classes Polimorfismo - Objetos podem determinar operações apropriadas em tempo de execução,مزایای اصلی مرتبط با برنامه نویسی شی گرا چیست؟,انتزاع و استفاده مجدد.,اشیا کپسوله سازی داده ها و عملیات را ترکیب می کنند وراثت - کلاس ها می توانند خصوصیات را از کلاسهای دیگر به ارث ببرند چندشکلی - اشیا can می توانند عملیات مناسب را در زمان اجرا تعیین کنند,Quins són els principals avantatges associats a la programació orientada a objectes?,Abstracció i reutilització.,Els objectes d’encapsulament combinen dades i operacions Herència: les classes poden heretar propietats d’altres classes Polimorfisme: els objectes poden determinar les operacions adequades en el moment d’execució,Које су главне предности повезане са објектно оријентисаним програмирањем?,Апстракција и поновна употребљивост.,Објекти енкапсулације комбинују податке и операције Наслеђивање - класе могу наследити својства других класа Полиморфизам - Објекти могу одредити одговарајуће операције у време извршења,Apa keuntungan utama yang terkait dengan pemrograman berorientasi objek?,Abstraksi dan dapat digunakan kembali.,Enkapsulasi-objek menggabungkan data dan operasi Warisan- kelas dapat mewarisi properti dari kelas lain Polimorfisme- Objek dapat menentukan operasi yang sesuai pada waktu eksekusi,Hva er de viktigste fordelene knyttet til objektorientert programmering?,Abstraksjon og gjenbrukbarhet.,Innkapslingsobjekter kombinerer data og operasjoner Arv- klasser kan arve egenskaper fra andre klasser Polymorfisme- Objekter kan bestemme passende operasjoner ved utførelsestid,객체 지향 프로그래밍과 관련된 주요 이점은 무엇입니까?,추상화 및 재사용 성.,캡슐화-객체는 데이터와 작업을 결합합니다. 상속-클래스는 다른 클래스에서 속성을 상속 할 수 있습니다. 다형성-객체는 실행 시간에 적절한 작업을 결정할 수 있습니다.,Mitkä ovat olio-ohjelmoinnin tärkeimmät edut?,Abstraktio ja uudelleenkäytettävyys.,Kapselointiobjektit yhdistävät tietoja ja operaatioita Perintö-luokat voivat periä ominaisuuksia muista luokista. Polymorfismi - Objektit voivat määrittää sopivat toiminnot suorituksen aikana,Melyek az objektum-orientált programozás fő előnyei?,Absztrakció és újrafelhasználhatóság.,A kapszulázási objektumok ötvözik az adatokat és a műveleteket Az öröklődési osztályok örökölhetik a tulajdonságokat más osztályokból. Polimorfizmus - Az objektumok meghatározhatják a megfelelő műveleteket,Jaké jsou hlavní výhody spojené s objektově orientovaným programováním?,Abstrakce a opakovaná použitelnost.,Zapouzdření - objekty kombinují data a operace Dědičnost - třídy mohou dědit vlastnosti z jiných tříd Polymorfismus - objekty mohou určovat vhodné operace v době provádění,Koje su glavne prednosti povezane sa objektno orijentisanim programiranjem?,Apstrakcija i ponovna upotrebljivost.,Objekti enkapsulacije kombiniraju podatke i operacije Nasljeđivanje - klase mogu naslijediti svojstva iz drugih klasa Polimorfizam - Objekti mogu odrediti odgovarajuće operacije u vrijeme izvršenja
142,142,763,4.5,"the size of the first dimension does not need to be specified, but all other dimensions do.","All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,5.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?","Die Größe der ersten Dimension muss nicht angegeben werden, alle anderen Dimensionen jedoch.",Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.","ang gidak-on sa una nga sukat dili kinahanglan nga ipiho, apan ang tanan nga uban pang mga sukat buhaton.",Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.","storleken på den första dimensionen behöver inte anges, men alla andra dimensioner gör det.",Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.","la taille de la première dimension n&#39;a pas besoin d&#39;être spécifiée, mais toutes les autres dimensions le font.",Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.","de maat van de eerste maat hoeft niet gespecificeerd te worden, maar alle andere maten wel.",Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","размер первого измерения указывать не нужно, но все остальные размеры нужно указывать.",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.","la dimensione della prima dimensione non ha bisogno di essere specificata, ma tutte le altre dimensioni sì.",¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.","no es necesario especificar el tamaño de la primera dimensión, pero sí las demás dimensiones.",Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.","wielkość pierwszego wymiaru nie musi być określona, ale wszystkie inne wymiary tak.",Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.","kích thước của kích thước đầu tiên không cần phải được chỉ định, nhưng tất cả các kích thước khác thì có.",多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,最初の次元のサイズを指定する必要はありませんが、他のすべての次元は指定する必要があります。,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,不需要指定第一维的大小，但是所有其他维都可以。,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,لا يلزم تحديد حجم البعد الأول ، ولكن يجب تحديد جميع الأبعاد الأخرى.,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","розмір першого виміру не потрібно вказувати, але всі інші розміри це потрібно.",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.","o tamanho da primeira dimensão não precisa ser especificado, mas todas as outras dimensões precisam.",هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,اندازه بعد اول نیازی به مشخص شدن نیست ، اما همه ابعاد دیگر لازم است.,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.","no cal especificar la mida de la primera dimensió, però sí la resta.",Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.","не треба навести величину прве димензије, али све остале димензије морају.",Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.","ukuran dimensi pertama tidak perlu ditentukan, tetapi semua dimensi lainnya perlu.",Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.","størrelsen på den første dimensjonen trenger ikke å spesifiseres, men alle andre dimensjoner gjør det.",다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,첫 번째 차원의 크기는 지정할 필요가 없지만 다른 모든 차원은 지정해야합니다.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.","ensimmäisen ulottuvuuden kokoa ei tarvitse määrittää, mutta kaikki muut ulottuvuudet ovat.","Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","az első dimenzió méretét nem kell megadni, de az összes többi dimenziót igen.",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.","velikost první dimenze není třeba specifikovat, ale všechny ostatní dimenze ano.",Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.","ne treba navesti veličinu prve dimenzije, ali sve ostale dimenzije trebaju."
143,143,1400,8.4,Using nodes to keep track of the head of the stack. Then using Push( ) and Pop ( ) to create the stack as needed.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,4.0,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,"Verwenden von Knoten, um den Kopf des Stapels zu verfolgen. Verwenden Sie dann Push () und Pop (), um den Stapel nach Bedarf zu erstellen.",Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.",Paggamit mga node aron masubay ang ulo sa stack. Pagkahuman gamit ang Push () ug Pop () aron mahimo ang stack kung gikinahanglan.,Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,Använda noder för att hålla reda på stackens huvud. Använd sedan Push () och Pop () för att skapa stacken efter behov.,Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.","Utilisation de nœuds pour suivre la tête de la pile. Ensuite, utilisez Push () et Pop () pour créer la pile selon les besoins.",Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.",Gebruik knooppunten om de kop van de stapel bij te houden. Gebruik vervolgens Push () en Pop () om de stapel naar behoefte te maken.,Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.",Использование узлов для отслеживания головы стека. Затем используйте Push () и Pop () для создания стека по мере необходимости.,Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.",Utilizzo dei nodi per tenere traccia del capo dello stack. Quindi utilizzare Push () e Pop () per creare lo stack secondo necessità.,¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.","Usar nodos para realizar un seguimiento del encabezado de la pila. Luego, use Push () y Pop () para crear la pila según sea necesario.",Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.",Używanie węzłów do śledzenia początku stosu. Następnie za pomocą Push () i Pop () utwórz stos stosownie do potrzeb.,Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.","Sử dụng các nút để theo dõi phần đầu của ngăn xếp. Sau đó, sử dụng Push () và Pop () để tạo ngăn xếp khi cần thiết.",リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,ノードを使用してスタックの先頭を追跡します。次に、Push（）とPop（）を使用して、必要に応じてスタックを作成します。,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,使用节点来跟踪堆栈的头部。然后根据需要使用Push（）和Pop（）创建堆栈。,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,استخدام العقد لتتبع رأس المكدس. ثم استخدم Push () و Pop () لإنشاء المكدس حسب الحاجة.,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.",Використання вузлів для відстеження головки стека. Потім за допомогою Push () та Pop () створіть стек за необхідності.,Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.","Usando nós para controlar o chefe da pilha. Em seguida, use Push () e Pop () para criar a pilha conforme necessário.",چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,استفاده از گره ها برای پیگیری سر پشته. سپس از Push () و Pop () برای ایجاد پشته در صورت لزوم استفاده کنید.,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.","Utilitzant nodes per fer un seguiment del cap de la pila. A continuació, utilitzeu Push () i Pop () per crear la pila segons calgui.",Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.",Коришћење чворова за праћење главе стека. Затим помоћу Пусх () и Поп () створите стог по потреби.,Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.",Menggunakan node untuk melacak kepala tumpukan. Kemudian gunakan Push () dan Pop () untuk membuat tumpukan sesuai kebutuhan.,Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.",Bruke noder for å holde oversikt over stakkens hode. Bruk deretter Push () og Pop () for å lage stakken etter behov.,목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,노드를 사용하여 스택 헤드를 추적합니다. 그런 다음 Push () 및 Pop ()을 사용하여 필요에 따라 스택을 만듭니다.,Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.",Solmujen avulla voit seurata pinon päätä. Luo sitten pino tarvittaessa painamalla Push () - ja Pop () -painikkeita.,Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.",Csomópontok segítségével nyomon követheti a verem fejét. Ezután a Push () és a Pop () segítségével hozza létre a verem szükség szerint.,Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.",Používání uzlů ke sledování hlavy zásobníku. Poté pomocí Push () a Pop () vytvořte zásobník podle potřeby.,Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.",Korištenje čvorova za praćenje glave stoga. Zatim pomoću Push () i Pop () stvorite stog po potrebi.
144,144,985,6.2,The & operator returns the address of a variable,The memory address of its operand.,What does the address (&) operator return?,5.0,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,Der Operator &amp; gibt die Adresse einer Variablen zurück,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,Gibalik sa &amp; operator ang adres sa usa ka variable,Vad returnerar adressoperatören?,Minnesadressen för dess operand.,Operatorn &amp; returnerar adressen till en variabel,Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,L&#39;opérateur &amp; renvoie l&#39;adresse d&#39;une variable,Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,De operator &amp; retourneert het adres van een variabele,Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,Оператор &amp; возвращает адрес переменной.,Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,L&#39;operatore &amp; restituisce l&#39;indirizzo di una variabile,¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,El operador &amp; devuelve la dirección de una variable,Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,Operator &amp; zwraca adres zmiennej,Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,Toán tử &amp; trả về địa chỉ của một biến,アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,＆演算子は変数のアドレスを返します,地址（＆）运算符返回什么？,其操作数的内存地址。,＆运算符返回变量的地址,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,يُرجع العامل &amp; عنوان متغير,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,Оператор &amp; повертає адресу змінної,O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,O operador &amp; retorna o endereço de uma variável,عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,عملگر &amp; آدرس یک متغیر را برمی گرداند,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,L&#39;operador &amp; retorna l&#39;adreça d&#39;una variable,Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,Оператор &amp; враћа адресу променљиве,Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,Operator &amp; mengembalikan alamat variabel,Hva returnerer adresseoperatøren?,Minneadressen til operanden.,Operatøren &amp; returnerer adressen til en variabel,주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,&amp; 연산자는 변수의 주소를 반환합니다.,Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,&amp; -Operaattori palauttaa muuttujan osoitteen,Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,Az &amp; operátor visszaadja egy változó címét,Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,Operátor &amp; vrátí adresu proměnné,Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,Operator &amp; vraća adresu varijable
145,145,1703,10.1,one or more nodes in a hierarchy starting with the root and branching off like a tree to subtrees,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",What is a tree?,5.0,"Eine Sammlung von Knoten mit einem speziellen Knoten namens root und der Rest der Knoten sind in eine oder mehrere disjunkte Mengen unterteilt, wobei jede Menge ein Baum ist.",Was ist ein Baum?,Ein oder mehrere Knoten in einer Hierarchie beginnen mit der Wurzel und verzweigen sich wie ein Baum zu Teilbäumen,Unsa ang usa ka kahoy?,"Usa ka koleksyon sa mga node, nga adunay usa ka espesyal nga node nga gitawag ug ugat, ug ang nahabilin nga mga node gibahin sa usa o daghan pa nga dili magkauyon nga mga set, nga ang matag set usa ka kahoy.",usa o daghan pa nga mga node sa usa ka hierarchy nga nagsugod sa ugat ug nagsanga sama sa usa ka kahoy sa mga subtree,Vad är ett träd?,"En samling noder, som har en speciell nod som kallas root, och resten av noderna är uppdelade i en eller flera separata uppsättningar, var och en uppsättning är ett träd.",en eller flera noder i en hierarki som börjar med roten och förgrenar sig som ett träd till underträd,Qu&#39;est-ce qu&#39;un arbre?,"Une collection de nœuds, qui a un nœud spécial appelé root, et le reste des nœuds sont partitionnés en un ou plusieurs ensembles disjoints, chaque ensemble étant un arbre.",un ou plusieurs nœuds dans une hiérarchie commençant par la racine et se ramifiant comme un arbre vers des sous-arbres,Wat is een boom?,"Een verzameling knooppunten, die een speciaal knooppunt heeft dat root wordt genoemd, en de rest van de knooppunten is onderverdeeld in een of meer disjuncte sets, waarbij elke set een boom is.","een of meer knooppunten in een hiërarchie, beginnend met de wortel en vertakt als een boom naar substructuren",Что такое дерево?,"Набор узлов, который имеет специальный узел, называемый корнем, а остальные узлы разделены на один или несколько непересекающихся наборов, каждый набор представляет собой дерево.","один или несколько узлов в иерархии, начиная с корня и ответвляясь, как дерево, на поддеревья",Cos&#39;è un albero?,"Una raccolta di nodi, che ha un nodo speciale chiamato root, e il resto dei nodi è partizionato in uno o più insiemi disgiunti, ogni insieme è un albero.",uno o più nodi in una gerarchia che iniziano con la radice e si diramano come un albero a sottoalberi,¿Qué es un árbol?,"Una colección de nodos, que tiene un nodo especial llamado raíz, y el resto de los nodos están divididos en uno o más conjuntos disjuntos, siendo cada conjunto un árbol.",uno o más nodos en una jerarquía que comienzan con la raíz y se ramifican como un árbol a subárboles,Co to jest drzewo?,"Zbiór węzłów, który ma specjalny węzeł zwany korzeniem, a pozostałe węzły są podzielone na jeden lub więcej rozłącznych zestawów, z których każdy jest drzewem.",jeden lub więcej węzłów w hierarchii zaczynającej się od korzenia i rozgałęziającej się jak drzewo do poddrzew,Cây là gì?,"Một tập hợp các nút, trong đó có một nút đặc biệt được gọi là gốc, và phần còn lại của các nút được phân chia thành một hoặc nhiều bộ rời rạc, mỗi bộ là một cây.",một hoặc nhiều nút trong một hệ thống phân cấp bắt đầu từ gốc và phân nhánh như một cây thành các cây con,木とは何ですか？,ルートと呼ばれる特別なノードを持つノードのコレクションと、残りのノードは1つ以上の互いに素なセットに分割され、各セットはツリーになります。,ルートから始まり、ツリーのようにサブツリーに分岐する階層内の1つ以上のノード,什么是树？,节点的集合，具有一个称为根的特殊节点，其余节点被划分为一个或多个不相交的集合，每个集合都是一棵树。,层次结构中的一个或多个节点从根开始，然后像树一样分支到子树,ما هي الشجرة؟,مجموعة من العقد ، التي لها عقدة خاصة تسمى الجذر ، ويتم تقسيم العقد المتبقية إلى مجموعة واحدة أو أكثر من المجموعات المنفصلة ، كل مجموعة عبارة عن شجرة.,واحدة أو أكثر من العقد في تسلسل هرمي يبدأ بالجذر ويتفرع مثل الشجرة إلى الأشجار الفرعية,Що таке дерево?,"Колекція вузлів, яка має спеціальний вузол, який називається root, а решта вузлів розділені на один або кілька непересічних наборів, кожен набір являє собою дерево.","один або кілька вузлів в ієрархії, починаючи з кореня і розгалужуючись, як дерево, до піддерев",O que é uma árvore?,"Uma coleção de nós, que possui um nó especial denominado raiz, e o resto dos nós são particionados em um ou mais conjuntos disjuntos, cada conjunto sendo uma árvore.",um ou mais nós em uma hierarquia começando com a raiz e se ramificando como uma árvore para subárvores,درخت چیست؟,مجموعه ای از گره ها که دارای گره خاصی به نام root است و بقیه گره ها به یک یا چند مجموعه جدا از هم تقسیم می شوند که هر مجموعه یک درخت است.,یک یا چند گره در سلسله مراتب شروع با ریشه و منشعب شدن مانند یک درخت به زیر شاخه ها,Què és un arbre?,"Una col·lecció de nodes, que té un node especial anomenat arrel, i la resta de nodes estan particionats en un o més conjunts disjunts, cadascun dels quals és un arbre.",un o més nodes en una jerarquia que comença amb l&#39;arrel i es ramifica com un arbre fins als subarbres,Шта је дрво?,"Збирка чворова која има посебан чвор који се назива роот, а остатак чворова подељен је у један или више нераздвојених скупова, а сваки скуп је стабло.",један или више чворова у хијерархији почевши од корена и гранајући се попут дрвета до подстабала,Apakah pohon itu?,"Kumpulan node, yang memiliki node khusus yang disebut root, dan node lainnya dipartisi menjadi satu atau lebih set terpisah, setiap set menjadi pohon.",satu atau lebih node dalam hierarki yang dimulai dengan root dan bercabang seperti pohon ke subpohon,Hva er et tre?,"En samling noder, som har en spesiell node kalt root, og resten av nodene er delt inn i ett eller flere usammenhengende sett, hvor hvert sett er et tre.",en eller flere noder i et hierarki som begynner med roten og forgrener seg som et tre til undertrær,나무는 무엇입니까?,루트라는 특수 노드가있는 노드 모음과 나머지 노드는 하나 이상의 분리 된 집합으로 분할되며 각 집합은 트리입니다.,루트에서 시작하여 트리처럼 하위 트리로 분기되는 계층 구조의 하나 이상의 노드,Mikä on puu?,"Solmujen kokoelma, jolla on erityinen solmu nimeltä root, ja muut solmut jaetaan yhteen tai useampaan disjointjoukkoon, joista kukin on puu.","yksi tai useampi solmu hierarkiassa, joka alkaa juuresta ja haarautuu kuin puu osiin",Mi az a fa?,"Csomópontok gyűjteménye, amelynek van egy speciális, root nevű csomópontja, és a többi csomópont egy vagy több diszjunkt halmazba van felosztva, mindegyik halmaz egy fa.","egy vagy több csomópont a hierarchiában, kezdve a gyököttől, és mint egy fa ágakra terjed ki alfákra",Co je to strom?,"Kolekce uzlů, která má speciální uzel zvaný root, a zbytek uzlů je rozdělen do jedné nebo více nespojených sad, přičemž každá sada je strom.",jeden nebo více uzlů v hierarchii počínaje kořenem a odbočujících jako strom k podstromům,Šta je drvo?,"Zbirka čvorova koja ima poseban čvor koji se naziva root, a ostatak čvorova podijeljen je u jedan ili više nepodudarnih skupova, a svaki skup je stablo.",jedan ili više čvorova u hijerarhiji koji započinju s korijenom i granaju se poput stabla do podstabala
146,146,1276,7.6,Doubly linked lists allow backward movement through the nodes.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Doppelt verknüpfte Listen ermöglichen eine Rückwärtsbewegung durch die Knoten.,Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",Ang duhaduha nga naka-link nga mga lista nagtugot sa paatras nga paglihok pinaagi sa mga node.,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",Dubbel länkade listor tillåter bakåtrörelse genom noderna.,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",Les listes doublement liées permettent un mouvement vers l&#39;arrière à travers les nœuds.,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",Dubbel gekoppelde lijsten maken achterwaartse beweging door de knooppunten mogelijk.,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.",Двусвязные списки позволяют перемещаться по узлам в обратном направлении.,Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",Gli elenchi doppiamente collegati consentono il movimento all&#39;indietro attraverso i nodi.,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",Las listas doblemente enlazadas permiten el retroceso a través de los nodos.,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.",Listy podwójnie połączone umożliwiają przechodzenie wstecz przez węzły.,Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",Danh sách được liên kết kép cho phép di chuyển ngược lại qua các nút.,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,二重にリンクされたリストにより、ノードを逆方向に移動できます。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,双链列表允许在节点之间向后移动。,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,تسمح القوائم المرتبطة بشكل مضاعف بالحركة العكسية عبر العقد.,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.",Подвійно пов&#39;язані списки дозволяють рухатись назад через вузли.,Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",Listas duplamente vinculadas permitem o movimento para trás através dos nós.,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,لیست های دارای پیوند مضاعف باعث حرکت عقب در گره ها می شوند.,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",Les llistes doblement enllaçades permeten retrocedir pels nodes.,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",Двоструко повезане листе омогућавају кретање уназад кроз чворове.,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",Daftar tertaut ganda memungkinkan pergerakan mundur melalui node.,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",Dobbeltkoblede lister tillater bevegelse bakover gjennom nodene.,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,이중 연결 목록은 노드를 통해 뒤로 이동할 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",Kaksinkertaisesti linkitetyt luettelot sallivat taaksepäin liikkumisen solmujen läpi.,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.",A kétszer összekapcsolt listák lehetővé teszik a csomópontokon keresztüli visszafelé történő mozgást.,Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.",Zdvojnásobené propojené seznamy umožňují zpětný pohyb uzly.,Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",Dvostruko povezane liste omogućavaju kretanje unazad kroz čvorove.
147,147,1858,10.7,log n comparisons,The height of the tree (or log of the number of elements in the tree).,How many comparisons does it take to find an element in a binary search tree?,5.0,Die Höhe des Baums (oder das Protokoll der Anzahl der Elemente im Baum).,"Wie viele Vergleiche sind erforderlich, um ein Element in einem binären Suchbaum zu finden?",log n Vergleiche,Pila ka mga pagtandi ang kinahanglan aron makapangita usa ka elemento sa usa ka puno nga binary search?,Ang kataas sa kahoy (o log sa gidaghanon sa mga elemento sa kahoy).,log n mga pagtandi,Hur många jämförelser krävs för att hitta ett element i ett binärt sökträd?,Trädets höjd (eller logg över antalet element i trädet).,log n jämförelser,Combien de comparaisons faut-il pour trouver un élément dans un arbre de recherche binaire?,La hauteur de l&#39;arbre (ou journal du nombre d&#39;éléments dans l&#39;arbre).,comparaisons log n,Hoeveel vergelijkingen zijn er nodig om een element in een binaire zoekboom te vinden?,De hoogte van de boom (of log van het aantal elementen in de boom).,log n vergelijkingen,"Сколько сравнений нужно, чтобы найти элемент в двоичном дереве поиска?",Высота дерева (или логарифм количества элементов в дереве).,журнал n сравнений,Quanti confronti sono necessari per trovare un elemento in un albero di ricerca binario?,L&#39;altezza dell&#39;albero (o il registro del numero di elementi dell&#39;albero).,log n confronti,¿Cuántas comparaciones se necesitan para encontrar un elemento en un árbol de búsqueda binaria?,La altura del árbol (o registro de la cantidad de elementos en el árbol).,comparaciones log n,"Ile porównań potrzeba, aby znaleźć element w drzewie wyszukiwania binarnego?",Wysokość drzewa (lub dziennik liczby elementów w drzewie).,log n porównań,Có bao nhiêu phép so sánh để tìm một phần tử trong cây tìm kiếm nhị phân?,Chiều cao của cây (hoặc nhật ký của số phần tử trong cây).,log n so sánh,二分探索木で要素を見つけるのに何回の比較が必要ですか？,ツリーの高さ（またはツリー内の要素数のログ）。,対数n比較,在二进制搜索树中查找元素需要进行多少次比较？,树的高度（或树中元素数的对数）。,log n比较,كم عدد المقارنات اللازمة للعثور على عنصر في شجرة بحث ثنائية؟,ارتفاع الشجرة (أو سجل عدد العناصر في الشجرة).,مقارنات تسجيل ن,"Скільки порівнянь потрібно, щоб знайти елемент у двійковому дереві пошуку?",Висота дерева (або журнал кількості елементів у дереві).,log n порівняння,Quantas comparações são necessárias para encontrar um elemento em uma árvore de pesquisa binária?,A altura da árvore (ou log do número de elementos na árvore).,log n comparações,برای یافتن عنصری در یک درخت جستجوی باینری چند مقایسه لازم است؟,ارتفاع درخت (یا تعداد تعداد عناصر موجود در درخت).,log n مقایسه کنید,Quantes comparacions es necessiten per trobar un element en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre (o registre del nombre d&#39;elements de l&#39;arbre).,registre n comparacions,Колико поређења је потребно да би се пронашао елемент у бинарном стаблу претраживања?,Висина стабла (или евиденција броја елемената у дрвету).,лог н поређења,Berapa banyak perbandingan yang diperlukan untuk menemukan elemen dalam pohon pencarian biner?,Tinggi pohon (atau log dari jumlah elemen pada pohon).,log n perbandingan,Hvor mange sammenligninger tar det å finne et element i et binært søketre?,Høyden på treet (eller logg over antall elementer i treet).,log n sammenligninger,이진 검색 트리에서 요소를 찾는 데 얼마나 많은 비교가 필요합니까?,트리의 높이 (또는 트리의 요소 수에 대한 로그).,log n 비교,Kuinka monta vertailua tarvitaan elementin löytämiseksi binaarihakupuusta?,Puun korkeus (tai puun elementtien määrän loki).,log n vertailut,Hány összehasonlítás szükséges egy elem megtalálásához a bináris keresési fában?,A fa magassága (vagy a fa elemeinek számának naplója).,log n összehasonlítások,Kolik srovnání je potřeba k nalezení prvku v binárním vyhledávacím stromu?,Výška stromu (nebo protokol o počtu prvků ve stromu).,log n srovnání,Koliko je usporedbi potrebno za pronalaženje elementa u binarnom stablu pretraživanja?,Visina stabla (ili evidencija broja elemenata u stablu).,log n poređenja
148,148,396,2.7,"#include ""hat.h""  allows the use of the hat container, so called from the act of pulling names from a hat.  The header file for hat includes functions for storage and retrieval of it's contents, mainly put(), peek(), and pull().","To store a class interface, including data members and member function prototypes.",What is the role of a header-file?,1.5,"Speichern einer Klassenschnittstelle, einschließlich Datenelementen und Elementfunktionsprototypen.",Welche Rolle spielt eine Header-Datei?,"#include &quot;hat.h&quot; ermöglicht die Verwendung des Hutcontainers, der so genannt wird, wenn Namen aus einem Hut gezogen werden. Die Header-Datei für hat enthält Funktionen zum Speichern und Abrufen des Inhalts, hauptsächlich put (), peek () und pull ().",Unsa man ang papel sa usa ka header-file?,"Aron tipiganan ang usa ka interface sa klase, lakip ang mga miyembro sa datos ug mga prototype sa pagpaandar sa miyembro.","# ilakip ang &quot;kalo.h&quot; nagtugot sa paggamit sa sulud nga kalo, nga gitawag gikan sa paglihok sa pagbitad sa mga ngalan gikan sa usa ka kalo. Ang file sa header alang sa kalo adunay mga gimbuhaton alang sa pagtipig ug pagkuha sa mga sulud niini, nga kadaghanan gibutang (), silip (), ug pagbira ().",Vilken roll har en rubrikfil?,"Att lagra ett klassgränssnitt, inklusive datamedlemmar och prototyper för medlemsfunktioner.","#include &quot;hat.h&quot; tillåter användning av hattbehållaren, så kallad från att dra namn från en hatt. Rubrikfilen för hat innehåller funktioner för lagring och hämtning av innehållet, huvudsakligen put (), peek () och pull ().",Quel est le rôle d&#39;un fichier d&#39;en-tête?,"Pour stocker une interface de classe, y compris les membres de données et les prototypes de fonction membre.","#include &quot;hat.h&quot; permet l&#39;utilisation du conteneur de chapeau, ainsi appelé du fait de tirer des noms d&#39;un chapeau. Le fichier d&#39;en-tête de hat comprend des fonctions de stockage et de récupération de son contenu, principalement put (), peek () et pull ().",Wat is de rol van een header-bestand?,"Om een klasse-interface op te slaan, inclusief gegevensleden en prototypes van lidfuncties.","#include &quot;hat.h&quot; staat het gebruik van de hoedencontainer toe, zo genoemd van het trekken van namen uit een hoed. Het headerbestand voor hat bevat functies voor het opslaan en ophalen van de inhoud, voornamelijk put (), peek () en pull ().",Какова роль заголовочного файла?,"Для хранения интерфейса класса, включая члены данных и прототипы функций-членов.","#include &quot;hat.h&quot; разрешает использование контейнера шляпы, так называемого процесса извлечения имен из шляпы. Заголовочный файл для шляпы включает функции для хранения и извлечения его содержимого, в основном put (), peek () и pull ().",Qual è il ruolo di un file di intestazione?,"Per memorizzare un&#39;interfaccia di classe, inclusi membri di dati e prototipi di funzioni membro.","#include &quot;hat.h&quot; consente l&#39;uso del contenitore del cappello, così chiamato dall&#39;atto di estrarre i nomi da un cappello. Il file di intestazione per hat include funzioni per l&#39;archiviazione e il recupero dei suoi contenuti, principalmente put (), peek () e pull ().",¿Cuál es la función de un archivo de encabezado?,"Para almacenar una interfaz de clase, incluidos los miembros de datos y los prototipos de funciones de miembros.","#include &quot;hat.h&quot; permite el uso del contenedor del sombrero, llamado así por el acto de sacar nombres de un sombrero. El archivo de encabezado de hat incluye funciones para el almacenamiento y la recuperación de su contenido, principalmente put (), peek () y pull ().",Jaka jest rola pliku nagłówkowego?,"Do przechowywania interfejsu klasy, w tym składowych danych i prototypów funkcji składowych.","#include &quot;hat.h&quot; pozwala na użycie pojemnika na kapelusz, tzw. z aktu wyciągania imion z kapelusza. Plik nagłówkowy dla hat zawiera funkcje do przechowywania i pobierania jego zawartości, głównie put (), peek () i pull ().",Vai trò của tệp tiêu đề là gì?,"Để lưu trữ một giao diện lớp, bao gồm các thành viên dữ liệu và các nguyên mẫu hàm thành viên.","#include &quot;hat.h&quot; cho phép sử dụng hộp chứa mũ, được gọi là hành động kéo tên từ mũ. Tệp tiêu đề cho hat bao gồm các hàm để lưu trữ và truy xuất nội dung của nó, chủ yếu là put (), peek () và pull ().",ヘッダーファイルの役割は何ですか？,データメンバーとメンバー関数のプロトタイプを含むクラスインターフェイスを格納します。,#include &quot;hat.h&quot;は、帽子から名前を取得する行為から呼ばれる、帽子コンテナの使用を許可します。 hatのヘッダーファイルには、主にput（）、peek（）、pull（）などのコンテンツを保存および取得するための関数が含まれています。,头文件的作用是什么？,存储一个类接口，包括数据成员和成员函数原型。,#include“ hat.h”允许使用帽子容器，这是从帽子中提取名称的行为所称的。 hat的头文件包括用于存储和检索其内容的函数，主要是put（），peek（）和pull（）。,ما هو دور ملف الرأس؟,لتخزين واجهة فئة ، بما في ذلك أعضاء البيانات ونماذج وظائف الأعضاء.,# تضمين &quot;hat.h&quot; يسمح باستخدام حاوية القبعة ، وهو ما يسمى بعملية سحب الأسماء من القبعة. يتضمن ملف الرأس الخاص بالقبعة وظائف لتخزين واسترجاع محتوياته ، خاصة وضع () ، ونظرة خاطفة () ، وسحب ().,Яка роль заголовного файлу?,"Зберігати інтерфейс класу, включаючи члени даних та прототипи функцій членів.","#include &quot;hat.h&quot; дозволяє використовувати контейнер для капелюха, так званий акт витягування імен з капелюха. Заголовочний файл для hat містить функції для зберігання та пошуку його вмісту, в основному put (), peek () і pull ().",Qual é a função de um arquivo de cabeçalho?,"Para armazenar uma interface de classe, incluindo membros de dados e protótipos de função de membro.","#include &quot;hat.h&quot; permite o uso do recipiente do chapéu, assim chamado a partir do ato de tirar nomes de um chapéu. O arquivo de cabeçalho para hat inclui funções para armazenamento e recuperação de seu conteúdo, principalmente put (), peek () e pull ().",نقش یک پرونده هدر چیست؟,برای ذخیره یک رابط کلاس ، از جمله اعضای داده و نمونه های اولیه عملکرد اعضا.,# شامل &quot;hat.h&quot; اجازه استفاده از ظرف کلاه را می دهد ، به اصطلاح از عمل کشیدن نام از کلاه استفاده می شود. پرونده هدر کلاه شامل توابع ذخیره سازی و بازیابی محتوای آن است ، به طور عمده put () ، peek () و pull ().,Quin és el paper d&#39;un fitxer de capçalera?,"Per emmagatzemar una interfície de classe, inclosos membres de dades i prototips de funció de membre.","#include &quot;hat.h&quot; permet l&#39;ús del contenidor de barrets, anomenat així per l&#39;acte de treure noms d&#39;un barret. El fitxer de capçalera del barret inclou funcions per emmagatzemar i recuperar el seu contingut, principalment put (), peek () i pull ().",Која је улога заглавља-датотеке?,"Да чува интерфејс класе, укључујући чланове података и прототипове функције члана.","#инцлуде &quot;хат.х&quot; дозвољава употребу контејнера са шеширом, тако се назива извлачењем имена из шешира. Датотека заглавља за шешир садржи функције за складиштење и преузимање његовог садржаја, углавном пут (), пеек () и пулл ().",Apa peran file header?,"Untuk menyimpan antarmuka kelas, termasuk anggota data dan prototipe fungsi anggota.","#include &quot;hat.h&quot; memungkinkan penggunaan wadah topi, yang disebut dari tindakan menarik nama dari topi. File header untuk hat menyertakan fungsi untuk penyimpanan dan pengambilan isinya, terutama put (), peek (), dan pull ().",Hva er rollen som en header-fil?,"Å lagre et klassegrensesnitt, inkludert datamedlemmer og prototyper for medlemsfunksjoner.","# inkluderer &quot;hat.h&quot; tillater bruk av hattebeholderen, såkalt fra å trekke navn fra en hatt. Overskriftsfilen for hat inneholder funksjoner for lagring og henting av innholdet, hovedsakelig put (), peek () og pull ().",헤더 파일의 역할은 무엇입니까?,데이터 멤버 및 멤버 함수 프로토 타입을 포함한 클래스 인터페이스를 저장합니다.,"#include &quot;hat.h&quot;는 모자에서 이름을 가져 오는 행위에서 호출되는 모자 컨테이너의 사용을 허용합니다. hat의 헤더 파일에는 주로 put (), peek () 및 pull () 컨텐츠의 저장 및 검색 기능이 포함되어 있습니다.",Mikä on otsikkotiedoston rooli?,"Luokkaliittymän, mukaan lukien datajäsenet ja jäsenfunktioprototyypit, tallentaminen.","#include &quot;hat.h&quot; sallii hattuastian käytön, ns. nimeltään vetämällä nimiä hatusta. Hatun otsikkotiedosto sisältää sisällön tallennus- ja hakutoiminnot, pääasiassa put (), peek () ja pull ().",Mi a fejlécfájl szerepe?,"Osztályfelület tárolására, beleértve az adattagokat és a tagfüggvény prototípusokat.","A #include &quot;hat.h&quot; lehetővé teszi a kalaptartály használatát, úgynevezett abból a tényből, hogy neveket húzunk egy kalapból. A hat fejlécfájlja a tartalmának tárolására és visszakeresésére szolgáló funkciókat tartalmaz, elsősorban a put (), peek () és pull () függvényeket.",Jaká je role souboru záhlaví?,"K uložení rozhraní třídy, včetně datových členů a prototypů členské funkce.","#include „hat.h“ umožňuje použití kontejneru na klobouky, tzv. z tahání jmen z klobouku. Soubor záhlaví klobouku obsahuje funkce pro ukládání a načítání jeho obsahu, zejména put (), peek () a pull ().",Koja je uloga zaglavlja-datoteke?,"Za pohranu sučelja klase, uključujući članove podataka i prototipove funkcije člana.","#include &quot;hat.h&quot; dozvoljava upotrebu spremnika šešira, takozvanog izvlačenjem imena iz šešira. Datoteka zaglavlja za šešir sadrži funkcije za pohranu i preuzimanje sadržaja, uglavnom put (), peek () i pull ()."
149,149,287,2.3,"A constructor cannot return values, not even void, but function get a return value.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,4.0,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,"Ein Konstruktor kann keine Werte zurückgeben, nicht einmal void, aber die Funktion erhält einen Rückgabewert.",Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.","Ang usa ka magtutukod dili makabalik sa mga kantidad, bisan wala’y sulod, apan ang pag-andar makakuha usa ka pagbalik nga kantidad.",Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.","En konstruktör kan inte returnera värden, inte ens ogiltiga, men funktionen får ett returvärde.",Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.","Un constructeur ne peut pas retourner de valeurs, même pas void, mais la fonction obtient une valeur de retour.",Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.","Een constructor kan geen waarden retourneren, zelfs niet ongeldig, maar de functie krijgt een retourwaarde.",В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.","Конструктор не может возвращать значения, даже не void, но функция получает возвращаемое значение.",Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.","Un costruttore non può restituire valori, nemmeno void, ma la funzione ottiene un valore di ritorno.",¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.","Un constructor no puede devolver valores, ni siquiera vacío, pero la función obtiene un valor de retorno.",Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.","Konstruktor nie może zwracać wartości, nawet void, ale funkcja pobiera wartość zwracaną.",Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.","Một hàm tạo không thể trả về giá trị, thậm chí không phải void, nhưng hàm nhận giá trị trả về.",コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターは値を返すことはできず、voidでさえも返すことはできませんが、関数は戻り値を取得します。,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数无法返回值，甚至不能返回void，但函数会获得返回值。,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,لا يمكن للمنشئ إرجاع القيم ، ولا حتى الفراغ ، ولكن الدالة تحصل على قيمة معادة.,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.","Конструктор не може повернути значення, навіть недійсне, але функція отримує повернене значення.",Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.","Um construtor não pode retornar valores, nem mesmo void, mas a função obtém um valor de retorno.",تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,یک سازنده نمی تواند مقادیر را بازگرداند ، حتی باطل نیست ، اما تابع مقدار بازگشتی می گیرد.,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.","Un constructor no pot retornar valors, ni tan sols nuls, però la funció obté un valor de retorn.",Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.","Конструктор не може вратити вредности, чак ни воид, али функција добија повратну вредност.",Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.","Sebuah konstruktor tidak dapat mengembalikan nilai, bahkan tidak void, tetapi fungsi mendapatkan nilai kembali.",Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.","En konstruktør kan ikke returnere verdier, ikke engang ugyldige, men funksjonen får en returverdi.",생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자는 void가 아닌 값을 반환 할 수 없지만 함수는 반환 값을 얻습니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.","Rakentaja ei voi palauttaa arvoja, ei edes tyhjiä, mutta funktio saa palautusarvon.",Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.","A konstruktor nem adhat vissza értékeket, még semmis, de a függvény visszatérési értéket kap.",Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.","Konstruktor nemůže vrátit hodnoty, dokonce ani neplatné, ale funkce získá návratovou hodnotu.",Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.","Konstruktor ne može vratiti vrijednosti, čak ni void, ali funkcija dobiva povratnu vrijednost."
150,150,47,1.2,"Elaboration, construction, and transition.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),What stages in the software life cycle are influenced by the testing stage?,2.5,Die Teststufe kann sowohl die Codierungsstufe (Phase 5) als auch die Lösungsverfeinerungsstufe (Phase 7) beeinflussen.,Welche Phasen im Software-Lebenszyklus werden von der Testphase beeinflusst?,"Ausarbeitung, Konstruktion und Übergang.",Unsang mga yugto sa siklo sa kinabuhi sa software ang naimpluwensyahan sa yugto sa pagsulay?,Ang yugto sa pagsulay mahimong makaimpluwensya sa pareho nga yugto sa pag-coding (yugto 5) ug ang yugto sa pagpino sa solusyon (yugto 7),"Elaboration, konstruksyon, ug pagbalhin.",Vilka steg i programvarans livscykel påverkas av testfasen?,Teststeget kan påverka både kodningssteget (fas 5) och lösningsförfiningssteget (fas 7),"Utarbetande, konstruktion och övergång.",Quelles étapes du cycle de vie du logiciel sont influencées par l&#39;étape de test?,L&#39;étape de test peut influencer à la fois l&#39;étape de codage (phase 5) et l&#39;étape de raffinement de la solution (phase 7),"Élaboration, construction et transition.",Welke fasen in de levenscyclus van software worden beïnvloed door de testfase?,De testfase kan zowel de coderingsfase (fase 5) als de oplossingsverfijningsfase (fase 7) beïnvloeden,"Uitwerking, constructie en transitie.",На какие этапы жизненного цикла ПО влияет этап тестирования?,"Этап тестирования может влиять как на этап кодирования (этап 5), так и на этап уточнения решения (этап 7).","Доработка, строительство и переход.",Quali fasi del ciclo di vita del software sono influenzate dalla fase di test?,La fase di test può influenzare sia la fase di codifica (fase 5) che la fase di affinamento della soluzione (fase 7),"Elaborazione, costruzione e transizione.",¿Qué etapas del ciclo de vida del software están influenciadas por la etapa de prueba?,La etapa de prueba puede influir tanto en la etapa de codificación (fase 5) como en la etapa de refinamiento de la solución (fase 7),"Elaboración, construcción y transición.",Na jakie etapy cyklu życia oprogramowania wpływa etap testowania?,"Etap testowania może wpływać zarówno na etap kodowania (faza 5), jak i na etap udoskonalania rozwiązania (faza 7)","Opracowanie, konstrukcja i przejście.",Giai đoạn nào trong vòng đời phần mềm bị ảnh hưởng bởi giai đoạn kiểm thử?,Giai đoạn thử nghiệm có thể ảnh hưởng đến cả giai đoạn mã hóa (giai đoạn 5) và giai đoạn tinh chỉnh giải pháp (giai đoạn 7),"Xây dựng, xây dựng và chuyển đổi.",ソフトウェアライフサイクルのどの段階がテスト段階の影響を受けますか？,テスト段階は、コーディング段階（フェーズ5）とソリューションの改良段階（フェーズ7）の両方に影響を与える可能性があります。,精緻化、構築、および移行。,测试阶段会影响软件生命周期的哪些阶段？,测试阶段可以影响编码阶段（阶段5）和解决方案优化阶段（阶段7）,细化，构建和过渡。,ما هي مراحل دورة حياة البرنامج التي تتأثر بمرحلة الاختبار؟,يمكن أن تؤثر مرحلة الاختبار على كل من مرحلة التشفير (المرحلة 5) ومرحلة تحسين الحل (المرحلة 7),التفصيل والبناء والانتقال.,На які етапи життєвого циклу програмного забезпечення впливає етап тестування?,"Стадія випробування може впливати як на стадію кодування (фаза 5), так і на стадію доробки розчину (фаза 7)","Розробка, побудова та перехід.",Que fases do ciclo de vida do software são influenciadas pela fase de teste?,O estágio de teste pode influenciar tanto o estágio de codificação (fase 5) quanto o estágio de refinamento da solução (fase 7),"Elaboração, construção e transição.",چه مرحله هایی از چرخه عمر نرم افزار تحت تأثیر مرحله آزمایش قرار می گیرند؟,مرحله آزمایش می تواند هم در مرحله کدگذاری (مرحله 5) و هم در مرحله تصفیه محلول (مرحله 7) تأثیر بگذارد.,شرح ، ساخت و انتقال.,Quines etapes del cicle de vida del programari estan influïdes per la fase de proves?,L&#39;etapa de prova pot influir tant en l&#39;etapa de codificació (fase 5) com en l&#39;etapa de refinament de la solució (fase 7),"Elaboració, construcció i transició.",На које фазе у животном циклусу софтвера утиче фаза тестирања?,Фаза испитивања може утицати и на фазу кодирања (фаза 5) и на фазу усавршавања раствора (фаза 7),"Разрада, конструкција и транзиција.",Tahapan apa dalam siklus hidup perangkat lunak yang dipengaruhi oleh tahap pengujian?,Tahap pengujian dapat mempengaruhi tahap pengkodean (tahap 5) dan tahap perbaikan solusi (tahap 7),"Elaborasi, konstruksi, dan transisi.",Hvilke stadier i programvarens livssyklus påvirkes av testfasen?,Testfasen kan påvirke både kodingsfasen (fase 5) og løsningsfinesseringen (fase 7),"Utdyping, konstruksjon og overgang.",테스트 단계의 영향을받는 소프트웨어 수명주기의 단계는 무엇입니까?,테스트 단계는 코딩 단계 (5 단계)와 솔루션 개선 단계 (7 단계) 모두에 영향을 미칠 수 있습니다.,"정교화, 구성 및 전환.",Mihin ohjelmiston elinkaaren vaiheisiin testausvaihe vaikuttaa?,Testausvaihe voi vaikuttaa sekä koodausvaiheeseen (vaihe 5) että liuoksen jalostusvaiheeseen (vaihe 7),"Valmistelu, rakentaminen ja siirtyminen.",A szoftver életciklusának mely szakaszait befolyásolja a tesztelési szakasz?,"A tesztelési szakasz befolyásolhatja mind a kódolási (5. fázis), mind az oldat-finomítási fázist (7. fázis)","Kidolgozás, kivitelezés és átmenet.",Na jaké fáze životního cyklu softwaru má fáze testování vliv?,"Fáze testování může ovlivnit jak fázi kódování (fáze 5), tak fázi zdokonalení řešení (fáze 7)","Vypracování, konstrukce a přechod.",Na koje faze u životnom ciklusu softvera utiče faza testiranja?,Faza ispitivanja može utjecati i na fazu kodiranja (faza 5) i na fazu usavršavanja rastvora (faza 7),"Razrada, izgradnja i tranzicija."
151,151,487,3.3,If the function is small enough it will expand it but it will run faster as it will avoid making so many calls to the function.,It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,4.5,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,"Wenn die Funktion klein genug ist, wird sie erweitert, aber schneller ausgeführt, da so viele Aufrufe der Funktion vermieden werden.",Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,Kung ang pagpaandar gamay nga igo kini palapdan apan kini modagan nga labing kadali tungod kay malikayan ang paghimo sa daghang mga tawag sa pagpaandar.,Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,Om funktionen är tillräckligt liten kommer den att expandera men den kommer att gå snabbare eftersom den kommer att undvika att ringa så många samtal till funktionen.,Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,"Si la fonction est suffisamment petite, elle l&#39;étendra mais elle s&#39;exécutera plus rapidement car elle évitera de faire autant d&#39;appels à la fonction.",Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,"Als de functie klein genoeg is, zal hij deze uitbreiden, maar hij zal sneller werken omdat hij zo veel oproepen naar de functie zal vermijden.",Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.","Если функция достаточно мала, она расширится, но будет работать быстрее, так как позволит избежать стольких вызовов функции.",In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,"Se la funzione è abbastanza piccola, la espanderà ma verrà eseguita più velocemente poiché eviterà di effettuare così tante chiamate alla funzione.",¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,"Si la función es lo suficientemente pequeña, la expandirá pero se ejecutará más rápido, ya que evitará hacer tantas llamadas a la función.",Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.","Jeśli funkcja jest wystarczająco mała, rozszerzy ją, ale będzie działać szybciej, ponieważ pozwoli uniknąć wykonywania tylu wywołań funkcji.",Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,"Nếu hàm đủ nhỏ, nó sẽ mở rộng nó nhưng nó sẽ chạy nhanh hơn vì nó sẽ tránh thực hiện quá nhiều lệnh gọi đến hàm.",コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,関数が十分に小さい場合は拡張されますが、関数を何度も呼び出す必要がないため、実行速度は速くなります。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,如果函数足够小，它将扩展它，但是它将运行得更快，因为它将避免对函数进行太多调用。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,إذا كانت الوظيفة صغيرة بدرجة كافية ، فستوسعها ولكنها ستعمل بشكل أسرع لأنها ستتجنب إجراء العديد من المكالمات إلى الوظيفة.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.","Якщо функція досить мала, вона розширить її, але вона буде працювати швидше, оскільки не дозволить зробити стільки викликів функції.",Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"Se a função for pequena o suficiente, ela irá expandi-la, mas será executada mais rapidamente, pois evitará fazer tantas chamadas para a função.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,اگر عملکرد به اندازه کافی کوچک باشد ، آن را گسترش می دهد اما سریعتر اجرا می شود زیرا از برقراری تماسهای فراوان با عملکرد جلوگیری می کند.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,"Si la funció és prou petita, l’ampliarà però funcionarà més ràpidament, ja que evitarà fer tantes trucades a la funció.",Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,"Ако је функција довољно мала, проширит ће је, али ће радити брже јер ће избјећи упућивање толико позива функцији.",Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,"Jika fungsinya cukup kecil, itu akan mengembangkannya tetapi akan berjalan lebih cepat karena akan menghindari banyak panggilan ke fungsi tersebut.",Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,"Hvis funksjonen er liten nok, vil den utvide den, men den vil gå raskere, da den vil unngå å ringe så mange til funksjonen.",컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,함수가 충분히 작 으면 확장되지만 함수를 너무 많이 호출하지 않기 때문에 더 빠르게 실행됩니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.","Jos toiminto on riittävän pieni, se laajentaa sitä, mutta se toimii nopeammin, koska se estää niin monta kutsua funktiolle.",Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.","Ha a funkció elég kicsi, akkor kibővíti, de gyorsabban fog futtatni, mert így elkerülhető a funkció sok meghívása.",Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.","Pokud je funkce dostatečně malá, rozbalí ji, ale poběží rychleji, protože se vyhne provádění tolik volání funkce.",Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,"Ako je funkcija dovoljno mala, proširit će je, ali će raditi brže jer će izbjeći upućivanje toliko poziva funkciji."
152,152,1269,7.6,you can traverse the list from front to back and back to front,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Sie können die Liste von vorne nach hinten und von hinten nach vorne durchlaufen,Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",mahimo nimo nga latason ang lista gikan sa atubangan hangtod sa likod ug pabalik sa atubangan,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",du kan korsa listan från framsida till baksida och bakåt till framsida,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",vous pouvez parcourir la liste d&#39;avant en arrière et d&#39;arrière en avant,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",u kunt de lijst van voren naar achteren en van achteren naar voren doorlopen,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.",вы можете перемещаться по списку спереди назад и обратно вперед,Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",puoi scorrere l&#39;elenco da davanti a dietro e da dietro in avanti,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",puede recorrer la lista de adelante hacia atrás y de atrás hacia adelante,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.",możesz przeglądać listę od przodu do tyłu i od tyłu do przodu,Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",bạn có thể xem qua danh sách từ trước ra sau và quay lại trước,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,リストを前から後ろ、後ろから前にトラバースできます,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,您可以从前到后以及从前到后遍历列表,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,يمكنك اجتياز القائمة من الأمام إلى الخلف ومن الخلف إلى الأمام,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.",Ви можете переглядати список спереду назад і ззаду вперед,Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",você pode percorrer a lista da frente para trás e de trás para a frente,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,می توانید لیست را از جلو به عقب و عقب به جلو رد کنید,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",podeu recórrer la llista de davant a darrere i de darrere a davant,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",листу можете прелазити од напред назад и назад унапред,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",Anda dapat melintasi daftar dari depan ke belakang dan dari belakang ke depan,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",du kan krysse listen fra front til bak og bak til front,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,"목록을 앞에서 뒤로, 뒤에서 앞으로 순회 할 수 있습니다.",Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",voit kiertää luetteloa edestä taakse ja edestä eteenpäin,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.",a listát előre-hátra és hátulról előre haladhatja,Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.",seznam můžete procházet zepředu dozadu a zepředu dopředu,Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",listu možete prelaziti sprijeda natrag i natrag naprijed
153,153,1225,7.4,By the head of the list. It takes the head address and traverses from there on in.,By reference.,How are linked lists passed as arguments to a function?,4.0,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,Am Anfang der Liste. Es nimmt die Kopfadresse und geht von dort weiter hinein.,Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,Pinaagi sa ulo sa lista. Gikuha ang adres sa ulohan ug mga pagbiyahe gikan didto padulong.,Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,Av listans chef. Det tar huvudadressen och passerar därifrån vidare in.,Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,En tête de liste. Il prend l&#39;adresse principale et traverse à partir de là.,Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,Aan het hoofd van de lijst. Het neemt het hoofdadres en gaat van daaruit naar binnen.,Как связанные списки передаются в качестве аргументов функции?,По ссылке.,Возглавляет список. Он берет главный адрес и переходит оттуда внутрь.,Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,In testa alla lista. Prende l&#39;indirizzo principale e prosegue da lì in avanti.,¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,Por el encabezado de la lista. Toma la dirección principal y la atraviesa de allí en adelante.,W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,Na czele listy. Pobiera adres głowy i przechodzi stamtąd w.,Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,Bằng người đứng đầu danh sách. Nó lấy địa chỉ đầu và chuyển từ đó vào.,リンクリストはどのように引数として関数に渡されますか？,参照による。,リストの先頭。ヘッドアドレスを取得し、そこからでトラバースします。,链表如何作为参数传递给函数？,引用。,按列表的开头。它采用头地址并从那里开始遍历。,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,من خلال رأس القائمة. يأخذ العنوان الرئيسي ويمر من هناك إلى الداخل.,Як зв’язані списки передаються як аргументи функції?,За посиланням.,Головою списку. Він приймає адресу голови та проходить звідти далі.,Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,No topo da lista. Ele pega o endereço principal e percorre a partir daí.,چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,توسط رئیس لیست. آدرس سر را می گیرد و از آنجا به بعد عبور می کند.,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,Pel cap de llista. Pren l&#39;adreça del cap i travessa des d&#39;allà cap endins.,Како се повезане листе прослеђују као аргументи функцији?,По референци.,На челу листе. Потребна је адреса главе и одатле прелази унутра.,Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,Di bagian atas daftar. Alamat ini mengambil alamat kepala dan melanjutkan dari sana ke dalam.,Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,Ved leder av listen. Det tar hodeadressen og krysser derfra og inn.,연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,목록의 선두에 있습니다. 헤드 주소를 가져와 거기에서 순회합니다.,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,Luettelon päähän. Se vie pääosoitteen ja kulkee sieltä sisään.,Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,A lista élén. Megveszi a címet és onnan befelé halad.,Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,V čele seznamu. Vezme hlavní adresu a odtud projde dovnitř.,Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,Šef liste. Potrebna je glavna adresa i odatle prolazi unutra.
154,154,2390,12.9,"Must delete the information that the node contains (to free up memory/ ""garbage collect"") and also delete the pointer (in that node's ""parent"") that points to the node you wish to delete.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,2.0,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,"Sie müssen die Informationen löschen, die der Knoten enthält (um Speicher freizugeben / &quot;Garbage Collect&quot;) und den Zeiger (im &quot;übergeordneten Knoten&quot; dieses Knotens) löschen, der auf den Knoten zeigt, den Sie löschen möchten.",Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).",Kinahanglan nga tangtangon ang kasayuran nga adunay sulud sa node (aron maibawas ang panumduman / &quot;pagkolekta sa basura&quot;) ug tanggalon usab ang pointer (sa &quot;ginikanan&quot; sa node nga nagtudlo sa node nga gusto nimong tanggalin.,Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,Måste ta bort informationen som noden innehåller (för att frigöra minne / &quot;skräpsamling&quot;) och även ta bort pekaren (i den nodens &quot;överordnade&quot;) som pekar på noden du vill ta bort.,Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).",Doit supprimer les informations que le nœud contient (pour libérer de la mémoire / &quot;garbage collect&quot;) et également supprimer le pointeur (dans le &quot;parent&quot; de ce nœud) qui pointe vers le nœud que vous souhaitez supprimer.,Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,U moet de informatie verwijderen die het knooppunt bevat (om geheugen vrij te maken / &quot;garbage collect&quot;) en ook de pointer verwijderen (in de &quot;ouder&quot; van dat knooppunt) die naar het knooppunt verwijst dat u wilt verwijderen.,Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","Необходимо удалить информацию, содержащуюся в узле (чтобы освободить память / «сборщик мусора»), а также удалить указатель (в «родительском» узле), который указывает на узел, который вы хотите удалить.",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).",È necessario eliminare le informazioni che il nodo contiene (per liberare memoria / &quot;garbage collect&quot;) e anche eliminare il puntatore (nel &quot;genitore&quot; di quel nodo) che punta al nodo che si desidera eliminare.,¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).",Debe eliminar la información que contiene el nodo (para liberar memoria / &quot;recolección de basura&quot;) y también eliminar el puntero (en el &quot;padre&quot; de ese nodo) que apunta al nodo que desea eliminar.,Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).","Musisz usunąć informacje, które zawiera węzeł (aby zwolnić pamięć / „zbieranie śmieci”), a także usunąć wskaźnik (w „rodzicu” tego węzła) wskazujący węzeł, który chcesz usunąć.",Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).",Phải xóa thông tin mà nút chứa (để giải phóng bộ nhớ / &quot;thu dọn rác&quot;) và cũng xóa con trỏ (trong &quot;cha&quot; của nút đó) trỏ đến nút bạn muốn xóa.,二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,ノードに含まれる情報を削除する必要があり（メモリを解放するため/「ガベージコレクション」）、削除するノードを指すポインタ（そのノードの「親」内）も削除する必要があります。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,必须删除该节点包含的信息（以释放内存/“垃圾回收”），还必须删除指向您要删除的节点的指针（在该节点的“父”中）。,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,يجب حذف المعلومات التي تحتوي عليها العقدة (لتحرير الذاكرة / &quot;جمع البيانات المهملة&quot;) وكذلك حذف المؤشر (في &quot;الأصل&quot; لهذه العقدة) الذي يشير إلى العقدة التي ترغب في حذفها.,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).","Потрібно видалити інформацію, яку містить вузол (для звільнення пам&#39;яті / &quot;збирання сміття&quot;), а також видалити покажчик (у &quot;батьківському&quot; вузлі), який вказує на вузол, який потрібно видалити.",Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,Deve-se excluir as informações que o nó contém (para liberar memória / &quot;coleta de lixo&quot;) e também excluir o ponteiro (no &quot;pai&quot; desse nó) que aponta para o nó que você deseja excluir.,چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,باید اطلاعات حاوی گره را حذف کند (برای آزاد کردن حافظه / &quot;جمع آوری زباله&quot;) و همچنین نشانگر (در &quot;والد&quot; آن گره) که به گره مورد نظر شما برای حذف اشاره دارد را حذف کنید.,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).",Heu de suprimir la informació que conté el node (per alliberar memòria / &quot;recollida d&#39;escombraries&quot;) i suprimir també el punter (al &quot;pare&quot; d&#39;aquest node) que apunta al node que voleu suprimir.,Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).",Морате избрисати информације које садржи чвор (да бисте ослободили меморију / „скупљање смећа“) и такође избрисати показивач (у „родитељу“ тог чвора) који указује на чвор који желите да избришете.,Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).",Harus menghapus informasi yang ada di dalam node (untuk mengosongkan memori / &quot;pengumpulan sampah&quot;) dan juga menghapus pointer (di &quot;induk&quot; node tersebut) yang mengarah ke node yang ingin Anda hapus.,Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).",Må slette informasjonen som noden inneholder (for å frigjøre minne / &quot;søppeloppsamling&quot;) og også slette pekeren (i den nodens &quot;foreldre&quot;) som peker på noden du vil slette.,이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,노드에 포함 된 정보를 삭제하고 (메모리 확보 / &quot;가비지 수집&quot;) 삭제하려는 노드를 가리키는 포인터 (해당 노드의 &quot;상위&quot;에서)도 삭제해야합니다.,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,"On poistettava solmun sisältämät tiedot (muistin vapauttamiseksi / &quot;roskakoriin&quot;) ja poistettava myös osoitin (kyseisen solmun &quot;vanhemmassa&quot;), joka osoittaa poistettavaan solmuun.",Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","Törölnie kell a csomópont által tartalmazott információkat (a memória felszabadításához / a &quot;szemétgyűjtéshez&quot;), és törölnie kell a törölni kívánt csomópontra mutató mutatót is (az adott csomópont &quot;szülőjében&quot;).",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,"Musíte odstranit informace, které uzel obsahuje (pro uvolnění paměti / „uvolňování paměti“), a také odstranit ukazatel (v „nadřazeném“ uzlu), který ukazuje na uzel, který chcete odstranit.",Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).","Morate izbrisati informacije koje sadrži čvor (da biste oslobodili memoriju / &quot;prikupljanje smeća&quot;), a također i izbrisati pokazivač (u &quot;roditelju&quot; tog čvora) koji pokazuje na čvor koji želite izbrisati."
155,155,370,2.6,A function prototype describes the class's public interface without providing how the function works. A function definition contains the inner workings of the function.,"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",What is the difference between a function prototype and a function definition?,4.5,"Ein Funktionsprototyp enthält die Funktionssignatur, dh den Namen der Funktion, den Rückgabetyp und den Parametertyp. Die Funktionsdefinition enthält den tatsächlichen Hauptteil der Funktion.",Was ist der Unterschied zwischen einem Funktionsprototyp und einer Funktionsdefinition?,"Ein Funktionsprototyp beschreibt die öffentliche Schnittstelle der Klasse, ohne anzugeben, wie die Funktion funktioniert. Eine Funktionsdefinition enthält das Innenleben der Funktion.",Unsa ang kalainan tali sa usa ka function prototype ug usa ka kahulugan nga pagpaandar?,"Ang usa ka function prototype adunay upod nga pirma sa pagpaandar, ie, ang ngalan sa pagpaandar, ang tipo sa pagbalik, ug ang tipo sa mga parameter. Ang kahulugan sa pagpaandar kauban ang tinuud nga lawas sa kalihokan.",Gilaraw sa usa ka prototype nga function ang pangpubliko nga interface sa klase nga wala gihatag kung giunsa ang pagpaandar sa kalihokan. Ang usa ka pasabut sa pag-andar adunay sulud nga sulud nga paggana sa pagpaandar.,Vad är skillnaden mellan en funktionsprototyp och en funktionsdefinition?,"En funktionsprototyp inkluderar funktionssignaturen, dvs namnet på funktionen, returtypen och parametertypen. Funktionsdefinitionen inkluderar funktionens faktiska kropp.",En funktionsprototyp beskriver klassens offentliga gränssnitt utan att tillhandahålla hur funktionen fungerar. En funktionsdefinition innehåller funktionens inre funktion.,Quelle est la différence entre un prototype de fonction et une définition de fonction?,"Un prototype de fonction comprend la signature de la fonction, c&#39;est-à-dire le nom de la fonction, le type de retour et le type des paramètres. La définition de fonction inclut le corps réel de la fonction.",Un prototype de fonction décrit l&#39;interface publique de la classe sans indiquer comment la fonction fonctionne. Une définition de fonction contient le fonctionnement interne de la fonction.,Wat is het verschil tussen een functie-prototype en een functiedefinitie?,"Een functieprototype bevat de functiehandtekening, dwz de naam van de functie, het retourtype en het type parameter. De functiedefinitie omvat de feitelijke inhoud van de functie.",Een functie-prototype beschrijft de openbare interface van de klasse zonder te vermelden hoe de functie werkt. Een functiedefinitie bevat de interne werking van de functie.,В чем разница между прототипом функции и определением функции?,"Прототип функции включает сигнатуру функции, т. Е. Имя функции, тип возвращаемого значения и тип параметров. Определение функции включает фактическое тело функции.","Прототип функции описывает открытый интерфейс класса, не указывая, как работает функция. Определение функции содержит внутреннюю работу функции.",Qual è la differenza tra un prototipo di funzione e una definizione di funzione?,"Un prototipo di funzione include la firma della funzione, cioè il nome della funzione, il tipo restituito e il tipo dei parametri. La definizione della funzione include il corpo effettivo della funzione.",Un prototipo di funzione descrive l&#39;interfaccia pubblica della classe senza fornire informazioni sul funzionamento della funzione. Una definizione di funzione contiene il funzionamento interno della funzione.,¿Cuál es la diferencia entre un prototipo de función y una definición de función?,"Un prototipo de función incluye la firma de la función, es decir, el nombre de la función, el tipo de retorno y el tipo de los parámetros. La definición de función incluye el cuerpo real de la función.",Un prototipo de función describe la interfaz pública de la clase sin proporcionar cómo funciona la función. Una definición de función contiene el funcionamiento interno de la función.,Jaka jest różnica między prototypem funkcji a definicją funkcji?,"Prototyp funkcji zawiera sygnaturę funkcji, tj. Nazwę funkcji, typ zwracanej wartości i typ parametrów. Definicja funkcji zawiera rzeczywistą treść funkcji.","Prototyp funkcji opisuje publiczny interfejs klasy, nie podając sposobu działania funkcji. Definicja funkcji zawiera wewnętrzne działanie funkcji.",Sự khác biệt giữa nguyên mẫu hàm và định nghĩa hàm là gì?,"Một nguyên mẫu hàm bao gồm chữ ký hàm, tức là tên của hàm, kiểu trả về và kiểu của tham số. Định nghĩa hàm bao gồm phần thân thực sự của hàm.",Một nguyên mẫu hàm mô tả giao diện công khai của lớp mà không cung cấp cách hoạt động của hàm. Một định nghĩa hàm chứa các hoạt động bên trong của hàm.,関数プロトタイプと関数定義の違いは何ですか？,関数プロトタイプには、関数のシグネチャ、つまり関数の名前、戻り値の型、およびパラメータの型が含まれています。関数定義には、関数の実際の本体が含まれます。,関数プロトタイプは、関数の動作方法を提供せずに、クラスのパブリックインターフェイスを記述します。関数定義には、関数の内部動作が含まれています。,函数原型和函数定义有什么区别？,函数原型包括函数签名，即函数名称，返回类型和参数类型。函数定义包括函数的实际主体。,函数原型描述了类的公共接口，但没有提供函数的工作方式。函数定义包含函数的内部工作原理。,ما هو الفرق بين النموذج الأولي للدالة وتعريف الوظيفة؟,يتضمن النموذج الأولي للوظيفة توقيع الوظيفة ، أي اسم الوظيفة ونوع الإرجاع ونوع المعلمات. يتضمن تعريف الوظيفة الجسم الفعلي للوظيفة.,يصف النموذج الأولي للوظيفة الواجهة العامة للفصل دون تقديم كيفية عمل الوظيفة. يحتوي تعريف الوظيفة على الأعمال الداخلية للوظيفة.,У чому різниця між прототипом функції та визначенням функції?,"Прототип функції включає підпис функції, тобто ім&#39;я функції, тип повернення та тип параметрів. Визначення функції включає фактичне тіло функції.","Прототип функції описує загальнодоступний інтерфейс класу, не вказуючи, як функція працює. Визначення функції містить внутрішню роботу функції.",Qual é a diferença entre um protótipo de função e uma definição de função?,"Um protótipo de função inclui a assinatura da função, ou seja, o nome da função, o tipo de retorno e o tipo dos parâmetros. A definição da função inclui o corpo real da função.",Um protótipo de função descreve a interface pública da classe sem fornecer como a função funciona. Uma definição de função contém o funcionamento interno da função.,تفاوت بین نمونه اولیه عملکرد و تعریف عملکرد چیست؟,نمونه اولیه تابع شامل امضای تابع است ، به عنوان مثال ، نام عملکرد ، نوع بازگشت و نوع پارامترها. تعریف عملکرد شامل بدنه واقعی عملکرد است.,نمونه اولیه تابع بدون ارائه نحوه عملکرد تابع ، رابط عمومی کلاس را توصیف می کند. تعریف تابع شامل عملکردهای داخلی تابع است.,Quina diferència hi ha entre un prototip de funció i una definició de funció?,"Un prototip de funció inclou la signatura de la funció, és a dir, el nom de la funció, el tipus de retorn i el tipus dels paràmetres. La definició de funció inclou el cos real de la funció.",Un prototip de funció descriu la interfície pública de la classe sense proporcionar com funciona la funció. Una definició de funció conté el funcionament intern de la funció.,Која је разлика између прототипа функције и дефиниције функције?,"Прототип функције укључује потпис функције, тј. Име функције, тип повратка и тип параметара. Дефиниција функције укључује стварно тело функције.",Прототип функције описује јавни интерфејс класе без навођења како функција функционише. Дефиниција функције садржи унутрашњи рад функције.,Apa perbedaan antara prototipe fungsi dan definisi fungsi?,"Prototipe fungsi mencakup tanda tangan fungsi, yaitu nama fungsi, jenis kembalian, dan jenis parameter. Definisi fungsi mencakup tubuh sebenarnya dari fungsi tersebut.",Prototipe fungsi mendeskripsikan antarmuka publik kelas tanpa memberikan cara kerja fungsi. Definisi fungsi berisi cara kerja bagian dalam dari fungsi tersebut.,Hva er forskjellen mellom en funksjonsprototype og en funksjonsdefinisjon?,"En funksjonsprototype inkluderer funksjonssignaturen, dvs. navnet på funksjonen, returtypen og parametertypen. Funksjonsdefinisjonen inkluderer funksjonens faktiske kropp.",En funksjonsprototype beskriver klassens offentlige grensesnitt uten å gi hvordan funksjonen fungerer. En funksjonsdefinisjon inneholder funksjonens indre funksjoner.,함수 프로토 타입과 함수 정의의 차이점은 무엇입니까?,"함수 프로토 타입에는 함수 시그니처, 즉 함수 이름, 반환 유형 및 매개 변수 유형이 포함됩니다. 함수 정의에는 함수의 실제 본문이 포함됩니다.",함수 프로토 타입은 함수 작동 방식을 제공하지 않고 클래스의 공용 인터페이스를 설명합니다. 함수 정의에는 함수의 내부 작업이 포함됩니다.,Mitä eroa on funktion prototyypin ja funktion määritelmän välillä?,"Funktion prototyyppi sisältää funktion allekirjoituksen, eli funktion nimen, palautustyypin ja parametrien tyypin. Funktion määritelmä sisältää funktion todellisen rungon.",Funktion prototyyppi kuvaa luokan julkisen käyttöliittymän toimittamatta toiminnon toimintaa. Funktion määritelmä sisältää funktion sisäisen toiminnan.,Mi a különbség a függvény prototípusa és a függvény definíciója között?,"A függvény prototípusa tartalmazza a függvény aláírását, azaz a függvény nevét, a visszatérés típusát és a paraméterek típusát. A függvénydefiníció magában foglalja a függvény tényleges törzsét.","A függvény prototípus leírja az osztály nyilvános felületét anélkül, hogy megadná a függvény működését. A függvénydefiníció a függvény belső működését tartalmazza.",Jaký je rozdíl mezi prototypem funkce a definicí funkce?,"Prototyp funkce zahrnuje podpis funkce, tj. Název funkce, návratový typ a typ parametrů. Definice funkce zahrnuje skutečné tělo funkce.","Prototyp funkce popisuje veřejné rozhraní třídy bez uvedení toho, jak funkce funguje. Definice funkce obsahuje vnitřní fungování funkce.",Koja je razlika između prototipa funkcije i definicije funkcije?,"Prototip funkcije uključuje potpis funkcije, tj. Ime funkcije, tip povratka i tip parametara. Definicija funkcije uključuje stvarno tijelo funkcije.","Prototip funkcije opisuje javni interfejs klase, ne navodeći kako funkcija funkcionira. Definicija funkcije sadrži unutarnji rad funkcije."
156,156,81,1.3,Existing classes can be reused Program maintenance and verifications are easy,Abstraction and reusability.,What are the main advantages associated with object-oriented programming?,4.0,Abstraktion und Wiederverwendbarkeit.,Was sind die Hauptvorteile der objektorientierten Programmierung?,Bestehende Klassen können wiederverwendet werden. Die Programmwartung und -überprüfung ist einfach,Unsa ang mga punoan nga bentaha nga adunay kalabotan sa object-oriented nga programa?,Abstraction ug reusability.,Ang mga adunay na klase mahimo’g magamit pag-usab ang pagpadayon sa Program ug ang mga pag-verify dali ra,Vilka är de största fördelarna med objektorienterad programmering?,Abstraktion och återanvändbarhet.,Befintliga klasser kan återanvändas Programunderhåll och verifieringar är enkla,Quels sont les principaux avantages associés à la programmation orientée objet?,Abstraction et réutilisabilité.,Les classes existantes peuvent être réutilisées La maintenance du programme et les vérifications sont faciles,Wat zijn de belangrijkste voordelen van objectgeoriënteerd programmeren?,Abstractie en herbruikbaarheid.,Bestaande klassen kunnen worden hergebruikt Programmaonderhoud en verificaties zijn eenvoudig,Каковы основные преимущества объектно-ориентированного программирования?,Абстракция и возможность повторного использования.,Существующие классы можно использовать повторно. Простота обслуживания и проверки программ.,Quali sono i principali vantaggi associati alla programmazione orientata agli oggetti?,Astrazione e riusabilità.,Le classi esistenti possono essere riutilizzate La manutenzione del programma e le verifiche sono facili,¿Cuáles son las principales ventajas asociadas con la programación orientada a objetos?,Abstracción y reutilización.,Las clases existentes se pueden reutilizar El mantenimiento del programa y las verificaciones son fáciles,Jakie są główne zalety programowania zorientowanego obiektowo?,Abstrakcja i możliwość ponownego wykorzystania.,Istniejące klasy można ponownie wykorzystać. Utrzymanie programu i weryfikacja są łatwe,Những ưu điểm chính liên quan đến lập trình hướng đối tượng là gì?,Tính trừu tượng và khả năng tái sử dụng.,Các lớp hiện có có thể được sử dụng lại Bảo trì và xác minh chương trình dễ dàng,オブジェクト指向プログラミングに関連する主な利点は何ですか？,抽象化と再利用性。,既存のクラスは再利用できますプログラムのメンテナンスと検証は簡単です,面向对象编程的主要优点是什么？,抽象和可重用性。,现有的类可以重复使用程序维护和验证很容易,ما هي المزايا الرئيسية المرتبطة بالبرمجة الشيئية؟,التجريد وإعادة الاستخدام.,يمكن إعادة استخدام الفصول الحالية. صيانة البرنامج وعمليات التحقق سهلة,Які основні переваги пов’язані з об’єктно-орієнтованим програмуванням?,Абстракція та багаторазове використання.,"Існуючі класи можуть бути використані повторно Обслуговування програми, а перевірки прості",Quais são as principais vantagens associadas à programação orientada a objetos?,Abstração e reutilização.,As classes existentes podem ser reutilizadas. A manutenção do programa e as verificações são fáceis,مزایای اصلی مرتبط با برنامه نویسی شی گرا چیست؟,انتزاع و استفاده مجدد.,از کلاسهای موجود می توان مجدداً استفاده کرد نگهداری برنامه و تأیید صحت آن آسان است,Quins són els principals avantatges associats a la programació orientada a objectes?,Abstracció i reutilització.,Es poden reutilitzar les classes existents El manteniment del programa i les verificacions són fàcils,Које су главне предности повезане са објектно оријентисаним програмирањем?,Апстракција и поновна употребљивост.,Постојеће класе се могу поново користити Одржавање програма и верификације су једноставне,Apa keuntungan utama yang terkait dengan pemrograman berorientasi objek?,Abstraksi dan dapat digunakan kembali.,Kelas yang ada dapat digunakan kembali Pemeliharaan program dan verifikasinya mudah,Hva er de viktigste fordelene knyttet til objektorientert programmering?,Abstraksjon og gjenbrukbarhet.,Eksisterende klasser kan gjenbrukes Programvedlikehold og bekreftelser er enkle,객체 지향 프로그래밍과 관련된 주요 이점은 무엇입니까?,추상화 및 재사용 성.,기존 클래스를 재사용 할 수 있습니다. 프로그램 유지 관리 및 검증이 쉽습니다.,Mitkä ovat olio-ohjelmoinnin tärkeimmät edut?,Abstraktio ja uudelleenkäytettävyys.,Nykyisiä luokkia voidaan käyttää uudelleen Ohjelman ylläpito ja todentaminen on helppoa,Melyek az objektum-orientált programozás fő előnyei?,Absztrakció és újrafelhasználhatóság.,A meglévő osztályok újrafelhasználhatók A program karbantartása és ellenőrzése egyszerű,Jaké jsou hlavní výhody spojené s objektově orientovaným programováním?,Abstrakce a opakovaná použitelnost.,Existující třídy lze znovu použít Údržba programu a ověření je snadné,Koje su glavne prednosti povezane sa objektno orijentisanim programiranjem?,Apstrakcija i ponovna upotrebljivost.,Postojeće klase se mogu ponovo koristiti Održavanje programa i provjere su jednostavne
157,157,1716,10.1,"A finite number of nodes such that there is one root node, each node has a certain number of children nodes, and each child is also a tree","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",What is a tree?,5.0,"Eine Sammlung von Knoten mit einem speziellen Knoten namens root und der Rest der Knoten sind in eine oder mehrere disjunkte Mengen unterteilt, wobei jede Menge ein Baum ist.",Was ist ein Baum?,"Eine endliche Anzahl von Knoten, so dass es einen Wurzelknoten gibt, jeder Knoten eine bestimmte Anzahl von untergeordneten Knoten hat und jedes Kind auch ein Baum ist",Unsa ang usa ka kahoy?,"Usa ka koleksyon sa mga node, nga adunay usa ka espesyal nga node nga gitawag ug ugat, ug ang nahabilin nga mga node gibahin sa usa o daghan pa nga dili magkauyon nga mga set, nga ang matag set usa ka kahoy.","Ang usa nga adunay katapusan nga numero sa mga node nga adunay usa ka root node, ang matag node adunay usa ka piho nga mga node sa mga bata, ug ang matag bata usa usab ka punoan.",Vad är ett träd?,"En samling noder, som har en speciell nod som kallas root, och resten av noderna är uppdelade i en eller flera separata uppsättningar, var och en uppsättning är ett träd.","Ett begränsat antal noder så att det finns en rotnod, varje nod har ett visst antal barnnoder och varje barn är också ett träd",Qu&#39;est-ce qu&#39;un arbre?,"Une collection de nœuds, qui a un nœud spécial appelé root, et le reste des nœuds sont partitionnés en un ou plusieurs ensembles disjoints, chaque ensemble étant un arbre.","Un nombre fini de nœuds tel qu&#39;il y a un nœud racine, chaque nœud a un certain nombre de nœuds enfants, et chaque enfant est aussi un arbre",Wat is een boom?,"Een verzameling knooppunten, die een speciaal knooppunt heeft dat root wordt genoemd, en de rest van de knooppunten is onderverdeeld in een of meer disjuncte sets, waarbij elke set een boom is.","Een eindig aantal knooppunten zodat er één hoofdknooppunt is, elk knooppunt een bepaald aantal onderliggende knooppunten en elk kind is ook een boom",Что такое дерево?,"Набор узлов, который имеет специальный узел, называемый корнем, а остальные узлы разделены на один или несколько непересекающихся наборов, каждый набор представляет собой дерево.","Конечное количество узлов, такое, что есть один корневой узел, каждый узел имеет определенное количество дочерних узлов, и каждый дочерний элемент также является деревом",Cos&#39;è un albero?,"Una raccolta di nodi, che ha un nodo speciale chiamato root, e il resto dei nodi è partizionato in uno o più insiemi disgiunti, ogni insieme è un albero.","Un numero finito di nodi tale che ci sia un nodo radice, ogni nodo ha un certo numero di nodi figli e ogni figlio è anche un albero",¿Qué es un árbol?,"Una colección de nodos, que tiene un nodo especial llamado raíz, y el resto de los nodos están divididos en uno o más conjuntos disjuntos, siendo cada conjunto un árbol.","Un número finito de nodos de manera que hay un nodo raíz, cada nodo tiene un cierto número de nodos hijos y cada hijo es también un árbol.",Co to jest drzewo?,"Zbiór węzłów, który ma specjalny węzeł zwany korzeniem, a pozostałe węzły są podzielone na jeden lub więcej rozłącznych zestawów, z których każdy jest drzewem.","Skończona liczba węzłów, taka że istnieje jeden węzeł główny, każdy węzeł ma określoną liczbę węzłów potomnych, a każde dziecko jest również drzewem",Cây là gì?,"Một tập hợp các nút, trong đó có một nút đặc biệt được gọi là gốc, và phần còn lại của các nút được phân chia thành một hoặc nhiều bộ rời rạc, mỗi bộ là một cây.","Một số hữu hạn các nút sao cho có một nút gốc, mỗi nút có một số nút con nhất định và mỗi nút con cũng là một cây",木とは何ですか？,ルートと呼ばれる特別なノードを持つノードのコレクションと、残りのノードは1つ以上の互いに素なセットに分割され、各セットはツリーになります。,ルートノードが1つあり、各ノードに特定の数の子ノードがあり、各子もツリーであるような有限数のノード,什么是树？,节点的集合，具有一个称为根的特殊节点，其余节点被划分为一个或多个不相交的集合，每个集合都是一棵树。,有限数量的节点，使得有一个根节点，每个节点具有一定数量的子节点，并且每个子节点也是一棵树,ما هي الشجرة؟,مجموعة من العقد ، التي لها عقدة خاصة تسمى الجذر ، ويتم تقسيم العقد المتبقية إلى مجموعة واحدة أو أكثر من المجموعات المنفصلة ، كل مجموعة عبارة عن شجرة.,عدد محدد من العقد بحيث تكون هناك عقدة جذر واحدة ، ولكل عقدة عدد معين من العقد الفرعية ، وكل فرع هو أيضًا شجرة,Що таке дерево?,"Колекція вузлів, яка має спеціальний вузол, який називається root, а решта вузлів розділені на один або кілька непересічних наборів, кожен набір являє собою дерево.","Кінцева кількість вузлів, така що є один кореневий вузол, кожен вузол має певну кількість дочірніх вузлів, і кожна дитина також є деревом",O que é uma árvore?,"Uma coleção de nós, que possui um nó especial denominado raiz, e o resto dos nós são particionados em um ou mais conjuntos disjuntos, cada conjunto sendo uma árvore.","Um número finito de nós, tal que haja um nó raiz, cada nó tem um certo número de nós filhos e cada filho também é uma árvore",درخت چیست؟,مجموعه ای از گره ها که دارای گره خاصی به نام root است و بقیه گره ها به یک یا چند مجموعه جدا از هم تقسیم می شوند که هر مجموعه یک درخت است.,تعداد محدودی از گره ها به گونه ای که یک گره ریشه وجود داشته باشد ، هر گره تعداد مشخصی از گره های کودکان را دارد و هر کودک نیز یک درخت است,Què és un arbre?,"Una col·lecció de nodes, que té un node especial anomenat arrel, i la resta de nodes estan particionats en un o més conjunts disjunts, cadascun dels quals és un arbre.","Un nombre finit de nodes tals que hi ha un node arrel, cada node té un nombre determinat de nodes fills i cada fill també és un arbre",Шта је дрво?,"Збирка чворова која има посебан чвор који се назива роот, а остатак чворова подељен је у један или више нераздвојених скупова, а сваки скуп је стабло.","Коначан број чворова такав да постоји један коренски чвор, сваки чвор има одређени број подређених чворова, а свако дете је такође стабло",Apakah pohon itu?,"Kumpulan node, yang memiliki node khusus yang disebut root, dan node lainnya dipartisi menjadi satu atau lebih set terpisah, setiap set menjadi pohon.","Sejumlah node terbatas sehingga ada satu node root, setiap node memiliki node turunan dalam jumlah tertentu, dan setiap node turunan juga merupakan pohon",Hva er et tre?,"En samling noder, som har en spesiell node kalt root, og resten av nodene er delt inn i ett eller flere usammenhengende sett, hvor hvert sett er et tre.","Et endelig antall noder slik at det er en rotnode, hver node har et visst antall barn noder, og hvert barn er også et tre",나무는 무엇입니까?,루트라는 특수 노드가있는 노드 모음과 나머지 노드는 하나 이상의 분리 된 집합으로 분할되며 각 집합은 트리입니다.,하나의 루트 노드가 있고 각 노드에는 특정 수의 자식 노드가 있으며 각 자식도 트리가되는 한정된 수의 노드,Mikä on puu?,"Solmujen kokoelma, jolla on erityinen solmu nimeltä root, ja muut solmut jaetaan yhteen tai useampaan disjointjoukkoon, joista kukin on puu.","Lopullinen määrä solmuja siten, että juurisolmu on yksi, jokaisessa solmussa on tietty määrä lapsisolmuja, ja jokainen lapsi on myös puu",Mi az a fa?,"Csomópontok gyűjteménye, amelynek van egy speciális, root nevű csomópontja, és a többi csomópont egy vagy több diszjunkt halmazba van felosztva, mindegyik halmaz egy fa.","Véges számú csomópont, oly módon, hogy egy gyökércsomópont van, minden csomópontnak van egy bizonyos számú gyermekcsomópontja, és minden gyermek egyben fa is",Co je to strom?,"Kolekce uzlů, která má speciální uzel zvaný root, a zbytek uzlů je rozdělen do jedné nebo více nespojených sad, přičemž každá sada je strom.","Konečný počet uzlů tak, že existuje jeden kořenový uzel, každý uzel má určitý počet podřízených uzlů a každé dítě je také strom",Šta je drvo?,"Zbirka čvorova koja ima poseban čvor koji se naziva root, a ostatak čvorova podijeljen je u jedan ili više nepodudarnih skupova, a svaki skup je stablo.","Konačan broj čvorova takav da postoji jedan korijenski čvor, svaki čvor ima određeni broj podređenih čvorova, a svako dijete je i stablo"
158,158,111,1.4,they beging to excute at main,At the main function.,Where do C++ programs begin to execute?,5.0,Bei der Hauptfunktion.,Wo beginnen C ++ - Programme mit der Ausführung?,"sie betteln darum, sich zu entschuldigen",Asa magsugod ang pagpatuman sa mga programa sa C ++?,Sa punoan nga kalihokan.,sila nagpakilimos sa excute sa punoan,Var börjar C ++ - program att köras?,Vid huvudfunktionen.,de ber om att excitera vid huvud,Où les programmes C ++ commencent-ils à s&#39;exécuter?,À la fonction principale.,ils veulent excuter au principal,Waar beginnen C ++ -programma&#39;s te worden uitgevoerd?,Bij de belangrijkste functie.,ze smeken om te excuseren,Где начинают выполняться программы на C ++?,В основной функции.,они клянутся в основном,Dove iniziano a essere eseguiti i programmi C ++?,Alla funzione principale.,supplicano di eccitare al principale,¿Dónde comienzan a ejecutarse los programas C ++?,En la función principal.,ellos están empezando a ejecutar en el principal,Gdzie programy C ++ zaczynają się wykonywać?,W głównej funkcji.,w zasadzie błagali o wytrysk,Các chương trình C ++ bắt đầu thực thi ở đâu?,Tại chức năng chính.,họ cố gắng để xuất sắc ở chính,C ++プログラムはどこから実行を開始しますか？,主な機能で。,彼らはメインで実行するように懇願します,C ++程序在哪里开始执行？,在主要功能上。,他们主要是要表演,من أين تبدأ برامج C ++ في التنفيذ؟,في الوظيفة الرئيسية.,إنهم يبتعدون عن الإثارة الرئيسية,Де програми С ++ починають виконуватися?,На головній функції.,вони просять вигнати в основному,Onde os programas C ++ começam a ser executados?,Na função principal.,eles imploram para ter sucesso no principal,برنامه های C ++ از کجا شروع به اجرا می کنند؟,در عملکرد اصلی.,آنها به طور عمده التماس می کنند,On comencen a executar-se els programes C ++?,A la funció principal.,es demanen excusar principalment,Где почињу да се извршавају програми Ц ++?,На главној функцији.,молећи да избаве углавном,Di mana program C ++ mulai dijalankan?,Di fungsi utama.,mereka memohon untuk keluar di utama,Hvor begynner C ++ -programmer å kjøres?,Ved hovedfunksjonen.,de ber om å ekskludere i hovedtrekk,C ++ 프로그램은 어디에서 실행되기 시작합니까?,주요 기능에서.,그들은 메인에서 발을 구걸,Missä C ++ -ohjelmat alkavat suorittaa?,Päätoiminnossa.,he rukoilevat pääasiassa,Hol kezdődnek a C ++ programok futtatása?,A fő funkciónál.,főként felmentésért könyörögnek,Kde se programy C ++ začínají spouštět?,Na hlavní funkci.,prosili o hlavní výkřik,Gdje se počinju izvršavati programi C ++?,Na glavnoj funkciji.,oni uglavnom pokušavaju da me izbace
159,159,1701,10.1,"A set of one or more nodes that are hierarchically organized, with one special Ã¢â¬ÅrootÃ¢â¬Â node.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",What is a tree?,4.0,"Eine Sammlung von Knoten mit einem speziellen Knoten namens root und der Rest der Knoten sind in eine oder mehrere disjunkte Mengen unterteilt, wobei jede Menge ein Baum ist.",Was ist ein Baum?,"Ein Satz von einem oder mehreren Knoten, die hierarchisch organisiert sind, mit einem speziellen Wurzelknoten.",Unsa ang usa ka kahoy?,"Usa ka koleksyon sa mga node, nga adunay usa ka espesyal nga node nga gitawag ug ugat, ug ang nahabilin nga mga node gibahin sa usa o daghan pa nga dili magkauyon nga mga set, nga ang matag set usa ka kahoy.","Usa ka hugpong sa usa o daghan pa nga mga node nga organisado nga hierarchically, nga adunay usa ka espesyal nga Ã ¢ â‚¬Å “rootÃ ¢ â‚¬Â node.",Vad är ett träd?,"En samling noder, som har en speciell nod som kallas root, och resten av noderna är uppdelade i en eller flera separata uppsättningar, var och en uppsättning är ett träd.","En uppsättning av en eller flera noder som är hierarkiskt organiserade, med en speciell Ã ¢ â‚¬Å “rootÃ ¢ â‚¬Â-nod.",Qu&#39;est-ce qu&#39;un arbre?,"Une collection de nœuds, qui a un nœud spécial appelé root, et le reste des nœuds sont partitionnés en un ou plusieurs ensembles disjoints, chaque ensemble étant un arbre.","Un ensemble d&#39;un ou de plusieurs nœuds qui sont organisés hiérarchiquement, avec un nœud spécial Ã ¢ â‚¬Å “rootÃ ¢ â‚¬Â.",Wat is een boom?,"Een verzameling knooppunten, die een speciaal knooppunt heeft dat root wordt genoemd, en de rest van de knooppunten is onderverdeeld in een of meer disjuncte sets, waarbij elke set een boom is.","Een set van een of meer knooppunten die hiërarchisch zijn georganiseerd, met één speciaal Ã ¢ â‚¬Å “rootâ ¢ â‚¬Â knooppunt.",Что такое дерево?,"Набор узлов, который имеет специальный узел, называемый корнем, а остальные узлы разделены на один или несколько непересекающихся наборов, каждый набор представляет собой дерево.","Набор из одного или нескольких узлов, которые организованы иерархически, с одним специальным узлом â‚¬Å «rootÃ ¢ â».",Cos&#39;è un albero?,"Una raccolta di nodi, che ha un nodo speciale chiamato root, e il resto dei nodi è partizionato in uno o più insiemi disgiunti, ogni insieme è un albero.","Un insieme di uno o più nodi che sono organizzati gerarchicamente, con uno speciale nodo &quot;root&quot;.",¿Qué es un árbol?,"Una colección de nodos, que tiene un nodo especial llamado raíz, y el resto de los nodos están divididos en uno o más conjuntos disjuntos, siendo cada conjunto un árbol.","Un conjunto de uno o más nodos que están organizados jerárquicamente, con un nodo especial Ã ¢ â‚¬Å “rootÃ ¢ â‚¬Â.",Co to jest drzewo?,"Zbiór węzłów, który ma specjalny węzeł zwany korzeniem, a pozostałe węzły są podzielone na jeden lub więcej rozłącznych zestawów, z których każdy jest drzewem.","Zbiór jednego lub więcej węzłów, które są uporządkowane hierarchicznie, z jednym specjalnym węzłem „korzeń”.",Cây là gì?,"Một tập hợp các nút, trong đó có một nút đặc biệt được gọi là gốc, và phần còn lại của các nút được phân chia thành một hoặc nhiều bộ rời rạc, mỗi bộ là một cây.","Một tập hợp gồm một hoặc nhiều nút được tổ chức theo thứ bậc, với một nút gốc đặc biệt &quot;rootÃ ¢ â‚¬Â&quot;.",木とは何ですか？,ルートと呼ばれる特別なノードを持つノードのコレクションと、残りのノードは1つ以上の互いに素なセットに分割され、各セットはツリーになります。,階層的に編成された1つ以上のノードのセットで、1つの特別な「ルート」ノードがあります。,什么是树？,节点的集合，具有一个称为根的特殊节点，其余节点被划分为一个或多个不相交的集合，每个集合都是一棵树。,一组按层次结构组织的一个或多个节点，带有一个特殊的，root﹑root﹑，节点。,ما هي الشجرة؟,مجموعة من العقد ، التي لها عقدة خاصة تسمى الجذر ، ويتم تقسيم العقد المتبقية إلى مجموعة واحدة أو أكثر من المجموعات المنفصلة ، كل مجموعة عبارة عن شجرة.,مجموعة من عقد واحدة أو أكثر منظمة بشكل هرمي ، مع عقدة جذر خاصة واحدة.,Що таке дерево?,"Колекція вузлів, яка має спеціальний вузол, який називається root, а решта вузлів розділені на один або кілька непересічних наборів, кожен набір являє собою дерево.","Набір з одного або декількох вузлів, які є ієрархічно впорядкованими, з одним спеціальним &quot;кореневим&quot; вузлом.",O que é uma árvore?,"Uma coleção de nós, que possui um nó especial denominado raiz, e o resto dos nós são particionados em um ou mais conjuntos disjuntos, cada conjunto sendo uma árvore.","Um conjunto de um ou mais nós que são organizados hierarquicamente, com um nó especial Ã ¢ â‚¬Å “raizÂ ¢ â‚¬Â.",درخت چیست؟,مجموعه ای از گره ها که دارای گره خاصی به نام root است و بقیه گره ها به یک یا چند مجموعه جدا از هم تقسیم می شوند که هر مجموعه یک درخت است.,مجموعه ای از یک یا چند گره که به صورت سلسله مراتبی سازمان یافته اند ، با یک گره خاص Ã ¢ â‚¬Å &quot;rootÃ ¢&quot;.,Què és un arbre?,"Una col·lecció de nodes, que té un node especial anomenat arrel, i la resta de nodes estan particionats en un o més conjunts disjunts, cadascun dels quals és un arbre.","Conjunt d’un o més nodes que s’organitzen jeràrquicament, amb un node especial “root”.",Шта је дрво?,"Збирка чворова која има посебан чвор који се назива роот, а остатак чворова подељен је у један или више нераздвојених скупова, а сваки скуп је стабло.","Скуп једног или више чворова који су хијерархијски организовани, са једним посебним „роот” чвором.",Apakah pohon itu?,"Kumpulan node, yang memiliki node khusus yang disebut root, dan node lainnya dipartisi menjadi satu atau lebih set terpisah, setiap set menjadi pohon.","Satu set dari satu atau lebih node yang diatur secara hierarkis, dengan satu node Ã ¢ â‚¬Å “rootÃ ¢ â‚¬Â khusus.",Hva er et tre?,"En samling noder, som har en spesiell node kalt root, og resten av nodene er delt inn i ett eller flere usammenhengende sett, hvor hvert sett er et tre.","Et sett med en eller flere noder som er hierarkisk organisert, med en spesiell Ã ¢ â‚¬Å “rootÃ ¢ â‚¬Â node.",나무는 무엇입니까?,루트라는 특수 노드가있는 노드 모음과 나머지 노드는 하나 이상의 분리 된 집합으로 분할되며 각 집합은 트리입니다.,하나의 특수 Ã ¢ â‚¬Å“rootÃ ¢ â‚¬Â 노드와 함께 계층 적으로 구성된 하나 이상의 노드 세트.,Mikä on puu?,"Solmujen kokoelma, jolla on erityinen solmu nimeltä root, ja muut solmut jaetaan yhteen tai useampaan disjointjoukkoon, joista kukin on puu.","Joukko yhdestä tai useammasta hierarkkisesti järjestetystä solmusta, joilla on yksi erityinen â € œ root&#39;-solmu.",Mi az a fa?,"Csomópontok gyűjteménye, amelynek van egy speciális, root nevű csomópontja, és a többi csomópont egy vagy több diszjunkt halmazba van felosztva, mindegyik halmaz egy fa.","Egy vagy több, hierarchikusan rendezett csomópont halmaza, egy speciális â € “rootâ node-tal.",Co je to strom?,"Kolekce uzlů, která má speciální uzel zvaný root, a zbytek uzlů je rozdělen do jedné nebo více nespojených sad, přičemž každá sada je strom.","Sada jednoho nebo více uzlů, které jsou hierarchicky uspořádány, s jedním speciálním uzlem „root“.",Šta je drvo?,"Zbirka čvorova koja ima poseban čvor koji se naziva root, a ostatak čvorova podijeljen je u jedan ili više nepodudarnih skupova, a svaki skup je stablo.","Skup od jednog ili više čvorova koji su hijerarhijski organizirani, s jednim posebnim â € œkorijenskimÃ čvorom."
160,160,1963,11.4,"The function's name, as well as what it returns and what it accepts.","The name of the function and the list of parameters, including their types.",What is a function signature?,5.0,Der Name der Funktion und die Liste der Parameter einschließlich ihrer Typen.,Was ist eine Funktionssignatur?,Der Name der Funktion sowie was sie zurückgibt und was sie akzeptiert.,Unsa ang usa ka pirma sa pag-andar?,"Ang ngalan sa pagpaandar ug lista sa mga parameter, lakip ang ilang mga lahi.","Ang ngalan sa function, ingon man kung unsa ang gibalik niini ug kung unsa ang gidawat niini.",Vad är en funktionssignatur?,"Funktionens namn och listan med parametrar, inklusive deras typer.",Funktionens namn samt vad den returnerar och vad den accepterar.,Qu&#39;est-ce qu&#39;une signature de fonction?,"Le nom de la fonction et la liste des paramètres, y compris leurs types.","Le nom de la fonction, ainsi que ce qu&#39;elle renvoie et ce qu&#39;elle accepte.",Wat is een functiehandtekening?,"De naam van de functie en de lijst met parameters, inclusief hun typen.","De naam van de functie, evenals wat deze retourneert en wat deze accepteert.",Что такое сигнатура функции?,"Имя функции и список параметров, включая их типы.","Имя функции, а также то, что она возвращает и что принимает.",Cos&#39;è una firma di funzione?,"Il nome della funzione e l&#39;elenco dei parametri, inclusi i loro tipi.","Il nome della funzione, cosa restituisce e cosa accetta.",¿Qué es una firma de función?,"El nombre de la función y la lista de parámetros, incluidos sus tipos.","El nombre de la función, así como lo que devuelve y lo que acepta.",Co to jest podpis funkcji?,"Nazwa funkcji i lista parametrów, w tym ich typy.","Nazwa funkcji oraz to, co zwraca i co akceptuje.",Chữ ký hàm là gì?,"Tên của hàm và danh sách các tham số, bao gồm cả loại của chúng.","Tên của hàm, cũng như những gì nó trả về và những gì nó chấp nhận.",関数シグネチャとは何ですか？,関数の名前と、タイプを含むパラメーターのリスト。,関数の名前、および関数が返すものと受け入れるもの。,什么是功能签名？,函数的名称和参数列表，包括它们的类型。,函数的名称，以及它返回什么和接受什么。,ما هو توقيع الوظيفة؟,اسم الوظيفة وقائمة المعلمات ، بما في ذلك أنواعها.,اسم الوظيفة وما تعيده وما يقبله.,Що таке підпис функції?,"Назва функції та перелік параметрів, включаючи їх типи.","Назва функції, а також те, що вона повертає та що приймає.",O que é uma assinatura de função?,"O nome da função e a lista de parâmetros, incluindo seus tipos.","O nome da função, bem como o que ela retorna e o que aceita.",امضای تابع چیست؟,نام عملکرد و لیست پارامترها ، از جمله انواع آنها.,نام تابع و همچنین آنچه برمی گرداند و آنچه را می پذیرد.,Què és una signatura de funció?,"El nom de la funció i la llista de paràmetres, inclosos els seus tipus.","El nom de la funció, així com el que retorna i el que accepta.",Шта је потпис функције?,"Назив функције и листа параметара, укључујући њихове типове.","Име функције, као и оно што враћа и шта прихвата.",Apa itu tanda tangan fungsi?,"Nama fungsi dan daftar parameter, termasuk tipenya.","Nama fungsi, apa yang dikembalikannya dan apa yang diterimanya.",Hva er en funksjonssignatur?,"Navnet på funksjonen og listen over parametere, inkludert typer.","Funksjonens navn, samt hva den returnerer og hva den godtar.",함수 서명이란 무엇입니까?,함수 이름 및 유형을 포함한 매개 변수 목록.,"함수의 이름, 반환되는 내용 및 허용되는 내용.",Mikä on funktion allekirjoitus?,"Funktion nimi ja parametrien luettelo, mukaan lukien niiden tyypit.",Funktion nimi sekä mitä se palauttaa ja mitä se hyväksyy.,Mi a függvény aláírása?,"A függvény neve és a paraméterek listája, beleértve azok típusait is.","A függvény neve, valamint az, hogy mit ad vissza és mit fogad el.",Co je podpis funkce?,"Název funkce a seznam parametrů, včetně jejich typů.","Název funkce a také to, co vrací a co přijímá.",Što je potpis funkcije?,"Naziv funkcije i lista parametara, uključujući njihove tipove.","Ime funkcije, kao i ono što vraća i što prihvaća."
161,161,2328,12.6,"A queue is a data structure that holds a set of objects, which has a FIFO (first in first out) priority.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,5.0,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Eine Warteschlange ist eine Datenstruktur, die eine Reihe von Objekten enthält, die eine FIFO-Priorität (First In First Out) haben.",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,"Ang usa ka pila mao ang usa ka istraktura sa datos nga adunay usa ka hugpong nga mga butang, nga adunay panguna nga FIFO (una sa una nga pagawas).",Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,En kö är en datastruktur som innehåller en uppsättning objekt som har en FIFO-prioritet (först in först ut).,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.","Une file d&#39;attente est une structure de données qui contient un ensemble d&#39;objets, qui a une priorité FIFO (premier entré, premier sorti).",Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,"Een wachtrij is een gegevensstructuur die een set objecten bevat, die een FIFO-prioriteit (first in first out) heeft.",Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","Очередь - это структура данных, которая содержит набор объектов с приоритетом FIFO (первым пришел - первым ушел).",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,"Una coda è una struttura dati che contiene un insieme di oggetti, che ha una priorità FIFO (first in first out).",¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.","Una cola es una estructura de datos que contiene un conjunto de objetos, que tiene una prioridad FIFO (primero en entrar, primero en salir).",Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","Kolejka to struktura danych zawierająca zbiór obiektów, które mają priorytet FIFO (pierwsze weszło, pierwsze wyszło).",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,Hàng đợi là một cấu trúc dữ liệu chứa một tập hợp các đối tượng có ưu tiên FIFO (nhập trước xuất trước).,キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,キューは、FIFO（先入れ先出し）優先順位を持つオブジェクトのセットを保持するデータ構造です。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,队列是一种数据结构，其中包含一组对象，这些对象具有FIFO（先进先出）优先级。,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,قائمة الانتظار هي بنية بيانات تحتوي على مجموعة من الكائنات ، والتي لها أولوية FIFO (أول ما يخرج أولاً).,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","Черга - це структура даних, що містить набір об’єктів, яка має пріоритет FIFO (перший у першому вихід).",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.","Uma fila é uma estrutura de dados que contém um conjunto de objetos, que tem uma prioridade FIFO (primeiro a entrar, primeiro a sair).",صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,صف یک ساختار داده است که مجموعه ای از اشیا holds را در خود جای می دهد و دارای اولویت FIFO (اولین بار در اولین بار از اول) است.,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,Una cua és una estructura de dades que conté un conjunt d’objectes que tenen una prioritat FIFO (primer a primer que surt).,Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,Ред је структура података која садржи скуп објеката који има ФИФО (први улаз први излаз) приоритет.,Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,"Antrian adalah struktur data yang menampung sekumpulan objek, yang memiliki prioritas FIFO (pertama masuk pertama keluar).",Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,"En kø er en datastruktur som inneholder et sett med objekter, som har en FIFO-prioritet (først inn først ut).",대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,큐는 FIFO (선입 선출) 우선 순위를 갖는 오브젝트 세트를 보유하는 데이터 구조입니다.,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","Jono on tietorakenne, joka pitää joukon objekteja, joilla on FIFO (first in first out) prioriteetti.",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","A várakozási sor egy olyan adatszerkezet, amely objektumkészletet tartalmaz, és amelynek FIFO (first in first out) prioritása van.",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","Fronta je datová struktura, která obsahuje sadu objektů, která má prioritu FIFO (first in first out).",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,Red je struktura podataka koja sadrži skup objekata koji ima FIFO (prvi ulaz prvi izlaz) prioritet.
162,162,2101,11.8,"string of characters that is read into a variable of type string includes,",The char[] will automatically add a null \0 character at the end of the string.,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,1.5,Das Zeichen [] fügt am Ende der Zeichenfolge automatisch ein Nullzeichen \ 0 hinzu.,"Was ist der Hauptunterschied zwischen einer Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, und einer Variablen vom Typ char []?","Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, enthält:",Unsa ang punoan nga kalainan tali sa usa ka hilo sa mga karakter nga mabasa sa usa ka variable sa type string kumpara sa variable sa type char []?,Ang char [] awtomatikong magdugang usa ka null \ 0 nga karakter sa katapusan sa pisi.,"hilo sa mga karakter nga mabasa sa usa ka pagbag-o sa tipo sa string nga adunay,",Vad är den största skillnaden mellan en teckensträng som läses in i en variabel av typsträng kontra en variabel av typen char []?,Tecknet [] lägger automatiskt till ett null \ 0-tecken i slutet av strängen.,"teckensträng som läses in i en variabel av typsträng inkluderar,",Quelle est la principale différence entre une chaîne de caractères lue dans une variable de type string et une variable de type char []?,Le char [] ajoutera automatiquement un caractère nul \ 0 à la fin de la chaîne.,"chaîne de caractères lue dans une variable de type string comprend,",Wat is het belangrijkste verschil tussen een reeks tekens die wordt ingelezen in een variabele van het type string versus een variabele van het type char []?,Het teken [] voegt automatisch een nul \ 0 teken toe aan het einde van de string.,"tekenreeks die wordt ingelezen in een variabele van het type tekenreeks omvat,","В чем основное отличие между строкой символов, считываемой в переменную типа string, и переменной типа char []?",Char [] автоматически добавит нулевой символ \ 0 в конец строки.,"строка символов, которая считывается в переменную типа string, включает,",Qual è la principale differenza tra una stringa di caratteri che viene letta in una variabile di tipo stringa e una variabile di tipo char []?,Il carattere [] aggiungerà automaticamente un carattere null \ 0 alla fine della stringa.,"stringa di caratteri che viene letta in una variabile di tipo stringa include,",¿Cuál es la principal diferencia entre una cadena de caracteres que se lee en una variable de tipo cadena y una variable de tipo char []?,El char [] agregará automáticamente un carácter nulo \ 0 al final de la cadena.,"cadena de caracteres que se lee en una variable de tipo cadena incluye,","Jaka jest główna różnica między ciągiem znaków, który jest wczytywany do zmiennej typu string, a zmienną typu char []?",Znak [] automatycznie doda znak null \ 0 na końcu ciągu.,"ciąg znaków, który jest wczytywany do zmiennej typu ciąg zawiera,",Sự khác biệt chính giữa một chuỗi ký tự được đọc thành một biến kiểu chuỗi so với một biến kiểu char [] là gì?,Char [] sẽ tự động thêm ký tự null \ 0 vào cuối chuỗi.,"chuỗi ký tự được đọc thành một biến kiểu chuỗi bao gồm,",string型の変数とchar []型の変数に読み込まれる文字列の主な違いは何ですか？,char []は、文字列の最後にnull \ 0文字を自動的に追加します。,string型の変数に読み込まれる文字列には、,读入string类型的变量与char []类型的变量的字符串之间的主要区别是什么？,char []将在字符串的末尾自动添加一个空\ 0字符。,读入string类型的变量的字符串，包括：,ما هو الفرق الرئيسي بين سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة مقابل متغير من النوع char []؟,سيضيف الحرف [] تلقائيًا حرفًا فارغًا \ 0 في نهاية السلسلة.,تتضمن سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة ،,"Яка основна різниця між рядком символів, який зчитується у змінну типу string від змінної типу char []?",Char [] автоматично додасть нульовий символ \ 0 в кінці рядка.,"рядок символів, який читається у змінну типу string, включає,",Qual é a principal diferença entre uma string de caracteres que é lida em uma variável do tipo string e uma variável do tipo char []?,O char [] adicionará automaticamente um caractere nulo \ 0 no final da string.,"string de caracteres que é lida em uma variável do tipo string inclui,",تفاوت اصلی یک رشته از کاراکترها در یک متغیر از نوع نوع در مقابل یک متغیر از نوع char [] چیست؟,char [] به طور خودکار در انتهای رشته یک کاراکتر null \ 0 اضافه می کند.,رشته ای از کاراکترها که در متغیر نوع رشته خوانده می شود ،,Quina és la diferència principal entre una cadena de caràcters que es llegeix en una variable de tipus cadena versus una variable de tipus char []?,El caràcter [] afegirà automàticament un caràcter \ 0 nul al final de la cadena.,"inclou una cadena de caràcters que es llegeix en una variable de tipus cadena,",Која је главна разлика између низа знакова који се читају у променљиву типа стринг у односу на променљиву типа цхар []?,Цхар [] ће аутоматски додати нулл \ 0 знак на крају низа.,"низ знакова који се чита у променљиву типа стринг укључује,",Apa perbedaan utama antara string karakter yang dibaca menjadi variabel tipe string versus variabel tipe char []?,Karakter [] secara otomatis akan menambahkan karakter null \ 0 di akhir string.,"string karakter yang dibaca menjadi variabel tipe string termasuk,",Hva er hovedforskjellen mellom en streng med tegn som leses inn i en variabel av typen streng versus en variabel av typen char []?,Char [] vil automatisk legge til et null \ 0 tegn på slutten av strengen.,"streng med tegn som blir lest inn i en variabel av typen streng inkluderer,",문자열 유형의 변수와 char [] 유형의 변수로 읽어들이는 문자열의 주요 차이점은 무엇입니까?,char []는 문자열 끝에 null \ 0 문자를 자동으로 추가합니다.,string 유형의 변수로 읽어들이는 문자열에는 다음이 포함됩니다.,"Mikä on tärkein ero merkkijonossa, joka luetaan merkkijonon muuttujaksi tyypin char [] muuttujaan?",Char [] lisää merkkijonon loppuun tyhjän merkin 0.,"merkkijono, joka luetaan muuttujaksi tyypin merkkijono sisältää,","Mi a fő különbség a karakterláncok között, amelyeket string típusú változóba olvasnak, és a char [] típusú változókba?",A char [] automatikusan hozzáad egy null \ 0 karaktert a karakterlánc végéhez.,"Karaktersorozat, amelyet egy típusú változóba beolvashatunk, a következőket tartalmazza:","Jaký je hlavní rozdíl mezi řetězcem znaků, který je načten do proměnné typu řetězec oproti proměnné typu char []?",Znak [] automaticky přidá znak null \ 0 na konec řetězce.,"řetězec znaků, který je načten do proměnné typu řetězec obsahuje,",Koja je glavna razlika između niza znakova koji se čitaju u varijablu tipa string u odnosu na varijablu tipa char []?,Char [] automatski će dodati null \ 0 znak na kraju niza.,"niz znakova koji se čita u varijablu tipa string uključuje,"
163,163,119,1.5,"Variable is a location in the computer's memory, in which a value can be stored and later can retrieve that value.",A location in memory that can store a value.,What is a variable?,5.0,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,"Variable ist ein Ort im Speicher des Computers, an dem ein Wert gespeichert und später abgerufen werden kann.",Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,"Ang variable usa ka lokasyon sa memorya sa kompyuter, diin mahimong tipigan ang usa ka kantidad ug pagkahuman makuha ang kana nga kantidad.",Vad är en variabel?,En plats i minnet som kan lagra ett värde.,"Variabel är en plats i datorns minne, där ett värde kan lagras och senare kan hämta det värdet.",Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,"La variable est un emplacement dans la mémoire de l&#39;ordinateur, dans lequel une valeur peut être stockée et plus tard peut récupérer cette valeur.",Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,"Variabele is een locatie in het geheugen van de computer, waarin een waarde kan worden opgeslagen en later kan worden opgehaald.",Что такое переменная?,"Место в памяти, в котором может храниться значение.","Переменная - это место в памяти компьютера, в котором значение может быть сохранено, а затем может быть получено это значение.",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,"La variabile è una posizione nella memoria del computer, in cui un valore può essere memorizzato e successivamente può recuperare quel valore.",¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,"La variable es una ubicación en la memoria de la computadora, en la que se puede almacenar un valor y luego recuperar ese valor.",Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.","Zmienna to lokalizacja w pamięci komputera, w której można zapisać wartość, a później ją pobrać.",Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,"Biến là một vị trí trong bộ nhớ của máy tính, trong đó một giá trị có thể được lưu trữ và sau này có thể lấy lại giá trị đó.",変数とは何ですか？,値を格納できるメモリ内の場所。,変数は、コンピュータのメモリ内の場所であり、値を格納し、後でその値を取得できます。,什么是变量？,内存中可以存储值的位置。,变量是计算机内存中的一个位置，可以在其中存储值，以后可以检索该值。,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,المتغير هو موقع في ذاكرة الكمبيوتر ، حيث يمكن تخزين قيمة ويمكن لاحقًا استرداد هذه القيمة.,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","Змінна - це місце в пам&#39;яті комп&#39;ютера, в якому значення може зберігатися, а пізніше може отримати це значення.",O que é uma variável?,Um local na memória que pode armazenar um valor.,"Variável é um local na memória do computador, no qual um valor pode ser armazenado e posteriormente recuperado esse valor.",متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,متغیر مکانی در حافظه رایانه است که در آن می توان مقداری را ذخیره کرد و بعداً می تواند آن مقدار را بازیابی کند.,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,"La variable és una ubicació a la memòria de l&#39;ordinador, en la qual es pot emmagatzemar un valor i posteriorment pot recuperar-lo.",Шта је променљива?,Локација у меморији која може да ускладишти вредност.,"Променљива је локација у меморији рачунара, у којој се вредност може сачувати, а касније може преузети ту вредност.",Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,"Variabel adalah sebuah lokasi di dalam memori komputer, di mana suatu nilai dapat disimpan dan kemudian dapat diambil kembali nilainya.",Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,"Variabel er et sted i datamaskinens minne, der en verdi kan lagres og senere kan hente den verdien.",변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,변수는 값을 저장하고 나중에 해당 값을 검색 할 수있는 컴퓨터 메모리의 위치입니다.,Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.","Muuttuja on paikka tietokoneen muistissa, johon arvo voidaan tallentaa ja myöhemmin hakea arvo.",Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.","A változó a számítógép memóriájában található hely, ahol egy érték tárolható, és később visszakereshető.",Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.","Proměnná je umístění v paměti počítače, do kterého lze uložit hodnotu a později ji lze načíst.",Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,"Varijabla je mjesto u memoriji računara, na kojem se vrijednost može pohraniti, a kasnije može dohvatiti tu vrijednost."
164,164,2410,12.9,"You search the tree for the node using recursion. When you find the node, you determine whether it is a leaf or a internal node. If it is a leaf, you just delete it and set the parent pointer to that node to NULL. If it is a  node, you replace the node with either of the children nodes.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,4.0,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,"Sie durchsuchen den Baum mithilfe der Rekursion nach dem Knoten. Wenn Sie den Knoten finden, bestimmen Sie, ob es sich um ein Blatt oder einen internen Knoten handelt. Wenn es sich um ein Blatt handelt, löschen Sie es einfach und setzen den übergeordneten Zeiger auf diesen Knoten auf NULL. Wenn es sich um einen Knoten handelt, ersetzen Sie den Knoten durch einen der untergeordneten Knoten.",Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).","Gipangita nimo ang punoan alang sa node gamit ang recursion. Kung nakit-an nimo ang node, mahibal-an nimo kung kini usa ka dahon o us aka internal node. Kung kini usa ka dahon, imo ra kini gitangtang ug gibutang ang parent pointer sa kana nga node ngadto sa NULL. Kung kini usa ka node, imong ilisan ang node sa bisan kinsa nga mga node sa bata.",Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,Du söker i noden med hjälp av rekursion. När du hittar noden bestämmer du om det är ett blad eller en intern nod. Om det är ett blad tar du bara bort det och ställer in den överordnade pekaren till den noden till NULL. Om det är en nod ersätter du noden med någon av barnens noder.,Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).","Vous recherchez le nœud dans l&#39;arborescence à l&#39;aide de la récursivité. Lorsque vous trouvez le nœud, vous déterminez s&#39;il s&#39;agit d&#39;une feuille ou d&#39;un nœud interne. S&#39;il s&#39;agit d&#39;une feuille, supprimez-la simplement et définissez le pointeur parent vers ce nœud sur NULL. S&#39;il s&#39;agit d&#39;un nœud, vous remplacez le nœud par l&#39;un des nœuds enfants.",Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,"U zoekt in de boom naar het knooppunt met behulp van recursie. Wanneer u het knooppunt vindt, bepaalt u of het een blad of een intern knooppunt is. Als het een blad is, verwijdert u het gewoon en stelt u de bovenliggende pointer naar dat knooppunt in op NULL. Als het een knooppunt is, vervangt u het knooppunt door een van de onderliggende knooppunten.",Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","Вы ищите узел в дереве с помощью рекурсии. Когда вы находите узел, вы определяете, является ли он листом или внутренним узлом. Если это лист, вы просто удалите его и установите для родительского указателя на этот узел значение NULL. Если это узел, вы заменяете его одним из дочерних узлов.",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).","Si cerca nell&#39;albero il nodo usando la ricorsione. Quando trovi il nodo, stabilisci se si tratta di una foglia o di un nodo interno. Se è una foglia, è sufficiente eliminarla e impostare il puntatore principale su quel nodo su NULL. Se è un nodo, sostituisci il nodo con uno dei nodi figli.",¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).","Busca en el árbol el nodo mediante recursividad. Cuando encuentra el nodo, determina si es una hoja o un nodo interno. Si es una hoja, simplemente elimínela y establezca el puntero principal a ese nodo en NULL. Si es un nodo, reemplace el nodo con cualquiera de los nodos secundarios.",Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).","Przeszukujesz drzewo pod kątem węzła za pomocą rekursji. Po znalezieniu węzła określasz, czy jest to liść, czy węzeł wewnętrzny. Jeśli jest to liść, wystarczy go usunąć i ustawić wskaźnik nadrzędny na ten węzeł na NULL. Jeśli jest to węzeł, należy zastąpić węzeł jednym z węzłów podrzędnych.",Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).","Bạn tìm kiếm cây cho nút bằng cách sử dụng đệ quy. Khi bạn tìm thấy nút, bạn xác định xem nó là một lá hay một nút bên trong. Nếu đó là một lá, bạn chỉ cần xóa nó và đặt con trỏ cha tới nút đó thành NULL. Nếu đó là một nút, bạn thay thế nút bằng một trong các nút con.",二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,再帰を使用して、ツリーでノードを検索します。ノードが見つかったら、それがリーフであるか内部ノードであるかを判別します。リーフの場合は、リーフを削除して、そのノードへの親ポインタをNULLに設定するだけです。ノードの場合は、ノードをいずれかの子ノードに置き換えます。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,您可以使用递归在树中搜索该节点。找到节点后，您将确定它是叶节点还是内部节点。如果它是叶子，则只需删除它，并将指向该节点的父指针设置为NULL。如果它是节点，则用两个子节点之一替换该节点。,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,يمكنك البحث في الشجرة عن العقدة باستخدام العودية. عندما تجد العقدة ، فإنك تحدد ما إذا كانت عقدة طرفية أو عقدة داخلية. إذا كانت ورقة ، فما عليك سوى حذفها وتعيين المؤشر الأصلي إلى تلك العقدة على NULL. إذا كانت عقدة ، فإنك تستبدل العقدة بأي من العقد الفرعية.,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).","Ви шукаєте у дереві вузол за допомогою рекурсії. Знайшовши вузол, ви визначаєте, чи це лист, або внутрішній вузол. Якщо це лист, ви просто видалите його і встановите батьківський покажчик на цей вузол NULL. Якщо це вузол, ви замінюєте вузол будь-яким із дочірніх вузлів.",Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,"Você pesquisa a árvore para o nó usando recursão. Ao encontrar o nó, você determina se é uma folha ou um nó interno. Se for uma folha, basta excluí-la e definir o ponteiro pai para esse nó como NULL. Se for um nó, você substitui o nó por qualquer um dos nós filhos.",چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,شما با استفاده از بازگشت ، گره را در درخت جستجو می کنید. وقتی گره را پیدا می کنید ، یک برگ یا یک گره داخلی را تعیین می کنید. اگر یک برگ است ، فقط آن را حذف کرده و نشانگر والد را روی آن گره روی NULL تنظیم کنید. اگر گره باشد ، گره را با هریک از گره های کودکان جایگزین می کنید.,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).","Cerqueu el node a l’arbre mitjançant la recursivitat. Quan trobeu el node, determinarà si es tracta d’un node fulla o intern. Si és una fulla, només l’heu de suprimir i establir el punter pare a aquest node a NULL. Si es tracta d&#39;un node, substituïu el node per qualsevol dels nodes fills.",Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).","На стаблу тражите чвор помоћу рекурзије. Када пронађете чвор, утврђујете да ли је крило или унутрашњи чвор. Ако је то лист, само га избришите и поставите родитељски показивач на тај чвор на НУЛЛ. Ако је то чвор, замените чвор било којим од подређених чворова.",Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).","Anda mencari pohon untuk node menggunakan rekursi. Ketika Anda menemukan simpul, Anda menentukan apakah itu daun atau simpul internal. Jika itu daun, Anda cukup menghapusnya dan mengatur penunjuk induk ke simpul itu ke NULL. Jika ini adalah sebuah node, Anda mengganti node tersebut dengan salah satu node turunan.",Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).","Du søker i treet etter noden ved hjelp av rekursjon. Når du finner noden, bestemmer du om det er et blad eller en intern node. Hvis det er et blad, sletter du det bare og setter foreldrepekeren til den noden til NULL. Hvis det er en node, erstatter du noden med en av barnenodene.",이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,재귀를 사용하여 노드에 대한 트리를 검색합니다. 노드를 찾으면 리프인지 내부 노드인지 결정합니다. 리프 인 경우 삭제하고 해당 노드에 대한 부모 포인터를 NULL로 설정하면됩니다. 노드 인 경우 노드를 하위 노드 중 하나로 바꿉니다.,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,"Haet puusta solmua rekursiota käyttämällä. Kun löydät solmun, määrität onko se lehti tai sisäinen solmu. Jos se on lehti, poista se ja aseta ylätunniste tälle solmulle arvoksi NULL. Jos se on solmu, vaihdat solmun jommallekummalla lapsisolmulla.",Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","Rekurzióval keres a fán a csomópontra. A csomópont megtalálásakor meghatározza, hogy levél vagy belső csomópont-e. Ha levél, akkor csak törölje, és a szülőmutatót az adott csomópontra állítsa NULL értékre. Ha csomópontról van szó, akkor a csomópontot kicserélheti a gyermek csomópontok egyikére.",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,"Prohledáte strom pro uzel pomocí rekurze. Když najdete uzel, určíte, zda se jedná o listový nebo vnitřní uzel. Pokud se jedná o list, jednoduše ho smažete a nastavíte nadřazený ukazatel na tento uzel na NULL. Pokud se jedná o uzel, nahradíte uzel některým z podřízených uzlů.",Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).","Na stablu tražite čvor pomoću rekurzije. Kada pronađete čvor, odredite je li to krilo ili interni čvor. Ako je to list, samo ga izbrišite i postavite roditeljski pokazivač na taj čvor na NULL. Ako je to čvor, zamijenite čvor bilo kojim od podređenih čvorova."
165,165,1352,8.2,Push and Pop.,push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?",Push and Pop.,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,Push ug Pop.,Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,Push och Pop.,Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,Poussez et pop.,Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,Duw en knal.,Какие две основные функции определяет стек?,толкать и хлопать,Толкай и поп.,Quali sono le due funzioni principali definite da uno stack?,spingere e pop,Spingi e fai scoppiare.,¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,Empuje y haga estallar.,Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,Push and Pop.,Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,Đẩy và bật.,スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,プッシュアンドポップ。,堆栈定义的两个主要功能是什么？,推和弹出,推和弹出。,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,ادفع وانطلق.,Які дві основні функції визначає стек?,натискання та поп,Push and Pop.,Quais são as duas funções principais definidas por uma pilha?,empurre e estale,Empurre e estale.,دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,فشار و پاپ.,Quines són les dues funcions principals definides per una pila?,empenta i esclata,Push i Pop.,Које су две главне функције дефинисане стеком?,гурај и пуцај,Пусх анд Поп.,Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,Push dan Pop.,Hva er de to hovedfunksjonene definert av en stabel?,push og pop,Push og Pop.,스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,밀고 팝.,Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,Push and Pop.,Mi a verem által definiált két fő funkció?,nyomja és pattog,Push and Pop.,Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,Push a Pop.,Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,Push and Pop.
166,166,1249,7.5,in a circular linked list the the last item points to the first item.,The last element in a circular linked list points to the head of the list.,What is the difference between a circular linked list and a basic linked list?,5.0,Das letzte Element in einer kreisförmig verknüpften Liste zeigt auf den Kopf der Liste.,Was ist der Unterschied zwischen einer zirkulären verknüpften Liste und einer einfachen verknüpften Liste?,In einer zirkulären verknüpften Liste zeigt das letzte Element auf das erste Element.,Unsa ang kalainan sa us aka lista nga nalakip sa lingin ug us aka sukaranan nga nalakip nga lista?,Ang ulahi nga elemento sa usa ka lista nga nalakip sa lingin nagtudlo sa ulo sa lista.,sa usa ka lista sa nalakip nga lingin ang katapusan nga butang nga nagpunting sa una nga aytem.,Vad är skillnaden mellan en cirkulär länkad lista och en grundlänkad lista?,Det sista elementet i en cirkulär länkad lista pekar på listans huvud.,i en cirkulär länkad lista pekar det sista objektet på det första objektet.,Quelle est la différence entre une liste chaînée circulaire et une liste chaînée de base?,Le dernier élément d&#39;une liste liée circulaire pointe vers la tête de la liste.,"dans une liste circulaire liée, le dernier élément pointe vers le premier élément.",Wat is het verschil tussen een circulaire gekoppelde lijst en een basis gekoppelde lijst?,Het laatste element in een circulaire gekoppelde lijst wijst naar de kop van de lijst.,in een circulaire gekoppelde lijst verwijst het laatste item naar het eerste item.,В чем разница между круговым связанным списком и основным связанным списком?,Последний элемент в круговом связном списке указывает на заголовок списка.,в круговом связном списке последний элемент указывает на первый элемент.,Qual è la differenza tra un elenco collegato circolare e un elenco collegato di base?,L&#39;ultimo elemento in un elenco collegato circolare punta all&#39;inizio dell&#39;elenco.,in una lista circolare collegata l&#39;ultimo elemento punta al primo elemento.,¿Cuál es la diferencia entre una lista enlazada circular y una lista enlazada básica?,El último elemento de una lista enlazada circular apunta al encabezado de la lista.,"en una lista enlazada circular, el último elemento apunta al primer elemento.",Jaka jest różnica między listą połączoną cyklicznie a listą podstawową?,Ostatni element na okrągłej liście połączonej wskazuje na początek listy.,na okólniku połączonej listy ostatni element wskazuje na pierwszy element.,Sự khác biệt giữa danh sách liên kết vòng tròn và danh sách liên kết cơ bản là gì?,Phần tử cuối cùng trong danh sách được liên kết hình tròn trỏ đến phần đầu của danh sách.,"trong một danh sách liên kết vòng tròn, mục cuối cùng trỏ đến mục đầu tiên.",循環リンクリストと基本リンクリストの違いは何ですか？,循環リンクリストの最後の要素は、リストの先頭を指します。,循環リンクリストでは、最後のアイテムが最初のアイテムを指します。,循环链表和基本链表有什么区别？,循环链接列表中的最后一个元素指向列表的开头。,在循环链接列表中，最后一项指向第一项。,ما الفرق بين قائمة مرتبطة دائرية وقائمة مرتبطة أساسية؟,يشير العنصر الأخير في قائمة مرتبطة دائرية إلى رأس القائمة.,في قائمة مرتبطة دائرية ، يشير العنصر الأخير إلى العنصر الأول.,Яка різниця між круговим пов&#39;язаним списком та основним пов&#39;язаним списком?,Останній елемент у круговому зв’язаному списку вказує на головку списку.,у круговому зв’язаному списку останній пункт вказує на перший елемент.,Qual é a diferença entre uma lista ligada circular e uma lista ligada básica?,O último elemento em uma lista ligada circular aponta para o topo da lista.,"em uma lista ligada circular, o último item aponta para o primeiro item.",تفاوت بین یک لیست پیوندی دایره ای و یک لیست پیوندی اساسی چیست؟,آخرین عنصر در یک لیست دایره ای مرتبط به سر لیست نشان می دهد.,در یک لیست دایره ای مرتبط ، آخرین مورد به اولین مورد اشاره می کند.,Quina diferència hi ha entre una llista enllaçada circular i una llista enllaçada bàsica?,L&#39;últim element d&#39;una llista enllaçada circular apunta al cap de llista.,"en una llista enllaçada circular, l&#39;últim element apunta al primer element.",Која је разлика између кружно повезане листе и основне повезане листе?,Последњи елемент у кружно повезаној листи показује на главу листе.,у кружно повезаној листи последња ставка указује на прву ставку.,Apa perbedaan antara daftar tertaut melingkar dan daftar tertaut dasar?,Elemen terakhir dalam daftar tertaut melingkar mengarah ke kepala daftar.,dalam daftar tertaut melingkar item terakhir menunjuk ke item pertama.,Hva er forskjellen mellom en sirkulær koblet liste og en grunnleggende koblet liste?,Det siste elementet i en sirkulær koblet liste peker mot hodet på listen.,i en sirkulær koblet liste viser det siste elementet til det første elementet.,순환 연결 목록과 기본 연결 목록의 차이점은 무엇입니까?,순환 연결 목록의 마지막 요소는 목록의 헤드를 가리 킵니다.,순환 연결 목록에서 마지막 항목은 첫 번째 항목을 가리 킵니다.,Mitä eroa on pyöreällä linkitetyllä luettelolla linkitetyllä perusluettelolla?,Pyöreän linkitetyn luettelon viimeinen elementti osoittaa luettelon päähän.,pyöreässä linkitetyssä luettelossa viimeinen kohde osoittaa ensimmäistä kohdetta.,Mi a különbség a kör alakú linkelt lista és az alap linkelt lista között?,A kör alakú összekapcsolt lista utolsó eleme a lista fejére mutat.,egy kör alakú linkelt listában az utolsó elem az első elemre mutat.,Jaký je rozdíl mezi cyklicky propojeným seznamem a základním propojeným seznamem?,Poslední prvek v kruhovém propojeném seznamu ukazuje na záhlaví seznamu.,v kruhovém propojeném seznamu ukazuje poslední položka na první položku.,Koja je razlika između kružno povezane liste i osnovne povezane liste?,Posljednji element na kružno povezanoj listi usmjerava na glavu popisa.,u kružno povezanoj listi posljednja stavka ukazuje na prvu stavku.
167,167,1758,10.3,a node with degree 0.  last node in the tree and furtherest away from the root.,A node that has no children.,What is a leaf?,4.0,Ein Knoten ohne Kinder.,Was ist ein Blatt?,ein Knoten mit Grad 0. letzter Knoten im Baum und am weitesten von der Wurzel entfernt.,Unsa ang dahon?,Usa ka node nga wala’y mga anak.,usa ka node nga adunay degree 0. katapusang node sa kahoy ug labi ka layo sa gamot.,Vad är ett blad?,En nod som inte har några barn.,en nod med grad 0. sista nod i trädet och längre bort från roten.,Qu&#39;est-ce qu&#39;une feuille?,Un nœud qui n&#39;a pas d&#39;enfants.,un nœud de degré 0. dernier nœud de l&#39;arbre et le plus éloigné de la racine.,Wat is een blad?,Een knooppunt dat geen kinderen heeft.,een knoop met graad 0. laatste knoop in de boom en het verst verwijderd van de wortel.,Что такое лист?,"Узел, у которого нет детей.","узел со степенью 0. Последний узел в дереве, наиболее удаленный от корня.",Cos&#39;è una foglia?,Un nodo che non ha figli.,un nodo con grado 0. Ultimo nodo dell&#39;albero e più lontano dalla radice.,¿Qué es una hoja?,Un nodo que no tiene hijos.,un nodo con grado 0. último nodo del árbol y el más alejado de la raíz.,Co to jest liść?,"Węzeł, który nie ma dzieci.",węzeł o stopniu 0. ostatni węzeł w drzewie i najbardziej oddalony od korzenia.,Lá là gì?,Một nút không có nút con.,một nút có bậc 0. nút cuối cùng trong cây và xa gốc hơn.,葉とは何ですか？,子を持たないノード。,次数0のノード。ツリーの最後のノードで、ルートから最も離れています。,什么是叶子？,没有子节点的节点。,一个度数为0的节点。树中的最后一个节点，离根最远。,ما هي الورقة؟,عقدة ليس لها أبناء.,عقدة من الدرجة 0. آخر عقدة في الشجرة وأبعد من الجذر.,Що таке лист?,"Вузол, у якого немає дітей.",вузол із ступенем 0. Останній вузол у дереві та віддалений від кореня.,O que é uma folha?,Um nó que não tem filhos.,um nó com grau 0. último nó na árvore e o mais distante da raiz.,برگ چیست؟,گره ای که فرزندی ندارد.,گره ای با درجه 0. گره آخر در درخت و دورتر از ریشه.,Què és una fulla?,Un node que no té fills.,un node amb grau 0. darrer node de l’arbre i més allunyat de l’arrel.,Шта је лист?,Чвор који нема деце.,чвор са степеном 0. последњи чвор у дрвету и најудаљенији од корена.,Apakah daun itu?,Node yang tidak memiliki anak.,simpul dengan derajat 0. simpul terakhir di pohon dan paling jauh dari akar.,Hva er et blad?,En node som ikke har barn.,en node med grad 0. siste node i treet og lengst vekk fra roten.,잎은 무엇입니까?,자식이없는 노드.,차수가 0 인 노드. 트리의 마지막 노드이며 루트에서 가장 멀리 떨어져 있습니다.,Mikä on lehti?,"Solmu, jolla ei ole lapsia.","solmu, jonka aste on 0. Viimeinen solmu puussa ja kauempana juuresta.",Mi a levél?,"Olyan csomópont, amelynek nincs gyermeke.",egy 0. fokú csomópont. Az utolsó csomópont a fában és a gyökértől távolabb.,Co je to list?,"Uzel, který nemá žádné děti.",uzel se stupněm 0. poslední uzel ve stromu a dále od kořene.,Šta je list?,Čvor koji nema djece.,čvor sa stupnjem 0. zadnji čvor u stablu i najudaljeniji od korijena.
168,168,477,3.3,The inline keyword advises the compiler to copy the function's code in place to avoid function calls; however the compiler can and typically does ignore the inline qualifier for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,5.0,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,"Das Inline-Schlüsselwort empfiehlt dem Compiler, den Funktionscode zu kopieren, um Funktionsaufrufe zu vermeiden. Der Compiler kann und ignoriert jedoch normalerweise das Inline-Qualifikationsmerkmal für alle bis auf die kleinsten Funktionen.",Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,Gitambag sa inline nga keyword ang tagtipon nga kopyahon ang code sa gimbuhaton sa lugar aron malikayan ang mga tawag sa pag-andar; bisan pa ang taghimo mahimo ug sagad wala magtagad sa inline kwalipikado alang sa tanan apan ang labing gamay nga gimbuhaton.,Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,Inline-nyckelordet rekommenderar kompilatorn att kopiera funktionens kod på plats för att undvika funktionssamtal; dock kan kompilatorn ignorera inline-kvalificeringen för alla utom de minsta funktionerna.,Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,"Le mot clé inline conseille au compilateur de copier le code de la fonction en place pour éviter les appels de fonction; cependant, le compilateur peut ignorer et ignore généralement le qualificatif en ligne pour toutes les fonctions sauf les plus petites.",Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,Het inline sleutelwoord adviseert de compiler om de code van de functie te kopiëren om functieaanroepen te vermijden; de compiler kan echter de inline-kwalificatie negeren voor alle functies behalve de kleinste.,Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.","Ключевое слово inline советует компилятору скопировать код функции на место, чтобы избежать вызовов функций; однако компилятор может и обычно игнорирует встроенный квалификатор для всех функций, кроме самых маленьких.",In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,La parola chiave inline consiglia al compilatore di copiare il codice della funzione in posizione per evitare chiamate di funzione; tuttavia il compilatore può ignorare e in genere ignora il qualificatore inline per tutte le funzioni tranne le più piccole.,¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,"La palabra clave en línea aconseja al compilador que copie el código de la función en su lugar para evitar llamadas a la función; sin embargo, el compilador puede ignorar y normalmente ignora el calificador en línea para todas las funciones menos las más pequeñas.",Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.","Słowo kluczowe inline zaleca kompilatorowi skopiowanie kodu funkcji w miejscu, aby uniknąć wywołań funkcji; jednak kompilator może i zazwyczaj ignoruje wbudowany kwalifikator dla wszystkich funkcji oprócz najmniejszych.",Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,"Từ khóa nội tuyến khuyên trình biên dịch sao chép mã của hàm tại chỗ để tránh các lệnh gọi hàm; tuy nhiên, trình biên dịch có thể và thường bỏ qua bộ định lượng nội tuyến cho tất cả trừ các hàm nhỏ nhất.",コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,inlineキーワードは、関数呼び出しを回避するために、関数のコードを所定の位置にコピーするようコンパイラーにアドバイスします。ただし、コンパイラーは、最小の関数を除くすべてのインライン修飾子を無視でき、通常は無視します。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,inline关键字建议编译器将函数的代码复制到位，以避免调用函数。但是，编译器可以并且通常确实忽略除最小函数以外的所有函数的内联限定符。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,تنصح الكلمة الأساسية المضمنة المترجم بنسخ رمز الوظيفة في مكانه لتجنب استدعاءات الوظائف ؛ ومع ذلك ، يمكن للمترجم وعادةً يتجاهل المؤهل المضمن لجميع الوظائف باستثناء أصغرها.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.","Ключове слово inline радить компілятору скопіювати код функції на місце, щоб уникнути викликів функції; однак компілятор може і зазвичай ігнорує вбудований кваліфікатор для всіх функцій, крім найменших.",Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"A palavra-chave inline aconselha o compilador a copiar o código da função no local para evitar chamadas de função; entretanto, o compilador pode ignorar e normalmente ignora o qualificador embutido para todas as funções, exceto as menores.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,کلمه کلیدی inline به کامپایلر توصیه می کند تا کد عملکرد را در محل خود کپی کند تا از تماس های عملکردی جلوگیری کند. با این حال کامپایلر می تواند و به طور معمول صلاحیت درون خطی را برای همه به جز کوچکترین توابع نادیده می گیرد.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,"La paraula clau en línia aconsella al compilador que copiï el codi de la funció per evitar trucades a funcions; no obstant això, el compilador pot ignorar i normalment ignora el qualificador en línia per a totes les funcions menys les més petites.",Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,"Кључна реч инлине саветује преводиоцу да копира код функције на место како би избегао позиве функције; међутим компајлер може и обично игнорише уграђени квалификатор за све функције, осим за најмање.",Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,Kata kunci inline menyarankan kompilator untuk menyalin kode fungsi untuk menghindari pemanggilan fungsi; namun kompilator bisa dan biasanya mengabaikan qualifier inline untuk semua fungsi kecuali fungsi terkecil.,Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,Det innebygde nøkkelordet anbefaler kompilatoren å kopiere funksjonskoden på plass for å unngå funksjonsanrop; imidlertid kan kompilatoren ignorere den innebygde kvalifiseringen for alle unntatt de minste funksjonene.,컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,inline 키워드는 컴파일러에게 함수 호출을 피하기 위해 함수의 코드를 제자리에 복사하도록 조언합니다. 그러나 컴파일러는 가장 작은 함수를 제외한 모든 함수에 대해 인라인 한정자를 무시할 수 있으며 일반적으로 무시합니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.",Sisäinen avainsana neuvoo kääntäjää kopioimaan toiminnon koodin paikalleen toimintokutsujen välttämiseksi. kääntäjä voi kuitenkin jättää ja tyypillisesti jättää huomiotta inline-määrittelijän kaikille paitsi pienimmille toiminnoille.,Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.","Az inline kulcsszó azt tanácsolja a fordítónak, hogy másolja át a függvény kódját a helyére a függvényhívások elkerülése érdekében; a fordító azonban a legkisebb funkciók kivételével minden figyelmen kívül hagyhatja az inline minősítőt.",Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.","Klíčové slovo inline doporučuje kompilátoru, aby zkopíroval kód funkce na místo, aby se vyhnul volání funkcí; kompilátor však může a obvykle ignoruje inline kvalifikátor pro všechny kromě nejmenších funkcí.",Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,"Ključna riječ inline savjetuje kompajleru da kopira funkcijski kôd kako bi izbjegao pozive funkcije; međutim kompajler može i obično ignorira ugrađeni kvalifikator za sve funkcije, osim za najmanje."
169,169,444,3.2,Any functions that follows their deceleration that  are in the source code file are allowed to have access the variables.  Also global scope variables retrain their value throughout the execution of the program.,File scope.,What is the scope of global variables?,5.0,Dateibereich.,Was ist der Umfang globaler Variablen?,"Alle Funktionen, die auf ihre Verzögerung folgen und sich in der Quellcodedatei befinden, dürfen auf die Variablen zugreifen. Auch globale Bereichsvariablen trainieren ihren Wert während der Ausführung des Programms neu.",Unsa ang kasangkaran sa mga variable sa kalibutan?,Sakup sa file.,Ang bisan unsang mga pag-andar nga nagsunod sa ilang pagpadali nga naa sa source code file gitugotan nga maka-access sa mga variable. Ingon usab ang mga variable sa kinatibuk-ang kasangkaran sa kalibutan nagpugong sa ilang kantidad sa tibuuk nga pagpatuman sa programa.,Vad är omfattningen av globala variabler?,Filomfång.,Alla funktioner som följer deras retardation som finns i källkodsfilen får åtkomst till variablerna. Variabler för globalt omfång tränar om sitt värde under hela genomförandet av programmet.,Quelle est la portée des variables globales?,Portée du fichier.,"Toutes les fonctions qui suivent leur décélération et qui se trouvent dans le fichier de code source sont autorisées à accéder aux variables. De plus, les variables de portée globale retravaillent leur valeur tout au long de l&#39;exécution du programme.",Wat is de omvang van globale variabelen?,Bestandsbereik.,Alle functies die volgen op hun vertraging in het broncodebestand hebben toegang tot de variabelen. Ook globale bereikvariabelen herleiden hun waarde tijdens de uitvoering van het programma.,Каков объем глобальных переменных?,Область файла.,"Любые функции, которые следуют за их замедлением и находятся в файле исходного кода, имеют доступ к переменным. Также глобальные переменные области видимости повторно обучают свое значение на протяжении выполнения программы.",Qual è l&#39;ambito delle variabili globali?,Ambito del file.,Tutte le funzioni che seguono la loro decelerazione che si trovano nel file del codice sorgente possono avere accesso alle variabili. Anche le variabili di ambito globale riqualificano il loro valore durante l&#39;esecuzione del programma.,¿Cuál es el alcance de las variables globales?,Alcance del archivo.,Cualquier función que siga su desaceleración y que esté en el archivo de código fuente puede tener acceso a las variables. También las variables de alcance global vuelven a entrenar su valor a lo largo de la ejecución del programa.,Jaki jest zakres zmiennych globalnych?,Zakres plików.,"Wszystkie funkcje występujące po ich spowolnieniu, które znajdują się w pliku kodu źródłowego, mogą mieć dostęp do zmiennych. Również zmienne o zasięgu globalnym powtarzają swoją wartość przez cały czas wykonywania programu.",Phạm vi của các biến toàn cục là gì?,Phạm vi tệp.,"Bất kỳ hàm nào theo sau sự giảm tốc của chúng có trong tệp mã nguồn đều được phép có quyền truy cập vào các biến. Ngoài ra, các biến phạm vi toàn cục cũng đào tạo lại giá trị của chúng trong suốt quá trình thực thi chương trình.",グローバル変数のスコープは何ですか？,ファイルスコープ。,ソースコードファイルにある減速に続くすべての関数は、変数にアクセスできます。また、グローバルスコープ変数は、プログラムの実行中にその値を再トレーニングします。,全局变量的范围是什么？,文件范围。,减速后在源代码文件中的所有函数都可以访问变量。全局范围变量还会在程序执行期间重新训练其值。,ما هو نطاق المتغيرات العالمية؟,نطاق الملف.,يُسمح لأي وظائف تتبع تباطؤها الموجود في ملف التعليمات البرمجية المصدر بالوصول إلى المتغيرات. كما أن متغيرات النطاق العالمية تعيد تدريب قيمتها خلال تنفيذ البرنامج.,Який обсяг глобальних змінних?,Обсяг файлу.,"Будь-які функції, що слідують за їх уповільненням, що знаходяться у файлі вихідного коду, мають доступ до змінних. Також змінні глобальної області перекваліфікують своє значення протягом усього виконання програми.",Qual é o escopo das variáveis globais?,Escopo do arquivo.,"Quaisquer funções que seguem sua desaceleração que estão no arquivo de código-fonte têm permissão para acessar as variáveis. Além disso, as variáveis de escopo global retreinam seu valor ao longo da execução do programa.",دامنه متغیرهای جهانی چیست؟,دامنه پرونده,هر عملکردی که به دنبال کاهش سرعت آن باشد در پرونده کد منبع وجود دارد اجازه دسترسی به متغیرها را دارد. همچنین متغیرهای دامنه جهانی ارزش خود را در طول اجرای برنامه بازآموزی می کنند.,Quin és l&#39;abast de les variables globals?,Abast del fitxer.,Totes les funcions que segueixen la seva desacceleració que es trobin al fitxer de codi font tenen permís per accedir a les variables. També les variables d&#39;abast global reentrenen el seu valor durant l&#39;execució del programa.,Који је опсег глобалних променљивих?,Обим датотеке.,Све функције које прате њихово успоравање и налазе се у датотеци изворног кода могу да имају приступ променљивим. Такође променљиве општег опсега поново обучавају своју вредност током извођења програма.,Apa ruang lingkup variabel global?,Ruang lingkup file.,Fungsi apa pun yang mengikuti perlambatannya yang ada di file kode sumber diizinkan untuk mengakses variabel. Juga variabel lingkup global melatih kembali nilainya selama menjalankan program.,Hva er omfanget av globale variabler?,Filomfang.,"Alle funksjoner som følger retardasjonen deres i kildekodefilen, har tilgang til variablene. Også globale omfangsvariabler omskoler verdien gjennom hele gjennomføringen av programmet.",전역 변수의 범위는 무엇입니까?,파일 범위.,소스 코드 파일에있는 감속 이후의 모든 함수는 변수에 액세스 할 수 있습니다. 또한 전역 범위 변수는 프로그램 실행 전체에서 해당 값을 다시 학습시킵니다.,Mikä on globaalien muuttujien laajuus?,Tiedoston laajuus.,Kaikilla lähdekooditiedostossa olevilla niiden hidastumista seuraavilla toiminnoilla on pääsy muuttujiin. Myös globaalit laajuusmuuttujat kouluttavat uudelleen arvonsa koko ohjelman suorituksen ajan.,Mi a globális változók hatóköre?,A fájl terjedelme.,"A lassításukat követő minden olyan funkciónak, amely a forráskódfájlban található, hozzáférhet a változókhoz. A globális hatókörű változók is átképzik értéküket a program végrehajtása során.",Jaký je rozsah globálních proměnných?,Rozsah souboru.,"Jakékoli funkce, které následují po svém zpomalení a které jsou v souboru zdrojového kódu, mohou mít přístup k proměnným. Proměnné globálního rozsahu také rekvalifikují svou hodnotu po celou dobu provádění programu.",Koji je opseg globalnih varijabli?,Opseg datoteke.,Sve funkcije koje slijede njihovo usporavanje koje se nalaze u datoteci izvornog koda smiju imati pristup varijablama. Takođe varijable globalnog opsega preusmjeravaju svoju vrijednost tokom izvođenja programa.
170,170,553,3.5,it creates a set of candidate functions then a set of viable functions,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,3.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,Es erstellt eine Reihe von Kandidatenfunktionen und dann eine Reihe von realisierbaren Funktionen,Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.",naghimo kini usa ka hugpong sa mga gimbuhaton sa kandidato dayon usa ka hugpong sa mga mahimo’g mahimo,Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,det skapar en uppsättning kandidatfunktioner sedan en uppsättning livskraftiga funktioner,Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.",il crée un ensemble de fonctions candidates puis un ensemble de fonctions viables,Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.",het creëert een set kandidaat-functies en vervolgens een set levensvatbare functies,Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.","он создает набор функций-кандидатов, а затем набор жизнеспособных функций",Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.",crea un insieme di funzioni candidate quindi un insieme di funzioni vitali,¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.",crea un conjunto de funciones candidatas y luego un conjunto de funciones viables,W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.","tworzy zestaw funkcji kandydujących, a następnie zestaw funkcji wykonalnych",Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.",nó tạo ra một tập hợp các chức năng ứng cử viên sau đó là một tập hợp các chức năng khả thi,オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,候補関数のセットを作成し、次に実行可能な関数のセットを作成します,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,它创建了一组候选函数，然后是一组可行函数,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,يقوم بإنشاء مجموعة من الوظائف المرشحة ثم مجموعة من الوظائف القابلة للتطبيق,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.","він створює набір функцій-кандидатів, а потім набір життєздатних функцій",Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.","ele cria um conjunto de funções candidatas e, em seguida, um conjunto de funções viáveis",توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,مجموعه ای از توابع نامزد و سپس مجموعه ای از توابع زنده را ایجاد می کند,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.",crea un conjunt de funcions candidates i després un conjunt de funcions viables,Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.","ствара скуп функција кандидата, а затим скуп одрживих функција",Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.",itu menciptakan satu set fungsi kandidat kemudian satu set fungsi yang layak,Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.",det skaper et sett med kandidatfunksjoner og deretter et sett med levedyktige funksjoner,오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,후보 기능 세트를 생성 한 다음 실행 가능한 기능 세트를 생성합니다.,Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.","se luo joukon ehdokkaiden toimintoja, sitten joukon elinkelpoisia toimintoja",Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.","létrehoz egy sor jelölt funkciót, majd egy életképes funkciót",Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.",vytváří sadu kandidátských funkcí a poté sadu životaschopných funkcí,Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.","stvara skup funkcija kandidata, a zatim skup održivih funkcija"
171,171,544,3.5,overloaded functions must have the same return type but different input parameters,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,3.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,"Überladene Funktionen müssen denselben Rückgabetyp, aber unterschiedliche Eingabeparameter haben",Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.",ang mga overloaded function kinahanglan adunay parehas nga tipo sa pagbalik apan lainlaing mga parameter sa pag-input,Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,överbelastade funktioner måste ha samma returtyp men olika ingångsparametrar,Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.",les fonctions surchargées doivent avoir le même type de retour mais des paramètres d&#39;entrée différents,Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.","overbelaste functies moeten hetzelfde retourtype hebben, maar verschillende invoerparameters",Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.","перегруженные функции должны иметь один и тот же возвращаемый тип, но разные входные параметры",Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.",le funzioni sovraccaricate devono avere lo stesso tipo restituito ma parametri di input diversi,¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.",las funciones sobrecargadas deben tener el mismo tipo de retorno pero diferentes parámetros de entrada,W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.","przeciążone funkcje muszą mieć ten sam typ zwracanej wartości, ale inne parametry wejściowe",Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.",các hàm quá tải phải có cùng kiểu trả về nhưng các tham số đầu vào khác nhau,オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,オーバーロードされた関数の戻り値の型は同じである必要がありますが、入力パラメーターは異なります,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,重载的函数必须具有相同的返回类型但输入参数不同,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,يجب أن تحتوي الوظائف المحملة بشكل زائد على نفس نوع الإرجاع ولكن مع معلمات إدخال مختلفة,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.","перевантажені функції повинні мати однаковий тип повернення, але різні вхідні параметри",Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.","funções sobrecarregadas devem ter o mesmo tipo de retorno, mas parâmetros de entrada diferentes",توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,توابع بیش از حد باید نوع بازگشت یکسانی داشته باشند اما پارامترهای ورودی متفاوتی داشته باشند,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.",les funcions sobrecarregades han de tenir el mateix tipus de retorn però paràmetres d&#39;entrada diferents,Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.","преоптерећене функције морају имати исти тип повратка, али различите улазне параметре",Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.",fungsi yang kelebihan beban harus memiliki tipe kembalian yang sama tetapi parameter masukan berbeda,Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.","overbelastede funksjoner må ha samme returtype, men forskjellige inngangsparametere",오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,오버로드 된 함수는 반환 유형은 동일해야하지만 입력 매개 변수는 달라야,Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.","ylikuormitetuilla toiminnoilla on oltava sama palautustyyppi, mutta erilaiset tuloparametrit",Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.","a túlterhelt függvényeknek azonos visszatérési típussal kell rendelkezniük, de eltérő bemeneti paraméterekkel",Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.","přetížené funkce musí mít stejný návratový typ, ale různé vstupní parametry",Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.","preopterećene funkcije moraju imati isti tip povratka, ali različite ulazne parametre"
172,172,1857,10.7,O(log n),The height of the tree (or log of the number of elements in the tree).,How many comparisons does it take to find an element in a binary search tree?,5.0,Die Höhe des Baums (oder das Protokoll der Anzahl der Elemente im Baum).,"Wie viele Vergleiche sind erforderlich, um ein Element in einem binären Suchbaum zu finden?",O (log n),Pila ka mga pagtandi ang kinahanglan aron makapangita usa ka elemento sa usa ka puno nga binary search?,Ang kataas sa kahoy (o log sa gidaghanon sa mga elemento sa kahoy).,O (pag-log n),Hur många jämförelser krävs för att hitta ett element i ett binärt sökträd?,Trädets höjd (eller logg över antalet element i trädet).,O (log n),Combien de comparaisons faut-il pour trouver un élément dans un arbre de recherche binaire?,La hauteur de l&#39;arbre (ou journal du nombre d&#39;éléments dans l&#39;arbre).,O (log n),Hoeveel vergelijkingen zijn er nodig om een element in een binaire zoekboom te vinden?,De hoogte van de boom (of log van het aantal elementen in de boom).,O (logboek n),"Сколько сравнений нужно, чтобы найти элемент в двоичном дереве поиска?",Высота дерева (или логарифм количества элементов в дереве).,O (журнал n),Quanti confronti sono necessari per trovare un elemento in un albero di ricerca binario?,L&#39;altezza dell&#39;albero (o il registro del numero di elementi dell&#39;albero).,O (log n),¿Cuántas comparaciones se necesitan para encontrar un elemento en un árbol de búsqueda binaria?,La altura del árbol (o registro de la cantidad de elementos en el árbol).,O (log n),"Ile porównań potrzeba, aby znaleźć element w drzewie wyszukiwania binarnego?",Wysokość drzewa (lub dziennik liczby elementów w drzewie).,O (log n),Có bao nhiêu phép so sánh để tìm một phần tử trong cây tìm kiếm nhị phân?,Chiều cao của cây (hoặc nhật ký của số phần tử trong cây).,O (log n),二分探索木で要素を見つけるのに何回の比較が必要ですか？,ツリーの高さ（またはツリー内の要素数のログ）。,O（log n）,在二进制搜索树中查找元素需要进行多少次比较？,树的高度（或树中元素数的对数）。,O（log n）,كم عدد المقارنات اللازمة للعثور على عنصر في شجرة بحث ثنائية؟,ارتفاع الشجرة (أو سجل عدد العناصر في الشجرة).,O (تسجيل ن),"Скільки порівнянь потрібно, щоб знайти елемент у двійковому дереві пошуку?",Висота дерева (або журнал кількості елементів у дереві).,O (журнал n),Quantas comparações são necessárias para encontrar um elemento em uma árvore de pesquisa binária?,A altura da árvore (ou log do número de elementos na árvore).,O (log n),برای یافتن عنصری در یک درخت جستجوی باینری چند مقایسه لازم است؟,ارتفاع درخت (یا تعداد تعداد عناصر موجود در درخت).,O (ورود به سیستم),Quantes comparacions es necessiten per trobar un element en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre (o registre del nombre d&#39;elements de l&#39;arbre).,O (registre n),Колико поређења је потребно да би се пронашао елемент у бинарном стаблу претраживања?,Висина стабла (или евиденција броја елемената у дрвету).,О (лог н),Berapa banyak perbandingan yang diperlukan untuk menemukan elemen dalam pohon pencarian biner?,Tinggi pohon (atau log dari jumlah elemen pada pohon).,O (log n),Hvor mange sammenligninger tar det å finne et element i et binært søketre?,Høyden på treet (eller logg over antall elementer i treet).,O (log n),이진 검색 트리에서 요소를 찾는 데 얼마나 많은 비교가 필요합니까?,트리의 높이 (또는 트리의 요소 수에 대한 로그).,O (로그 n),Kuinka monta vertailua tarvitaan elementin löytämiseksi binaarihakupuusta?,Puun korkeus (tai puun elementtien määrän loki).,O (log n),Hány összehasonlítás szükséges egy elem megtalálásához a bináris keresési fában?,A fa magassága (vagy a fa elemeinek számának naplója).,O (log n),Kolik srovnání je potřeba k nalezení prvku v binárním vyhledávacím stromu?,Výška stromu (nebo protokol o počtu prvků ve stromu).,O (log n),Koliko je usporedbi potrebno za pronalaženje elementa u binarnom stablu pretraživanja?,Visina stabla (ili evidencija broja elemenata u stablu).,O (log n)
173,173,802,4.6,compilation error.,Run-time error.,Using an index outside the bounds of the array generates an error. Is this a compilation error or a run-time error?,1.0,Laufzeit Fehler.,Die Verwendung eines Index außerhalb der Grenzen des Arrays erzeugt einen Fehler. Ist dies ein Kompilierungsfehler oder ein Laufzeitfehler?,Kompilierungsfehler.,Ang paggamit sa usa ka indeks sa gawas sa utlanan sa han-ay naghatag usa ka sayup. Kini ba usa ka sayup nga panagsama o usa ba nga sayup sa pagdagan?,Sayup sa oras sa pagdagan.,sayup sa pagtipon.,Att använda ett index utanför gruppens gränser genererar ett fel. Är detta ett kompileringsfel eller ett körtidsfel?,Körtidsfel.,kompileringsfel.,L&#39;utilisation d&#39;un index en dehors des limites du tableau génère une erreur. S&#39;agit-il d&#39;une erreur de compilation ou d&#39;une erreur d&#39;exécution?,Erreur d&#39;exécution.,erreur de compilation.,Het gebruik van een index buiten de grenzen van de array genereert een fout. Is dit een compilatiefout of een runtime-fout?,Runtime-fout.,compilatiefout.,Использование индекса за пределами массива вызывает ошибку. Это ошибка компиляции или ошибка времени выполнения?,Ошибка выполнения.,ошибка компиляции.,L&#39;utilizzo di un indice al di fuori dei limiti dell&#39;array genera un errore. È un errore di compilazione o un errore di runtime?,Errore di run-time.,errore di compilazione.,El uso de un índice fuera de los límites de la matriz genera un error. ¿Es esto un error de compilación o un error de tiempo de ejecución?,Error de tiempo de ejecución.,error de compilación.,Użycie indeksu poza granicami tablicy generuje błąd. Czy to błąd kompilacji czy błąd czasu wykonywania?,Błąd wykonania.,błąd kompilacji.,Sử dụng chỉ mục bên ngoài giới hạn của mảng sẽ tạo ra lỗi. Đây là lỗi biên dịch hay lỗi thời gian chạy?,Lỗi runtime.,dịch lỗi.,配列の境界外のインデックスを使用すると、エラーが発生します。これはコンパイルエラーですか、それとも実行時エラーですか？,ランタイムエラー。,コンパイルエラー。,在数组范围之外使用索引会产生错误。这是编译错误还是运行时错误？,运行时错误。,编译错误。,يؤدي استخدام فهرس خارج حدود المصفوفة إلى حدوث خطأ. هل هذا خطأ تجميع أم خطأ وقت التشغيل؟,خطا وقت التشغيل.,خطأ في التحويل.,Використання індексу поза межами масиву генерує помилку. Це помилка компіляції чи помилка виконання?,Помилка під час виконання.,помилка компіляції.,Usar um índice fora dos limites da matriz gera um erro. Este é um erro de compilação ou um erro de tempo de execução?,Erro em tempo de execução.,Erro de compilação.,استفاده از فهرست خارج از آرایه خطایی ایجاد می کند. آیا این یک خطای تلفیقی است یا یک خطای زمان اجرا است؟,خطای زمان اجرا.,خطای تدوین,L’ús d’un índex fora dels límits de la matriu genera un error. Es tracta d&#39;un error de compilació o d&#39;un temps d&#39;execució?,Error d&#39;execució.,error de compilació.,Коришћење индекса изван граница поља генерише грешку. Да ли је ово грешка у компилацији или грешка током извршавања?,Грешка у раду.,грешка при компилацији.,Menggunakan indeks di luar batas-batas larik menghasilkan kesalahan. Apakah ini kesalahan kompilasi atau kesalahan run-time?,Kesalahan run-time.,kesalahan kompilasi.,Å bruke en indeks utenfor områdets grenser genererer en feil. Er dette en kompileringsfeil eller en kjøretidsfeil?,Kjøretidsfeil.,kompileringsfeil.,배열 경계를 벗어난 인덱스를 사용하면 오류가 발생합니다. 컴파일 오류입니까 아니면 런타임 오류입니까?,런타임 오류.,컴파일 오류입니다.,Hakemiston käyttö taulukon rajojen ulkopuolella tuottaa virheen. Onko tämä käännösvirhe vai ajonaikainen virhe?,Suorituksenaikainen virhe.,kokoamisvirhe.,A tömb határain kívüli index használata hibát eredményez. Összeállítási hiba vagy futásidejű hiba?,Futtatási hiba.,összeállítási hiba.,Použití indexu mimo hranice pole generuje chybu. Je to chyba kompilace nebo chyba běhu?,Chyba za běhu.,chyba kompilace.,Korištenje indeksa izvan granica polja generira grešku. Je li ovo greška u kompilaciji ili pogreška u toku izvođenja?,Greška u vremenu izvođenja.,greška kompilacije.
174,174,1944,11.3,memory is allocated in accordance with their type and initialization input.,By using constructors.,How are objects initialized when they are created?,2.0,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,Der Speicher wird entsprechend dem Typ und der Initialisierungseingabe zugewiesen.,Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,ang memorya gigahin sumala sa ilang klase ug input sa pagpauna.,Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,minne tilldelas i enlighet med deras typ och initialiseringsingång.,Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,la mémoire est allouée en fonction de leur type et de leur entrée d&#39;initialisation.,Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,geheugen wordt toegewezen in overeenstemming met hun type en initialisatie-invoer.,Как инициализируются объекты при их создании?,Используя конструкторы.,память распределяется в соответствии с их типом и вводом инициализации.,Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,la memoria viene allocata in base al tipo e all&#39;ingresso di inizializzazione.,¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,la memoria se asigna de acuerdo con su tipo y entrada de inicialización.,Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,pamięć jest przydzielana zgodnie z ich typem i wejściem inicjalizacyjnym.,Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,bộ nhớ được cấp phát phù hợp với kiểu và đầu vào khởi tạo của chúng.,オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,メモリは、タイプと初期化入力に従って割り当てられます。,创建对象时如何初始化它们？,通过使用构造函数。,根据它们的类型和初始化输入分配内存。,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,يتم تخصيص الذاكرة وفقًا لنوعها وإدخال التهيئة.,Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,пам&#39;ять виділяється відповідно до їх типу та вводу ініціалізації.,Como os objetos são inicializados quando são criados?,Usando construtores.,a memória é alocada de acordo com seu tipo e entrada de inicialização.,چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,حافظه متناسب با نوع و ورودی اولیه آنها اختصاص می یابد.,Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,la memòria s’assigna d’acord amb el seu tipus i entrada d’inicialització.,Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,меморија се додељује у складу са њиховим типом и улазом за иницијализацију.,Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,memori dialokasikan sesuai dengan jenis dan masukan inisialisasinya.,Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,minne tildeles i samsvar med deres type og initialiseringsinngang.,객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,메모리는 유형 및 초기화 입력에 따라 할당됩니다.,"Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,muisti varataan niiden tyypin ja alustustulojen mukaisesti.,"Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,a memória típusuknak és inicializáló bemenetüknek megfelelően kerül kiosztásra.,"Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,paměť je přidělena podle jejich typu a inicializačního vstupu.,Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,memorija se dodjeljuje u skladu s njihovim tipom i ulazom za inicijalizaciju.
175,175,1287,7.6,a doubly linked list allows you to back up from a node rather than having to go through the entire list again,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,4.0,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"Mit einer doppelt verknüpften Liste können Sie von einem Knoten aus sichern, anstatt die gesamte Liste erneut durchgehen zu müssen",Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",ang usa ka doble nga nalambigit nga lista nagtugot kanimo nga mag-back up gikan sa usa ka node kaysa kinahanglan nga moagi sa tibuuk nga lista usab,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",en dubbelt länkad lista gör att du kan säkerhetskopiera från en nod istället för att behöva gå igenom hela listan igen,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",une liste doublement liée vous permet de sauvegarder à partir d&#39;un nœud plutôt que d&#39;avoir à parcourir à nouveau toute la liste,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",Met een dubbel gelinkte lijst kunt u een back-up maken vanaf een knooppunt in plaats van de hele lijst opnieuw te moeten doorlopen,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.","двусвязный список позволяет выполнять резервное копирование с узла, а не проходить через весь список заново.",Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",una lista doppiamente collegata consente di eseguire il backup da un nodo invece di dover rivedere l&#39;intero elenco,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",una lista doblemente enlazada le permite realizar una copia de seguridad desde un nodo en lugar de tener que volver a revisar toda la lista,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.","lista podwójnie połączona umożliwia wykonanie kopii zapasowej z węzła, zamiast konieczności ponownego przeglądania całej listy",Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",một danh sách được liên kết kép cho phép bạn sao lưu từ một nút thay vì phải xem lại toàn bộ danh sách,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,二重にリンクされたリストを使用すると、リスト全体を再度確認する必要がなく、ノードからバックアップできます。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,双链列表允许您从节点进行备份，而不必再次浏览整个列表,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,تسمح لك القائمة المرتبطة بشكل مضاعف بالنسخ الاحتياطي من عقدة بدلاً من الاضطرار إلى استعراض القائمة بأكملها مرة أخرى,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.","подвійно зв’язаний список дозволяє створювати резервні копії з вузла, а не переглядати весь список знову",Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",uma lista duplamente vinculada permite que você faça backup de um nó ao invés de ter que percorrer a lista inteira novamente,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,لیست پیوندی مضاعف به شما اجازه می دهد تا از یک گره پشتیبان گیری کنید تا اینکه مجبور شوید کل لیست را دوباره مرور کنید,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",una llista doblement enllaçada us permet fer còpies de seguretat des d’un node en lloc d’haver de tornar a passar per tota la llista,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.","двоструко повезана листа вам омогућава да направите резервну копију са чвора, уместо да морате поново да пролазите кроз целу листу",Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",daftar tertaut ganda memungkinkan Anda untuk membuat cadangan dari sebuah node daripada harus melalui seluruh daftar lagi,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",en dobbeltkoblet liste lar deg sikkerhetskopiere fra en node i stedet for å måtte gå gjennom hele listen igjen,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,이중 연결 목록을 사용하면 전체 목록을 다시 살펴볼 필요없이 노드에서 백업 할 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.","kaksinkertaisesti linkitetyn luettelon avulla voit varmuuskopioida solmusta sen sijaan, että sinun pitäisi käydä läpi koko luettelo uudelleen",Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.","a kétszeresen összekapcsolt lista lehetővé teszi, hogy biztonsági másolatot készítsen egy csomópontról, ahelyett, hogy újra át kellene néznie a teljes listát",Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.","dvojnásobně propojený seznam vám umožňuje zálohovat z uzlu, místo abyste museli znovu procházet celým seznamem",Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.","dvostruko povezana lista omogućava vam izradu sigurnosne kopije sa čvora, umjesto da morate ponovo prolaziti kroz cijelu listu"
176,176,1894,11.2,The access specifiers are public and private.,Private and public.,What are the access-specifiers that can be used in a C++ class definition?,5.0,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,Die Zugriffsspezifizierer sind öffentlich und privat.,Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,Ang mga specifier sa pag-access publiko ug pribado.,Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,Åtkomstspecifikationerna är offentliga och privata.,Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,Les spécificateurs d&#39;accès sont publics et privés.,Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,De toegangsspecificaties zijn openbaar en privé.,Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,Спецификаторы доступа бывают общедоступными и частными.,Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,Gli specificatori di accesso sono pubblici e privati.,¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,Los especificadores de acceso son públicos y privados.,"Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,Specyfikatory dostępu są publiczne i prywatne.,Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,Các chỉ định truy cập là công khai và riêng tư.,C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,アクセス指定子はパブリックとプライベートです。,C ++类定义中可以使用哪些访问说明符？,私人和公共。,访问说明符是公共的和私有的。,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,محددات الوصول هي عامة وخاصة.,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,Специфікатори доступу є загальнодоступними та приватними.,Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,Os especificadores de acesso são públicos e privados.,مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,مشخص کننده های دسترسی عمومی و خصوصی هستند.,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,Els especificadors d&#39;accés són públics i privats.,Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,Спецификатори приступа су јавни и приватни.,Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,Penentu akses bersifat publik dan pribadi.,Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,Tilgangsspesifikatorene er offentlige og private.,C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,액세스 지정자는 공용 및 개인용입니다.,"Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,Pääsyn määrittelijät ovat julkisia ja yksityisiä.,Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,A hozzáférési specifikációk nyilvánosak és privátak.,"Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,Specifikátory přístupu jsou veřejné a soukromé.,Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,Specifikatori pristupa su javni i privatni.
177,177,761,4.5,Every dimension after the first.,"All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,5.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?",Jede Dimension nach der ersten.,Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.",Ang matag sukat pagkahuman sa una.,Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",Varje dimension efter den första.,Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.",Chaque dimension après la première.,Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.",Elke dimensie na de eerste.,Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.",Каждое измерение после первого.,Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.",Ogni dimensione dopo la prima.,¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.",Cada dimensión después de la primera.,Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.",Każdy wymiar po pierwszym.,Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.",Mọi thứ nguyên sau thứ nhất.,多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,最初の後のすべての次元。,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,在第一个维度之后。,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,كل بعد بعد الأول.,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.",Кожен вимір після першого.,Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.",Cada dimensão após a primeira.,هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,هر بعد از بعد اول.,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.",Cada dimensió després de la primera.,Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.",Свака димензија после прве.,Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.",Setiap dimensi setelah yang pertama.,Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.",Hver dimensjon etter den første.,다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,첫 번째 이후의 모든 차원.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.",Jokainen ulottuvuus ensimmäisen jälkeen.,"Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.",Minden dimenzió az első után.,Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.",Každá dimenze po první.,Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.",Svaka dimenzija nakon prve.
178,178,1044,6.4,Takes the number of array elements and points to each at a time,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,2.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,Nimmt die Anzahl der Array-Elemente und zeigt jeweils auf ein Element,Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",Gikuha ang ihap sa mga elemento sa laray ug gipunting matag usa sa matag higayon,Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,Tar antalet matriselement och pekar på var och en i taget,Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",Prend le nombre d&#39;éléments de tableau et pointe vers chacun à la fois,Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",Neemt het aantal array-elementen en wijst naar elk tegelijk,Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",Принимает количество элементов массива и указывает на каждый за раз,Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,Accetta il numero di elementi dell&#39;array e punta a ciascuno alla volta,¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,Toma el número de elementos de la matriz y apunta a cada uno a la vez,Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.",Pobiera liczbę elementów tablicy i wskazuje na każdy naraz,Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",Lấy số phần tử của mảng và trỏ đến từng phần tử tại một thời điểm,配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,一度に配列要素とポイントの数を取得します,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,获取数组元素的数量并一次指向每个数组元素,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,يأخذ عدد عناصر المصفوفة والنقاط إلى كل منها في وقت واحد,Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",Бере кількість елементів масиву і вказує на кожен за раз,Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",Pega o número de elementos da matriz e aponta para cada um de cada vez,چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,تعداد عناصر آرایه را گرفته و همزمان به هر کدام نشان می دهد,Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",Agafa el nombre d&#39;elements i punts de matriu a cada vegada,Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",Узима број елемената низа и показује на сваки одједном,Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",Mengambil jumlah elemen array dan poin ke masing-masing elemen dalam satu waktu,Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",Tar antall matriseelementer og peker på hver om gangen,포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,한 번에 배열 요소와 포인트 수를 가져옵니다.,Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,Ottaa matriisielementtien ja pisteiden määrän kerrallaan,Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.","A tömbelemek számát veszi, és egyszerre mutat mindegyikre",Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,Vezme počet prvků pole a body na jednotlivé najednou,Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",Uzima broj elemenata niza i upućuje na svaki odjednom
179,179,126,1.5,It is a location in the computer's memory where it can be stored for use by a program.,A location in memory that can store a value.,What is a variable?,5.0,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,"Es ist ein Ort im Speicher des Computers, an dem er zur Verwendung durch ein Programm gespeichert werden kann.",Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,Kini usa ka lokasyon sa memorya sa kompyuter diin mahimo kini tipigan aron magamit sa usa ka programa.,Vad är en variabel?,En plats i minnet som kan lagra ett värde.,Det är en plats i datorns minne där den kan lagras för användning av ett program.,Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,C&#39;est un emplacement dans la mémoire de l&#39;ordinateur où il peut être stocké pour être utilisé par un programme.,Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,Het is een locatie in het computergeheugen waar het kan worden opgeslagen voor gebruik door een programma.,Что такое переменная?,"Место в памяти, в котором может храниться значение.","Это место в памяти компьютера, где он может храниться для использования программой.",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,È una posizione nella memoria del computer in cui può essere archiviata per essere utilizzata da un programma.,¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,Es una ubicación en la memoria de la computadora donde se puede almacenar para su uso por un programa.,Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.","Jest to miejsce w pamięci komputera, w którym można je przechowywać do użytku przez program.",Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,"Nó là một vị trí trong bộ nhớ của máy tính, nơi nó có thể được lưu trữ để sử dụng bởi một chương trình.",変数とは何ですか？,値を格納できるメモリ内の場所。,これは、プログラムで使用するために保存できるコンピュータのメモリ内の場所です。,什么是变量？,内存中可以存储值的位置。,它是计算机内存中可以存储以供程序使用的位置。,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,إنه موقع في ذاكرة الكمبيوتر حيث يمكن تخزينه لاستخدام البرنامج.,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","Це місце в пам’яті комп’ютера, де його можна зберегти для використання програмою.",O que é uma variável?,Um local na memória que pode armazenar um valor.,É um local na memória do computador onde pode ser armazenado para uso por um programa.,متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,مکانی در حافظه رایانه است که می تواند برای استفاده توسط برنامه ذخیره شود.,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,És una ubicació a la memòria de l&#39;ordinador on es pot emmagatzemar per a un programa.,Шта је променљива?,Локација у меморији која може да ускладишти вредност.,То је место у меморији рачунара на којем га програм може сачувати за употребу.,Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,Ini adalah lokasi di memori komputer di mana ia dapat disimpan untuk digunakan oleh suatu program.,Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,Det er et sted i datamaskinens minne der det kan lagres for bruk av et program.,변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,프로그램에서 사용하기 위해 저장할 수있는 컴퓨터 메모리의 위치입니다.,Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.","Se on paikka tietokoneen muistissa, johon se voidaan tallentaa ohjelman käyttöä varten.",Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.","Ez a hely a számítógép memóriájában, ahol egy program számára tárolható.",Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.","Jedná se o místo v paměti počítače, kde může být uloženo pro použití programem.",Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,To je mjesto u memoriji računara gdje ga može pohraniti za upotrebu u programu.
180,180,703,4.3,specify the array name without brackets.,by reference.,How are arrays passed to functions?,3.0,durch Bezugnahme.,Wie werden Arrays an Funktionen übergeben?,Geben Sie den Array-Namen ohne Klammern an.,Giunsa ang pagpasa sa mga array sa mga gimbuhaton?,pinaagi sa pakisayran.,ipiho ang ngalan sa array nga wala’y bracket.,Hur skickas matriser till funktioner?,genom hänvisning.,ange arraynamnet utan parentes.,Comment les tableaux sont-ils passés aux fonctions?,par référence.,spécifiez le nom du tableau sans crochets.,Hoe worden arrays doorgegeven aan functies?,door verwijzing.,specificeer de arraynaam zonder haakjes.,Как массивы передаются функциям?,по ссылке.,укажите имя массива без скобок.,Come vengono passati gli array alle funzioni?,come riferimento.,specificare il nome dell&#39;array senza parentesi.,¿Cómo se pasan las matrices a las funciones?,por referencia.,especifique el nombre de la matriz sin corchetes.,W jaki sposób tablice są przekazywane do funkcji?,przez odniesienie.,określ nazwę tablicy bez nawiasów.,Mảng được truyền cho các hàm như thế nào?,bằng cách tham khảo.,chỉ định tên mảng mà không có dấu ngoặc.,配列はどのように関数に渡されますか？,参照による。,配列名を角かっこなしで指定します。,数组如何传递给函数？,引用。,指定不带括号的数组名称。,كيف يتم تمرير المصفوفات إلى الوظائف؟,بالتزكية.,حدد اسم المصفوفة بدون أقواس.,Як масиви передаються функціям?,за посиланням.,вкажіть ім&#39;я масиву без дужок.,Como os arrays são passados para as funções?,por referência.,especifique o nome da matriz sem colchetes.,چگونه آرایه ها به توابع منتقل می شوند؟,با مرجع.,نام آرایه را بدون براکت مشخص کنید.,Com es passen les matrius a les funcions?,per referència.,especifiqueu el nom de la matriu sense claudàtors.,Како се низови преносе функцијама?,по референци.,наведите име низа без заграда.,Bagaimana array diteruskan ke fungsi?,dengan referensi.,tentukan nama array tanpa tanda kurung.,Hvordan overføres matriser til funksjoner?,som referanse.,spesifiser matrisenavnet uten parentes.,배열은 함수에 어떻게 전달됩니까?,참고로.,대괄호없이 배열 이름을 지정하십시오.,Kuinka taulukot välitetään funktioille?,viittaamalla.,määritä taulukon nimi ilman sulkeita.,Hogyan adják át a tömbök a függvényeknek?,referencia alapján.,adja meg a tömb nevét zárójelek nélkül.,Jak jsou pole předávána funkcím?,Odkazem.,zadejte název pole bez závorek.,Kako se nizovi prenose funkcijama?,putem reference.,navedite ime polja bez zagrada.
181,181,1457,8.6,they are converted to postfix,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",How are infix expressions evaluated by computers?,5.0,"Zunächst werden sie in die Postfix-Form konvertiert, gefolgt von einer Auswertung des Postfix-Ausdrucks.",Wie werden Infix-Ausdrücke von Computern ausgewertet?,Sie werden in Postfix konvertiert,Giunsa ang pagsusi sa mga ekspresyon sa infix sa mga kompyuter?,"Una, gibag-o sila ngadto sa porma nga postfix, gisundan sa usa ka pagsusi sa ekspresyon sa postfix.",nabag-o sila sa postfix,Hur utvärderas infixuttryck av datorer?,"Först omvandlas de till postfix-form, följt av en utvärdering av postfix-uttrycket.",de konverteras till postfix,Comment les expressions infixes sont-elles évaluées par les ordinateurs?,"Tout d&#39;abord, ils sont convertis en forme de suffixe, suivi d&#39;une évaluation de l&#39;expression de suffixe.",ils sont convertis en postfix,Hoe worden tussenvoegseluitdrukkingen door computers geëvalueerd?,"Eerst worden ze omgezet in een postfix-vorm, gevolgd door een evaluatie van de postfix-expressie.",ze worden geconverteerd naar postfix,Как инфиксные выражения оцениваются компьютерами?,"Сначала они преобразуются в постфиксную форму, после чего выполняется оценка постфиксного выражения.",они конвертируются в постфикс,Come vengono valutate le espressioni infisso dai computer?,"In primo luogo, vengono convertiti in formato suffisso, seguito da una valutazione dell&#39;espressione suffisso.",vengono convertiti in suffisso,¿Cómo evalúan las computadoras las expresiones infijas?,"Primero, se convierten en forma de sufijo, seguido de una evaluación de la expresión de sufijo.",se convierten a sufijo,W jaki sposób wyrażenia infix są oceniane przez komputery?,"Najpierw są konwertowane do postaci postfiksowej, po czym następuje ocena wyrażenia postfiksowego.",są konwertowane na postfix,Các biểu thức infix được máy tính đánh giá như thế nào?,"Đầu tiên, chúng được chuyển đổi thành dạng postfix, sau đó là đánh giá biểu thức postfix.",chúng được chuyển đổi thành postfix,中置式はコンピューターによってどのように評価されますか？,最初に、それらは接尾辞形式に変換され、続いて接尾辞式が評価されます。,それらは接尾辞に変換されます,计算机如何评估中缀表达式？,首先，将它们转换为后缀形式，然后评估后缀表达式。,他们被转换为后缀,كيف يتم تقييم تعبيرات infix بواسطة أجهزة الكمبيوتر؟,أولاً ، يتم تحويلها إلى نموذج postfix ، متبوعًا بتقييم للتعبير postfix.,تم تحويلها إلى postfix,Як обчислюються комп’ютерні вирази для інфіксів?,"Спочатку вони перетворюються у форму постфіксу, після чого виконується оцінка виразу постфікса.",вони перетворюються на постфікс,Como as expressões infixas são avaliadas por computadores?,"Primeiro, eles são convertidos para a forma pós-fixada, seguida por uma avaliação da expressão pós-fixada.",eles são convertidos para postfix,عبارات اینفیکس توسط رایانه چگونه ارزیابی می شوند؟,ابتدا به فرم postfix تبدیل می شوند و به دنبال آن ارزیابی از بیان postfix می شود.,آنها به postfix تبدیل می شوند,Com s’avaluen les expressions infix per ordinadors?,"En primer lloc, es converteixen en forma postfix, seguida d&#39;una avaluació de l&#39;expressió postfix.",es converteixen en postfix,Како рачунарски процењују инфиксне изразе?,"Прво се претварају у постфиксни облик, након чега следи процена израза постфикса.",претварају се у постфик,Bagaimana ekspresi infix dievaluasi oleh komputer?,"Pertama, mereka diubah menjadi bentuk postfix, diikuti dengan evaluasi ekspresi postfix.",mereka diubah menjadi postfix,Hvordan vurderes infix-uttrykk av datamaskiner?,"Først blir de konvertert til postfix-form, etterfulgt av en evaluering av postfix-uttrykket.",de blir konvertert til postfix,중위 식은 컴퓨터에서 어떻게 평가됩니까?,먼저 접미사 형식으로 변환 된 다음 접미사 식의 평가가 이어집니다.,그들은 접미사로 변환됩니다,Kuinka tietokoneet arvioivat infix-lausekkeita?,"Ensin ne muunnetaan postfix-muotoon, mitä seuraa postfix-lausekkeen arviointi.",ne muunnetaan postfixiksi,Hogyan értékelik a számítógépek az infix kifejezéseket?,"Először átalakítják őket postfix formává, majd értékelik a postfix kifejezést.",átalakítják postfix-be,Jak jsou výrazy infixu vyhodnocovány počítači?,"Nejprve jsou převedeny do formy postfixu, následované hodnocením výrazu postfixu.",jsou převedeny na postfix,Kako računarski procenjuju infiksne izraze?,"Prvo se pretvaraju u postfix oblik, nakon čega slijedi procjena izraza postfix.",pretvaraju se u postfix
182,182,443,3.1,"it includes the name of the function, and the types of its arguments. it does not specify the function return type. Function in the same scope must have unqiue signatures.",The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,Es enthält den Namen der Funktion und die Typen ihrer Argumente. Der Funktionsrückgabetyp wird nicht angegeben. Funktionen im gleichen Bereich müssen eindeutige Signaturen haben.,Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,"kauban niini ang ngalan sa pagpaandar, ug ang mga lahi sa mga argumento niini. wala kini gipiho ang tipo sa pagbalik sa pagpaandar. Ang pagpaandar sa parehas nga sakup kinahanglan adunay mga pirma nga dili mga kinaiya.",Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,den inkluderar funktionens namn och typerna av dess argument. det anger inte funktionstypen för retur. Funktion i samma omfattning måste ha unqiue-signaturer.,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,il inclut le nom de la fonction et les types de ses arguments. il ne spécifie pas le type de retour de la fonction. La fonction dans la même portée doit avoir des signatures uniques.,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,het bevat de naam van de functie en de typen argumenten. het specificeert niet het functieretourtype. Functies in hetzelfde bereik moeten unieke handtekeningen hebben.,Что включает в себя сигнатура функции?,Имя функции и типы параметров.,он включает имя функции и типы ее аргументов. он не указывает тип возвращаемого значения функции. Функция в той же области должна иметь уникальные сигнатуры.,Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,include il nome della funzione e i tipi dei suoi argomenti. non specifica il tipo di ritorno della funzione. La funzione nello stesso ambito deve avere firme unqiue.,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,incluye el nombre de la función y los tipos de sus argumentos. no especifica el tipo de retorno de la función. La función en el mismo ámbito debe tener firmas únicas.,Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,zawiera nazwę funkcji i typy jej argumentów. nie określa typu zwracanego funkcji. Funkcja w tym samym zakresie musi mieć niepowtarzalne podpisy.,Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,nó bao gồm tên của hàm và các loại đối số của nó. nó không chỉ định kiểu trả về của hàm. Chức năng trong cùng phạm vi phải có chữ ký không liên quan.,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数の名前とその引数のタイプが含まれます。関数の戻り値の型は指定しません。同じスコープ内の関数には、unqiueシグニチャが必要です。,功能签名包括什么？,函数的名称和参数的类型。,它包括函数的名称及其参数的类型。它未指定函数返回类型。同一作用域中的功能必须具有非签名。,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,يتضمن اسم الوظيفة وأنواع وسائطها. لا يحدد نوع إرجاع الوظيفة. يجب أن تحتوي الوظيفة في نفس النطاق على تواقيع غير دقيقة.,Що включає підпис функції?,Назва функції та типи параметрів.,він включає назву функції та типи її аргументів. він не визначає тип повернення функції. Функція в тій самій області повинна мати неоднозначні підписи.,O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,inclui o nome da função e os tipos de seus argumentos. não especifica o tipo de retorno da função. A função no mesmo escopo deve ter assinaturas exclusivas.,امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,این شامل نام تابع و انواع آرگومان های آن است. نوع بازگشت عملکرد را مشخص نمی کند. عملکرد در همان محدوده باید دارای امضاهای خالص باشد.,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,inclou el nom de la funció i els tipus d&#39;arguments. no especifica el tipus de retorn de la funció. La funció del mateix àmbit ha de tenir signatures unqiue.,Шта укључује потпис функције?,Назив функције и врсте параметара.,укључује име функције и врсте њених аргумената. не наводи тип повратка функције. Функција у истом опсегу мора имати једнозначне потписе.,Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,"itu termasuk nama fungsi, dan tipe argumennya. itu tidak menentukan tipe pengembalian fungsi. Fungsi dalam lingkup yang sama harus memiliki tanda tangan unqiue.",Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,den inkluderer navnet på funksjonen og typene av argumentene. den angir ikke funksjonstypen for retur. Funksjon i samme omfang må ha unqiue signaturer.,함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,여기에는 함수의 이름과 인수 유형이 포함됩니다. 함수 반환 유형을 지정하지 않습니다. 동일한 범위의 기능에는 고유 한 서명이 있어야합니다.,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,se sisältää funktion nimen ja sen argumenttien tyypit. se ei määritä funktion palautustyyppiä. Toiminnolla samassa laajuudessa on oltava epätavallisia allekirjoituksia.,Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,tartalmazza a függvény nevét és argumentumainak típusait. nem adja meg a függvény visszatérési típusát. Az azonos hatókörű funkciónak nem kötelező aláírással kell rendelkeznie.,Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,zahrnuje název funkce a typy jejích argumentů. neurčuje návratový typ funkce. Funkce ve stejném oboru musí mít nepodepsané podpisy.,Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,uključuje ime funkcije i vrste njenih argumenata. ne specificira tip povrata funkcije. Funkcija u istom opsegu mora imati jednoznačne potpise.
183,183,2277,12.5,"Linked Lists can be of variable size, where arrays have fixed size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",What is the advantage of linked lists over arrays?,5.0,"Verknüpfte Listen sind dynamische Strukturen, mit denen eine variable Anzahl von Elementen gespeichert werden kann.",Was ist der Vorteil von verknüpften Listen gegenüber Arrays?,"Verknüpfte Listen können eine variable Größe haben, wobei Arrays eine feste Größe haben.",Unsa ang bentaha sa mga nalambigit nga lista sa mga pag-array?,"Ang mga nalista nga lista usa ka dinamikong istruktura, nga nagtugot sa usa ka variable number sa mga elemento nga matipigan.","Ang mga naka-link nga Lista mahimo’g lainlain nga gidak-on, diin ang mga array adunay gitakda nga gidak-on.",Vilken är fördelen med länkade listor framför matriser?,Länkade listor är dynamiska strukturer som gör det möjligt att lagra ett varierande antal element.,"Länkade listor kan ha varierande storlek, där matriser har fast storlek.",Quel est l&#39;avantage des listes chaînées par rapport aux tableaux?,"Les listes liées sont des structures dynamiques, qui permettent de stocker un nombre variable d&#39;éléments.","Les listes liées peuvent être de taille variable, les tableaux ayant une taille fixe.",Wat is het voordeel van gekoppelde lijsten ten opzichte van arrays?,Gelinkte lijsten zijn dynamische structuren waarmee een variabel aantal elementen kan worden opgeslagen.,"Gekoppelde lijsten kunnen een variabele grootte hebben, waarbij arrays een vaste grootte hebben.",В чем преимущество связанных списков перед массивами?,"Связанные списки - это динамические структуры, которые позволяют хранить переменное количество элементов.","Связанные списки могут быть переменного размера, а массивы - фиксированного размера.",Qual è il vantaggio degli elenchi collegati rispetto agli array?,"Gli elenchi collegati sono strutture dinamiche, che consentono di memorizzare un numero variabile di elementi.","Gli elenchi collegati possono essere di dimensioni variabili, dove gli array hanno dimensioni fisse.",¿Cuál es la ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas son estructuras dinámicas que permiten almacenar un número variable de elementos.,"Las Listas Vinculadas pueden tener un tamaño variable, donde las matrices tienen un tamaño fijo.",Jaka jest przewaga połączonych list nad tablicami?,"Listy połączone to struktury dynamiczne, które pozwalają na przechowywanie zmiennej liczby elementów.","Połączone listy mogą mieć zmienny rozmiar, a tablice mają stały rozmiar.",Lợi thế của danh sách liên kết so với mảng là gì?,"Danh sách được liên kết là cấu trúc động, cho phép lưu trữ một số phần tử thay đổi.","Danh sách được Liên kết có thể có kích thước thay đổi, trong đó các mảng có kích thước cố định.",配列に対するリンクリストの利点は何ですか？,リンクリストは動的な構造であり、可変数の要素を格納できます。,リンクリストは可変サイズにすることができ、配列のサイズは固定されています。,链表相对于数组的优势是什么？,链接列表是动态结构，可以存储可变数量的元素。,链表可以具有可变大小，其中数组具有固定大小。,ما هي ميزة القوائم المرتبطة على المصفوفات؟,القوائم المرتبطة عبارة عن هياكل ديناميكية تسمح بتخزين عدد متغير من العناصر.,يمكن أن تكون القوائم المرتبطة ذات حجم متغير ، حيث يكون للصفائف حجم ثابت.,У чому перевага зв’язаних списків перед масивами?,"Зв’язані списки - це динамічні структури, які дозволяють зберігати змінну кількість елементів.","Зв’язані списки можуть мати змінний розмір, де масиви мають фіксований розмір.",Qual é a vantagem das listas vinculadas sobre os arrays?,Listas vinculadas são estruturas dinâmicas que permitem o armazenamento de um número variável de elementos.,"Listas vinculadas podem ser de tamanho variável, onde as matrizes têm tamanho fixo.",مزیت لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی ساختارهای پویایی هستند که اجازه می دهند تعداد متغیری از عناصر ذخیره شوند.,لیست های پیوندی می توانند اندازه متغیری داشته باشند ، جایی که آرایه ها دارای اندازه ثابت باشند.,Quin avantatge tenen les llistes enllaçades sobre les matrius?,Les llistes enllaçades són estructures dinàmiques que permeten emmagatzemar un nombre variable d’elements.,"Les llistes enllaçades poden tenir una mida variable, on les matrius tenen una mida fixa.",Која је предност повезаних листа над низовима?,"Повезане листе су динамичке структуре, које омогућавају чување променљивог броја елемената.","Повезане листе могу бити променљиве величине, где низови имају фиксну величину.",Apa keuntungan dari daftar tertaut dibandingkan array?,"Daftar tertaut adalah struktur dinamis, yang memungkinkan penyimpanan sejumlah elemen variabel.","Daftar Tertaut dapat berukuran variabel, di mana array memiliki ukuran tetap.",Hva er fordelen med koblede lister i forhold til matriser?,"Koblede lister er dynamiske strukturer, som gjør det mulig å lagre et variabelt antall elementer.","Koblede lister kan ha variabel størrelse, der matriser har fast størrelse.",배열에 비해 연결된 목록의 장점은 무엇입니까?,"연결된 목록은 동적 구조로, 다양한 수의 요소를 저장할 수 있습니다.",연결된 목록은 배열 크기가 고정 된 가변 크기 일 수 있습니다.,Mikä on linkitettyjen luetteloiden etu matriiseihin verrattuna?,"Linkitetyt luettelot ovat dynaamisia rakenteita, joiden avulla voidaan tallentaa vaihteleva määrä elementtejä.","Linkitetyt luettelot voivat olla erikokoisia, missä matriisien koko on kiinteä.",Mi az előnye a kapcsolt listáknak a tömbökkel szemben?,"Az összekapcsolt listák dinamikus struktúrák, amelyek változó számú elem tárolását teszik lehetővé.","Az összekapcsolt listák változó méretűek lehetnek, ahol a tömbök fix méretűek.",Jaká je výhoda propojených seznamů oproti polím?,"Propojené seznamy jsou dynamické struktury, které umožňují uložit proměnný počet prvků.","Propojené seznamy mohou mít různou velikost, kde pole mají pevnou velikost.",Koja je prednost povezanih lista nad nizovima?,"Povezane liste su dinamičke strukture, koje omogućuju pohranjivanje promjenjivog broja elemenata.","Povezane liste mogu biti promjenljive veličine, gdje nizovi imaju fiksnu veličinu."
184,184,2021,11.6,Using iteration loops.,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?",Verwenden von Iterationsschleifen.,Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,Paggamit mga galong nga iteration.,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,Använda iterationsslingor.,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,Utilisation de boucles d&#39;itération.,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,Gebruik iteratielussen.,"Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,Использование итерационных циклов.,Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,Utilizzo di cicli di iterazione.,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,Utilizando bucles de iteración.,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,Korzystanie z pętli iteracyjnych.,Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,Sử dụng các vòng lặp.,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,反復ループの使用。,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,使用迭代循环。,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,استخدام حلقات التكرار.,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,Використання ітераційних петель.,Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,Usando loops de iteração.,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,استفاده از حلقه های تکرار.,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,Ús de bucles d’iteració.,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,Коришћењем итерационих петљи.,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,Menggunakan loop iterasi.,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,Bruke iterasjonsslynger.,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,반복 루프 사용.,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,Käyttämällä iterointisilmukoita.,Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,Iterációs hurkok használata.,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,Použití iteračních smyček.,Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,Korištenje iteracijskih petlji.
185,185,1563,9.3,Keep track of the front and the back of the array as you increase and decrease the elements inside the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",How can you implement a queue with an array?,4.0,Verwenden Sie ein kreisförmiges Array. Halten Sie die Rückseite der Warteschlange zum Ende des Arrays und die Vorderseite zum Anfang und lassen Sie den hinteren Zeiger umlaufen.,Wie können Sie eine Warteschlange mit einem Array implementieren?,"Behalten Sie die Vorder- und Rückseite des Arrays im Auge, während Sie die Elemente im Array vergrößern und verkleinern.",Giunsa nimo ipatuman ang usa ka pila nga adunay usa ka laray?,"Paggamit usa ka lingin nga han-ay. Ipadayon ang likud sa pila sa katapusan sa laray, ug ang atubangan sa pagsugod, ug tugoti ang likud nga pointer nga palibuton.",Pagsunud sa unahan ug sa likud sa han-ay sa imong pagdugang ug pagminus sa mga elemento sa sulud sa laray.,Hur kan du implementera en kö med en matris?,Använd en cirkulär grupp. Håll köens bakre del mot slutet av matrisen och framsidan mot början och låt den bakre pekaren vika runt.,Håll koll på framsidan och baksidan av arrayen när du ökar och minskar elementen inuti arrayen.,Comment pouvez-vous implémenter une file d&#39;attente avec un tableau?,Utilisez un réseau circulaire. Gardez l&#39;arrière de la file d&#39;attente vers la fin de la matrice et l&#39;avant vers le début et laissez le pointeur arrière s&#39;enrouler.,Gardez une trace de l&#39;avant et de l&#39;arrière du tableau à mesure que vous augmentez et réduisez les éléments à l&#39;intérieur du tableau.,Hoe implementeer je een wachtrij met een array?,"Gebruik een cirkelvormige matrix. Houd de achterkant van de wachtrij aan het einde van de array en de voorkant aan het begin, en laat de achterste aanwijzer ronddraaien.",Houd de voor- en achterkant van de array bij terwijl u de elementen binnen de array vergroot of verkleint.,Как можно реализовать очередь с массивом?,"Используйте круговой массив. Держите заднюю часть очереди к концу массива, а переднюю - к началу, и позвольте заднему указателю перемещаться вокруг.",Следите за передней и задней частью массива по мере увеличения и уменьшения элементов внутри массива.,Come puoi implementare una coda con un array?,Usa una matrice circolare. Mantenere la parte posteriore della coda verso la fine dell&#39;array e la parte anteriore verso l&#39;inizio e consentire al puntatore posteriore di spostarsi.,Tieni traccia della parte anteriore e posteriore dell&#39;array mentre aumenti e diminuisci gli elementi all&#39;interno dell&#39;array.,¿Cómo se puede implementar una cola con una matriz?,"Utilice una matriz circular. Mantenga la parte posterior de la cola hacia el final de la matriz y la parte frontal hacia el principio, y permita que el puntero posterior se enrolle.",Realice un seguimiento del frente y la parte posterior de la matriz a medida que aumenta y disminuye los elementos dentro de la matriz.,Jak zaimplementować kolejkę z tablicą?,"Użyj szyku kołowego. Trzymaj tylną część kolejki w kierunku końca macierzy, a przód w kierunku początku i pozwól, aby tylny wskaźnik zawijał się.","Śledź przód i tył tablicy, zwiększając i zmniejszając elementy wewnątrz tablicy.",Làm thế nào bạn có thể triển khai một hàng đợi với một mảng?,Sử dụng một mảng tròn. Giữ phần sau của hàng đợi về phía cuối mảng và phía trước về phía đầu và cho phép con trỏ phía sau quấn quanh.,Theo dõi mặt trước và mặt sau của mảng khi bạn tăng và giảm các phần tử bên trong mảng.,配列を使用してキューを実装するにはどうすればよいですか？,循環配列を使用します。キューの後部を配列の最後に向け、前部を最初に向けて、後部ポインターが折り返されるようにします。,配列内の要素を増減するときに、配列の前面と背面を追跡します。,如何实现带有数组的队列？,使用圆形数组。将队列的后部保持在数组的末尾，将队列的后部保持在开头，并让后部指针回绕。,在增加和减少数组中的元素时，请跟踪数组的前后。,كيف يمكنك تنفيذ قائمة انتظار مع مصفوفة؟,استخدم مصفوفة دائرية. احتفظ بمؤخرة قائمة الانتظار باتجاه نهاية المصفوفة ، والأمام نحو البداية ، واسمح للمؤشر الخلفي بالالتفاف حوله.,تتبع الجزء الأمامي والخلفي من المصفوفة أثناء زيادة العناصر داخل المصفوفة وتقليلها.,Як можна реалізувати чергу з масивом?,"Використовуйте круговий масив. Тримайте задню частину черги до кінця масиву, а передню - до початку, і дозвольте задньому вказівнику обернутися.","Слідкуйте за передньою і задньою сторонами масиву, збільшуючи та зменшуючи елементи всередині масиву.",Como você pode implementar uma fila com um array?,"Use uma matriz circular. Mantenha a parte traseira da fila voltada para o final da matriz e a frente voltada para o início, e deixe o ponteiro traseiro envolver.",Acompanhe a frente e o verso da matriz à medida que aumenta e diminui os elementos dentro da matriz.,چگونه می توان صف را با آرایه پیاده کرد؟,از یک آرایه دایره ای استفاده کنید. قسمت عقب صف را به سمت انتهای آرایه و قسمت جلویی را به سمت ابتدای آن نگه دارید و به نشانگر عقب اجازه دهید تا دور آن جمع شود.,با افزایش و کاهش عناصر داخل آرایه ، قسمت جلو و پشت آرایه را پیگیری کنید.,Com es pot implementar una cua amb una matriu?,Utilitzeu una matriu circular. Mantingueu la part posterior de la cua cap al final de la matriu i la part frontal cap al principi i deixeu que el punter posterior s’envolti.,Feu un seguiment de la part frontal i posterior de la matriu a mesura que aneu augmentant i disminuint els elements dins de la matriu.,Како можете имплементирати ред с низом?,"Користите кружни низ. Задњи део реда задржите према крају низа, а предњи према почетку и дозволите да се задњи показивач омота.",Пратите предњу и задњу страну низа док повећавате и смањујете елементе унутар низа.,Bagaimana Anda bisa mengimplementasikan antrian dengan array?,"Gunakan larik melingkar. Pertahankan bagian belakang antrian mendekati akhir larik, dan bagian depan mengarah ke awal, dan biarkan penunjuk belakang membungkusnya.",Pantau bagian depan dan belakang array saat Anda menambah dan mengurangi elemen di dalam array.,Hvordan kan du implementere en kø med en matrise?,"Bruk en sirkulær matrise. Hold baksiden av køen mot slutten av matrisen, og fronten mot begynnelsen, og la den bakre pekeren vikle seg rundt.",Hold oversikt over fronten og baksiden av arrayet når du øker og reduserer elementene i arrayet.,배열로 큐를 어떻게 구현할 수 있습니까?,"원형 배열을 사용하십시오. 대기열의 뒤쪽은 어레이의 끝쪽으로, 앞쪽은 시작쪽으로 유지하고 뒤쪽 포인터가 감길 수 있도록합니다.",배열 내부의 요소를 늘리거나 줄이면서 배열의 앞면과 뒷면을 추적하십시오.,Kuinka jono voidaan toteuttaa taulukon avulla?,Käytä pyöreää taulukkoa. Pidä jonon takaosaa matriisin loppua kohden ja etuosaa alkuun päin ja anna takaosoittimen kiertyä.,"Seuraa taulukon etu- ja takaosaa, kun lisäät ja pienennät ryhmän sisällä olevia elementtejä.",Hogyan valósíthat meg egy sort tömböt használva?,"Használjon kör alakú tömböt. Tartsa a sor hátulját a tömb vége felé, az elejét pedig az eleje felé, és hagyja, hogy a hátsó mutató körbefutjon.","Kövesse nyomon a tömb elejét és hátulját, miközben növeli és csökkenti a tömb belsejében lévő elemeket.",Jak můžete implementovat frontu s polem?,Použijte kruhové pole. Držte zadní část fronty směrem ke konci pole a přední směrem k začátku a nechte zadní ukazatel ohýbat.,Při zvětšování a zmenšování prvků uvnitř pole sledujte přední a zadní část pole.,Kako možete implementirati red s nizom?,"Koristite kružni niz. Zadnji dio reda držite prema kraju niza, a prednji prema početku i dopustite da se stražnji pokazivač omota.",Pratite prednju i stražnju stranu niza dok povećavate i smanjujete elemente unutar polja.
186,186,453,3.2,The entire program,File scope.,What is the scope of global variables?,4.5,Dateibereich.,Was ist der Umfang globaler Variablen?,Das gesamte Programm,Unsa ang kasangkaran sa mga variable sa kalibutan?,Sakup sa file.,Ang tibuuk nga programa,Vad är omfattningen av globala variabler?,Filomfång.,Hela programmet,Quelle est la portée des variables globales?,Portée du fichier.,L&#39;ensemble du programme,Wat is de omvang van globale variabelen?,Bestandsbereik.,Het hele programma,Каков объем глобальных переменных?,Область файла.,Вся программа,Qual è l&#39;ambito delle variabili globali?,Ambito del file.,L&#39;intero programma,¿Cuál es el alcance de las variables globales?,Alcance del archivo.,Todo el programa,Jaki jest zakres zmiennych globalnych?,Zakres plików.,Cały program,Phạm vi của các biến toàn cục là gì?,Phạm vi tệp.,Toàn bộ chương trình,グローバル変数のスコープは何ですか？,ファイルスコープ。,プログラム全体,全局变量的范围是什么？,文件范围。,整个程序,ما هو نطاق المتغيرات العالمية؟,نطاق الملف.,البرنامج بأكمله,Який обсяг глобальних змінних?,Обсяг файлу.,Вся програма,Qual é o escopo das variáveis globais?,Escopo do arquivo.,Todo o programa,دامنه متغیرهای جهانی چیست؟,دامنه پرونده,کل برنامه,Quin és l&#39;abast de les variables globals?,Abast del fitxer.,Tot el programa,Који је опсег глобалних променљивих?,Обим датотеке.,Цео програм,Apa ruang lingkup variabel global?,Ruang lingkup file.,Seluruh program,Hva er omfanget av globale variabler?,Filomfang.,Hele programmet,전역 변수의 범위는 무엇입니까?,파일 범위.,전체 프로그램,Mikä on globaalien muuttujien laajuus?,Tiedoston laajuus.,Koko ohjelma,Mi a globális változók hatóköre?,A fájl terjedelme.,A teljes program,Jaký je rozsah globálních proměnných?,Rozsah souboru.,Celý program,Koji je opseg globalnih varijabli?,Opseg datoteke.,Čitav program
187,187,1167,7.2,Linked lists are able to grow and shrink in size as needed,The linked lists can be of variable length.,What is the main advantage of linked lists over arrays?,5.0,Die verknüpften Listen können von variabler Länge sein.,Was ist der Hauptvorteil von verknüpften Listen gegenüber Arrays?,Verknüpfte Listen können nach Bedarf vergrößert und verkleinert werden,Unsa ang punoan nga bentaha sa mga nalambigit nga lista sa mga pag-array?,Ang gilakip nga mga lista mahimong adunay gitas-on nga variable.,Ang mga nalista nga lista makahimo sa pagtubo ug pag-urong sa gidak-on kung gikinahanglan,Vad är den största fördelen med länkade listor jämfört med matriser?,De länkade listorna kan ha varierande längd.,Länkade listor kan växa och krympa i storlek efter behov,Quel est le principal avantage des listes chaînées par rapport aux tableaux?,Les listes chaînées peuvent être de longueur variable.,Les listes liées peuvent s&#39;agrandir et rétrécir selon les besoins,Wat is het belangrijkste voordeel van gekoppelde lijsten ten opzichte van arrays?,De gekoppelde lijsten kunnen een variabele lengte hebben.,Gelinkte lijsten kunnen naar behoefte groter en kleiner worden,В чем главное преимущество связанных списков перед массивами?,Связанные списки могут быть переменной длины.,Связанные списки могут увеличиваться и уменьшаться в размере по мере необходимости.,Qual è il vantaggio principale degli elenchi collegati rispetto agli array?,Le liste collegate possono essere di lunghezza variabile.,Gli elenchi collegati possono crescere e ridursi in base alle esigenze,¿Cuál es la principal ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas pueden tener una longitud variable.,Las listas vinculadas pueden crecer y reducir su tamaño según sea necesario,Jaka jest główna przewaga połączonych list nad tablicami?,Połączone listy mogą mieć różną długość.,Połączone listy mogą w razie potrzeby rosnąć i zmniejszać się,Ưu điểm chính của danh sách liên kết so với mảng là gì?,Các danh sách được liên kết có thể có độ dài thay đổi.,Danh sách được liên kết có thể phát triển và thu nhỏ kích thước khi cần thiết,配列に対するリンクリストの主な利点は何ですか？,リンクリストは可変長にすることができます。,リンクリストは、必要に応じてサイズを拡大および縮小できます,链表相对于数组的主要优点是什么？,链表的长度可以变化。,链接列表可以根据需要扩大和缩小,ما هي الميزة الرئيسية للقوائم المرتبطة على المصفوفات؟,يمكن أن تكون القوائم المرتبطة متغيرة الطول.,يمكن للقوائم المرتبطة أن تنمو وتتقلص في الحجم حسب الحاجة,Яка головна перевага пов’язаних списків над масивами?,Пов’язані списки можуть мати різну довжину.,Зв’язані списки можуть збільшуватись і зменшуватися в розмірі за потреби,Qual é a principal vantagem das listas vinculadas em relação às matrizes?,As listas vinculadas podem ter comprimento variável.,Listas vinculadas podem aumentar e diminuir de tamanho conforme necessário,مزیت اصلی لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی می توانند از طول متغیر باشند.,لیست های پیوندی در صورت لزوم قادر به رشد و کوچک شدن هستند,Quin és el principal avantatge de les llistes enllaçades sobre les matrius?,Les llistes enllaçades poden tenir una longitud variable.,Les llistes enllaçades poden créixer i reduir-se de mida segons sigui necessari,Која је главна предност повезаних листа над низовима?,Повезане листе могу бити променљиве дужине.,Повезане листе могу да расту и смањују се по потреби,Apa keuntungan utama dari daftar tertaut dibandingkan array?,Panjang daftar tertaut bisa bervariasi.,Daftar tertaut dapat bertambah dan menyusut sesuai kebutuhan,Hva er den største fordelen med koblede lister fremfor matriser?,De lenkede listene kan ha variabel lengde.,Koblede lister er i stand til å vokse og krympe i størrelse etter behov,배열에 비해 연결 목록의 주요 이점은 무엇입니까?,연결된 목록은 가변 길이 일 수 있습니다.,연결된 목록은 필요에 따라 크기를 늘리거나 줄일 수 있습니다.,Mikä on linkitettyjen luetteloiden tärkein etu matriiseihin nähden?,Linkitetyt luettelot voivat olla vaihtelevia pituisia.,Linkitetyt luettelot pystyvät kasvamaan ja kutistumaan kooltaan tarpeen mukaan,Mi a linkelt listák fő előnye a tömbökhöz képest?,A linkelt listák változó hosszúságúak lehetnek.,Az összekapcsolt listák szükség szerint képesek növekedni és zsugorodni,Jaká je hlavní výhoda propojených seznamů oproti polím?,Propojené seznamy mohou mít různou délku.,Propojené seznamy se mohou podle potřeby zvětšovat a zmenšovat,Koja je glavna prednost povezanih lista nad nizovima?,Povezane liste mogu biti promjenljive dužine.,Povezane liste mogu rasti i smanjivati se po potrebi
188,188,1992,11.5,A recursive function is a function that calls itself. Usually called the base case. If the base case is not correct it causes a infinite loop.,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine rekursive Funktion ist eine Funktion, die sich selbst aufruft. Wird normalerweise als Basisfall bezeichnet. Wenn der Basisfall nicht korrekt ist, führt dies zu einer Endlosschleife.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,Ang usa ka recursive function usa ka function nga nagtawag sa kaugalingon. Kasagaran gitawag nga base case. Kung ang basehan nga kaso dili tama kini hinungdan sa usa ka walay katapusan nga loop.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,En rekursiv funktion är en funktion som kallar sig själv. Kallas vanligtvis basfallet. Om basfallet inte är korrekt orsakar det en oändlig slinga.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,"Une fonction récursive est une fonction qui s&#39;appelle elle-même. Habituellement appelé le cas de base. Si le cas de base n&#39;est pas correct, il provoque une boucle infinie.",Wat is een recursieve functie?,Een functie die zichzelf aanroept.,"Een recursieve functie is een functie die zichzelf aanroept. Meestal het basisgeval genoemd. Als het basisscenario niet correct is, veroorzaakt dit een oneindige lus.",Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","Рекурсивная функция - это функция, которая вызывает сама себя. Обычно называется базовым случаем. Если базовый случай неверен, это вызывает бесконечный цикл.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,"Una funzione ricorsiva è una funzione che chiama se stessa. Di solito chiamato il caso di base. Se il caso di base non è corretto, provoca un ciclo infinito.",¿Qué es una función recursiva?,Una función que se llama a sí misma.,"Una función recursiva es una función que se llama a sí misma. Normalmente se llama caso base. Si el caso base no es correcto, provoca un bucle infinito.",Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","Funkcja rekurencyjna to funkcja, która wywołuje samą siebie. Zwykle nazywany przypadkiem podstawowym. Jeśli podstawowy przypadek nie jest poprawny, powoduje nieskończoną pętlę.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,"Một hàm đệ quy là một hàm gọi chính nó. Thường được gọi là trường hợp cơ sở. Nếu trường hợp cơ sở không đúng, nó gây ra một vòng lặp vô hạn.",再帰関数とは何ですか？,自分自身を呼び出す関数。,再帰関数は、それ自体を呼び出す関数です。通常、ベースケースと呼ばれます。基本ケースが正しくない場合、無限ループが発生します。,什么是递归函数？,调用自身的函数。,递归函数是一个调用自身的函数。通常称为基本情况。如果基本情况不正确，则会导致无限循环。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,الوظيفة العودية هي وظيفة تستدعي نفسها. عادة ما تسمى الحالة الأساسية. إذا كانت الحالة الأساسية غير صحيحة ، فإنها تتسبب في حلقة لا نهائية.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","Рекурсивна функція - це функція, яка викликає себе. Зазвичай називають базовим випадком. Якщо базовий випадок неправильний, це спричиняє нескінченний цикл.",O que é uma função recursiva?,Uma função que chama a si mesma.,"Uma função recursiva é uma função que chama a si mesma. Normalmente chamado de caso base. Se o caso base não estiver correto, ele causará um loop infinito.",تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,تابع بازگشتی تابعی است که خود را فراخوانی می کند. معمولاً مورد اصلی نامیده می شود. اگر حالت پایه درست نباشد باعث ایجاد یک حلقه نامحدود می شود.,Què és una funció recursiva?,Una funció que s’autodenomina.,"Una funció recursiva és una funció que s&#39;anomena a si mateixa. Normalment s’anomena cas base. Si el cas base no és correcte, provoca un bucle infinit.",Шта је рекурзивна функција?,Функција која себе позива.,"Рекурзивна функција је функција која себе позива. Обично се назива основни случај. Ако основни случај није тачан, то узрокује бесконачну петљу.",Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,"Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasa disebut base case. Jika kasus dasar tidak benar, itu menyebabkan loop tak terbatas.",Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,"En rekursiv funksjon er en funksjon som kaller seg selv. Vanligvis kalt basissaken. Hvis basissaken ikke er korrekt, forårsaker den en uendelig løkke.",재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,재귀 함수는 자신을 호출하는 함수입니다. 일반적으로 기본 케이스라고합니다. 기본 케이스가 올바르지 않으면 무한 루프가 발생합니다.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","Rekursiivinen toiminto on toiminto, joka kutsuu itseään. Yleensä kutsutaan perustapaukseksi. Jos perustaso ei ole oikea, se aiheuttaa loputtoman silmukan.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","A rekurzív függvény egy olyan függvény, amely önmagát hívja. Általában alapesetnek hívják. Ha az alapbetű nem megfelelő, akkor végtelen ciklust okoz.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","Rekurzivní funkce je funkce, která se sama volá. Obvykle se nazývá základní případ. Pokud základní případ není správný, způsobí to nekonečnou smyčku.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,"Rekurzivna funkcija je funkcija koja sebe poziva. Obično se naziva osnovni slučaj. Ako osnovni slučaj nije ispravan, uzrokuje beskonačnu petlju."
189,189,1060,6.5,Returns the size of the array in bytes during the program compilation.,The size in bytes of its operand.,What does the sizeof operator return?,4.5,Die Größe des Operanden in Byte.,Was gibt die Größe des Operators zurück?,Gibt die Größe des Arrays in Bytes während der Programmkompilierung zurück.,Unsa man ang pagbalik sa sizeof operator?,Ang kadako sa mga byte sa operand niini.,Gibalik ang kadako sa han-ay sa mga byte sa panahon sa pagtapok sa programa.,Vad returnerar operatörens storlek?,Storleken i byte för dess operand.,Returnerar storleken på matrisen i byte under programkompileringen.,Que renvoie l&#39;opérateur sizeof?,La taille en octets de son opérande.,Renvoie la taille du tableau en octets lors de la compilation du programme.,Wat levert de grootte van de operator op?,De grootte in bytes van de operand.,Retourneert de grootte van de array in bytes tijdens de compilatie van het programma.,Что возвращает оператор sizeof?,Размер в байтах его операнда.,Возвращает размер массива в байтах во время компиляции программы.,Cosa restituisce la dimensione dell&#39;operatore?,La dimensione in byte del suo operando.,Restituisce la dimensione della matrice in byte durante la compilazione del programma.,¿Qué devuelve el tamaño del operador?,El tamaño en bytes de su operando.,Devuelve el tamaño de la matriz en bytes durante la compilación del programa.,Jaki jest zwracany operator sizeof?,Rozmiar argumentu w bajtach.,Zwraca rozmiar tablicy w bajtach podczas kompilacji programu.,Toán tử sizeof trả về gì?,Kích thước tính bằng byte của toán hạng của nó.,Trả về kích thước của mảng tính bằng byte trong quá trình biên dịch chương trình.,sizeof演算子は何を返しますか？,オペランドのバイト単位のサイズ。,プログラムのコンパイル中に配列のサイズをバイト単位で返します。,sizeof运算符返回什么？,其操作数的大小（以字节为单位）。,返回程序编译期间数组的大小（以字节为单位）。,ماذا يعود حجم المشغل؟,الحجم بالبايت لمعاملها.,إرجاع حجم المصفوفة بالبايت أثناء تجميع البرنامج.,Що повертає оператор sizeof?,Розмір операнда в байтах.,Повертає розмір масиву в байтах під час компіляції програми.,O que o operador sizeof retorna?,O tamanho em bytes de seu operando.,Retorna o tamanho da matriz em bytes durante a compilação do programa.,عملگر sizeof چه چیزی برمی گرداند؟,اندازه در بایت عملوند آن.,اندازه آرایه را در بایت هنگام تدوین برنامه برمی گرداند.,Què retorna l’operador sizeof?,La mida en bytes del seu operand.,Retorna la mida de la matriu en bytes durant la compilació del programa.,Шта враћа величина оператора?,Величина операнда у бајтовима.,Враћа величину низа у бајтовима током компајлирања програма.,Berapa ukuran yang dikembalikan operator?,Ukuran dalam byte dari operannya.,Mengembalikan ukuran larik dalam byte selama kompilasi program.,Hva returnerer operatørens størrelse?,Størrelsen i byte av operanden.,Returnerer størrelsen på matrisen i byte under programkompilering.,sizeof 연산자는 무엇을 반환합니까?,피연산자의 크기 (바이트)입니다.,프로그램 컴파일 중 배열의 크기를 바이트 단위로 반환합니다.,Mitä operaattorin koko palauttaa?,Operandin koko tavuina.,Palauttaa taulukon koon tavuina ohjelman kokoamisen aikana.,Mit ad vissza az operátor mérete?,Operandusának mérete bájtokban.,Visszaadja a tömb méretét bájtban a program fordítása során.,Co vrátí operátor sizeof?,Velikost jeho operandu v bajtech.,Vrátí velikost pole v bajtech během kompilace programu.,Šta vraća veličina operatora?,Veličina operanda u bajtovima.,Vraća veličinu niza u bajtovima za vrijeme kompilacije programa.
190,190,2366,12.8,The Euler tour traversal of a tree the function that iteratively keeps track of the pointer on each node.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,3.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"Die Euler-Tour durchquert einen Baum die Funktion, die iterativ den Zeiger auf jedem Knoten verfolgt.",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.",Ang pagbiyahe sa Euler nga paglibot sa usa ka punoan nga gimbuhaton nga sublisubli nga gisubay sa tudlo sa matag node.,Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.",Euler turnerar genom ett träd den funktion som iterativt håller reda på pekaren på varje nod.,Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.",Le tour d&#39;Euler traverse un arbre la fonction qui assure le suivi itératif du pointeur sur chaque nœud.,Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.",De Euler-tour doorkruist een boom de functie die iteratief de aanwijzer op elk knooppunt bijhoudt.,Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","Обход дерева Эйлера - функция, которая итеративно отслеживает указатель на каждом узле.",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.",L&#39;Eulero percorre l&#39;attraversamento di un albero la funzione che iterativamente tiene traccia del puntatore su ogni nodo.,¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.",El recorrido de Euler por un árbol es la función que realiza un seguimiento iterativo del puntero en cada nodo.,Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","Przechodzenie przez wycieczkę Eulera po drzewie funkcja, która iteracyjnie śledzi wskaźnik w każdym węźle.",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.",Chuyến tham quan Euler của cây có chức năng theo dõi lặp đi lặp lại con trỏ trên mỗi nút.,木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,ツリーのオイラーツアートラバーサルは、各ノードのポインターを繰り返し追跡する関数です。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,欧拉遍历树的功能是迭代地跟踪每个节点上的指针。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,اجتياز أويلر لشجرة هي الوظيفة التي تتعقب المؤشر بشكل متكرر على كل عقدة.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","Обхід Ейлера по дереву - функція, яка ітеративно відстежує вказівник на кожному вузлі.",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.","O percurso de Euler por uma árvore, a função que mantém o controle iterativo do ponteiro em cada nó.",پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,پیمایش تور اولر از یک درخت عملکردی است که به طور تکراری نشانگر را در هر گره ردیابی می کند.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.",El recorregut per Euler recorre un arbre la funció que iterativament fa un seguiment del punter a cada node.,Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","Еулер-ов обилазак стабла, функција која итеративно прати показивач на сваком чвору.",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.",Traversal tur Euler dari pohon fungsi yang secara berulang melacak penunjuk pada setiap node.,Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.",Euler-turen gjennom et tre funksjonen som iterativt holder oversikt over pekeren på hver node.,나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.",오일러 투어는 트리의 각 노드에서 포인터를 반복적으로 추적하는 함수를 순회합니다.,Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.","Euler kiertää puun läpi toiminnon, joka seuraa iteratiivisesti osoitinta kussakin solmussa.",Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.","Az Euler bejárja egy fa funkcióját, amely iteratív módon nyomon követi az egyes csomópontok mutatóját.",Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.","Prohlídka Eulerovy cesty stromu funkcí, která iterativně sleduje ukazatel na každém uzlu.",Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.",Euler obilazak stabla funkcija koja iterativno prati pokazivač na svakom čvoru.
191,191,2243,12.3,n^2; n!; n^3; 2^(log n); log(log n),log(log n);  2^(log n) ; n^2 ; n^3; n!,Order the following functions by their running time: n^2; log(log n) ; 2^(log n) ; n! ; n^3.,2.25,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,Ordnen Sie die folgenden Funktionen nach ihrer Laufzeit: n ^ 2; log (log n); 2 ^ (log n); n! ;; n ^ 3.,n ^ 2; n!; n ^ 3; 2 ^ (log n); log (log n),Pag-order sa mga mosunud nga pag-andar pinaagi sa ilang oras sa pagdagan: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),Beställ följande funktioner efter deras körtid: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); logga (logga in),Classez les fonctions suivantes en fonction de leur durée de fonctionnement: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),Sorteer de volgende functies op basis van hun looptijd: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (logboek n),Отсортируйте следующие функции по времени выполнения: n ^ 2; журнал (журнал n); 2 ^ (журнал п); п! ; п ^ 3.,журнал (журнал n); 2 ^ (журнал п); п ^ 2; п ^ 3; п!,п ^ 2; п !; п ^ 3; 2 ^ (журнал п); журнал (журнал n),Ordina le seguenti funzioni in base al loro tempo di esecuzione: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),Ordene las siguientes funciones por su tiempo de ejecución: n ^ 2; log (log n); 2 ^ (log n); ¡norte! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; ¡norte!,n ^ 2; ¡norte!; n ^ 3; 2 ^ (log n); log (log n),Uporządkuj następujące funkcje według ich czasu działania: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),Thứ tự các hàm sau theo thời gian chạy của chúng: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),次の関数を実行時間順に並べます。n^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,n ^ 2; n！; n ^ 3; 2 ^（log n）; log（log n）,按其运行时间排序以下功能：n ^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,n ^ 2; n !; n ^ 3; 2 ^（log n）;日志（log n）,اطلب الوظائف التالية حسب وقت تشغيلها: n ^ 2 ؛ سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن! ؛ ن ^ 3.,سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن ^ 2 ؛ ن ^ 3 ؛ ن!,ن ^ 2 ؛ ن!؛ ن ^ 3 ؛ 2 ^ (تسجيل ن) ؛ تسجيل (تسجيل ن),Впорядкуйте такі функції за часом їх роботи: n ^ 2; журнал (журнал n); 2 ^ (журнал n); п! ; n ^ 3.,журнал (журнал n); 2 ^ (журнал n); n ^ 2; n ^ 3; п!,n ^ 2; п !; n ^ 3; 2 ^ (журнал n); журнал (log n),Ordene as seguintes funções por seu tempo de execução: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),توابع زیر را بر اساس مدت زمان اجرای آنها ترتیب دهید: n ^ 2؛ log (log n) ؛ 2 ^ (ورود به سیستم) ن! ؛ n ^ 3,log (log n) ؛ 2 ^ (ورود به سیستم) n ^ 2 ؛ n ^ 3 ؛ ن!,n ^ 2 ؛ n !؛ n ^ 3 ؛ 2 ^ (ورود به سیستم) ورود (ورود به سیستم n),Ordeneu les funcions següents pel seu temps d&#39;execució: n ^ 2; log (registre n); 2 ^ (registre n); n! ; n ^ 3.,log (registre n); 2 ^ (registre n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (registre n); registre (registre n),Наредите следеће функције према њиховом радном времену: н ^ 2; лог (лог н); 2 ^ (лог н); н! ; н ^ 3.,лог (лог н); 2 ^ (лог н); н ^ 2; н ^ 3; н!,н ^ 2; н !; н ^ 3; 2 ^ (лог н); лог (лог н),Urutkan fungsi-fungsi berikut berdasarkan waktu berjalannya: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),Bestill følgende funksjoner etter kjøretid: n ^ 2; logg (logg n); 2 ^ (log n); n! ; n ^ 3.,logg (logg n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); logg (logg n),실행 시간별로 다음 함수를 정렬하십시오. n ^ 2; log (log n); 2 ^ (log n); 엔! ; n ^ 3.,log (로그 n); 2 ^ (log n); n ^ 2; n ^ 3; 엔!,n ^ 2; 엔!; n ^ 3; 2 ^ (로그 n); log (로그 n),Järjestä seuraavat toiminnot niiden käyttöajan mukaan: n ^ 2; loki (log n); 2 ^ (log n); n! ; n ^ 3.,loki (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); loki (loki n),Rendezze a következő függvényeket futási idejük szerint: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); napló (log n),Seřaďte následující funkce podle doby běhu: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n),Poredaj sljedeće funkcije prema njihovom vremenu izvođenja: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,n ^ 2; n !; n ^ 3; 2 ^ (log n); log (log n)
192,192,1578,9.3,"by keeping track of a front item and a rear item, or with a circular array that uses the modulo function","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",How can you implement a queue with an array?,5.0,Verwenden Sie ein kreisförmiges Array. Halten Sie die Rückseite der Warteschlange zum Ende des Arrays und die Vorderseite zum Anfang und lassen Sie den hinteren Zeiger umlaufen.,Wie können Sie eine Warteschlange mit einem Array implementieren?,"indem Sie einen vorderen und einen hinteren Gegenstand verfolgen oder ein kreisförmiges Array verwenden, das die Modulo-Funktion verwendet",Giunsa nimo ipatuman ang usa ka pila nga adunay usa ka laray?,"Paggamit usa ka lingin nga han-ay. Ipadayon ang likud sa pila sa katapusan sa laray, ug ang atubangan sa pagsugod, ug tugoti ang likud nga pointer nga palibuton.","pinaagi sa pagsubay sa usa ka pangunahan nga butang ug sa likud nga aytem, o nga adunay usa ka lingin nga han-ay nga gigamit ang pagpaandar sa modulo",Hur kan du implementera en kö med en matris?,Använd en cirkulär grupp. Håll köens bakre del mot slutet av matrisen och framsidan mot början och låt den bakre pekaren vika runt.,genom att hålla reda på ett främre och ett bakre objekt eller med en cirkulär grupp som använder modulofunktionen,Comment pouvez-vous implémenter une file d&#39;attente avec un tableau?,Utilisez un réseau circulaire. Gardez l&#39;arrière de la file d&#39;attente vers la fin de la matrice et l&#39;avant vers le début et laissez le pointeur arrière s&#39;enrouler.,"en gardant une trace d&#39;un élément avant et d&#39;un élément arrière, ou avec un tableau circulaire qui utilise la fonction modulo",Hoe implementeer je een wachtrij met een array?,"Gebruik een cirkelvormige matrix. Houd de achterkant van de wachtrij aan het einde van de array en de voorkant aan het begin, en laat de achterste aanwijzer ronddraaien.","door een voor-item en een achter-item bij te houden, of met een cirkelvormige array die de modulo-functie gebruikt",Как можно реализовать очередь с массивом?,"Используйте круговой массив. Держите заднюю часть очереди к концу массива, а переднюю - к началу, и позвольте заднему указателю перемещаться вокруг.","отслеживая передний элемент и задний элемент, или с помощью кругового массива, который использует функцию по модулю",Come puoi implementare una coda con un array?,Usa una matrice circolare. Mantenere la parte posteriore della coda verso la fine dell&#39;array e la parte anteriore verso l&#39;inizio e consentire al puntatore posteriore di spostarsi.,"tenendo traccia di un elemento anteriore e di un elemento posteriore, o con una matrice circolare che utilizza la funzione modulo",¿Cómo se puede implementar una cola con una matriz?,"Utilice una matriz circular. Mantenga la parte posterior de la cola hacia el final de la matriz y la parte frontal hacia el principio, y permita que el puntero posterior se enrolle.","realizando un seguimiento de un elemento frontal y un elemento posterior, o con una matriz circular que utiliza la función módulo",Jak zaimplementować kolejkę z tablicą?,"Użyj szyku kołowego. Trzymaj tylną część kolejki w kierunku końca macierzy, a przód w kierunku początku i pozwól, aby tylny wskaźnik zawijał się.","śledząc przednią i tylną pozycję lub za pomocą okrągłej tablicy, która używa funkcji modulo",Làm thế nào bạn có thể triển khai một hàng đợi với một mảng?,Sử dụng một mảng tròn. Giữ phần sau của hàng đợi về phía cuối mảng và phía trước về phía đầu và cho phép con trỏ phía sau quấn quanh.,bằng cách theo dõi mục phía trước và mục phía sau hoặc với một mảng tròn sử dụng chức năng mô-đun,配列を使用してキューを実装するにはどうすればよいですか？,循環配列を使用します。キューの後部を配列の最後に向け、前部を最初に向けて、後部ポインターが折り返されるようにします。,フロントアイテムとリアアイテムを追跡するか、モジュロ関数を使用する循環配列を使用します,如何实现带有数组的队列？,使用圆形数组。将队列的后部保持在数组的末尾，将队列的后部保持在开头，并让后部指针回绕。,通过跟踪前项和后项，或者使用使用模函数的圆形阵列,كيف يمكنك تنفيذ قائمة انتظار مع مصفوفة؟,استخدم مصفوفة دائرية. احتفظ بمؤخرة قائمة الانتظار باتجاه نهاية المصفوفة ، والأمام نحو البداية ، واسمح للمؤشر الخلفي بالالتفاف حوله.,من خلال تتبع عنصر أمامي وعنصر خلفي ، أو بمصفوفة دائرية تستخدم وظيفة modulo,Як можна реалізувати чергу з масивом?,"Використовуйте круговий масив. Тримайте задню частину черги до кінця масиву, а передню - до початку, і дозвольте задньому вказівнику обернутися.","відстежуючи передній та задній елементи, або за допомогою кругового масиву, що використовує функцію модуля",Como você pode implementar uma fila com um array?,"Use uma matriz circular. Mantenha a parte traseira da fila voltada para o final da matriz e a frente voltada para o início, e deixe o ponteiro traseiro envolver.","acompanhando um item da frente e um item de trás, ou com uma matriz circular que usa a função de módulo",چگونه می توان صف را با آرایه پیاده کرد؟,از یک آرایه دایره ای استفاده کنید. قسمت عقب صف را به سمت انتهای آرایه و قسمت جلویی را به سمت ابتدای آن نگه دارید و به نشانگر عقب اجازه دهید تا دور آن جمع شود.,با ردیابی یک مورد جلو و یک مورد عقب ، یا با یک آرایه دایره ای که از عملکرد مدول استفاده می کند,Com es pot implementar una cua amb una matriu?,Utilitzeu una matriu circular. Mantingueu la part posterior de la cua cap al final de la matriu i la part frontal cap al principi i deixeu que el punter posterior s’envolti.,"mitjançant el seguiment d’un element frontal i un element posterior, o amb una matriu circular que utilitza la funció de mòdul",Како можете имплементирати ред с низом?,"Користите кружни низ. Задњи део реда задржите према крају низа, а предњи према почетку и дозволите да се задњи показивач омота.",праћењем предњег и задњег предмета или кружним низом који користи функцију модула,Bagaimana Anda bisa mengimplementasikan antrian dengan array?,"Gunakan larik melingkar. Pertahankan bagian belakang antrian mendekati akhir larik, dan bagian depan mengarah ke awal, dan biarkan penunjuk belakang membungkusnya.","dengan melacak item depan dan item belakang, atau dengan larik melingkar yang menggunakan fungsi modulo",Hvordan kan du implementere en kø med en matrise?,"Bruk en sirkulær matrise. Hold baksiden av køen mot slutten av matrisen, og fronten mot begynnelsen, og la den bakre pekeren vikle seg rundt.","ved å holde oversikt over en frontgjenstand og en bakgjenstand, eller med en sirkulær matrise som bruker modulo-funksjonen",배열로 큐를 어떻게 구현할 수 있습니까?,"원형 배열을 사용하십시오. 대기열의 뒤쪽은 어레이의 끝쪽으로, 앞쪽은 시작쪽으로 유지하고 뒤쪽 포인터가 감길 수 있도록합니다.",앞쪽 항목과 뒤쪽 항목을 추적하거나 모듈로 함수를 사용하는 원형 배열을 사용하여,Kuinka jono voidaan toteuttaa taulukon avulla?,Käytä pyöreää taulukkoa. Pidä jonon takaosaa matriisin loppua kohden ja etuosaa alkuun päin ja anna takaosoittimen kiertyä.,"pitämällä kirjaa etu- ja takaosasta tai pyöreällä taulukolla, joka käyttää modulo-toimintoa",Hogyan valósíthat meg egy sort tömböt használva?,"Használjon kör alakú tömböt. Tartsa a sor hátulját a tömb vége felé, az elejét pedig az eleje felé, és hagyja, hogy a hátsó mutató körbefutjon.","az első és a hátsó elem nyomon követésével, vagy a modulo funkciót használó kör alakú tömbökkel",Jak můžete implementovat frontu s polem?,Použijte kruhové pole. Držte zadní část fronty směrem ke konci pole a přední směrem k začátku a nechte zadní ukazatel ohýbat.,"sledováním předního a zadního předmětu nebo kruhovým polem, které využívá funkci modulo",Kako možete implementirati red s nizom?,"Koristite kružni niz. Zadnji dio reda držite prema kraju niza, a prednji prema početku i dopustite da se stražnji pokazivač omota.",praćenjem prednjeg i stražnjeg predmeta ili kružnim nizom koji koristi funkciju modulo
193,193,1753,10.3,the last child on any branch,A node that has no children.,What is a leaf?,4.5,Ein Knoten ohne Kinder.,Was ist ein Blatt?,das letzte Kind auf einem Ast,Unsa ang dahon?,Usa ka node nga wala’y mga anak.,ang katapusan nga bata sa bisan unsang sanga,Vad är ett blad?,En nod som inte har några barn.,det sista barnet på någon gren,Qu&#39;est-ce qu&#39;une feuille?,Un nœud qui n&#39;a pas d&#39;enfants.,le dernier enfant de n&#39;importe quelle branche,Wat is een blad?,Een knooppunt dat geen kinderen heeft.,het laatste kind op een tak,Что такое лист?,"Узел, у которого нет детей.",последний ребенок на любой ветке,Cos&#39;è una foglia?,Un nodo che non ha figli.,l&#39;ultimo bambino su qualsiasi ramo,¿Qué es una hoja?,Un nodo que no tiene hijos.,el último niño en cualquier rama,Co to jest liść?,"Węzeł, który nie ma dzieci.",ostatnie dziecko na jakimkolwiek oddziale,Lá là gì?,Một nút không có nút con.,đứa trẻ cuối cùng trên bất kỳ nhánh nào,葉とは何ですか？,子を持たないノード。,任意のブランチの最後の子,什么是叶子？,没有子节点的节点。,任何分支上的最后一个孩子,ما هي الورقة؟,عقدة ليس لها أبناء.,آخر طفل في أي فرع,Що таке лист?,"Вузол, у якого немає дітей.",остання дитина на будь-якій гілці,O que é uma folha?,Um nó que não tem filhos.,o último filho em qualquer ramo,برگ چیست؟,گره ای که فرزندی ندارد.,آخرین فرزند در هر شاخه,Què és una fulla?,Un node que no té fills.,l’últim fill de qualsevol branca,Шта је лист?,Чвор који нема деце.,последње дете на било којој грани,Apakah daun itu?,Node yang tidak memiliki anak.,anak terakhir di cabang mana pun,Hva er et blad?,En node som ikke har barn.,det siste barnet på en hvilken som helst gren,잎은 무엇입니까?,자식이없는 노드.,모든 지점의 마지막 자식,Mikä on lehti?,"Solmu, jolla ei ole lapsia.",viimeinen lapsi millä tahansa oksalla,Mi a levél?,"Olyan csomópont, amelynek nincs gyermeke.",bármely ágon az utolsó gyermek,Co je to list?,"Uzel, který nemá žádné děti.",poslední dítě na jakékoli větvi,Šta je list?,Čvor koji nema djece.,posljednje dijete na bilo kojoj grani
194,194,425,3.1,"identification of a function and the data types of its parameters, it has the name, and the data type variables",The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,"Identifizierung einer Funktion und der Datentypen ihrer Parameter, sie hat den Namen und die Datentypvariablen",Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,"ang pag-ila sa us aka gimbuhaton ug ang mga tipo sa datos sa mga parameter niini, adunay kini ngalan, ug mga variable sa tipo sa datos",Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,"identifiering av en funktion och datatyperna för dess parametrar, den har namnet och datatypsvariablerna",Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,"identification d&#39;une fonction et des types de données de ses paramètres, elle a le nom, et les variables de type de données",Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,"identificatie van een functie en de gegevenstypen van zijn parameters, het heeft de naam en de gegevenstypevariabelen",Что включает в себя сигнатура функции?,Имя функции и типы параметров.,"идентификация функции и типов данных ее параметров, она имеет имя и переменные типа данных",Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,"identificazione di una funzione e dei tipi di dati dei suoi parametri, ha il nome e le variabili del tipo di dati",¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,"identificación de una función y los tipos de datos de sus parámetros, tiene el nombre y las variables de tipo de datos",Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,"identyfikacja funkcji i typy danych jej parametrów, ma nazwę i zmienne typu danych",Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,"nhận dạng một hàm và các kiểu dữ liệu của các tham số của nó, nó có tên và các biến kiểu dữ liệu",関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数とそのパラメーターのデータ型の識別、名前、およびデータ型変数,功能签名包括什么？,函数的名称和参数的类型。,标识函数及其参数的数据类型，名称，数据类型变量,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,تحديد وظيفة وأنواع بيانات معلماتها ، ولها اسم ، ومتغيرات نوع البيانات,Що включає підпис функції?,Назва функції та типи параметрів.,"ідентифікуючи функцію та типи даних її параметрів, вона має назву та змінні типу даних",O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,"identificação de uma função e os tipos de dados de seus parâmetros, tem o nome e as variáveis de tipo de dados",امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,شناسایی یک تابع و انواع داده های پارامترهای آن ، نام و متغیرهای نوع داده را دارد,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,"identificació d’una funció i dels tipus de dades dels seus paràmetres, té el nom i les variables de tipus de dades",Шта укључује потпис функције?,Назив функције и врсте параметара.,"идентификација функције и типова података њених параметара, она има име и променљиве типа података",Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,"identifikasi fungsi dan tipe data dari parameternya, memiliki nama, dan tipe data variabel",Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,"identifikasjon av en funksjon og datatypene til parametrene, den har navnet og datatypevariablene",함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,"함수 및 매개 변수의 데이터 유형 식별, 이름 및 데이터 유형 변수가 있습니다.",Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,"funktion ja sen parametrien tietotyyppien tunnistaminen, sillä on nimi ja tietotyyppiset muuttujat",Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,"A függvény és a paraméterek adattípusainak azonosítása, megvan a neve és az adattípus változói",Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,"identifikace funkce a datové typy jejích parametrů, její název a proměnné datového typu",Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,"identifikaciju funkcije i tipove podataka njenih parametara, ona ima ime i varijable tipa podataka"
195,195,982,6.2,Returns the memory address of its operand.,The memory address of its operand.,What does the address (&) operator return?,5.0,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,Gibt die Speicheradresse seines Operanden zurück.,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,Gibalik ang memory address sa operand niini.,Vad returnerar adressoperatören?,Minnesadressen för dess operand.,Returnerar minnesadressen för dess operand.,Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,Renvoie l&#39;adresse mémoire de son opérande.,Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,Retourneert het geheugenadres van zijn operand.,Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,Возвращает адрес памяти своего операнда.,Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,Restituisce l&#39;indirizzo di memoria del suo operando.,¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,Devuelve la dirección de memoria de su operando.,Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,Zwraca adres pamięci swojego operandu.,Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,Trả về địa chỉ bộ nhớ của toán hạng của nó.,アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,オペランドのメモリアドレスを返します。,地址（＆）运算符返回什么？,其操作数的内存地址。,返回其操作数的内存地址。,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,يُرجع عنوان ذاكرة المعامل الخاص به.,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,Повертає адресу пам&#39;яті свого операнда.,O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,Retorna o endereço de memória de seu operando.,عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,آدرس حافظه عملوند خود را برمی گرداند.,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,Retorna l&#39;adreça de memòria del seu operand.,Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,Враћа меморијску адресу свог операнда.,Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,Mengembalikan alamat memori operannya.,Hva returnerer adresseoperatøren?,Minneadressen til operanden.,Returnerer minneadressen til operanden.,주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,피연산자의 메모리 주소를 반환합니다.,Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,Palauttaa operandin muistiosoitteen.,Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,Visszaadja az operandus memória címét.,Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,Vrátí adresu paměti jeho operandu.,Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,Vraća memorijsku adresu svog operanda.
196,196,1141,7.1,A linked list is a chain of nodes that each store a single piece of data and pointer variables that point to other nodes in the list.,A collection of elements that can be allocated dynamically.,What is a linked list?,4.5,"Eine Sammlung von Elementen, die dynamisch zugewiesen werden können.",Was ist eine verknüpfte Liste?,"Eine verknüpfte Liste ist eine Kette von Knoten, die jeweils ein einzelnes Datenelement und Zeigervariablen speichern, die auf andere Knoten in der Liste verweisen.",Unsa ang usa ka nalakip nga lista?,Usa ka koleksyon sa mga elemento nga mahimong gigahin nga dinamiko.,Ang usa ka nalambigit nga lista usa ka kadena sa mga node nga matag usa magtipig usa ka piraso nga datos ug mga variable sa pointer nga nagtudlo sa ubang mga node sa lista.,Vad är en länkad lista?,En samling element som kan tilldelas dynamiskt.,En länkad lista är en kedja av noder som var och en lagrar en enskild bit data och pekervariabler som pekar på andra noder i listan.,Qu&#39;est-ce qu&#39;une liste chaînée?,Une collection d&#39;éléments qui peuvent être alloués dynamiquement.,Une liste chaînée est une chaîne de nœuds qui stockent chacun une seule donnée et des variables de pointeur qui pointent vers d&#39;autres nœuds de la liste.,Wat is een gekoppelde lijst?,Een verzameling elementen die dynamisch kunnen worden toegewezen.,Een gekoppelde lijst is een reeks knooppunten die elk een enkel stuk gegevens opslaan en pointervariabelen die naar andere knooppunten in de lijst verwijzen.,Что такое связанный список?,"Коллекция элементов, которые можно размещать динамически.","Связанный список - это цепочка узлов, каждый из которых хранит отдельную часть данных и переменных-указателей, которые указывают на другие узлы в списке.",Cos&#39;è un elenco collegato?,Una raccolta di elementi che possono essere allocati dinamicamente.,Un elenco collegato è una catena di nodi in cui ognuno memorizza un singolo dato e variabili puntatore che puntano ad altri nodi nell&#39;elenco.,¿Qué es una lista vinculada?,Una colección de elementos que se pueden asignar dinámicamente.,"Una lista vinculada es una cadena de nodos, cada uno de los cuales almacena un único dato y variables de puntero que apuntan a otros nodos de la lista.",Co to jest lista połączona?,"Zbiór elementów, które mogą być przydzielane dynamicznie.","Lista połączona to łańcuch węzłów, z których każdy zawiera pojedyncze dane i zmienne wskaźnikowe, które wskazują inne węzły na liście.",Danh sách liên kết là gì?,Một tập hợp các phần tử có thể được cấp phát động.,Danh sách liên kết là một chuỗi các nút mà mỗi nút lưu trữ một phần dữ liệu và các biến con trỏ trỏ đến các nút khác trong danh sách.,リンクリストとは何ですか？,動的に割り当てることができる要素のコレクション。,リンクリストはノードのチェーンであり、各ノードはリスト内の他のノードを指す単一のデータとポインタ変数を格納します。,什么是链表？,可以动态分配的元素的集合。,链表是一连串的节点，每个节点都存储单个数据和指向该列表中其他节点的指针变量。,ما هي القائمة المرتبطة؟,مجموعة من العناصر التي يمكن تخصيصها ديناميكيًا.,القائمة المرتبطة هي سلسلة من العقد التي تخزن كل منها قطعة واحدة من البيانات ومتغيرات المؤشر التي تشير إلى العقد الأخرى في القائمة.,Що таке пов&#39;язаний список?,"Колекція елементів, які можна динамічно розподіляти.","Зв’язаний список - це ланцюжок вузлів, в кожному з яких зберігається окремий фрагмент даних та змінні покажчика, які вказують на інші вузли у списку.",O que é uma lista vinculada?,Uma coleção de elementos que podem ser alocados dinamicamente.,Uma lista vinculada é uma cadeia de nós em que cada um armazena uma única parte dos dados e variáveis de ponteiro que apontam para outros nós na lista.,لیست پیوندی چیست؟,مجموعه ای از عناصر است که می تواند به صورت پویا اختصاص داده شود.,لیست پیوندی به زنجیره ای از گره ها گفته می شود كه هر یك از آنها داده های متغیر و نشانگر متغیری را كه به گره های دیگر لیست اشاره دارد ، ذخیره می كند.,Què és una llista enllaçada?,Una col·lecció d’elements que es poden assignar dinàmicament.,Una llista enllaçada és una cadena de nodes que emmagatzemen una sola peça de dades i variables de punter que apunten a altres nodes de la llista.,Шта је повезана листа?,Колекција елемената који се могу динамички доделити.,Повезана листа је ланац чворова у којима се чува један део података и променљиве показивача који упућују на друге чворове на листи.,Apa itu daftar tertaut?,Kumpulan elemen yang dapat dialokasikan secara dinamis.,Daftar tertaut adalah rangkaian node yang masing-masing menyimpan satu bagian data dan variabel penunjuk yang mengarah ke node lain dalam daftar.,Hva er en koblet liste?,En samling av elementer som kan tildeles dynamisk.,En koblet liste er en kjede av noder som hver lagrer et enkelt stykke data og pekervariabler som peker på andre noder i listen.,연결 목록이란 무엇입니까?,동적으로 할당 할 수있는 요소 모음입니다.,연결 목록은 각각 목록의 다른 노드를 가리키는 단일 데이터 및 포인터 변수를 저장하는 노드 체인입니다.,Mikä on linkitetty luettelo?,"Kokoelma elementtejä, jotka voidaan allokoida dynaamisesti.","Linkitetty luettelo on solmujen ketju, joista kukin tallentaa yhden datan ja osoitinmuuttujat, jotka osoittavat luettelon muihin solmuihin.",Mi a linkelt lista?,Dinamikusan lefoglalható elemek gyűjteménye.,"A csatolt lista olyan csomópontok láncolata, amelyek mindegyike egyetlen darab adatot és mutatóváltozót tárol, amelyek a lista többi csomópontjára mutatnak.",Co je to propojený seznam?,"Kolekce prvků, které lze dynamicky přidělit.","Propojený seznam je řetězec uzlů, z nichž každý ukládá jeden kus dat a proměnné ukazatele, které odkazují na jiné uzly v seznamu.",Šta je povezana lista?,Zbirka elemenata koji se mogu dinamički dodijeliti.,Povezana lista je lanac čvorova koji svaki pohranjuju jedan dio podataka i varijable pokazivača koji upućuju na druge čvorove na listi.
197,197,1255,7.5,No node in a circular linked list contains NULL.,The last element in a circular linked list points to the head of the list.,What is the difference between a circular linked list and a basic linked list?,3.5,Das letzte Element in einer kreisförmig verknüpften Liste zeigt auf den Kopf der Liste.,Was ist der Unterschied zwischen einer zirkulären verknüpften Liste und einer einfachen verknüpften Liste?,Kein Knoten in einer zirkulären verknüpften Liste enthält NULL.,Unsa ang kalainan sa us aka lista nga nalakip sa lingin ug us aka sukaranan nga nalakip nga lista?,Ang ulahi nga elemento sa usa ka lista nga nalakip sa lingin nagtudlo sa ulo sa lista.,Wala&#39;y node sa usa ka lista nga nalakip sa lingin adunay sulud nga NULL.,Vad är skillnaden mellan en cirkulär länkad lista och en grundlänkad lista?,Det sista elementet i en cirkulär länkad lista pekar på listans huvud.,Ingen nod i en cirkulär länkad lista innehåller NULL.,Quelle est la différence entre une liste chaînée circulaire et une liste chaînée de base?,Le dernier élément d&#39;une liste liée circulaire pointe vers la tête de la liste.,Aucun nœud dans une liste liée circulaire ne contient NULL.,Wat is het verschil tussen een circulaire gekoppelde lijst en een basis gekoppelde lijst?,Het laatste element in een circulaire gekoppelde lijst wijst naar de kop van de lijst.,Geen enkel knooppunt in een circulaire gekoppelde lijst bevat NULL.,В чем разница между круговым связанным списком и основным связанным списком?,Последний элемент в круговом связном списке указывает на заголовок списка.,Ни один узел в круговом связном списке не содержит NULL.,Qual è la differenza tra un elenco collegato circolare e un elenco collegato di base?,L&#39;ultimo elemento in un elenco collegato circolare punta all&#39;inizio dell&#39;elenco.,Nessun nodo in un elenco collegato circolare contiene NULL.,¿Cuál es la diferencia entre una lista enlazada circular y una lista enlazada básica?,El último elemento de una lista enlazada circular apunta al encabezado de la lista.,Ningún nodo en una lista enlazada circular contiene NULL.,Jaka jest różnica między listą połączoną cyklicznie a listą podstawową?,Ostatni element na okrągłej liście połączonej wskazuje na początek listy.,Żaden węzeł na liście połączonej cyklicznie nie zawiera wartości NULL.,Sự khác biệt giữa danh sách liên kết vòng tròn và danh sách liên kết cơ bản là gì?,Phần tử cuối cùng trong danh sách được liên kết hình tròn trỏ đến phần đầu của danh sách.,Không có nút nào trong danh sách liên kết vòng tròn chứa NULL.,循環リンクリストと基本リンクリストの違いは何ですか？,循環リンクリストの最後の要素は、リストの先頭を指します。,循環リンクリストのノードにNULLが含まれていません。,循环链表和基本链表有什么区别？,循环链接列表中的最后一个元素指向列表的开头。,循环链表中没有节点包含NULL。,ما الفرق بين قائمة مرتبطة دائرية وقائمة مرتبطة أساسية؟,يشير العنصر الأخير في قائمة مرتبطة دائرية إلى رأس القائمة.,لا توجد عقدة في قائمة مرتبطة دائرية تحتوي على NULL.,Яка різниця між круговим пов&#39;язаним списком та основним пов&#39;язаним списком?,Останній елемент у круговому зв’язаному списку вказує на головку списку.,Жоден вузол у списку кругових зв’язків не містить NULL.,Qual é a diferença entre uma lista ligada circular e uma lista ligada básica?,O último elemento em uma lista ligada circular aponta para o topo da lista.,Nenhum nó em uma lista ligada circular contém NULL.,تفاوت بین یک لیست پیوندی دایره ای و یک لیست پیوندی اساسی چیست؟,آخرین عنصر در یک لیست دایره ای مرتبط به سر لیست نشان می دهد.,هیچ گره ای در یک لیست پیوندی دایره ای حاوی NULL نیست.,Quina diferència hi ha entre una llista enllaçada circular i una llista enllaçada bàsica?,L&#39;últim element d&#39;una llista enllaçada circular apunta al cap de llista.,Cap node d&#39;una llista enllaçada circular no conté NULL.,Која је разлика између кружно повезане листе и основне повезане листе?,Последњи елемент у кружно повезаној листи показује на главу листе.,Ниједан чвор на кружно повезаној листи не садржи НУЛЛ.,Apa perbedaan antara daftar tertaut melingkar dan daftar tertaut dasar?,Elemen terakhir dalam daftar tertaut melingkar mengarah ke kepala daftar.,Tidak ada node dalam daftar tertaut melingkar yang berisi NULL.,Hva er forskjellen mellom en sirkulær koblet liste og en grunnleggende koblet liste?,Det siste elementet i en sirkulær koblet liste peker mot hodet på listen.,Ingen noder i en sirkulær koblet liste inneholder NULL.,순환 연결 목록과 기본 연결 목록의 차이점은 무엇입니까?,순환 연결 목록의 마지막 요소는 목록의 헤드를 가리 킵니다.,순환 연결 목록의 노드에 NULL이 없습니다.,Mitä eroa on pyöreällä linkitetyllä luettelolla linkitetyllä perusluettelolla?,Pyöreän linkitetyn luettelon viimeinen elementti osoittaa luettelon päähän.,Mikään solmio pyöreässä linkitetyssä luettelossa ei sisällä NULL-arvoa.,Mi a különbség a kör alakú linkelt lista és az alap linkelt lista között?,A kör alakú összekapcsolt lista utolsó eleme a lista fejére mutat.,A kör alakú linkelt listában egyetlen csomópont sem tartalmaz NULL értéket.,Jaký je rozdíl mezi cyklicky propojeným seznamem a základním propojeným seznamem?,Poslední prvek v kruhovém propojeném seznamu ukazuje na záhlaví seznamu.,Žádný uzel v kruhovém propojeném seznamu neobsahuje NULL.,Koja je razlika između kružno povezane liste i osnovne povezane liste?,Posljednji element na kružno povezanoj listi usmjerava na glavu popisa.,Nijedan čvor na kružno povezanoj listi ne sadrži NULL.
198,198,885,5.2,Search for the largest item in an array and swap it with the last unsorted item.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","In one sentence, what is the main idea implemented by selection sort?",4.5,"Wenn jeweils ein Array-Element von links nach rechts verwendet wird, wird das Minimum der verbleibenden Elemente ermittelt und mit dem aktuellen Element ausgetauscht.","Was ist in einem Satz die Hauptidee, die durch Auswahlsortierung umgesetzt wird?",Suchen Sie nach dem größten Element in einem Array und tauschen Sie es gegen das letzte unsortierte Element aus.,"Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman sa pagpili?","Pagkuha usa ka elemento sa pag-ayos sa matag higayon, gikan sa wala ngadto sa tuo, maila niini ang minimum gikan sa nahabilin nga mga elemento ug gibaylo kini sa karon nga elemento.",Pagpangita alang sa labing kadaghan nga butang sa usa ka han-ay ug ibaylo kini sa katapusan nga wala pagsulud nga butang.,"I en mening, vad är huvudidén implementerad av urvalsortering?","Tar ett matriselement åt gången, från vänster till höger, identifierar det minsta från de återstående elementen och byter det med det aktuella elementet.",Sök efter det största objektet i en matris och byt ut det med det senast osorterade objektet.,"En une phrase, quelle est l&#39;idée principale mise en œuvre par le tri sélectif?","Prenant un élément de tableau à la fois, de gauche à droite, il identifie le minimum parmi les éléments restants et le remplace par l&#39;élément courant.",Recherchez le plus gros élément d&#39;un tableau et échangez-le avec le dernier élément non trié.,"In één zin, wat is het hoofdidee geïmplementeerd door middel van selectiesortering?","Door één array-element tegelijk te nemen, van links naar rechts, identificeert het het minimum van de resterende elementen en verwisselt het met het huidige element.",Zoek naar het grootste item in een array en verwissel het met het laatste ongesorteerde item.,"Одним предложением, какова основная идея сортировки по выбору?","Принимая по одному элементу массива слева направо, он определяет минимум из оставшихся элементов и меняет его местами с текущим элементом.",Найдите самый большой элемент в массиве и замените его последним несортированным элементом.,"In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento di selezione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, identifica il minimo dagli elementi rimanenti e lo scambia con l&#39;elemento corrente.",Cerca l&#39;elemento più grande in un array e scambialo con l&#39;ultimo elemento non ordinato.,"En una oración, ¿cuál es la idea principal implementada por tipo de selección?","Tomando un elemento de matriz a la vez, de izquierda a derecha, identifica el mínimo de los elementos restantes y lo intercambia con el elemento actual.",Busque el elemento más grande en una matriz y cámbielo por el último elemento sin clasificar.,"Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wybieranie?","Biorąc jeden element tablicy na raz, od lewej do prawej, identyfikuje minimum z pozostałych elementów i zamienia je na bieżący element.",Wyszukaj największy element w tablicy i zamień go na ostatni nieposortowany element.,"Trong một câu, ý chính được triển khai bằng cách sắp xếp lựa chọn nào?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó xác định giá trị tối thiểu từ các phần tử còn lại và hoán đổi nó với phần tử hiện tại.",Tìm kiếm mục lớn nhất trong một mảng và hoán đổi nó với mục cuối cùng chưa được sắp xếp.,一言で言えば、選択ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、残りの要素から最小値を識別して、現在の要素と交換します。,配列内で最大のアイテムを検索し、それを最後のソートされていないアイテムと交換します。,一句话，选择排序实现的主要思想是什么？,一次从左到右获取一个数组元素，它从其余元素中识别出最小值，并将其与当前元素交换。,搜索数组中最大的项目，然后将其与最后未排序的项目交换。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الاختيار؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يحدد الحد الأدنى من العناصر المتبقية ويتبادلها مع العنصر الحالي.,ابحث عن أكبر عنصر في مصفوفة وقم بتبديله بآخر عنصر لم يتم فرزه.,"В одному реченні, яка головна ідея реалізується шляхом сортування виділення?","Беручи по одному елементу масиву, зліва направо, він визначає мінімум з решти елементів і міняє його місцями з поточним елементом.",Шукайте найбільший елемент у масиві та обмінюйте його останнім невідсортованим елементом.,"Em uma frase, qual é a ideia principal implementada pela ordenação por seleção?","Pegando um elemento da matriz por vez, da esquerda para a direita, ele identifica o mínimo dos elementos restantes e o troca com o elemento atual.",Pesquise o maior item em uma matriz e troque-o pelo último item não classificado.,در یک جمله ، ایده اصلی که براساس مرتب سازی انتخاب اجرا می شود چیست؟,با یک بار گرفتن یک عنصر آرایه ، از چپ به راست ، حداقل عناصر باقی مانده را شناسایی کرده و با عنصر فعلی عوض می کند.,بزرگترین مورد را در یک آرایه جستجو کنید و آن را با آخرین مورد مرتب نشده رد کنید.,"En una frase, quina és la idea principal implementada pel tipus de selecció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, identifica el mínim dels elements restants i el canvia amb l’element actual.",Cerqueu l&#39;element més gran d&#39;una matriu i canvieu-lo amb l&#39;últim element sense classificar.,"У једној реченици, која је главна идеја спроведена сортирањем избора?","Узимајући по један елемент низа, с лева на десно, идентификује минимум од преосталих елемената и замењује га са тренутним елементом.",Потражите највећу ставку у низу и замените је последњом неразврстаном ставком.,"Dalam satu kalimat, apa gagasan utama yang diimplementasikan oleh selection sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, ini mengidentifikasi elemen minimum dari elemen yang tersisa dan menukarnya dengan elemen saat ini.",Cari item terbesar dalam larik dan tukar dengan item terakhir yang tidak diurutkan.,"I en setning, hva er hovedideen implementert ved sortering av utvalg?","Tar ett matriseelement om gangen, fra venstre til høyre, identifiserer det minimumet fra de gjenværende elementene og bytter det med det nåværende elementet.",Søk etter det største elementet i en matrise og bytt det med det siste usorterte elementet.,"한 문장으로, 선택 정렬에 의해 구현 된 주요 아이디어는 무엇입니까?",한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 나머지 요소에서 최소값을 식별하고 현재 요소와 교환합니다.,배열에서 가장 큰 항목을 검색하고 정렬되지 않은 마지막 항목으로 바꿉니다.,Mikä päävalinta toteutetaan valintalajittelulla?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se tunnistaa vähimmäisarvon jäljellä olevista elementeistä ja vaihtaa sen nykyiseen elementtiin.",Hae taulukon suurinta kohdetta ja vaihda se viimeisen lajittelemattoman kohteen kanssa.,Egy mondatban mi a kiválasztott rendezéssel megvalósított fő gondolat?,"Egyszerre egy tömb elemet vesz fel balról jobbra, a többi elem alapján azonosítja a minimumot, és felcseréli az aktuális elemmel.","Keresse meg a tömb legnagyobb elemét, és cserélje le az utolsó rendezetlen elemre.","Jednou větou, jaká je hlavní myšlenka implementovaná výběrem?","Vezmeme-li po jednom prvku pole, zleva doprava, identifikuje minimum ze zbývajících prvků a zamění jej za aktuální prvek.",Vyhledejte největší položku v poli a vyměňte ji za poslední nezařazenou položku.,"U jednoj rečenici, koja je glavna ideja implementirana selekcijskim sortiranjem?","Uzimajući po jedan element niza, slijeva udesno, identificira minimum iz preostalih elemenata i zamjenjuje ga s trenutnim elementom.",Potražite najveću stavku u nizu i zamijenite je s posljednjom nerazvrstanom stavkom.
199,199,1780,10.4,"Starting at the root node, it branches off into one or two subsets that are binary subtrees of the root.  Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.,What is a binary tree?,5.0,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Beginnend am Wurzelknoten verzweigt es sich in eine oder zwei Teilmengen, die binäre Teilbäume der Wurzel sind. Jeder Knoten hat höchstens zwei Kinder, das linke Kind und das rechte Kind.",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,"Sugod sa root node, kini magsanga sa usa o duha nga mga subset nga mga binary subtree sa gamot. Ang matag node adunay labing daghan nga duha nga mga anak, ang wala nga bata ug ang tama nga bata.",Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,"Från och med rotnoden förgrenas den till en eller två underuppsättningar som är binära underträd av roten. Varje nod har högst två barn, det vänstra barnet och det högra barnet.",Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,"En commençant au nœud racine, il se divise en un ou deux sous-ensembles qui sont des sous-arbres binaires de la racine. Chaque nœud a au plus deux enfants, l&#39;enfant gauche et l&#39;enfant droit.",Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,"Beginnend bij het hoofdknooppunt, vertakt het zich in een of twee subsets die binaire substructuren van de wortel zijn. Elk knooppunt heeft maximaal twee kinderen, het linkerkind en het rechterkind.",Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","Начиная с корневого узла, он разветвляется на одно или два подмножества, которые являются двоичными поддеревьями корня. У каждого узла есть не более двух дочерних элементов, левый и правый.",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,"Partendo dal nodo radice, si dirama in uno o due sottoinsiemi che sono sottoalberi binari della radice. Ogni nodo ha al massimo due figli, il figlio sinistro e il figlio destro.",¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,"Comenzando en el nodo raíz, se ramifica en uno o dos subconjuntos que son subárboles binarios de la raíz. Cada nodo tiene como máximo dos hijos, el hijo izquierdo y el hijo derecho.",Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","Zaczynając od węzła głównego, rozgałęzia się na jeden lub dwa podzbiory, które są binarnymi poddrzewami korzenia. Każdy węzeł ma co najwyżej dwoje dzieci, lewe dziecko i prawe dziecko.",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,"Bắt đầu từ nút gốc, nó phân nhánh thành một hoặc hai tập con là cây con nhị phân của gốc. Mỗi nút có nhiều nhất hai nút con, nút con bên trái và nút con bên phải.",二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,ルートノードから開始して、ルートのバイナリサブツリーである1つまたは2つのサブセットに分岐します。各ノードには、左の子と右の子の最大2つの子があります。,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,从根节点开始，它分支成一个或两个子集，这些子集是根的二进制子树。每个节点最多有两个子节点，即左子节点和右子节点。,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,بدءًا من العقدة الجذرية ، تتفرع إلى مجموعة أو مجموعتين فرعيتين من الأشجار الفرعية الثنائية للجذر. كل عقدة لديها طفلان على الأكثر ، الطفل الأيسر والطفل الأيمن.,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","Починаючи з кореневого вузла, він розгалужується на один або два підмножини, які є двійковими піддеревами кореня. Кожен вузол має щонайбільше двох дітей, ліву дитину та праву дитину.",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,"Começando no nó raiz, ele se ramifica em um ou dois subconjuntos que são subárvores binárias da raiz. Cada nó tem no máximo dois filhos, o filho esquerdo e o filho direito.",درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,با شروع از گره ریشه ، آن را به یک یا دو زیر مجموعه تبدیل می کند که زیر شاخه های باینری ریشه هستند. هر گره حداکثر دو فرزند دارد ، کودک چپ و کودک راست.,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,"Començant pel node arrel, es ramifica en un o dos subconjunts que són subarbres binaris de l&#39;arrel. Cada node té com a màxim dos fills, el nen esquerre i el dret.",Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,"Почевши од коренског чвора, он се грана на један или два подскупа који су бинарна подстабла корена. Сваки чвор има највише двоје деце, лево дете и десно дете.",Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,"Dimulai dari simpul akar, ia bercabang menjadi satu atau dua himpunan bagian yang merupakan subpohon biner dari akar. Setiap node memiliki paling banyak dua anak, anak kiri dan anak kanan.",Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,"Starter ved rotnoden, forgrener den seg til en eller to undergrupper som er binære undertrær av roten. Hver node har maksimalt to barn, venstre barn og høyre barn.",이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,루트 노드에서 시작하여 루트의 이진 하위 트리 인 하나 또는 두 개의 하위 집합으로 분기됩니다. 각 노드에는 최대 두 개의 자식 (왼쪽 자식과 오른쪽 자식)이 있습니다.,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","Juurisolmusta alkaen se haarautuu yhdeksi tai kahdeksi alijoukoksi, jotka ovat juuren binäärisiä alipuuta. Jokaisessa solmussa on korkeintaan kaksi lasta, vasen lapsi ja oikea lapsi.",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","A gyökércsomóponttól kezdve egy vagy két részhalmazra ágazik, amelyek a gyökér bináris részfái. Mindegyik csomópontnak legfeljebb két gyermeke van, a bal és a jobb gyermek.",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","Počínaje kořenovým uzlem se větví do jedné nebo dvou podmnožin, které jsou binárními podstromy kořene. Každý uzel má nejvýše dvě děti, levé dítě a pravé dítě.",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,"Počevši od korijenskog čvora, on se grana u jedan ili dva podskupa koji su binarna podstabla korijena. Svaki čvor ima najviše dvoje djece, lijevo i desno dijete."
200,200,228,2.1,data members and member functions,Data members (attributes) and member functions.,What is typically included in a class definition?,5.0,Datenelemente (Attribute) und Elementfunktionen.,Was ist normalerweise in einer Klassendefinition enthalten?,Datenelemente und Elementfunktionen,Unsa ang kasagarang giapil sa usa ka kahulugan sa klase?,Mga myembro sa datos (mga hiyas) ug mga kalihokan sa miyembro.,mga myembro sa datos ug mga kalihokan sa miyembro,Vad ingår vanligtvis i en klassdefinition?,Datamedlemmar (attribut) och medlemsfunktioner.,datamedlemmar och medlemsfunktioner,Qu&#39;est-ce qui est généralement inclus dans une définition de classe?,Membres de données (attributs) et fonctions membres.,membres de données et fonctions membres,Wat is er typisch opgenomen in een klassendefinitie?,Gegevensleden (attributen) en lidfuncties.,gegevensleden en lidfuncties,Что обычно включается в определение класса?,Члены данных (атрибуты) и функции-члены.,члены данных и функции-члены,Cosa è tipicamente incluso nella definizione di una classe?,Membri dei dati (attributi) e funzioni dei membri.,membri dati e funzioni membro,¿Qué se incluye normalmente en una definición de clase?,Miembros de datos (atributos) y funciones de los miembros.,miembros de datos y funciones de miembros,Co zwykle zawiera definicja klasy?,Członkowie danych (atrybuty) i funkcje składowe.,członkowie danych i funkcje członkowskie,Những gì thường được bao gồm trong một định nghĩa lớp?,Thành viên dữ liệu (thuộc tính) và chức năng thành viên.,thành viên dữ liệu và chức năng thành viên,通常、クラス定義には何が含まれていますか？,データメンバー（属性）とメンバー関数。,データメンバーとメンバー関数,类定义中通常包含什么？,数据成员（属性）和成员函数。,数据成员和成员函数,ما الذي يتم تضمينه عادة في تعريف الفئة؟,أعضاء البيانات (السمات) ووظائف الأعضاء.,أعضاء البيانات ووظائف الأعضاء,Що зазвичай входить у визначення класу?,Члени даних (атрибути) та функції членів.,члени даних та функції членів,O que normalmente está incluído em uma definição de classe?,Membros de dados (atributos) e funções de membro.,membros de dados e funções de membro,چه چیزی معمولاً در تعریف کلاس گنجانده می شود؟,اعضای داده (ویژگی ها) و توابع عضو.,اعضای داده و توابع عضو,Què s&#39;inclou normalment en una definició de classe?,Membres de dades (atributs) i funcions de membre.,membres de dades i funcions de membre,Шта је обично укључено у дефиницију класе?,Чланови података (атрибути) и функције чланова.,чланови података и функције чланова,Apa yang biasanya termasuk dalam definisi kelas?,Data anggota (atribut) dan fungsi anggota.,anggota data dan fungsi anggota,Hva er vanligvis inkludert i en klassedefinisjon?,Datamedlemmer (attributter) og medlemsfunksjoner.,datamedlemmer og medlemsfunksjoner,일반적으로 클래스 정의에는 무엇이 포함됩니까?,데이터 멤버 (속성) 및 멤버 함수.,데이터 멤버 및 멤버 함수,Mitä tyypillisesti sisältyy luokan määritelmään?,Tietojäsenet (attribuutit) ja jäsenfunktiot.,datajäsenet ja jäsenfunktiot,Mi jellemzően szerepel az osztály definíciójában?,Adattagok (attribútumok) és tagfunkciók.,adattagok és tagfunkciók,Co je obvykle zahrnuto v definici třídy?,Datové členy (atributy) a členské funkce.,datové členy a členské funkce,Šta je obično uključeno u definiciju klase?,Članovi podataka (atributi) i funkcije članova.,članovi podataka i funkcije članova
201,201,2346,12.7,push and pop,push and pop,What are the main operations associated with a stack?,5.0,Push and Pop,"Was sind die Hauptoperationen, die mit einem Stapel verbunden sind?",Push and Pop,Unsa ang mga punoan nga operasyon nga kauban sa usa ka stack?,iduso ug pop,iduso ug pop,Vilka är de viktigaste operationerna i samband med en stack?,tryck och knäpp,tryck och knäpp,Quelles sont les principales opérations associées à une pile?,pousser et pop,pousser et pop,Wat zijn de belangrijkste bewerkingen die aan een stapel zijn gekoppeld?,duwen en knallen,duwen en knallen,Какие основные операции связаны со стеком?,толкать и хлопать,толкать и хлопать,Quali sono le principali operazioni associate a uno stack?,spingere e pop,spingere e pop,¿Cuáles son las principales operaciones asociadas con una pila?,empujar y hacer estallar,empujar y hacer estallar,Jakie są główne operacje związane ze stosem?,push i pop,push i pop,Các hoạt động chính được liên kết với một ngăn xếp là gì?,đẩy và bật,đẩy và bật,スタックに関連する主な操作は何ですか？,プッシュアンドポップ,プッシュアンドポップ,与堆栈相关的主要操作是什么？,推和弹出,推和弹出,ما هي العمليات الرئيسية المرتبطة بمكدس؟,ادفع وبوب,ادفع وبوب,Які основні операції пов’язані зі стеком?,натискання та поп,натискання та поп,Quais são as principais operações associadas a uma pilha?,empurre e estale,empurre e estale,اصلی ترین عملیات مرتبط با پشته چیست؟,فشار و پاپ,فشار و پاپ,Quines són les principals operacions associades a una pila?,empenta i esclata,empenta i esclata,Које су главне операције повезане са стеком?,гурај и пуцај,гурај и пуцај,Apa operasi utama yang terkait dengan tumpukan?,push dan pop,push dan pop,Hva er de viktigste operasjonene knyttet til en stabel?,push og pop,push og pop,스택과 관련된 주요 작업은 무엇입니까?,밀고 팝,밀고 팝,Mitkä ovat pinoon liittyvät päätoiminnot?,työnnä ja pop,työnnä ja pop,Melyek a veremhez kapcsolódó főbb műveletek?,nyomja és pattog,nyomja és pattog,Jaké jsou hlavní operace spojené se zásobníkem?,push a pop,push a pop,Koje su glavne operacije povezane sa stogom?,guraj i pucaj,guraj i pucaj
202,202,1414,8.4,"You can implement a stack using arrays or and linked list. By the use of pointers, that point element(node) to the next element in the stack. By the use of pointers, the stack becomes a linked list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,2.5,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,Sie können einen Stapel mithilfe von Arrays oder einer verknüpften Liste implementieren. Durch die Verwendung von Zeigern wird dieses Punktelement (Knoten) zum nächsten Element im Stapel. Durch die Verwendung von Zeigern wird der Stapel zu einer verknüpften Liste.,Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.","Mahimo nimo ipatuman ang usa ka stack gamit ang mga arrays o ug lista nga na-link. Pinaagi sa paggamit sa mga panudlo, kana nga elemento nga punto (node) sa sunod nga elemento sa stack. Pinaagi sa paggamit sa mga panudlo, ang stack mahimong usa ka nalakip nga lista.",Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,"Du kan implementera en stack med hjälp av arrays eller en länkad lista. Genom att använda pekare, pekar elementet (noden) till nästa element i stacken. Genom att använda pekare blir stapeln en länkad lista.",Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.","Vous pouvez implémenter une pile à l&#39;aide de tableaux ou d&#39;une liste liée. En utilisant des pointeurs, cet élément de point (nœud) vers l&#39;élément suivant dans la pile. En utilisant des pointeurs, la pile devient une liste chaînée.",Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.",U kunt een stapel implementeren met behulp van arrays of en een gekoppelde lijst. Door het gebruik van pointers gaat dat puntelement (knooppunt) naar het volgende element in de stapel. Door het gebruik van pointers wordt de stapel een gekoppelde lijst.,Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.","Вы можете реализовать стек, используя массивы или связанный список. С помощью указателей этот элемент (узел) указывает на следующий элемент в стеке. С помощью указателей стек становится связанным списком.",Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.","È possibile implementare uno stack utilizzando array o un elenco collegato. Con l&#39;uso di puntatori, quell&#39;elemento punto (nodo) all&#39;elemento successivo nello stack. Con l&#39;uso dei puntatori, lo stack diventa un elenco collegato.",¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.","Puede implementar una pila usando matrices o una lista vinculada. Mediante el uso de punteros, ese elemento apunta (nodo) al siguiente elemento de la pila. Mediante el uso de punteros, la pila se convierte en una lista vinculada.",Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.",Możesz zaimplementować stos za pomocą tablic lub listy połączonej. Za pomocą wskaźników ten element wskazuje element (węzeł) do następnego elementu w stosie. Po zastosowaniu wskaźników stos staje się połączoną listą.,Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.","Bạn có thể triển khai một ngăn xếp bằng cách sử dụng mảng hoặc và danh sách được liên kết. Bằng cách sử dụng con trỏ, phần tử điểm đó (nút) đến phần tử tiếp theo trong ngăn xếp. Bằng cách sử dụng con trỏ, ngăn xếp trở thành một danh sách được liên kết.",リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,配列またはリンクリストを使用してスタックを実装できます。ポインタを使用することにより、その要素（ノード）はスタック内の次の要素を指します。ポインタを使用することにより、スタックはリンクリストになります。,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,您可以使用数组或与链表实现堆栈。通过使用指针，将element（node）指向堆栈中的下一个元素。通过使用指针，堆栈成为链接列表。,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,يمكنك تنفيذ مكدس باستخدام المصفوفات أو القائمة المرتبطة. باستخدام المؤشرات ، فإن هذا العنصر النقطي (العقدة) إلى العنصر التالي في المكدس. باستخدام المؤشرات ، يصبح المكدس قائمة مرتبطة.,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.",Ви можете реалізувати стек за допомогою масивів або та пов&#39;язаного списку. За допомогою покажчиків цей елемент точки (вузол) переходить до наступного елемента у стеку. За допомогою покажчиків стек стає пов&#39;язаним списком.,Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.","Você pode implementar uma pilha usando matrizes ou uma lista vinculada. Pelo uso de ponteiros, esse elemento aponta (nó) para o próximo elemento na pilha. Com o uso de ponteiros, a pilha se torna uma lista vinculada.",چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,می توانید یک پشته را با استفاده از آرایه ها و یا لیست پیوندی پیاده سازی کنید. با استفاده از اشاره گرها ، آن عنصر نقطه (گره) به عنصر بعدی در پشته وجود دارد. با استفاده از اشاره گرها ، پشته به یک لیست پیوندی تبدیل می شود.,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.","Podeu implementar una pila mitjançant matrius o i llista enllaçada. Mitjançant l&#39;ús de punteres, aquest element puntual (node) al següent element de la pila. Mitjançant l’ús de punteres, la pila es converteix en una llista enllaçada.",Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.","Можете применити стог помоћу низова или и повезане листе. Коришћењем показивача тај елемент тачке (чвор) прелази на следећи елемент у стеку. Коришћењем показивача, стек постаје повезана листа.",Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.","Anda dapat mengimplementasikan tumpukan menggunakan array atau dan daftar tertaut. Dengan menggunakan pointer, elemen titik (node) ke elemen berikutnya dalam tumpukan. Dengan menggunakan pointer, tumpukan menjadi daftar yang ditautkan.",Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.","Du kan implementere en stabel ved hjelp av matriser eller en koblet liste. Ved å bruke pekere, peker elementet (noden) til neste element i bunken. Ved å bruke pekere blir bunken en koblet liste.",목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,배열 또는 연결 목록을 사용하여 스택을 구현할 수 있습니다. 포인터를 사용하여 해당 포인트 요소 (노드)는 스택의 다음 요소를 가리 킵니다. 포인터를 사용하면 스택이 연결 목록이됩니다.,Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.",Voit toteuttaa pinon käyttämällä taulukoita tai linkitettyä luetteloa. Osoittimien avulla kyseinen piste-elementti (solmu) pinon seuraavaan elementtiin. Osoittimien avulla pinosta tulee linkitetty luettelo.,Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.",Tömbök vagy összekapcsolt lista segítségével implementálhat egy verem. Mutatók használatával az a pont elem (csomópont) a verem következő eleméhez. Mutatók használatával a verem összekapcsolt listává válik.,Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.",Zásobník můžete implementovat pomocí polí nebo a propojeného seznamu. Použitím ukazatelů tento bodový prvek (uzel) k dalšímu prvku v zásobníku. Pomocí ukazatelů se zásobník stane propojeným seznamem.,Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.","Možete implementirati stog pomoću nizova ili i povezane liste. Korištenjem pokazivača, taj element točke (čvor) na sljedeći element u stogu. Korištenjem pokazivača, stog postaje povezana lista."
203,203,1201,7.3,Array items are accessed directly with equal access time,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",What is the main advantage of arrays over linked lists?,5.0,"Auf die Elemente in einem Array kann direkt zugegriffen werden (im Gegensatz zu verknüpften Listen, die eine iterative Durchquerung erfordern).",Was ist der Hauptvorteil von Arrays gegenüber verknüpften Listen?,Auf Array-Elemente wird direkt mit gleicher Zugriffszeit zugegriffen,Unsa man ang punoan nga bentaha sa mga han-ay sa mga nalambigit nga lista?,"Ang mga elemento sa usa ka laray mahimong direkta nga ma-access (sukwahi sa mga nalambigit nga lista, nga nanginahanglan iterative traversal).",Direkta nga na-access ang mga item sa pag-array nga adunay parehas nga oras sa pag-access,Vad är den största fördelen med matriser jämfört med länkade listor?,"Elementen i en matris kan nås direkt (i motsats till länkade listor, som kräver iterativ genomgång).",Matartiklar nås direkt med samma åtkomsttid,Quel est le principal avantage des tableaux par rapport aux listes chaînées?,"Les éléments d&#39;un tableau sont accessibles directement (par opposition aux listes chaînées, qui nécessitent un parcours itératif).",Les éléments de la baie sont accessibles directement avec un temps d&#39;accès égal,Wat is het belangrijkste voordeel van arrays ten opzichte van gekoppelde lijsten?,"De elementen in een array zijn direct toegankelijk (in tegenstelling tot gekoppelde lijsten, die iteratief moeten doorlopen).",Array-items worden rechtstreeks benaderd met dezelfde toegangstijd,В чем основное преимущество массивов перед связанными списками?,"К элементам в массиве можно обращаться напрямую (в отличие от связанных списков, требующих итеративного обхода).",Доступ к элементам массива осуществляется напрямую с равным временем доступа,Qual è il vantaggio principale degli array rispetto agli elenchi collegati?,"È possibile accedere direttamente agli elementi di un array (al contrario degli elenchi collegati, che richiedono un attraversamento iterativo).",Gli elementi dell&#39;array sono accessibili direttamente con lo stesso tempo di accesso,¿Cuál es la principal ventaja de las matrices sobre las listas enlazadas?,"Se puede acceder directamente a los elementos de una matriz (a diferencia de las listas vinculadas, que requieren un recorrido iterativo).",Se accede directamente a los elementos de la matriz con el mismo tiempo de acceso,Jaka jest główna zaleta tablic w porównaniu z listami połączonymi?,"Do elementów tablicy można uzyskać bezpośredni dostęp (w przeciwieństwie do połączonych list, które wymagają iteracyjnego przechodzenia).",Dostęp do elementów tablicy uzyskuje się bezpośrednio z jednakowym czasem dostępu,Ưu điểm chính của mảng so với danh sách liên kết là gì?,"Các phần tử trong một mảng có thể được truy cập trực tiếp (trái ngược với danh sách được liên kết, yêu cầu truyền tải lặp đi lặp lại).",Các mục mảng được truy cập trực tiếp với thời gian truy cập như nhau,リンクリストに対する配列の主な利点は何ですか？,配列内の要素には直接アクセスできます（反復トラバーサルを必要とするリンクリストとは対照的です）。,配列アイテムは、等しいアクセス時間で直接アクセスされます,与链接列表相比，数组的主要优点是什么？,数组中的元素可以直接访问（与链表相反，后者需要迭代遍历）。,以相等的访问时间直接访问数组项,ما هي الميزة الرئيسية للمصفوفات على القوائم المرتبطة؟,يمكن الوصول إلى العناصر الموجودة في المصفوفة مباشرةً (على عكس القوائم المرتبطة التي تتطلب اجتيازًا تكراريًا).,يتم الوصول إلى عناصر المصفوفة مباشرة مع وقت وصول متساوٍ,Яка головна перевага масивів над пов’язаними списками?,"До елементів у масиві можна отримати прямий доступ (на відміну від зв’язаних списків, які вимагають ітеративного обходу).",Елементи масиву отримують прямий доступ з однаковим часом доступу,Qual é a principal vantagem dos arrays em relação às listas vinculadas?,"Os elementos em uma matriz podem ser acessados diretamente (em oposição às listas vinculadas, que exigem travessia iterativa).",Os itens da matriz são acessados diretamente com tempo de acesso igual,مزیت اصلی آرایه ها نسبت به لیست های پیونددار چیست؟,به عناصر موجود در یک آرایه می توان مستقیماً دسترسی داشت (در مقابل لیست های پیوندی که به پیمایش تکراری نیاز دارند).,موارد آرایه مستقیماً با زمان دسترسی برابر قابل دسترسی هستند,Quin és el principal avantatge de les matrius sobre les llistes enllaçades?,"Es pot accedir directament als elements d’una matriu (a diferència de les llistes enllaçades, que requereixen un recorregut iteratiu).",S&#39;accedeix directament als elements de la matriu amb un temps d&#39;accés igual,Која је главна предност низа у односу на повезане листе?,"Елементима у низу може се приступити директно (за разлику од повезаних листа, које захтевају итеративно обилажење).",Ставкама низа се приступа директно са једнаким временом приступа,Apa keuntungan utama array dibandingkan daftar tertaut?,"Elemen-elemen dalam sebuah array dapat diakses secara langsung (sebagai kebalikan dari daftar tertaut, yang membutuhkan traversal berulang).",Item array diakses langsung dengan waktu akses yang sama,Hva er den største fordelen med matriser i forhold til koblede lister?,"Elementene i en matrise kan fås direkte (i motsetning til koblede lister, som krever iterativ gjennomgang).",Du får tilgang til matriseartikler direkte med like tilgangstid,연결된 목록에 비해 배열의 주요 이점은 무엇입니까?,배열의 요소는 직접 액세스 할 수 있습니다 (반복 순회가 필요한 연결 목록과 반대).,동일한 액세스 시간으로 어레이 항목에 직접 액세스,Mikä on matriisien tärkein etu linkitettyihin luetteloihin nähden?,"Taulukon elementteihin pääsee suoraan (toisin kuin linkitetyt luettelot, jotka edellyttävät iteratiivista kulkua).",Matriisikohteisiin pääsee suoraan samalla käyttöajalla,Mi a tömbök fő előnye a kapcsolt listákkal szemben?,"A tömb elemeihez közvetlenül lehet hozzáférni (szemben az összekapcsolt listákkal, amelyek iteratív bejárást igényelnek).","A tömbelemekhez közvetlenül, azonos hozzáférési idővel férhet hozzá",Jaká je hlavní výhoda polí oproti propojeným seznamům?,"K prvkům v poli lze přistupovat přímo (na rozdíl od propojených seznamů, které vyžadují iterativní procházení).",K položkám polí se přistupuje přímo se stejnou dobou přístupu,Koja je glavna prednost polja nad povezanim listama?,"Elementima u nizu može se pristupiti izravno (za razliku od povezanih lista, koje zahtijevaju iterativno obilaženje).",Stavkama niza se pristupa izravno s jednakim vremenom pristupa
204,204,1680,9.7,queue,queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?",Warteschlange,"Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,pila,"Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,kö,"Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,queue,"Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,wachtrij,"Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,очередь,"Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,coda,"¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,cola,"Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,kolejka,"Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,xếp hàng,プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,キュー,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,队列,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,طابور,"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,чергу,"Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,fila,چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,صف,"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,cua,"Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,ред,"Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,antre,"Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,kø,"프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,열,"Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,jonottaa,"Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,sor,"Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,fronta,"Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,red
205,205,1164,7.2,Arrays must be of a defined size... elements can be added to a linked list w/o defining any size.,The linked lists can be of variable length.,What is the main advantage of linked lists over arrays?,5.0,Die verknüpften Listen können von variabler Länge sein.,Was ist der Hauptvorteil von verknüpften Listen gegenüber Arrays?,"Arrays müssen eine definierte Größe haben ... Elemente können zu einer verknüpften Liste hinzugefügt werden, ohne eine beliebige Größe zu definieren.",Unsa ang punoan nga bentaha sa mga nalambigit nga lista sa mga pag-array?,Ang gilakip nga mga lista mahimong adunay gitas-on nga variable.,Ang mga array kinahanglan adunay usa ka gihubit nga gidak-on ... ang mga elemento mahimo nga idugang sa usa ka nalakip nga lista nga nagpiho sa bisan unsang gidak-on.,Vad är den största fördelen med länkade listor jämfört med matriser?,De länkade listorna kan ha varierande längd.,Arrayer måste ha en definierad storlek ... element kan läggas till i en länkad lista utan att definiera vilken storlek som helst.,Quel est le principal avantage des listes chaînées par rapport aux tableaux?,Les listes chaînées peuvent être de longueur variable.,Les tableaux doivent avoir une taille définie ... les éléments peuvent être ajoutés à une liste chaînée sans définir de taille.,Wat is het belangrijkste voordeel van gekoppelde lijsten ten opzichte van arrays?,De gekoppelde lijsten kunnen een variabele lengte hebben.,Arrays moeten een gedefinieerde grootte hebben ... elementen kunnen worden toegevoegd aan een gekoppelde lijst zonder elke grootte te definiëren.,В чем главное преимущество связанных списков перед массивами?,Связанные списки могут быть переменной длины.,Массивы должны иметь определенный размер ... элементы могут быть добавлены в связанный список без определения любого размера.,Qual è il vantaggio principale degli elenchi collegati rispetto agli array?,Le liste collegate possono essere di lunghezza variabile.,Gli array devono avere una dimensione definita ... gli elementi possono essere aggiunti a un elenco collegato senza definire alcuna dimensione.,¿Cuál es la principal ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas pueden tener una longitud variable.,Las matrices deben tener un tamaño definido ... los elementos se pueden agregar a una lista vinculada sin definir ningún tamaño.,Jaka jest główna przewaga połączonych list nad tablicami?,Połączone listy mogą mieć różną długość.,Tablice muszą mieć określony rozmiar ... elementy można dodawać do połączonej listy bez definiowania dowolnego rozmiaru.,Ưu điểm chính của danh sách liên kết so với mảng là gì?,Các danh sách được liên kết có thể có độ dài thay đổi.,Mảng phải có kích thước xác định ... các phần tử có thể được thêm vào danh sách liên kết với việc xác định kích thước bất kỳ.,配列に対するリンクリストの主な利点は何ですか？,リンクリストは可変長にすることができます。,配列は定義されたサイズである必要があります...要素は、任意のサイズを定義せずにリンクリストに追加できます。,链表相对于数组的主要优点是什么？,链表的长度可以变化。,数组必须具有定义的大小...元素可以添加到不定义任何大小的链接列表中。,ما هي الميزة الرئيسية للقوائم المرتبطة على المصفوفات؟,يمكن أن تكون القوائم المرتبطة متغيرة الطول.,يجب أن تكون المصفوفات ذات حجم محدد ... يمكن إضافة العناصر إلى قائمة مرتبطة بدون تحديد أي حجم.,Яка головна перевага пов’язаних списків над масивами?,Пов’язані списки можуть мати різну довжину.,Масиви повинні мати певний розмір ... елементи можуть бути додані до пов&#39;язаного списку без визначення будь-якого розміру.,Qual é a principal vantagem das listas vinculadas em relação às matrizes?,As listas vinculadas podem ter comprimento variável.,Os vetores devem ter um tamanho definido ... os elementos podem ser adicionados a uma lista vinculada sem definir qualquer tamanho.,مزیت اصلی لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی می توانند از طول متغیر باشند.,آرایه ها باید از یک اندازه تعریف شده باشند ... عناصر را می توان با تعریف هر اندازه به لیست پیوند داده شده اضافه کرد.,Quin és el principal avantatge de les llistes enllaçades sobre les matrius?,Les llistes enllaçades poden tenir una longitud variable.,Les matrius han de tenir una mida definida ... es poden afegir elements a una llista enllaçada sense definir cap mida.,Која је главна предност повезаних листа над низовима?,Повезане листе могу бити променљиве дужине.,Низови морају бити дефинисане величине ... елементи се могу додати на повезану листу без дефинисања било које величине.,Apa keuntungan utama dari daftar tertaut dibandingkan array?,Panjang daftar tertaut bisa bervariasi.,Array harus dalam ukuran yang ditentukan ... elemen dapat ditambahkan ke daftar tertaut tanpa menentukan ukuran apa pun.,Hva er den største fordelen med koblede lister fremfor matriser?,De lenkede listene kan ha variabel lengde.,Arrays må ha en definert størrelse ... elementer kan legges til i en koblet liste uten å definere hvilken som helst størrelse.,배열에 비해 연결 목록의 주요 이점은 무엇입니까?,연결된 목록은 가변 길이 일 수 있습니다.,배열은 정의 된 크기 여야합니다 ... 요소는 크기를 정의하지 않고 링크 된 목록에 추가 할 수 있습니다.,Mikä on linkitettyjen luetteloiden tärkein etu matriiseihin nähden?,Linkitetyt luettelot voivat olla vaihtelevia pituisia.,"Matriisien on oltava määriteltyä kokoa ... elementtejä voidaan lisätä linkitettyyn luetteloon, joka määrittelee minkä tahansa koon.",Mi a linkelt listák fő előnye a tömbökhöz képest?,A linkelt listák változó hosszúságúak lehetnek.,"A tömböknek meghatározott méretűnek kell lenniük ... elemeket hozzá lehet adni egy csatolt listához, amely nem határoz meg bármilyen méretet.",Jaká je hlavní výhoda propojených seznamů oproti polím?,Propojené seznamy mohou mít různou délku.,Pole musí mít definovanou velikost ... prvky lze přidat do propojeného seznamu bez definice jakékoli velikosti.,Koja je glavna prednost povezanih lista nad nizovima?,Povezane liste mogu biti promjenljive dužine.,Nizovi moraju biti definirane veličine ... elementi se mogu dodati na povezanu listu bez definiranja bilo koje veličine.
206,206,1810,10.5,A tree in which the smaller values are located on the left of a parent node and the larger values are located on the right of the parent node.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,What is a binary search tree?,5.0,"Ein Binärbaum mit der Eigenschaft, dass für jeden Knoten das linke Kind kleiner als das übergeordnete Element ist, was wiederum kleiner als das rechte Kind ist.",Was ist ein binärer Suchbaum?,"Ein Baum, in dem sich die kleineren Werte links von einem übergeordneten Knoten und die größeren Werte rechts vom übergeordneten Knoten befinden.",Unsa ang usa ka puno nga pagpangita sa binary?,Ang usa ka binary nga kahoy nga adunay kabtangan nga alang sa bisan unsang node ang wala nga bata mas gamay kaysa sa ginikanan nga sa baylo mas gamay kaysa sa tuo nga bata.,Ang usa ka kahoy diin ang mga gagmay nga kantidad mahimutang sa wala sa usa ka node sa ginikanan ug ang labi ka daghang mga kantidad mahimutang sa tuo sa parent node.,Vad är ett binärt sökträd?,Ett binärt träd som har egenskapen att för vilken nod som helst är det vänstra barnet mindre än föräldern som i sin tur är mindre än det högra barnet.,Ett träd där de mindre värdena finns till vänster om en föräldernod och de större värdena till höger om föräldernoden.,Qu&#39;est-ce qu&#39;un arbre de recherche binaire?,"Un arbre binaire qui a la propriété que pour tout nœud, l&#39;enfant gauche est plus petit que le parent qui à son tour est plus petit que l&#39;enfant droit.",Une arborescence dans laquelle les valeurs les plus petites sont situées à gauche d&#39;un nœud parent et les valeurs les plus grandes sont situées à droite du nœud parent.,Wat is een binaire zoekboom?,"Een binaire boom die de eigenschap heeft dat voor elk knooppunt het linkerkind kleiner is dan de ouder, die op zijn beurt kleiner is dan het rechterkind.",Een boom waarin de kleinere waarden links van een bovenliggend knooppunt staan en de grotere waarden rechts van het bovenliggende knooppunt.,Что такое двоичное дерево поиска?,"Бинарное дерево, обладающее тем свойством, что для любого узла левый дочерний элемент меньше, чем родительский, который, в свою очередь, меньше, чем правый дочерний элемент.","Дерево, в котором меньшие значения расположены слева от родительского узла, а большие значения расположены справа от родительского узла.",Cos&#39;è un albero di ricerca binario?,Un albero binario che ha la proprietà che per ogni nodo il figlio sinistro è più piccolo del genitore che a sua volta è più piccolo del figlio destro.,Un albero in cui i valori più piccoli si trovano a sinistra di un nodo padre e i valori più grandi si trovano a destra del nodo padre.,¿Qué es un árbol de búsqueda binario?,"Un árbol binario que tiene la propiedad de que para cualquier nodo el hijo izquierdo es más pequeño que el padre, que a su vez es más pequeño que el hijo derecho.",Un árbol en el que los valores más pequeños se encuentran a la izquierda de un nodo principal y los valores más grandes se encuentran a la derecha del nodo principal.,Co to jest drzewo wyszukiwania binarnego?,"Drzewo binarne, które ma tę właściwość, że dla każdego węzła lewe dziecko jest mniejsze niż rodzic, które z kolei jest mniejsze niż prawe dziecko.","Drzewo, w którym mniejsze wartości znajdują się po lewej stronie węzła nadrzędnego, a większe wartości po prawej stronie węzła nadrzędnego.",Cây tìm kiếm nhị phân là gì?,"Một cây nhị phân có thuộc tính mà đối với bất kỳ nút nào, nút con bên trái đều nhỏ hơn nút cha, lần lượt nhỏ hơn nút con bên phải.",Một cây trong đó các giá trị nhỏ hơn nằm ở bên trái của nút cha và các giá trị lớn hơn nằm ở bên phải của nút cha.,二分探索木とは何ですか？,どのノードでも、左の子が親よりも小さく、親が右の子よりも小さいというプロパティを持つ二分木。,小さい値が親ノードの左側にあり、大きい値が親ノードの右側にあるツリー。,什么是二叉搜索树？,具有以下属性的二叉树：对于任何节点，左子节点小于父节点，而父节点又比右子节点小。,一棵树，其中较小的值位于父节点的左侧，较大的值位于父节点的右侧。,ما هي شجرة البحث الثنائية؟,شجرة ثنائية لها خاصية أن الطفل الأيسر لأي عقدة يكون أصغر من الأصل الذي بدوره أصغر من الطفل الأيمن.,شجرة توجد فيها القيم الأصغر على يسار العقدة الأصلية والقيم الأكبر موجودة على يمين العقدة الأصلية.,Що таке бінарне дерево пошуку?,"Бінарне дерево, яке має властивість, що для будь-якого вузла лівий дочірній елемент менший за батьківський, який, у свою чергу, менший від правого дочірнього.","Дерево, в якому менші значення розташовані зліва від батьківського вузла, а більші - праворуч від батьківського вузла.",O que é uma árvore de pesquisa binária?,"Uma árvore binária que possui a propriedade de que, para qualquer nó, o filho esquerdo é menor que o pai que, por sua vez, é menor que o filho direito.",Uma árvore na qual os valores menores estão localizados à esquerda de um nó pai e os valores maiores estão localizados à direita do nó pai.,درخت جستجوی باینری چیست؟,یک درخت باینری است که خاصیتی دارد که برای هر گره کودک چپ کوچکتر از والد است که به نوبه خود کوچکتر از فرزند راست است.,درختی که مقادیر کوچکتر در سمت چپ گره اصلی قرار دارد و مقادیر بزرگتر در سمت راست گره اصلی قرار دارد.,Què és un arbre de cerca binari?,"Un arbre binari que té la propietat que per a qualsevol node el fill esquerre és més petit que el pare, que al seu torn és més petit que el fill dret.",Un arbre en què els valors més petits es troben a l’esquerra d’un node pare i els valors més grans es troben a la dreta del node pare.,Шта је бинарно стабло претраживања?,Бинарно стабло које има својство да је за било који чвор лево дете мање од родитеља које је пак мање од десног детета.,"Стабло у којем су мање вредности смештене лево од родитељског чвора, а веће вредности десно од надређеног чвора.",Apa itu pohon pencarian biner?,Sebuah pohon biner yang memiliki properti yang untuk setiap node anak kiri lebih kecil dari induk yang pada gilirannya lebih kecil dari anak kanan.,Pohon di mana nilai yang lebih kecil terletak di sebelah kiri simpul induk dan nilai yang lebih besar terletak di sebelah kanan simpul induk.,Hva er et binært søketre?,Et binært tre som har den egenskapen at for hvilken som helst node er det venstre barnet mindre enn foreldren som igjen er mindre enn det høyre barnet.,Et tre der de mindre verdiene er plassert til venstre for en overordnet node og de større verdiene til høyre for foreldrenoden.,이진 검색 트리 란 무엇입니까?,모든 노드에 대해 왼쪽 자식이 부모보다 작고 오른쪽 자식보다 작은 속성을 가진 이진 트리입니다.,상위 노드의 왼쪽에 작은 값이 있고 상위 노드의 오른쪽에 큰 값이있는 트리입니다.,Mikä on binaarinen hakupuu?,"Binaarinen puu, jolla on ominaisuus, että minkä tahansa solmun vasen lapsi on pienempi kuin vanhempi, joka puolestaan on pienempi kuin oikea lapsi.","Puu, jossa pienemmät arvot sijaitsevat yläsolmun vasemmalla puolella ja suuremmat arvot yläsolmun oikealla puolella.",Mi az a bináris keresési fa?,"Egy bináris fa, amelynek az a tulajdonsága, hogy bármelyik csomópontnál a bal gyermek kisebb, mint a szülő, ami viszont kisebb, mint a jobb gyermek.","Egy fa, amelyben a kisebb értékek a szülőcsomópont bal oldalán, a nagyobbak pedig a szülőcsomópont jobb oldalán találhatók.",Co je to binární vyhledávací strom?,"Binární strom, který má vlastnost, že pro jakýkoli uzel je levé dítě menší než nadřazený, což je zase menší než pravé dítě.","Strom, ve kterém jsou menší hodnoty umístěny nalevo od nadřazeného uzlu a větší hodnoty jsou umístěny napravo od nadřazeného uzlu.",Što je binarno stablo pretraživanja?,Binarno stablo koje ima svojstvo da je za bilo koji čvor lijevo dijete manje od roditelja koje je pak manje od desnog djeteta.,"Stablo u kojem su manje vrijednosti smještene s lijeve strane nadređenog čvora, a veće vrijednosti s desne strane nadređenog čvora."
207,207,208,2.1,"It's specific class name, includes only information defined by that class... implementation details... etc.",Data members (attributes) and member functions.,What is typically included in a class definition?,3.0,Datenelemente (Attribute) und Elementfunktionen.,Was ist normalerweise in einer Klassendefinition enthalten?,"Der spezifische Klassenname enthält nur Informationen, die von dieser Klasse definiert wurden ... Implementierungsdetails ... usw.",Unsa ang kasagarang giapil sa usa ka kahulugan sa klase?,Mga myembro sa datos (mga hiyas) ug mga kalihokan sa miyembro.,"Kini nga piho nga ngalan sa klase, nag-upod ra sa kasayuran nga gihubit sa kana nga klase ... mga detalye sa pagpatuman ... etc.",Vad ingår vanligtvis i en klassdefinition?,Datamedlemmar (attribut) och medlemsfunktioner.,"Det är specifikt klassnamn, innehåller endast information definierad av den klassen ... implementeringsdetaljer ... etc.",Qu&#39;est-ce qui est généralement inclus dans une définition de classe?,Membres de données (attributs) et fonctions membres.,"C&#39;est le nom de classe spécifique, ne comprend que les informations définies par cette classe ... les détails d&#39;implémentation ... etc.",Wat is er typisch opgenomen in een klassendefinitie?,Gegevensleden (attributen) en lidfuncties.,"Het is een specifieke klassenaam, bevat alleen informatie die door die klasse is gedefinieerd ... implementatiedetails ... enz.",Что обычно включается в определение класса?,Члены данных (атрибуты) и функции-члены.,"Это конкретное имя класса, включает только информацию, определенную этим классом ... детали реализации ... и т. Д.",Cosa è tipicamente incluso nella definizione di una classe?,Membri dei dati (attributi) e funzioni dei membri.,"È un nome di classe specifico, include solo le informazioni definite da quella classe ... dettagli di implementazione ... ecc.",¿Qué se incluye normalmente en una definición de clase?,Miembros de datos (atributos) y funciones de los miembros.,"Su nombre de clase específico, incluye solo información definida por esa clase ... detalles de implementación ... etc.",Co zwykle zawiera definicja klasy?,Członkowie danych (atrybuty) i funkcje składowe.,"To konkretna nazwa klasy, zawiera tylko informacje zdefiniowane przez tę klasę ... szczegóły implementacji ... itd.",Những gì thường được bao gồm trong một định nghĩa lớp?,Thành viên dữ liệu (thuộc tính) và chức năng thành viên.,"Đó là tên lớp cụ thể, chỉ bao gồm thông tin được xác định bởi lớp đó ... chi tiết triển khai ... v.v.",通常、クラス定義には何が含まれていますか？,データメンバー（属性）とメンバー関数。,これは特定のクラス名であり、そのクラスによって定義された情報のみが含まれます...実装の詳細...など。,类定义中通常包含什么？,数据成员（属性）和成员函数。,它是特定的类名称，仅包含该类定义的信息，实现细节等。,ما الذي يتم تضمينه عادة في تعريف الفئة؟,أعضاء البيانات (السمات) ووظائف الأعضاء.,إنه اسم فئة محدد ، يتضمن فقط المعلومات المحددة بواسطة تلك الفئة ... تفاصيل التنفيذ ... إلخ.,Що зазвичай входить у визначення класу?,Члени даних (атрибути) та функції членів.,"Це конкретна назва класу, включає лише інформацію, визначену цим класом ... деталі реалізації ... тощо.",O que normalmente está incluído em uma definição de classe?,Membros de dados (atributos) e funções de membro.,"Seu nome de classe específico, inclui apenas informações definidas por essa classe ... detalhes de implementação ... etc.",چه چیزی معمولاً در تعریف کلاس گنجانده می شود؟,اعضای داده (ویژگی ها) و توابع عضو.,این نام کلاس خاصی است ، فقط شامل اطلاعات تعریف شده توسط آن کلاس است ... جزئیات پیاده سازی ... و غیره,Què s&#39;inclou normalment en una definició de classe?,Membres de dades (atributs) i funcions de membre.,"És un nom de classe específic, només inclou informació definida per aquesta classe ... detalls de la implementació ... etc.",Шта је обично укључено у дефиницију класе?,Чланови података (атрибути) и функције чланова.,"То је специфично име класе, укључује само информације дефинисане том класом ... детаљи имплементације ... итд.",Apa yang biasanya termasuk dalam definisi kelas?,Data anggota (atribut) dan fungsi anggota.,"Nama kelas spesifiknya, hanya mencakup informasi yang ditentukan oleh kelas itu ... detail implementasi ... dll.",Hva er vanligvis inkludert i en klassedefinisjon?,Datamedlemmer (attributter) og medlemsfunksjoner.,"Det er spesifikt klassenavn, inneholder bare informasjon definert av den klassen ... implementeringsdetaljer ... etc.",일반적으로 클래스 정의에는 무엇이 포함됩니까?,데이터 멤버 (속성) 및 멤버 함수.,특정 클래스 이름이며 해당 클래스에 의해 정의 된 정보 만 포함합니다. 구현 세부 정보 등.,Mitä tyypillisesti sisältyy luokan määritelmään?,Tietojäsenet (attribuutit) ja jäsenfunktiot.,"Se on luokan erityinen nimi, sisältää vain kyseisen luokan määrittelemät tiedot ... toteutustiedot ... jne.",Mi jellemzően szerepel az osztály definíciójában?,Adattagok (attribútumok) és tagfunkciók.,"Ez az adott osztály neve, csak az adott osztály által meghatározott információkat tartalmazza ... a megvalósítás részletei ... stb.",Co je obvykle zahrnuto v definici třídy?,Datové členy (atributy) a členské funkce.,"Je to konkrétní název třídy, obsahuje pouze informace definované touto třídou ... podrobnosti implementace ... atd.",Šta je obično uključeno u definiciju klase?,Članovi podataka (atributi) i funkcije članova.,"To je specifično ime klase, uključuje samo informacije definirane tom klasom ... detalji implementacije ... itd."
208,208,366,2.6,"A function prototype lays out the name, return type, and the number and types of parameters the function expects to receive in a certain order.  The details for function prototypes are in the function definition.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",What is the difference between a function prototype and a function definition?,5.0,"Ein Funktionsprototyp enthält die Funktionssignatur, dh den Namen der Funktion, den Rückgabetyp und den Parametertyp. Die Funktionsdefinition enthält den tatsächlichen Hauptteil der Funktion.",Was ist der Unterschied zwischen einem Funktionsprototyp und einer Funktionsdefinition?,"Ein Funktionsprototyp legt den Namen, den Rückgabetyp sowie die Anzahl und Art der Parameter fest, die die Funktion in einer bestimmten Reihenfolge erwartet. Die Details für Funktionsprototypen finden Sie in der Funktionsdefinition.",Unsa ang kalainan tali sa usa ka function prototype ug usa ka kahulugan nga pagpaandar?,"Ang usa ka function prototype adunay upod nga pirma sa pagpaandar, ie, ang ngalan sa pagpaandar, ang tipo sa pagbalik, ug ang tipo sa mga parameter. Ang kahulugan sa pagpaandar kauban ang tinuud nga lawas sa kalihokan.","Ang usa ka function prototype naglatag sa ngalan, tipo sa pagbalik, ug ang ihap ug mga lahi sa mga parameter nga gilauman nga madawat sa usa ka function sa usa ka piho nga han-ay. Ang mga detalye alang sa mga prototype nga gigamit naa sa kahulugan sa pagpaandar.",Vad är skillnaden mellan en funktionsprototyp och en funktionsdefinition?,"En funktionsprototyp inkluderar funktionssignaturen, dvs namnet på funktionen, returtypen och parametertypen. Funktionsdefinitionen inkluderar funktionens faktiska kropp.","En funktionsprototyp anger namnet, returtypen och antalet och typerna av parametrar som funktionen förväntar sig att få i en viss ordning. Detaljerna för funktionsprototyper finns i funktionsdefinitionen.",Quelle est la différence entre un prototype de fonction et une définition de fonction?,"Un prototype de fonction comprend la signature de la fonction, c&#39;est-à-dire le nom de la fonction, le type de retour et le type des paramètres. La définition de fonction inclut le corps réel de la fonction.","Un prototype de fonction présente le nom, le type de retour et le nombre et les types de paramètres que la fonction s&#39;attend à recevoir dans un certain ordre. Les détails des prototypes de fonction se trouvent dans la définition de fonction.",Wat is het verschil tussen een functie-prototype en een functiedefinitie?,"Een functieprototype bevat de functiehandtekening, dwz de naam van de functie, het retourtype en het type parameter. De functiedefinitie omvat de feitelijke inhoud van de functie.","Een functieprototype bevat de naam, het retourtype en het aantal en de typen parameters die de functie verwacht te ontvangen in een bepaalde volgorde. De details voor functieprototypes staan in de functiedefinitie.",В чем разница между прототипом функции и определением функции?,"Прототип функции включает сигнатуру функции, т. Е. Имя функции, тип возвращаемого значения и тип параметров. Определение функции включает фактическое тело функции.","В прототипе функции указываются имя, тип возвращаемого значения, а также количество и типы параметров, которые функция ожидает получить в определенном порядке. Подробная информация о прототипах функций находится в определении функции.",Qual è la differenza tra un prototipo di funzione e una definizione di funzione?,"Un prototipo di funzione include la firma della funzione, cioè il nome della funzione, il tipo restituito e il tipo dei parametri. La definizione della funzione include il corpo effettivo della funzione.","Un prototipo di funzione definisce il nome, il tipo restituito e il numero e il tipo di parametri che la funzione si aspetta di ricevere in un certo ordine. I dettagli per i prototipi di funzione sono nella definizione della funzione.",¿Cuál es la diferencia entre un prototipo de función y una definición de función?,"Un prototipo de función incluye la firma de la función, es decir, el nombre de la función, el tipo de retorno y el tipo de los parámetros. La definición de función incluye el cuerpo real de la función.","Un prototipo de función establece el nombre, el tipo de retorno y el número y los tipos de parámetros que la función espera recibir en un orden determinado. Los detalles de los prototipos de funciones se encuentran en la definición de función.",Jaka jest różnica między prototypem funkcji a definicją funkcji?,"Prototyp funkcji zawiera sygnaturę funkcji, tj. Nazwę funkcji, typ zwracanej wartości i typ parametrów. Definicja funkcji zawiera rzeczywistą treść funkcji.","Prototyp funkcji określa nazwę, zwracany typ oraz liczbę i typy parametrów, które funkcja oczekuje w określonej kolejności. Szczegóły dotyczące prototypów funkcji znajdują się w definicji funkcji.",Sự khác biệt giữa nguyên mẫu hàm và định nghĩa hàm là gì?,"Một nguyên mẫu hàm bao gồm chữ ký hàm, tức là tên của hàm, kiểu trả về và kiểu của tham số. Định nghĩa hàm bao gồm phần thân thực sự của hàm.","Một nguyên mẫu hàm đưa ra tên, kiểu trả về, số lượng và kiểu tham số mà hàm mong đợi nhận được theo một thứ tự nhất định. Các chi tiết cho các nguyên mẫu hàm có trong định nghĩa hàm.",関数プロトタイプと関数定義の違いは何ですか？,関数プロトタイプには、関数のシグネチャ、つまり関数の名前、戻り値の型、およびパラメータの型が含まれています。関数定義には、関数の実際の本体が含まれます。,関数プロトタイプは、名前、戻り値の型、および関数が特定の順序で受け取ると予想されるパラメーターの数とタイプをレイアウトします。関数プロトタイプの詳細は、関数定義にあります。,函数原型和函数定义有什么区别？,函数原型包括函数签名，即函数名称，返回类型和参数类型。函数定义包括函数的实际主体。,函数原型列出了名称，返回类型以及函数期望按特定顺序接收的参数的数量和类型。函数原型的详细信息在函数定义中。,ما هو الفرق بين النموذج الأولي للدالة وتعريف الوظيفة؟,يتضمن النموذج الأولي للوظيفة توقيع الوظيفة ، أي اسم الوظيفة ونوع الإرجاع ونوع المعلمات. يتضمن تعريف الوظيفة الجسم الفعلي للوظيفة.,يحدد النموذج الأولي للوظيفة الاسم ونوع الإرجاع وعدد وأنواع المعلمات التي تتوقع الوظيفة تلقيها بترتيب معين. تفاصيل النماذج الأولية للوظيفة موجودة في تعريف الوظيفة.,У чому різниця між прототипом функції та визначенням функції?,"Прототип функції включає підпис функції, тобто ім&#39;я функції, тип повернення та тип параметрів. Визначення функції включає фактичне тіло функції.","Прототип функції викладає ім&#39;я, тип повернення та кількість та типи параметрів, які функція очікує отримати в певному порядку. Детальна інформація про прототипи функцій наведена у визначенні функції.",Qual é a diferença entre um protótipo de função e uma definição de função?,"Um protótipo de função inclui a assinatura da função, ou seja, o nome da função, o tipo de retorno e o tipo dos parâmetros. A definição da função inclui o corpo real da função.","Um protótipo de função apresenta o nome, o tipo de retorno e o número e tipos de parâmetros que a função espera receber em uma determinada ordem. Os detalhes para protótipos de função estão na definição de função.",تفاوت بین نمونه اولیه عملکرد و تعریف عملکرد چیست؟,نمونه اولیه تابع شامل امضای تابع است ، به عنوان مثال ، نام عملکرد ، نوع بازگشت و نوع پارامترها. تعریف عملکرد شامل بدنه واقعی عملکرد است.,یک نمونه اولیه از عملکرد ، نام ، نوع بازگشت و تعداد و انواع پارامترهایی را که انتظار می رود عملکرد به ترتیب خاصی دریافت کند ، مشخص می کند. جزئیات مربوط به نمونه های اولیه عملکرد در تعریف عملکرد است.,Quina diferència hi ha entre un prototip de funció i una definició de funció?,"Un prototip de funció inclou la signatura de la funció, és a dir, el nom de la funció, el tipus de retorn i el tipus dels paràmetres. La definició de funció inclou el cos real de la funció.","Un prototip de funció estableix el nom, el tipus de retorn i el nombre i tipus de paràmetres que la funció espera rebre en un ordre determinat. Els detalls dels prototips de funció es troben a la definició de funció.",Која је разлика између прототипа функције и дефиниције функције?,"Прототип функције укључује потпис функције, тј. Име функције, тип повратка и тип параметара. Дефиниција функције укључује стварно тело функције.","Прототип функције наводи име, тип повратка и број и типове параметара које функција очекује да прими у одређеном редоследу. Детаљи о прототиповима функција налазе се у дефиницији функције.",Apa perbedaan antara prototipe fungsi dan definisi fungsi?,"Prototipe fungsi mencakup tanda tangan fungsi, yaitu nama fungsi, jenis kembalian, dan jenis parameter. Definisi fungsi mencakup tubuh sebenarnya dari fungsi tersebut.","Prototipe fungsi menjabarkan nama, tipe kembalian, dan jumlah serta tipe parameter yang diharapkan dapat diterima oleh fungsi dalam urutan tertentu. Detail untuk prototipe fungsi ada dalam definisi fungsi.",Hva er forskjellen mellom en funksjonsprototype og en funksjonsdefinisjon?,"En funksjonsprototype inkluderer funksjonssignaturen, dvs. navnet på funksjonen, returtypen og parametertypen. Funksjonsdefinisjonen inkluderer funksjonens faktiske kropp.","En funksjonsprototype legger ut navnet, returtypen og antall og typer parametere funksjonen forventer å motta i en bestemt rekkefølge. Detaljene for funksjonsprototyper er i funksjonsdefinisjonen.",함수 프로토 타입과 함수 정의의 차이점은 무엇입니까?,"함수 프로토 타입에는 함수 시그니처, 즉 함수 이름, 반환 유형 및 매개 변수 유형이 포함됩니다. 함수 정의에는 함수의 실제 본문이 포함됩니다.","함수 프로토 타입은 이름, 반환 유형, 함수가 특정 순서로받을 것으로 예상하는 매개 변수의 수와 유형을 배치합니다. 함수 프로토 타입에 대한 세부 사항은 함수 정의에 있습니다.",Mitä eroa on funktion prototyypin ja funktion määritelmän välillä?,"Funktion prototyyppi sisältää funktion allekirjoituksen, eli funktion nimen, palautustyypin ja parametrien tyypin. Funktion määritelmä sisältää funktion todellisen rungon.","Funktion prototyyppi asettaa nimen, palautustyypin sekä parametrien määrän ja tyypit, jotka funktio odottaa saavansa tietyssä järjestyksessä. Funktion prototyyppien yksityiskohdat ovat funktion määrittelyssä.",Mi a különbség a függvény prototípusa és a függvény definíciója között?,"A függvény prototípusa tartalmazza a függvény aláírását, azaz a függvény nevét, a visszatérés típusát és a paraméterek típusát. A függvénydefiníció magában foglalja a függvény tényleges törzsét.","A függvény prototípusa meghatározza a nevet, a visszatérés típusát, valamint a paraméterek számát és típusait, amelyeket a függvény várhatóan kap egy bizonyos sorrendben. A függvény prototípusainak részletei a függvény definíciójában találhatók.",Jaký je rozdíl mezi prototypem funkce a definicí funkce?,"Prototyp funkce zahrnuje podpis funkce, tj. Název funkce, návratový typ a typ parametrů. Definice funkce zahrnuje skutečné tělo funkce.","Prototyp funkce stanoví název, návratový typ a počet a typy parametrů, které funkce očekává v určitém pořadí. Podrobnosti o prototypech funkcí jsou v definici funkce.",Koja je razlika između prototipa funkcije i definicije funkcije?,"Prototip funkcije uključuje potpis funkcije, tj. Ime funkcije, tip povratka i tip parametara. Definicija funkcije uključuje stvarno tijelo funkcije.","Prototip funkcije navodi ime, tip povratka i broj i tipove parametara koje funkcija očekuje da primi u određenom redoslijedu. Pojedinosti o prototipovima funkcija nalaze se u definiciji funkcije."
209,209,899,5.3,"Best case would be O(n) or n-1, because that's what it takes to scan the array and make one swap. The array would then be sorted and would take only 1 operation.",N (the length of the array) operations achieved for a sorted array.,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",4.0,"N (die Länge des Arrays) Operationen, die für ein sortiertes Array erzielt wurden.","Wie viele Operationen müssen für die Einfügungssortierung in einem Best-Case-Szenario ausgeführt werden, und in welchem Best-Case-Szenario?","Der beste Fall wäre O (n) oder n-1, da dies erforderlich ist, um das Array zu scannen und einen Swap durchzuführen. Das Array würde dann sortiert und würde nur eine Operation ausführen.","Unsa ang gidaghanon sa mga operasyon alang sa pagsulud nga sulud sa ilalum sa usa ka labing maayo nga kahimtang nga sitwasyon, ug unsa ang labing maayo nga sitwasyon nga hitabo?",N (ang gitas-on sa laray) nakamit ang mga operasyon alang sa usa ka gihan-ay nga laray.,"Labing kaayo nga kaso mahimong O (n) o n-1, tungod kay kana ang kinahanglan aron ma-scan ang laray ug maghimo usa ka pagbayloay. Ang paghan-ay dayon paghan-ay ug maghimo ra sa 1 nga operasyon.","Vad är antalet operationer för insättningssortering under ett bästa fall, och vad är det bästa fallet?",N (längden på matrisen) som uppnåtts för en sorterad matris.,"Bästa fallet skulle vara O (n) eller n-1, för det är vad som krävs för att skanna arrayen och göra en byte. Arrayen skulle sedan sorteras och skulle bara ta en operation.",Quel est le nombre d&#39;opérations pour le tri par insertion dans le meilleur des cas et quel est le meilleur des cas?,N (la longueur du tableau) opérations réalisées pour un tableau trié.,"Le meilleur des cas serait O (n) ou n-1, car c&#39;est ce qu&#39;il faut pour analyser le tableau et effectuer un échange. Le tableau serait alors trié et ne prendrait qu&#39;une seule opération.","Wat is het aantal bewerkingen voor invoegsortering in het beste geval, en wat is het beste scenario?",N (de lengte van de array) bewerkingen die zijn bereikt voor een gesorteerde array.,"In het beste geval zou O (n) of n-1 zijn, want dat is wat er nodig is om de array te scannen en één keer om te wisselen. De array zou dan worden gesorteerd en zou slechts één bewerking nodig hebben.",Каково количество операций сортировки вставкой в лучшем случае и в каком сценарии лучше всего?,"N (длина массива) операций, выполненных для отсортированного массива.","В лучшем случае будет O (n) или n-1, потому что это то, что нужно для сканирования массива и выполнения одной замены. Затем массив будет отсортирован и потребует всего 1 операцию.",Qual è il numero di operazioni per l&#39;ordinamento per inserzione in uno scenario migliore e qual è lo scenario migliore?,N (la lunghezza dell&#39;array) operazioni ottenute per un array ordinato.,"Il caso migliore sarebbe O (n) o n-1, perché è quello che serve per scansionare l&#39;array e fare uno scambio. L&#39;array verrebbe quindi ordinato e richiederebbe solo 1 operazione.",¿Cuál es la cantidad de operaciones para la ordenación por inserción en el mejor de los casos y cuál es el mejor de los casos?,N (la longitud de la matriz) operaciones logradas para una matriz ordenada.,"El mejor de los casos sería O (n) o n-1, porque eso es lo que se necesita para escanear la matriz y hacer un intercambio. Luego, la matriz se ordenaría y solo tomaría 1 operación.",Jaka jest liczba operacji sortowania przez wstawianie w ramach najlepszego scenariusza i jaki jest najlepszy scenariusz?,N (długość tablicy) operacji uzyskanych dla posortowanej tablicy.,"Najlepszym przypadkiem byłoby O (n) lub n-1, ponieważ wystarczy zeskanować tablicę i wykonać jedną zamianę. Tablica zostanie wówczas posortowana i zajmie tylko 1 operację.",Số hoạt động để sắp xếp chèn trong trường hợp tốt nhất là bao nhiêu và trường hợp tốt nhất là gì?,N (độ dài của mảng) hoạt động đạt được cho một mảng đã sắp xếp.,"Trường hợp tốt nhất sẽ là O (n) hoặc n-1, bởi vì đó là những gì nó cần để quét mảng và thực hiện một lần hoán đổi. Mảng sau đó sẽ được sắp xếp và chỉ mất 1 thao tác.",最良のシナリオでの挿入ソートの操作数と、最良のシナリオは何ですか？,ソートされた配列に対して達成されたN（配列の長さ）操作。,最適なケースはO（n）またはn-1です。これは、アレイをスキャンして1回スワップするために必要なものだからです。次に、配列がソートされ、1回の操作のみが実行されます。,在最佳情况下，插入排序的操作数是多少？最佳情况是什么？,已排序的数组完成了N次（数组的长度）操作。,最好的情况是O（n）或n-1，因为这是扫描阵列并进行一次交换所需要的。然后将对数组进行排序，并且仅执行1次操作。,ما هو عدد العمليات لفرز الإدراج ضمن سيناريو أفضل حالة ، وما هو أفضل سيناريو؟,تم تحقيق N (طول المصفوفة) لعمليات مصفوفة مرتبة.,أفضل حالة هي O (n) أو n-1 ، لأن هذا هو ما يتطلبه الأمر لفحص المصفوفة وإجراء مبادلة واحدة. سيتم بعد ذلك فرز المصفوفة ولن تستغرق سوى عملية واحدة.,"Яка кількість операцій для сортування вставки за найкращим сценарієм, і який найкращий варіант?","N (довжина масиву) операції, досягнуті для відсортованого масиву.","Найкращим варіантом буде O (n) або n-1, тому що саме це потрібно, щоб просканувати масив і зробити один обмін. Потім масив буде відсортовано і займе лише 1 операцію.",Qual é o número de operações para classificação por inserção em um cenário de melhor caso e qual é o cenário de melhor caso?,N (o comprimento da matriz) operações obtidas para uma matriz classificada.,"O melhor caso seria O (n) ou n-1, porque é o que é necessário para varrer o array e fazer uma troca. A matriz seria então classificada e levaria apenas 1 operação.",تعداد عملیات برای مرتب سازی درج در یک سناریوی بهترین حالت چقدر است و بهترین سناریو کدام است؟,N (طول آرایه) عملیاتی که برای یک آرایه مرتب شده بدست می آید.,بهترین حالت O (n) یا n-1 است ، زیرا اسکن آرایه و ایجاد یک مبادله این همان چیزی است که لازم است. سپس آرایه مرتب می شود و فقط 1 عمل انجام می شود.,Quin és el nombre d&#39;operacions per ordenar la inserció en un escenari del millor cas i quin és el millor cas?,N (la longitud de la matriu) operacions aconseguides per a una matriu ordenada.,"El millor cas seria O (n) o n-1, perquè això és el que es necessita per escanejar la matriu i fer un intercanvi. La matriu s&#39;ordenaria i només duria 1 operació.","Који је број операција за сортирање уметања у најбољем случају, а који у најбољем случају?",Н (дужина низа) операција постигнутих за сортирани низ.,"Најбољи случај би био О (н) или н-1, јер је то потребно за скенирање низа и једну замену. Затим би се низ сортирао и требало би само 1 операцију.","Berapa jumlah operasi untuk pengurutan penyisipan dalam skenario kasus terbaik, dan apa skenario kasus terbaik?",Operasi N (panjang array) dicapai untuk array yang diurutkan.,"Kasus terbaik adalah O (n) atau n-1, karena itulah yang diperlukan untuk memindai array dan membuat satu swap. Array kemudian akan diurutkan dan hanya membutuhkan 1 operasi.","Hva er antall operasjoner for innsettingssortering under et best-case-scenario, og hva er best-case-scenariet?",N (lengden på matrisen) operasjoner oppnådd for en sortert matrise.,"Beste tilfelle ville være O (n) eller n-1, fordi det er det som trengs for å skanne matrisen og gjøre en bytte. Matrisen ville da bli sortert og ville bare ta én operasjon.",최상의 시나리오에서 삽입 정렬을위한 작업의 수와 최상의 시나리오는 무엇입니까?,정렬 된 배열에 대해 수행 된 N (배열의 길이) 작업.,가장 좋은 경우는 O (n) 또는 n-1입니다. 이것이 어레이를 스캔하고 하나의 스왑을 만드는 데 필요한 것입니다. 그런 다음 배열이 정렬되고 하나의 작업 만 수행됩니다.,Mikä on parhaan mahdollisen skenaarion mukaan lisättävien toimintojen määrä ja mikä on paras tapaus?,"N (matriisin pituus) operaatiota, jotka on saatu lajitellulle taulukolle.","Paras tapa olisi O (n) tai n-1, koska matriisin skannaaminen ja yhden vaihdon tekeminen vaatii sitä. Matriisi sitten lajitellaan ja se vie vain yhden operaation.","Mennyi a beillesztési műveletek száma a legjobb forgatókönyv szerint, és mi a legjobb eset?",N (a tömb hossza) rendezett tömbnél elért műveletek.,"A legjobb eset O (n) vagy n-1 lenne, mert erre van szükség a tömb beolvasásához és egy csere elvégzéséhez. Ezután a tömb rendezésre kerül, és csak 1 műveletet fog végrehajtani.",Jaký je počet operací pro třídění vložení v případě nejlepšího scénáře a jaký je nejlepší případ?,N (délka pole) operace dosažené pro tříděné pole.,"Nejlepší případ by byl O (n) nebo n-1, protože to je to, co je potřeba pro skenování pole a provedení jednoho swapu. Pole by pak bylo tříděno a trvalo by pouze 1 operaci.","Koji je broj operacija za sortiranje umetanja u najboljem scenariju, a koji je najbolji slučaj?",N (dužina niza) operacija postignutih za sortirani niz.,"Najbolji slučaj bi bio O (n) ili n-1, jer je to potrebno za skeniranje niza i izvršavanje jedne zamjene. Zatim bi se niz sortirao i trebao bi samo 1 operaciju."
210,210,1336,8.1,"A stack is a data structure that allows data members to be added or removed one at a time, and in order. They are a ""Last in First Out"" structure.","A data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",What is a stack?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element als erstes entfernt wird (oder als Last-In-First-Out).",Was ist ein Stapel?,"Ein Stapel ist eine Datenstruktur, mit der Datenelemente einzeln und nacheinander hinzugefügt oder entfernt werden können. Sie sind eine &quot;Last in First Out&quot; -Struktur.",Unsa ang usa ka stack?,"Ang usa ka istruktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang una nga tangtangon (o ulahi-sa-una-sa-una)","Ang usa ka stack usa ka istruktura sa datos nga nagtugot sa mga myembro sa datos nga madugang o matangtang nga tagsatagsa, ug sa kahusay. Usa sila ka istraktura nga &quot;Last in First Out&quot;.",Vad är en stack?,"En datastruktur som kan lagra element, som har egenskapen att det senaste objektet som läggs till kommer att vara det första som tas bort (eller sista-in-först-ut)",En stack är en datastruktur som gör att datamedlemmar kan läggas till eller tas bort en i taget och i ordning. De är en &quot;Last in First Out&quot; -struktur.,Qu&#39;est-ce qu&#39;une pile?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le premier à être supprimé (ou dernier entré-premier sorti)","Une pile est une structure de données qui permet d&#39;ajouter ou de supprimer des membres de données un à la fois et dans l&#39;ordre. Il s&#39;agit d&#39;une structure «dernier entré, premier sorti».",Wat is een stapel?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item als eerste wordt verwijderd (of last-in-first-out)",Een stapel is een gegevensstructuur waarmee gegevensleden één voor één en in volgorde kunnen worden toegevoegd of verwijderd. Ze zijn een &quot;Last in First Out&quot; -structuur.,Что такое стек?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален первым (или последним пришел - первым ушел).","Стек - это структура данных, которая позволяет добавлять или удалять элементы данных по одному и по порядку. Они построены по принципу «последний пришел - первым ушел».",Cos&#39;è uno stack?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà il primo a essere rimosso (o last-in-first-out)",Uno stack è una struttura dati che consente di aggiungere o rimuovere membri di dati uno alla volta e in ordine. Sono una struttura &quot;Last in First Out&quot;.,¿Qué es una pila?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el primero en eliminarse (o el último en entrar, primero en salir)","Una pila es una estructura de datos que permite agregar o eliminar miembros de datos de uno en uno y en orden. Son una estructura de &quot;último en entrar, primero en salir&quot;.",Co to jest stos?,"Struktura danych, która może przechowywać elementy, która ma właściwość, że ostatni dodany element będzie pierwszym do usunięcia (lub last-in-first-out)","Stos to struktura danych, która umożliwia dodawanie lub usuwanie elementów składowych danych pojedynczo i w określonej kolejności. Są strukturą typu „Last in First Out”.",Ngăn xếp là gì?,"Cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử đầu tiên bị xóa (hoặc cuối cùng vào trước)",Ngăn xếp là một cấu trúc dữ liệu cho phép các thành viên dữ liệu được thêm vào hoặc xóa bỏ lần lượt và theo thứ tự. Chúng là một cấu trúc &quot;Last in First Out&quot;.,スタックとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最初に削除される（または後入れ先出し）というプロパティがあります。,スタックは、データメンバーを一度に1つずつ、順番に追加または削除できるようにするデータ構造です。それらは「後入れ先出し」構造です。,什么是堆栈？,可以存储元素的数据结构，其属性是最后添加的项将是第一个要删除的（或后进先出）,堆栈是一种数据结构，它允许一次并按顺序添加或删除数据成员。它们是“后进先出”结构。,ما هو المكدس؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون أول عنصر تتم إزالته (أو آخر ما يرد أولاً),المكدس عبارة عن بنية بيانات تسمح بإضافة أعضاء البيانات أو إزالتهم واحدًا تلو الآخر ، وبالترتيب. هم هيكل &quot;آخر ما يدخل أولاً&quot;.,Що таке стек?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде першим, який буде видалено (або останній-у-першому-вихід)","Стек - це структура даних, яка дозволяє додавати або видаляти членів даних по черзі та в порядку. Вони є структурою &quot;Останній у першому&quot;.",O que é uma pilha?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o primeiro a ser removido (ou último a entrar, primeiro a sair)","Uma pilha é uma estrutura de dados que permite que os membros de dados sejam adicionados ou removidos um de cada vez e em ordem. Eles são uma estrutura &quot;Último a entrar, primeiro a sair&quot;.",پشته چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده اولین موردی است که حذف می شود (یا آخرین بار در اولین بار),پشته (Stack) یک ساختار داده است که به اعضای داده اجازه می دهد تا هر بار به ترتیب و به ترتیب اضافه یا حذف شوند. آنها ساختاری &quot;آخرین در اولین بیرون&quot; هستند.,Què és una pila?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà el primer que s’eliminarà (o l’últim entrant-primer sortint)",Una pila és una estructura de dades que permet afegir o eliminar membres de dades un per un i per ordre. Són una estructura &quot;Last in First Out&quot;.,Шта је стацк?,"Структура података која може да чува елементе, а која има својство да ће последња додата ставка бити прва која ће бити уклоњена (или последња у првом објављивању)",Склоп је структура података која омогућава додавање или уклањање чланова података појединачно и редом. Они су структура „Последњи у првом изласку“.,Apa itu tumpukan?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang ditambahkan item terakhir akan menjadi yang pertama dihapus (atau terakhir masuk pertama keluar)","Tumpukan adalah struktur data yang memungkinkan anggota data ditambahkan atau dihapus satu per satu, dan secara berurutan. Mereka adalah struktur &quot;Terakhir masuk Pertama Keluar&quot;.",Hva er en stabel?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det første som blir fjernet (eller last-in-first-out)",En bunke er en datastruktur som gjør det mulig å legge til eller fjerne datamedlemmer hver for seg og i orden. De er en &quot;Last in First Out&quot; -struktur.,스택이란 무엇입니까?,마지막으로 추가 된 항목이 먼저 제거 (또는 후입 선출)된다는 속성을 가진 요소를 저장할 수있는 데이터 구조,스택은 데이터 멤버를 한 번에 하나씩 순서대로 추가하거나 제거 할 수있는 데이터 구조입니다. &quot;Last in First Out&quot;구조입니다.,Mikä on pino?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan ensimmäisenä (tai viimeinen sisään-ensimmäiseksi-ulos)","Pino on tietorakenne, jonka avulla datajäseniä voidaan lisätä tai poistaa yksi kerrallaan ja järjestyksessä. Ne ovat &quot;Last in First Out&quot; -rakenne.",Mi az a verem?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az első, amelyet eltávolítanak (vagy utoljára az elsőbe adnak ki)","A verem olyan adatstruktúra, amely lehetővé teszi az adattagok egyesével és sorrendben történő hozzáadását vagy eltávolítását. &quot;Last in First Out&quot; struktúra.",Co je to stack?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude odstraněna jako první (nebo last-in-first-out)","Zásobník je datová struktura, která umožňuje přidávání nebo odebírání datových členů jeden po druhém a v pořadí. Jsou strukturou „Last in First Out“.",Šta je stog?,"Struktura podataka koja može pohraniti elemente, a koja ima svojstvo da će zadnja dodana stavka biti prva koja će se ukloniti (ili posljednja u prvom pojavljivanju)",Stog je struktura podataka koja omogućava dodavanje ili uklanjanje članova podataka jednog po jednog i to redom. Oni su struktura &quot;Posljednji u prvom izlasku&quot;.
211,211,2134,11.1,"It divides the array into two halves, sorts each half, then merges the two halves together.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Briefly describe in one sentence how does merge sort work?,5.0,"Es teilt das ursprüngliche Array in zwei Teile, sortiert jede der beiden Hälften und führt dann die sortierten Arrays zusammen.","Beschreiben Sie in einem Satz kurz, wie das Zusammenführen von Sortierungen funktioniert.","Es teilt das Array in zwei Hälften, sortiert jede Hälfte und führt dann die beiden Hälften zusammen.",Sa mubu nga paghulagway sa usa ka tudling-pulong kung giunsa molihok ang paghiusa?,"Gibahin niini ang orihinal nga laray sa duha, gisagol ang matag usa sa duha ka bahin, ug pagkahuman gisagol ang mga gihan-ay nga mga array.","Gibahinbahin niini ang han-ay sa duha ka halves, gilain ang matag tunga, pagkahuman gihiusa ang duha ka halves.",Beskriv kortfattat i en mening hur fungerar merge sort?,"Den delar upp den ursprungliga matrisen i två, sorterar var och en av de två halvorna och slår sedan ihop de sorterade matriserna.","Det delar upp matrisen i två halvor, sorterar varje halvdel och slår sedan ihop de två halvorna.",Décrivez brièvement en une phrase comment fonctionne le tri par fusion?,"Il divise le tableau d&#39;origine en deux, trie chacune des deux moitiés, puis fusionne les tableaux triés.","Il divise le tableau en deux moitiés, trie chaque moitié, puis fusionne les deux moitiés ensemble.",Beschrijf kort in één zin hoe werkt samenvoegsortering?,"Het splitst de oorspronkelijke array in tweeën, sorteert elk van de twee helften en voegt vervolgens de gesorteerde arrays samen.","Het verdeelt de array in twee helften, sorteert elke helft en voegt vervolgens de twee helften samen.","Кратко опишите одним предложением, как работает сортировка слиянием?","Он разбивает исходный массив на две части, сортирует каждую из двух половин, а затем объединяет отсортированные массивы.","Он делит массив на две половины, сортирует каждую половину, а затем объединяет две половины вместе.",Descrivi brevemente in una frase come funziona il merge sort?,"Divide l&#39;array originale in due, ordina ciascuna delle due metà e quindi unisce gli array ordinati.","Divide la matrice in due metà, ordina ciascuna metà, quindi unisce le due metà insieme.",Describe brevemente en una oración cómo funciona la ordenación por combinación.,"Divide la matriz original en dos, ordena cada una de las dos mitades y luego fusiona las matrices ordenadas.","Divide la matriz en dos mitades, ordena cada mitad y luego fusiona las dos mitades.","Krótko opisz w jednym zdaniu, jak działa sortowanie przez scalanie?","Dzieli oryginalną tablicę na dwie części, sortuje każdą z dwóch połówek, a następnie łączy posortowane tablice.","Dzieli tablicę na dwie połowy, sortuje każdą połowę, a następnie łączy dwie połówki ze sobą.",Mô tả ngắn gọn trong một câu cách sắp xếp hợp nhất hoạt động như thế nào?,"Nó chia mảng ban đầu thành hai, sắp xếp từng mảng trong số hai nửa, sau đó hợp nhất các mảng đã sắp xếp.","Nó chia mảng thành hai nửa, sắp xếp mỗi nửa, sau đó hợp nhất hai nửa với nhau.",マージソートはどのように機能するのかを一文で簡単に説明してください。,元の配列を2つに分割し、2つの半分のそれぞれを並べ替えてから、並べ替えられた配列をマージします。,配列を2つに分割し、各半分を並べ替えてから、2つの半分をマージします。,用一句话简单描述合并排序是如何工作的？,它将原始数组分为两部分，对两个半部分分别进行排序，然后合并排序后的数组。,它将数组分为两个半部分，对每个半部分进行排序，然后将两个半部分合并在一起。,صف بإيجاز في جملة واحدة كيف يعمل دمج الفرز؟,يقسم المصفوفة الأصلية إلى قسمين ، يفرز كل من النصفين ، ثم يدمج المصفوفات التي تم فرزها.,يقسم المصفوفة إلى نصفين ، يفرز كل نصف ، ثم يدمج النصفين معًا.,"Коротко опишіть одним реченням, як працює сортування злиттям?","Він розбиває вихідний масив на дві частини, сортує кожну з двох половин, а потім об&#39;єднує відсортовані масиви.","Він ділить масив на дві половини, сортує кожну половину, а потім зливає дві половини разом.",Descreva resumidamente em uma frase como funciona a classificação por mesclagem?,"Ele divide o array original em dois, classifica cada uma das duas metades e, em seguida, mescla os arrays classificados.","Ele divide a matriz em duas metades, classifica cada metade e, em seguida, mescla as duas metades.",به طور خلاصه در یک جمله توضیح دهید که چگونه ادغام مرتب سازی کار می کند؟,آرایه اصلی را به دو قسمت تقسیم می کند ، هر دو نیمه را مرتب می کند و سپس آرایه های مرتب شده را ادغام می کند.,این آرایه را به دو نیمه تقسیم می کند ، هر نیمه را مرتب می کند ، سپس دو نیمه را با هم ادغام می کند.,Descriviu breument en una frase com funciona la classificació per fusió?,"Divideix la matriu original en dos, ordena cadascuna de les dues meitats i després fusiona les matrius ordenades.","Divideix la matriu en dues meitats, ordena cada meitat i després fusiona les dues meitats.",Укратко опишите у једној реченици како функционише сортирање спајањем?,"Првобитни низ дели на две, сортира сваку од две половине, а затим обједињује сортиране низове.","Подељује низ на две половине, сортира сваку половину, а затим спаја две половине.",Jelaskan secara singkat dalam satu kalimat bagaimana cara kerja merge sort?,"Ini membagi larik asli menjadi dua, mengurutkan masing-masing dari dua bagian, lalu menggabungkan larik yang diurutkan.","Ini membagi array menjadi dua bagian, mengurutkan setiap bagian, lalu menggabungkan kedua bagian tersebut.",Beskriv kort i en setning hvordan fungerer sammenslåing?,"Den deler den originale matrisen i to, sorterer hver av de to halvdelene, og fletter deretter de sorterte matriser.","Den deler matrisen i to halvdeler, sorterer hver halvdel og fletter deretter de to halvdelene sammen.",병합 정렬이 어떻게 작동하는지 한 문장으로 간단히 설명해주세요.,원래 배열을 두 개로 분할하고 두 반쪽을 각각 정렬 한 다음 정렬 된 배열을 병합합니다.,배열을 두 개의 절반으로 나누고 각 절반을 정렬 한 다음 두 절반을 병합합니다.,"Kuvaile lyhyesti yhdessä lauseessa, kuinka lajittelu toimii?","Se jakaa alkuperäisen taulukon kahteen osaan, lajittelee molemmat puoliskot ja yhdistää sitten lajitellut taulukot.","Se jakaa matriisin kahteen puolikkaaseen, lajittelee kumpikin puolikkaat ja sulauttaa sitten kaksi puolikasta yhteen.","Röviden írja le egy mondatban, hogyan működik az egyesítés rendezése?","Az eredeti tömböt kettéválasztja, a két felet rendezi, majd egyesíti a rendezett tömböket.","Két töredékre osztja a tömböt, rendezi mindkét felét, majd összeolvasztja a két felet.","Stručně popište jednou větou, jak funguje sloučení?","Rozdělí původní pole na dvě, roztřídí každou ze dvou polovin a poté sloučí seřazená pole.","Rozdělí pole na dvě poloviny, roztřídí každou polovinu a poté spojí obě poloviny dohromady.",Ukratko u jednoj rečenici opišite kako funkcionira sortiranje spajanja?,"Izvorni niz dijeli na dvije, sortira svaku od dvije polovice, a zatim spaja sortirane nizove.","Podijeli niz na dvije polovice, sortira svaku polovicu, a zatim spaja dvije polovice zajedno."
212,212,292,2.3,"constructor is a special block of statements called when an object is created, either when it is declared statically or constructed on the stack. However a function is a portion of code within a larger program, which performs a specific task and independent to the rest of the code.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,4.0,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,"Der Konstruktor ist ein spezieller Anweisungsblock, der aufgerufen wird, wenn ein Objekt erstellt wird, entweder wenn es statisch deklariert oder auf dem Stapel erstellt wird. Eine Funktion ist jedoch ein Teil des Codes in einem größeren Programm, der eine bestimmte Aufgabe ausführt und vom Rest des Codes unabhängig ist.",Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.","Ang magtutukod usa ka espesyal nga bloke sa mga pahayag nga gitawag kung ang usa ka butang gihimo, bisan kung kini gideklara nga statically o gitukod sa stack. Bisan pa ang usa ka pagpaandar usa ka bahin sa code sa sulud sa usa ka labi ka daghan nga programa, nga naghimo sa usa ka piho nga buluhaton ug independente sa nahabilin nga code.",Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.","constructor är ett speciellt block av uttalanden som kallas när ett objekt skapas, antingen när det deklareras statiskt eller konstrueras på stacken. En funktion är dock en del av koden i ett större program, som utför en specifik uppgift och oberoende av resten av koden.",Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.","constructeur est un bloc spécial d&#39;instructions appelé lors de la création d&#39;un objet, soit lorsqu&#39;il est déclaré statiquement soit construit sur la pile. Cependant, une fonction est une partie du code au sein d&#39;un programme plus vaste, qui effectue une tâche spécifique et indépendante du reste du code.",Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.","constructor is een speciaal blok met instructies dat wordt aangeroepen wanneer een object wordt gemaakt, hetzij wanneer het statisch wordt gedeclareerd of op de stapel is opgebouwd. Een functie is echter een deel van de code binnen een groter programma, dat een specifieke taak uitvoert en onafhankelijk is van de rest van de code.",В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.","конструктор - это специальный блок операторов, который вызывается при создании объекта, когда он объявлен статически или построен в стеке. Однако функция - это часть кода в более крупной программе, которая выполняет конкретную задачу и не зависит от остальной части кода.",Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.","costruttore è un blocco speciale di istruzioni chiamato quando un oggetto viene creato, sia quando viene dichiarato staticamente o costruito sullo stack. Tuttavia una funzione è una porzione di codice all&#39;interno di un programma più grande, che esegue un&#39;attività specifica e indipendente dal resto del codice.",¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.","El constructor es un bloque especial de declaraciones que se llama cuando se crea un objeto, ya sea cuando se declara estáticamente o se construye en la pila. Sin embargo, una función es una porción de código dentro de un programa más grande, que realiza una tarea específica e independiente del resto del código.",Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.","konstruktor to specjalny blok instrukcji wywoływany podczas tworzenia obiektu, czy to gdy jest zadeklarowany statycznie, czy konstruowany na stosie. Jednak funkcja jest częścią kodu w ramach większego programu, który wykonuje określone zadanie i jest niezależny od reszty kodu.",Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.","phương thức khởi tạo là một khối lệnh đặc biệt được gọi khi một đối tượng được tạo, khi nó được khai báo tĩnh hoặc được xây dựng trên ngăn xếp. Tuy nhiên, một hàm là một phần của mã trong một chương trình lớn hơn, thực hiện một nhiệm vụ cụ thể và độc lập với phần còn lại của mã.",コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターは、オブジェクトが静的に宣言されたとき、またはスタック上に構築されたときに呼び出されるステートメントの特別なブロックです。ただし、関数は、特定のタスクを実行し、コードの残りの部分から独立している、より大きなプログラム内のコードの一部です。,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数是一个特殊的语句块，在创建对象（静态声明或在堆栈上构造）时调用。但是，函数是较大程序中代码的一部分，该程序执行特定任务并且独立于其余代码。,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,المُنشئ هو كتلة خاصة من العبارات تُسمى عند إنشاء كائن ، إما عندما يتم الإعلان عنه بشكل ثابت أو يتم إنشاؤه على المكدس. ومع ذلك ، فإن الوظيفة هي جزء من التعليمات البرمجية داخل برنامج أكبر ، والتي تؤدي مهمة محددة ومستقلة عن بقية الكود.,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.","конструктор - це спеціальний блок операторів, що викликається при створенні об&#39;єкта, або коли він оголошений статично, або побудований у стеку. Однак функція - це частина коду в рамках більшої програми, яка виконує конкретне завдання і незалежна від решти коду.",Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.","construtor é um bloco especial de instruções chamado quando um objeto é criado, seja quando ele é declarado estaticamente ou construído na pilha. No entanto, uma função é uma parte do código dentro de um programa maior, que executa uma tarefa específica e independente do resto do código.",تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,سازنده یک بلوک خاص از دستورات است که هنگام ایجاد یک شی called فراخوانی می شود ، یا وقتی که به صورت استاتیک اعلام می شود یا روی پشته ساخته می شود. اما یک تابع بخشی از کد در یک برنامه بزرگتر است که وظیفه خاصی را انجام می دهد و مستقل از بقیه کد است.,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.","constructor és un bloc especial de sentències anomenat quan es crea un objecte, ja sigui quan es declara estàticament o es construeix a la pila. Tanmateix, una funció és una porció de codi dins d&#39;un programa més gran, que realitza una tasca específica i independent de la resta del codi.",Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.","конструктор је посебан блок израза који се позива када се објекат креира, било када је деклариран статички или конструисан на стеку. Међутим, функција је део кода у оквиру већег програма, који извршава одређени задатак и неовисан је од остатка кода.",Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.","konstruktor adalah blok khusus dari pernyataan yang dipanggil saat sebuah objek dibuat, baik saat dideklarasikan secara statis atau dibuat di tumpukan. Namun fungsi adalah bagian dari kode dalam program yang lebih besar, yang melakukan tugas tertentu dan tidak bergantung pada kode lainnya.",Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.","constructor er en spesiell setningsblokk som kalles når et objekt opprettes, enten når det blir erklært statisk eller konstruert på bunken. En funksjon er imidlertid en del av koden i et større program, som utfører en bestemt oppgave og uavhengig av resten av koden.",생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자는 객체가 정적으로 선언되거나 스택에 생성 될 때 생성 될 때 호출되는 특수 문 블록입니다. 그러나 함수는 특정 작업을 수행하고 나머지 코드와는 독립적 인 더 큰 프로그램 내 코드의 일부입니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.","konstruktori on erityinen lausekelohko, jota kutsutaan, kun objekti luodaan, joko kun se ilmoitetaan staattisesti tai rakennettu pinoon. Funktio on kuitenkin osa koodia suuremmassa ohjelmassa, joka suorittaa tietyn tehtävän ja on riippumaton muusta koodista.",Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.","A konstruktor egy speciális mondatblokk, amelyet egy objektum létrehozásakor hívnak meg, akár statikusan deklarálva, akár a veremre építve. A függvény azonban a kód része egy nagyobb programon belül, amely egy adott feladatot hajt végre és független a kód többi részétől.",Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.","konstruktor je speciální blok příkazů, který se volá, když je objekt vytvořen, buď když je deklarován staticky, nebo vytvořen na zásobníku. Funkce je však část kódu v rámci většího programu, který provádí konkrétní úkol a je nezávislý na zbytku kódu.",Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.","konstruktor je poseban blok izraza koji se poziva kada se objekt kreira, bilo kada je deklariran statički ili je konstruiran na stogu. Međutim, funkcija je dio koda unutar većeg programa, koji izvodi određeni zadatak i neovisan o ostatku koda."
213,213,340,2.5,As many as needed.,Unlimited number.,How many constructors can be created for a class?,5.0,Unbegrenzte Anzahl.,Wie viele Konstruktoren können für eine Klasse erstellt werden?,So viele wie nötig.,Pila ka mga magtutukod ang mahimo alang sa usa ka klase?,Unlimited numero.,Ingon kadaghan nga gikinahanglan.,Hur många konstruktörer kan skapas för en klass?,Obegränsat antal.,Så många som behövs.,Combien de constructeurs peuvent être créés pour une classe?,Nombre illimité.,Autant que nécessaire.,Hoeveel constructeurs kunnen er voor een klasse worden gemaakt?,Onbeperkt aantal.,Zoveel als nodig.,Сколько конструкторов можно создать для класса?,Неограниченное количество.,"Столько, сколько нужно.",Quanti costruttori possono essere creati per una classe?,Numero illimitato.,Tante quante ne servono.,¿Cuántos constructores se pueden crear para una clase?,Número ilimitado.,Tantos como sean necesarios.,Ile konstruktorów można utworzyć dla klasy?,Nieograniczona liczba.,"Tyle, ile potrzeba.",Có bao nhiêu hàm tạo có thể được tạo cho một lớp?,Số lượng không giới hạn.,Nhiều khi cần thiết.,クラスに対していくつのコンストラクターを作成できますか？,無制限の数。,必要なだけ。,一个类可以创建多少个构造函数？,无限数量。,根据需要。,كم عدد المنشئين الذي يمكن إنشاؤه للفصل؟,عدد غير محدود.,بقدر الحاجة.,Скільки конструкторів можна створити для класу?,Необмежена кількість.,Скільки потрібно.,Quantos construtores podem ser criados para uma classe?,Número ilimitado.,Quantos forem necessários.,چند سازنده می تواند برای یک کلاس ایجاد شود؟,تعداد نامحدود,به هر تعداد که لازم باشد.,Quants constructors es poden crear per a una classe?,Nombre il·limitat.,Tantes com calguessin.,Колико конструктора може да се креира за класу?,Неограничен број.,Колико год било потребно.,Berapa banyak konstruktor yang dapat dibuat untuk sebuah kelas?,Jumlah tidak terbatas.,Sebanyak yang dibutuhkan.,Hvor mange konstruktører kan opprettes for en klasse?,Ubegrenset antall.,Så mange som trengs.,클래스에 생성 할 수있는 생성자는 몇 개입니까?,무제한 수.,필요한만큼.,Kuinka monta rakennuttajaa luokalle voidaan luoda?,Rajoittamaton määrä.,Niin monta kuin tarvitaan.,Hány konstruktort lehet létrehozni egy osztályhoz?,Korlátlan számú.,"Annyi, ahányra szükség van.",Kolik konstruktorů lze pro třídu vytvořit?,Neomezený počet.,Tolik podle potřeby.,Koliko konstruktora može biti stvoreno za klasu?,Neograničen broj.,Koliko god je potrebno.
214,214,987,6.2,& returns the memory address of its operand.,The memory address of its operand.,What does the address (&) operator return?,5.0,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,&amp; gibt die Speicheradresse seines Operanden zurück.,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,&amp; ibalik ang memory address sa operand niini.,Vad returnerar adressoperatören?,Minnesadressen för dess operand.,&amp; returnerar minnesadressen för dess operand.,Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,&amp; renvoie l&#39;adresse mémoire de son opérande.,Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,&amp; geeft het geheugenadres van zijn operand terug.,Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,&amp; возвращает адрес памяти своего операнда.,Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,&amp; restituisce l&#39;indirizzo di memoria del suo operando.,¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,&amp; devuelve la dirección de memoria de su operando.,Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,&amp; zwraca adres pamięci swojego operandu.,Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,&amp; trả về địa chỉ bộ nhớ của toán hạng của nó.,アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,＆は、そのオペランドのメモリアドレスを返します。,地址（＆）运算符返回什么？,其操作数的内存地址。,＆返回其操作数的内存地址。,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,&amp; إرجاع عنوان ذاكرة المعامل الخاص به.,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,&amp; повертає адресу пам&#39;яті свого операнда.,O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,&amp; retorna o endereço de memória de seu operando.,عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,&amp; آدرس حافظه عملوند خود را برمی گرداند.,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,&amp; retorna l&#39;adreça de memòria del seu operand.,Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,&amp; враћа меморијску адресу свог операнда.,Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,&amp; mengembalikan alamat memori operannya.,Hva returnerer adresseoperatøren?,Minneadressen til operanden.,&amp; returnerer minneadressen til operanden.,주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,&amp; 피연산자의 메모리 주소를 반환합니다.,Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,&amp; palauttaa operandin muistiosoitteen.,Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,&amp; adja vissza az operandus memória címét.,Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,&amp; vrátí adresu paměti svého operandu.,Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,&amp; vraća memorijsku adresu svog operanda.
215,215,495,3.3,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,2.0,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,Der Compiler kann das Inline-Qualifikationsmerkmal ignorieren und dies normalerweise für alle bis auf die kleinsten Funktionen.,Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,Mahimo&#39;g dili tagdon sa tagtipon ang kwalipikado sa lihok ug kasagaran gihimo kini alang sa tanan apan ang labing gamay nga gimbuhaton.,Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,Kompilatorn kan ignorera inline-kvalificeringen och gör det vanligtvis för alla utom de minsta funktionerna.,Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,Le compilateur peut ignorer le qualificatif en ligne et le fait généralement pour toutes les fonctions sauf les plus petites.,Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,De compiler kan de inline-kwalificatie negeren en doet dit meestal voor alle functies behalve de kleinste.,Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.","Компилятор может игнорировать встроенный квалификатор и обычно делает это для всех функций, кроме самых маленьких.",In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,Il compilatore può ignorare il qualificatore inline e in genere lo fa per tutte le funzioni tranne le più piccole.,¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,El compilador puede ignorar el calificador en línea y normalmente lo hace para todas las funciones menos las más pequeñas.,Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.",Kompilator może zignorować kwalifikator wbudowany i zwykle robi to dla wszystkich funkcji oprócz najmniejszych.,Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,Trình biên dịch có thể bỏ qua bộ định lượng nội tuyến và thường làm như vậy cho tất cả trừ các hàm nhỏ nhất.,コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,コンパイラーはインライン修飾子を無視でき、通常、最小の関数を除くすべての関数に対して無視します。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,编译器可以忽略内联限定符，并且通常对除最小函数以外的所有函数都使用。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,يمكن للمترجم أن يتجاهل المؤهل المضمن ويفعل ذلك عادةً لجميع الوظائف باستثناء أصغرها.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.","Компілятор може ігнорувати вбудований кваліфікатор і зазвичай робить це для всіх функцій, крім найменших.",Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"O compilador pode ignorar o qualificador embutido e normalmente faz isso para todas as funções, exceto as menores.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,کامپایلر می تواند مقیاس صحیح را نادیده بگیرد و معمولاً این کار را برای همه به جز کوچکترین توابع انجام می دهد.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,El compilador pot ignorar el qualificador en línia i normalment ho fa per a totes les funcions menys les més petites.,Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,"Компајлер може занемарити уграђени квалификатор и обично то ради за све функције, осим за најмање.",Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,Kompilator bisa mengabaikan qualifier inline dan biasanya melakukannya untuk semua kecuali fungsi terkecil.,Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,Kompilatoren kan ignorere den innebygde kvalifiseringen og gjør det vanligvis for alle unntatt de minste funksjonene.,컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,컴파일러는 인라인 한정자를 무시할 수 있으며 일반적으로 가장 작은 함수를 제외하고 모두 무시합니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.",Kääntäjä voi jättää huomiotta sisäisen määrittelijän ja tekee sen yleensä kaikille paitsi pienimmille toiminnoille.,Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.","A fordító figyelmen kívül hagyhatja az inline minősítőt, és általában ezt teszi a legkisebb funkciók kivételével.",Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.",Kompilátor může ignorovat inline kvalifikátor a obvykle to dělá pro všechny kromě nejmenších funkcí.,Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,"Kompajler može zanemariti ugrađeni kvalifikator i obično to radi za sve funkcije, osim za najmanje."
216,216,2382,12.8,"You recursively visit every node on the list. You visit the node from the left, the bottom, and from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,5.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"Sie besuchen rekursiv jeden Knoten in der Liste. Sie besuchen den Knoten von links, unten und von rechts.",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.","Gibalikbalik nimo pagbisita ang matag node sa lista. Gibisita nimo ang node gikan sa wala, sa ilawom, ug gikan sa tuo.",Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.","Du besöker rekursivt alla noder i listan. Du besöker noden från vänster, botten och från höger.",Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.","Vous visitez récursivement tous les nœuds de la liste. Vous visitez le nœud de la gauche, du bas et de la droite.",Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.","U bezoekt recursief elk knooppunt op de lijst. Je bezoekt het knooppunt van links, van onderen en van rechts.",Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","Вы рекурсивно посещаете каждый узел в списке. Вы посещаете узел слева, снизу и справа.",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.","Visiti ricorsivamente ogni nodo nell&#39;elenco. Visiti il nodo da sinistra, dal basso e da destra.",¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.","Visitas recursivamente todos los nodos de la lista. Visitas el nodo desde la izquierda, la parte inferior y desde la derecha.",Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","Odwiedzasz rekurencyjnie każdy węzeł na liście. Odwiedzasz węzeł od lewej, od dołu i od prawej.",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.","Bạn truy cập đệ quy mọi nút trong danh sách. Bạn truy cập nút từ bên trái, dưới cùng và từ bên phải.",木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,リスト上のすべてのノードに再帰的にアクセスします。左、下、右からノードにアクセスします。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,您递归访问列表中的每个节点。您可以从左侧，底部和右侧访问该节点。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,تزور بشكل متكرر كل عقدة في القائمة. تقوم بزيارة العقدة من اليسار ، والأسفل ، ومن اليمين.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","Ви рекурсивно відвідуєте кожен вузол у списку. Ви відвідуєте вузол зліва, знизу та праворуч.",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.","Você visita recursivamente todos os nós da lista. Você visita o nó da esquerda, da parte inferior e da direita.",پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,شما بصورت بازگشتی از هر گره موجود در لیست بازدید می کنید. شما از سمت چپ ، پایین و از گره بازدید می کنید.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.","Visiteu recursivament tots els nodes de la llista. Visiteu el node per l&#39;esquerra, la part inferior i la dreta.",Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","Рекурзивно посећујете сваки чвор на листи. Чвор посетите са леве, доње и десне стране.",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.","Anda mengunjungi setiap node dalam daftar secara rekursif. Anda mengunjungi simpul dari kiri, bawah, dan dari kanan.",Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.","Du besøker hver node på listen rekursivt. Du besøker noden fra venstre, bunnen og fra høyre.",나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.","목록의 모든 노드를 재귀 적으로 방문합니다. 왼쪽, 아래쪽 및 오른쪽에서 노드를 방문합니다.",Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.","Vierailet rekursiivisesti luettelon jokaisessa solmussa. Kävelet solmua vasemmalta, alhaalta ja oikealta.",Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.","Rekurzívan meglátogatja a lista minden csomópontját. A csomópontot balról, alulról és jobbról látogatja meg.",Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.","Rekurzivně navštěvujete každý uzel v seznamu. Uzel navštívíte zleva, zdola a zprava.",Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.","Rekurzivno posjećujete svaki čvor na listi. Čvor posjetite s lijeve, donje i desne strane."
217,217,1517,9.1,A queue is a first in first out data structure.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",What is a queue?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element das letzte ist, das entfernt wird (oder das First-In-First-Out).",Was ist eine Warteschlange?,Eine Warteschlange ist eine First-In-First-Out-Datenstruktur.,Unsa ang pila?,"Ang usa ka istraktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang ulahi nga tangtangon (o una-sa-una-nga-out)",Ang usa ka pila mao ang una sa una nga istruktura sa datos.,Vad är en kö?,"En datastruktur som kan lagra element, som har den egenskapen att det senast tillagda objektet är det sista som tas bort (eller först-in-först-ut).",En kö är en först in först ut-datastruktur.,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le dernier à être supprimé (ou premier entré, premier sorti).","Une file d&#39;attente est une structure de données premier entré, premier sorti.",Wat is een wachtrij?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item het laatste is dat wordt verwijderd (of first-in-first-out).",Een wachtrij is een first in first out datastructuur.,Что такое очередь?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален последним (или первым пришел - первым ушел).",Очередь - это структура данных &quot;первым пришел - первым обслужен&quot;.,Cos&#39;è una coda?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà l&#39;ultimo a essere rimosso (o first-in-first-out).",Una coda è una struttura dati first in first out.,¿Qué es una cola?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el último en ser eliminado (o el primero en entrar, primero en salir).","Una cola es una estructura de datos de primero en entrar, primero en salir.",Co to jest kolejka?,"Struktura danych, która może przechowywać elementy, która ma tę właściwość, że ostatni dodany element będzie ostatnim do usunięcia (lub pierwszy na wejściu, pierwszy na wyjściu).","Kolejka jest strukturą danych pierwszy na wejściu, pierwszy wyszedł.",Hàng đợi là gì?,"Một cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử cuối cùng bị xóa (hoặc nhập trước xuất trước).",Hàng đợi là cấu trúc dữ liệu xuất trước.,キューとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最後に削除される（または先入れ先出し）というプロパティがあります。,キューは先入れ先出しのデータ構造です。,什么是队列？,可以存储元素的数据结构，其属性为最后添加的项将是最后要删除的（或先进先出）。,队列是先进先出数据结构。,ما هو الطابور؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون آخر عنصر تتم إزالته (أو ما يرد أولاً يخرج أولاً).,قائمة الانتظار هي بنية بيانات أول ما يخرج أولاً.,Що таке черга?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде останнім, який буде видалено (або перший-у-першому-вихід).","Черга є першою структурою даних, що виходить з першого.",O que é uma fila?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o último a ser removido (ou primeiro a entrar, primeiro a sair).","Uma fila é uma estrutura de dados primeiro a entrar, primeiro a sair.",صف چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده آخرین موردی است که حذف می شود (یا اولین بار در اولین بار).,صف اولین است که در ساختار داده اول قرار دارد.,Què és una cua?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà l’últim que s’eliminarà (o el primer entrant-primer sortint).",Una cua és una estructura de dades de primer a primer.,Шта је ред?,"Структура података која може да складишти елементе, а која има својство да ће последња додата ставка бити последња која ће бити уклоњена (или прва у првом).",Ред чекања је структура података „први у првом излазу“.,Apa itu antrian?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang item terakhir ditambahkan akan menjadi yang terakhir dihapus (atau pertama masuk pertama keluar).",Antrian adalah struktur data pertama masuk pertama keluar.,Hva er kø?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det siste som blir fjernet (eller først-inn-først-ut).",En kø er en først inn først ut datastruktur.,대기열이란 무엇입니까?,마지막으로 추가 된 항목이 제거 될 마지막 항목 (또는 선입 선출)이라는 속성을 가진 요소를 저장할 수있는 데이터 구조입니다.,큐는 선입 선출 데이터 구조입니다.,Mikä on jono?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan viimeisenä (tai ensin sisään-sisään-ulos-lähtöön).",Jono on ensimmäinen ensin ulos -tietorakenne.,Mi a sor?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az utolsó, amelyet eltávolítanak (vagy az első az elsőben ki-be).",A várólista az első az elsőben kimenő adatstruktúra.,Co je to fronta?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude poslední, která bude odebrána (nebo první-první-první-ven).",Fronta je datová struktura typu první dovnitř.,Šta je red?,"Struktura podataka koja može pohraniti elemente, koja ima svojstvo da će zadnja dodana stavka biti posljednja koja će se ukloniti (ili prva u prvom pojavljivanju).",Red čekanja je struktura podataka prvi u prvom izlazu.
218,218,1053,6.4,&b[3]  bPtr + 3,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,4.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,&amp; b [3] bPtr + 3,Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",&amp; b [3] bPtr + 3,Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,&amp; b [3] bPtr + 3,Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",&amp; b [3] bPtr + 3,Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",&amp; b [3] bPtr + 3,Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",&amp; b [3] bPtr + 3,Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,&amp; b [3] bPtr + 3,¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,&amp; b [3] bPtr + 3,Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.",&amp; b [3] bPtr + 3,Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",&amp; b [3] bPtr + 3,配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,＆b [3] bPtr + 3,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,＆b [3] bPtr + 3,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,&amp; ب [3] bPtr + 3,Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",&amp; b [3] bPtr + 3,Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",&amp; b [3] bPtr + 3,چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,&amp; b [3] bPtr + 3,Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",&amp; b [3] bPtr + 3,Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",&amp; б [3] бПтр + 3,Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",&amp; b [3] bPtr + 3,Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",&amp; b [3] bPtr + 3,포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,&amp; b [3] bPtr + 3,Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,&amp; b [3] bPtr + 3,Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.",&amp; b [3] bPtr + 3,Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,&amp; b [3] bPtr + 3,Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",&amp; b [3] bPtr + 3
219,219,1863,11.1,"access specifiers and functions, oftentimes a constructor.",Function members and data members.,What are the elements typically included in a class definition?,3.0,Funktionsmitglieder und Datenelemente.,Welche Elemente sind normalerweise in einer Klassendefinition enthalten?,"Zugriffsspezifizierer und Funktionen, häufig ein Konstruktor.",Unsa ang mga elemento nga sagad nga gilakip sa usa ka kahulugan sa klase?,Mga miyembro sa pagpaandar ug mga miyembro sa datos.,"pag-access sa mga specifier ug gimbuhaton, kanunay nga usa ka magtutukod.",Vilka är de element som vanligtvis ingår i en klassdefinition?,Funktionsmedlemmar och datamedlemmar.,"åtkomstspecifikatorer och funktioner, ofta en konstruktör.",Quels sont les éléments généralement inclus dans une définition de classe?,Membres de fonction et membres de données.,"accéder aux spécificateurs et aux fonctions, souvent un constructeur.",Wat zijn de elementen die typisch zijn opgenomen in een klassendefinitie?,Functieleden en gegevensleden.,"toegangsspecificaties en functies, vaak een constructor.",Какие элементы обычно включаются в определение класса?,Члены функций и члены данных.,"спецификаторы доступа и функции, часто конструктор.",Quali sono gli elementi tipicamente inclusi in una definizione di classe?,Membri della funzione e membri dei dati.,"consente di accedere a specificatori e funzioni, spesso un costruttore.",¿Cuáles son los elementos que normalmente se incluyen en una definición de clase?,Miembros de funciones y miembros de datos.,"especificadores de acceso y funciones, a menudo un constructor.",Jakie elementy są zwykle zawarte w definicji klasy?,Członkowie funkcji i członkowie danych.,"specyfikatory dostępu i funkcje, często konstruktor.",Các phần tử thường được bao gồm trong định nghĩa lớp là gì?,Thành viên chức năng và thành viên dữ liệu.,"truy cập các chỉ định và chức năng, đôi khi là một phương thức khởi tạo.",クラス定義に通常含まれる要素は何ですか？,関数メンバーとデータメンバー。,指定子と関数にアクセスします。多くの場合、コンストラクターです。,类定义中通常包含哪些元素？,函数成员和数据成员。,访问说明符和函数，通常是构造函数。,ما هي العناصر التي يتم تضمينها عادة في تعريف الفئة؟,أعضاء الوظيفة وأعضاء البيانات.,محددات الوصول والوظائف ، في كثير من الأحيان منشئ.,Які елементи зазвичай входять до визначення класу?,Члени функції та члени даних.,"специфікатори та функції доступу, часто конструктор.",Quais são os elementos normalmente incluídos em uma definição de classe?,Membros de função e membros de dados.,"especificadores de acesso e funções, muitas vezes um construtor.",عناصر معمولاً در تعریف کلاس کدامند؟,اعضای عملکرد و اعضای داده,به مشخصات و توابع دسترسی پیدا کنید ، اغلب یک سازنده.,Quins són els elements que normalment s&#39;inclouen en una definició de classe?,Membres de funció i membres de dades.,"especificadors d&#39;accés i funcions, sovint un constructor.",Који су елементи обично укључени у дефиницију класе?,Чланови функције и чланови података.,"спецификатори и функције приступа, често конструктор.",Apa saja elemen yang biasanya disertakan dalam definisi kelas?,Anggota fungsi dan anggota data.,"akses penentu dan fungsi, seringkali konstruktor.",Hva er elementene som vanligvis inngår i en klassedefinisjon?,Funksjonsmedlemmer og datamedlemmer.,"tilgangsspesifikatorer og funksjoner, ofte en konstruktør.",일반적으로 클래스 정의에 포함되는 요소는 무엇입니까?,함수 멤버 및 데이터 멤버.,액세스 지정자 및 함수 (종종 생성자).,Mitkä elementit kuuluvat tyypillisesti luokan määritelmään?,Toiminto- ja datajäsenet.,"pääsyn määrittelijät ja toiminnot, usein rakentaja.","Melyek azok az elemek, amelyeket általában az osztálydefiníció tartalmaz?",Funkciótagok és adattagok.,"hozzáférési specifikátorok és függvények, gyakran konstruktor.",Jaké prvky jsou obvykle zahrnuty v definici třídy?,Funkční členové a datoví členové.,"specifikátory přístupu a funkce, často konstruktor.",Koji su elementi obično uključeni u definiciju klase?,Članovi funkcije i članovi podataka.,"specifikatori i funkcije pristupa, često konstruktor."
220,220,275,2.3,A constructor initialized values at the execution of its instantiation. It provides default values.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,3.5,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,Ein Konstruktor hat bei der Ausführung seiner Instanziierung Werte initialisiert. Es bietet Standardwerte.,Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.",Ang usa ka magtutukod gisugdan ang kantidad sa pagpatuman sa pagsugod niini. Naghatag kini mga default nga kantidad.,Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.",En konstruktör initierade värden vid genomförandet av dess instansering. Det ger standardvärden.,Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.",Un constructeur a initialisé des valeurs lors de l&#39;exécution de son instanciation. Il fournit des valeurs par défaut.,Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.",Een constructor heeft waarden geïnitialiseerd bij de uitvoering van zijn instantiatie. Het biedt standaardwaarden.,В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.",Конструктор инициализирует значения при выполнении своего экземпляра. Он предоставляет значения по умолчанию.,Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.",Un costruttore ha inizializzato i valori durante l&#39;esecuzione della sua istanza. Fornisce valori predefiniti.,¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.",Un constructor inicializó valores en la ejecución de su instanciación. Proporciona valores predeterminados.,Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.",Konstruktor zainicjował wartości podczas wykonywania swojej instancji. Zawiera wartości domyślne.,Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.",Một phương thức khởi tạo các giá trị được khởi tạo khi thực hiện khởi tạo nó. Nó cung cấp các giá trị mặc định.,コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターは、インスタンス化の実行時に値を初期化しました。デフォルト値を提供します。,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数在实例化执行时初始化值。它提供默认值。,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,قام المُنشئ بتهيئة القيم عند تنفيذ إنشاء مثيل لها. يوفر القيم الافتراضية.,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.",Конструктор ініціалізував значення під час виконання його екземпляра. Він надає значення за замовчуванням.,Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.",Um construtor inicializou valores na execução de sua instanciação. Ele fornece valores padrão.,تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,یک سازنده مقادیر را در زمان اجرای اولیه مقداردهی اولیه می کند. مقادیر پیش فرض را فراهم می کند.,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.",Un constructor va inicialitzar valors a l&#39;execució de la seva instanciació. Proporciona valors per defecte.,Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.",Конструктор иницијалне вредности при извршавању његове инстанције. Пружа подразумеване вредности.,Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.",Sebuah konstruktor menginisialisasi nilai-nilai pada pelaksanaan pembuatannya. Ini memberikan nilai default.,Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.",En konstruktør initialiserte verdier ved utførelsen av sin instantiering. Det gir standardverdier.,생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자는 인스턴스화 실행시 값을 초기화했습니다. 기본값을 제공합니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.",Konstruktori alustaa arvot suorittaessaan sen. Se antaa oletusarvot.,Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.",A konstruktor inicializálja az értékeket a példányosítás végrehajtásakor. Alapértelmezett értékeket ad meg.,Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.",Konstruktor inicializoval hodnoty při provádění jeho instance. Poskytuje výchozí hodnoty.,Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.",Konstruktor inicijalne vrijednosti pri izvođenju njegove instancije. Pruža zadane vrijednosti.
221,221,697,4.3,you pass a pointer to the first item and also pass the size.,by reference.,How are arrays passed to functions?,3.5,durch Bezugnahme.,Wie werden Arrays an Funktionen übergeben?,Sie übergeben einen Zeiger auf das erste Element und übergeben auch die Größe.,Giunsa ang pagpasa sa mga array sa mga gimbuhaton?,pinaagi sa pakisayran.,gipasa nimo ang usa ka pointer sa una nga butang ug gipasa usab ang gidak-on.,Hur skickas matriser till funktioner?,genom hänvisning.,du skickar en pekare till det första objektet och skickar också storleken.,Comment les tableaux sont-ils passés aux fonctions?,par référence.,vous passez un pointeur sur le premier élément et passez également la taille.,Hoe worden arrays doorgegeven aan functies?,door verwijzing.,je geeft een wijzer door aan het eerste item en geeft ook de maat door.,Как массивы передаются функциям?,по ссылке.,"вы передаете указатель на первый элемент, а также передаете размер.",Come vengono passati gli array alle funzioni?,come riferimento.,passi un puntatore al primo elemento e passi anche la dimensione.,¿Cómo se pasan las matrices a las funciones?,por referencia.,pasa un puntero al primer elemento y también pasa el tamaño.,W jaki sposób tablice są przekazywane do funkcji?,przez odniesienie.,"przekazujesz wskaźnik do pierwszego elementu, a także przekazujesz rozmiar.",Mảng được truyền cho các hàm như thế nào?,bằng cách tham khảo.,bạn chuyển một con trỏ đến mục đầu tiên và cũng truyền kích thước.,配列はどのように関数に渡されますか？,参照による。,最初のアイテムへのポインタを渡し、サイズも渡します。,数组如何传递给函数？,引用。,您将指针传递到第一项，还传递大小。,كيف يتم تمرير المصفوفات إلى الوظائف؟,بالتزكية.,تقوم بتمرير مؤشر إلى العنصر الأول وكذلك تمرير الحجم.,Як масиви передаються функціям?,за посиланням.,"ви передаєте вказівник на перший елемент, а також передаєте розмір.",Como os arrays são passados para as funções?,por referência.,você passa um ponteiro para o primeiro item e também passa o tamanho.,چگونه آرایه ها به توابع منتقل می شوند؟,با مرجع.,شما یک نشانگر را به اولین مورد منتقل می کنید و همچنین اندازه را می گیرید.,Com es passen les matrius a les funcions?,per referència.,es passa un punter al primer element i també es passa la mida.,Како се низови преносе функцијама?,по референци.,прелазите показивач на прву ставку и такође преносите величину.,Bagaimana array diteruskan ke fungsi?,dengan referensi.,Anda memberikan penunjuk ke item pertama dan juga meneruskan ukurannya.,Hvordan overføres matriser til funksjoner?,som referanse.,du sender en peker til det første elementet og også passerer størrelsen.,배열은 함수에 어떻게 전달됩니까?,참고로.,첫 번째 항목에 포인터를 전달하고 크기도 전달합니다.,Kuinka taulukot välitetään funktioille?,viittaamalla.,välität osoittimen ensimmäiselle kohteelle ja välität myös koon.,Hogyan adják át a tömbök a függvényeknek?,referencia alapján.,"átadsz egy mutatót az első elemnek, és átadod a méretet is.",Jak jsou pole předávána funkcím?,Odkazem.,předáte ukazatel na první položku a také předáte velikost.,Kako se nizovi prenose funkcijama?,putem reference.,proslijedite pokazivač na prvu stavku i također proslijedite veličinu.
222,222,285,2.3,A constructor is used to create an instance of a class and has the same name as that class. A function cannot have the same name as a class and computes data.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,4.0,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,Ein Konstruktor wird zum Erstellen einer Instanz einer Klasse verwendet und hat denselben Namen wie diese Klasse. Eine Funktion kann nicht denselben Namen wie eine Klasse haben und berechnet Daten.,Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.",Ang usa ka magtutukod gigamit aron makahimo usa ka pananglitan sa usa ka klase ug adunay parehas nga ngalan sa kana nga klase. Ang usa ka gimbuhaton dili mahimong adunay parehas nga ngalan sa usa ka klase ug makalkula ang datos.,Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.",En konstruktör används för att skapa en instans av en klass och har samma namn som den klassen. En funktion kan inte ha samma namn som en klass och beräknar data.,Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.",Un constructeur est utilisé pour créer une instance d&#39;une classe et porte le même nom que cette classe. Une fonction ne peut pas avoir le même nom qu&#39;une classe et calcule des données.,Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.",Een constructor wordt gebruikt om een instantie van een klasse te maken en heeft dezelfde naam als die klasse. Een functie kan niet dezelfde naam hebben als een klasse en berekent gegevens.,В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.","Конструктор используется для создания экземпляра класса и имеет то же имя, что и этот класс. Функция не может иметь то же имя, что и класс, и вычисляет данные.",Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.",Un costruttore viene utilizzato per creare un&#39;istanza di una classe e ha lo stesso nome di quella classe. Una funzione non può avere lo stesso nome di una classe e calcola i dati.,¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.",Un constructor se usa para crear una instancia de una clase y tiene el mismo nombre que esa clase. Una función no puede tener el mismo nombre que una clase y calcula datos.,Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.",Konstruktor służy do tworzenia instancji klasy i ma taką samą nazwę jak ta klasa. Funkcja nie może mieć takiej samej nazwy jak klasa i oblicza dane.,Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.",Một hàm tạo được sử dụng để tạo một thể hiện của một lớp và có cùng tên với lớp đó. Một hàm không được trùng tên với một lớp và tính toán dữ liệu.,コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターは、クラスのインスタンスを作成するために使用され、そのクラスと同じ名前を持ちます。関数はクラスと同じ名前を持つことはできず、データを計算します。,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数用于创建类的实例，并且具有与该类相同的名称。函数不能与类具有相同的名称，并且不能计算数据。,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,يُستخدم المُنشئ لإنشاء مثيل لفئة وله نفس اسم تلك الفئة. لا يمكن أن يكون للوظيفة نفس اسم فئة وتحسب البيانات.,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.","Конструктор використовується для створення екземпляра класу і має те саме ім&#39;я, що і цей клас. Функція не може мати те саме ім&#39;я, що і клас, і обчислює дані.",Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.",Um construtor é usado para criar uma instância de uma classe e tem o mesmo nome dessa classe. Uma função não pode ter o mesmo nome de uma classe e calcula dados.,تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,از سازنده برای ایجاد نمونه ای از یک کلاس استفاده می شود و نام آن با همان کلاس است. یک تابع نمی تواند همان نام کلاس باشد و داده ها را محاسبه می کند.,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.",Un constructor s’utilitza per crear una instància d’una classe i té el mateix nom que aquesta classe. Una funció no pot tenir el mateix nom que una classe i calcula les dades.,Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.",Конструктор се користи за креирање инстанце класе и има исто име као и та класа. Функција не може имати исто име као класа и израчунава податке.,Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.",Sebuah konstruktor digunakan untuk membuat turunan dari sebuah kelas dan memiliki nama yang sama dengan kelas tersebut. Sebuah fungsi tidak boleh memiliki nama yang sama dengan kelas dan menghitung data.,Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.",En konstruktør brukes til å lage en forekomst av en klasse og har samme navn som den klassen. En funksjon kan ikke ha samme navn som en klasse og beregner data.,생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자는 클래스의 인스턴스를 만드는 데 사용되며 해당 클래스와 이름이 같습니다. 함수는 클래스와 동일한 이름을 가질 수 없으며 데이터를 계산합니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.","Rakentajaa käytetään luokan esiintymän luomiseen, ja sillä on sama nimi kuin tällä luokassa. Funktiolla ei voi olla sama nimi kuin luokassa, ja se laskee tiedot.",Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.","A konstruktort egy osztály példányának létrehozására használják, és ugyanazzal a névvel rendelkezik, mint az osztály. A függvénynek nem lehet ugyanaz a neve, mint egy osztálynak, és kiszámítja az adatokat.",Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.",Konstruktor se používá k vytvoření instance třídy a má stejný název jako tato třída. Funkce nemůže mít stejný název jako třída a počítá data.,Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.",Konstruktor se koristi za stvaranje instance klase i ima isto ime kao i ta klasa. Funkcija ne može imati isto ime kao klasa i izračunava podatke.
223,223,1695,10.1,A tree is a finite set of one or more nodes with a specially designated node called the root and the remaining nodes are partitioned into disjoint sets where each of these sets is a tree.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",What is a tree?,5.0,"Eine Sammlung von Knoten mit einem speziellen Knoten namens root und der Rest der Knoten sind in eine oder mehrere disjunkte Mengen unterteilt, wobei jede Menge ein Baum ist.",Was ist ein Baum?,"Ein Baum ist eine endliche Menge von einem oder mehreren Knoten mit einem speziell bezeichneten Knoten, der als Wurzel bezeichnet wird, und die verbleibenden Knoten werden in disjunkte Mengen aufgeteilt, wobei jede dieser Mengen ein Baum ist.",Unsa ang usa ka kahoy?,"Usa ka koleksyon sa mga node, nga adunay usa ka espesyal nga node nga gitawag ug ugat, ug ang nahabilin nga mga node gibahin sa usa o daghan pa nga dili magkauyon nga mga set, nga ang matag set usa ka kahoy.",Ang usa ka punoan usa ka adunay kinutuban nga hugpong sa usa o daghan pa nga mga node nga adunay usa ka espesyal nga gitudlo nga node nga gitawag nga ugat ug ang nahabilin nga mga node gibahin sa mga disjoint set diin ang matag usa niini nga mga set usa ka kahoy.,Vad är ett träd?,"En samling noder, som har en speciell nod som kallas root, och resten av noderna är uppdelade i en eller flera separata uppsättningar, var och en uppsättning är ett träd.",Ett träd är en ändlig uppsättning av en eller flera noder med en speciellt utsedd nod som kallas roten och de återstående noderna är uppdelade i ojämna uppsättningar där var och en av dessa uppsättningar är ett träd.,Qu&#39;est-ce qu&#39;un arbre?,"Une collection de nœuds, qui a un nœud spécial appelé root, et le reste des nœuds sont partitionnés en un ou plusieurs ensembles disjoints, chaque ensemble étant un arbre.",Un arbre est un ensemble fini d&#39;un ou plusieurs nœuds avec un nœud spécialement désigné appelé racine et les nœuds restants sont partitionnés en ensembles disjoints où chacun de ces ensembles est un arbre.,Wat is een boom?,"Een verzameling knooppunten, die een speciaal knooppunt heeft dat root wordt genoemd, en de rest van de knooppunten is onderverdeeld in een of meer disjuncte sets, waarbij elke set een boom is.",Een boom is een eindige set van een of meer knooppunten met een speciaal aangewezen knooppunt genaamd de wortel en de overige knooppunten zijn onderverdeeld in disjuncte sets waarbij elk van deze sets een boom is.,Что такое дерево?,"Набор узлов, который имеет специальный узел, называемый корнем, а остальные узлы разделены на один или несколько непересекающихся наборов, каждый набор представляет собой дерево.","Дерево - это конечный набор из одного или нескольких узлов со специально назначенным узлом, называемым корнем, а оставшиеся узлы разбиты на непересекающиеся наборы, где каждый из этих наборов является деревом.",Cos&#39;è un albero?,"Una raccolta di nodi, che ha un nodo speciale chiamato root, e il resto dei nodi è partizionato in uno o più insiemi disgiunti, ogni insieme è un albero.",Un albero è un insieme finito di uno o più nodi con un nodo appositamente designato chiamato radice ei nodi rimanenti sono partizionati in insiemi disgiunti in cui ciascuno di questi insiemi è un albero.,¿Qué es un árbol?,"Una colección de nodos, que tiene un nodo especial llamado raíz, y el resto de los nodos están divididos en uno o más conjuntos disjuntos, siendo cada conjunto un árbol.",Un árbol es un conjunto finito de uno o más nodos con un nodo especialmente designado llamado raíz y los nodos restantes se dividen en conjuntos disjuntos donde cada uno de estos conjuntos es un árbol.,Co to jest drzewo?,"Zbiór węzłów, który ma specjalny węzeł zwany korzeniem, a pozostałe węzły są podzielone na jeden lub więcej rozłącznych zestawów, z których każdy jest drzewem.","Drzewo jest skończonym zbiorem jednego lub więcej węzłów ze specjalnie wyznaczonym węzłem zwanym korzeniem, a pozostałe węzły są podzielone na rozłączne zbiory, w których każdy z tych zbiorów jest drzewem.",Cây là gì?,"Một tập hợp các nút, trong đó có một nút đặc biệt được gọi là gốc, và phần còn lại của các nút được phân chia thành một hoặc nhiều bộ rời rạc, mỗi bộ là một cây.",Cây là một tập hợp hữu hạn của một hoặc nhiều nút với một nút được chỉ định đặc biệt gọi là gốc và các nút còn lại được phân chia thành các tập rời rạc trong đó mỗi tập này là một cây.,木とは何ですか？,ルートと呼ばれる特別なノードを持つノードのコレクションと、残りのノードは1つ以上の互いに素なセットに分割され、各セットはツリーになります。,ツリーは、ルートと呼ばれる特別に指定されたノードを持つ1つ以上のノードの有限セットであり、残りのノードは、これらの各セットがツリーである互いに素なセットに分割されます。,什么是树？,节点的集合，具有一个称为根的特殊节点，其余节点被划分为一个或多个不相交的集合，每个集合都是一棵树。,树是一个或多个节点的有限集，其中有一个特别指定的节点称为根，其余节点被划分为不相交的集合，其中每个集合都是一棵树。,ما هي الشجرة؟,مجموعة من العقد ، التي لها عقدة خاصة تسمى الجذر ، ويتم تقسيم العقد المتبقية إلى مجموعة واحدة أو أكثر من المجموعات المنفصلة ، كل مجموعة عبارة عن شجرة.,الشجرة عبارة عن مجموعة منتهية من عقد واحد أو أكثر مع عقدة محددة خصيصًا تسمى الجذر ويتم تقسيم العقد المتبقية إلى مجموعات منفصلة حيث تكون كل مجموعة من هذه المجموعات عبارة عن شجرة.,Що таке дерево?,"Колекція вузлів, яка має спеціальний вузол, який називається root, а решта вузлів розділені на один або кілька непересічних наборів, кожен набір являє собою дерево.","Дерево - це скінченний набір одного або декількох вузлів із спеціально призначеним вузлом, який називається корінь, а решта вузли розділені на непересічні набори, де кожен з цих наборів є деревом.",O que é uma árvore?,"Uma coleção de nós, que possui um nó especial denominado raiz, e o resto dos nós são particionados em um ou mais conjuntos disjuntos, cada conjunto sendo uma árvore.",Uma árvore é um conjunto finito de um ou mais nós com um nó especialmente designado chamado raiz e os nós restantes são particionados em conjuntos disjuntos onde cada um desses conjuntos é uma árvore.,درخت چیست؟,مجموعه ای از گره ها که دارای گره خاصی به نام root است و بقیه گره ها به یک یا چند مجموعه جدا از هم تقسیم می شوند که هر مجموعه یک درخت است.,درخت مجموعه ای محدود از یك یا چند گره با یك گره مشخص شده به نام ریشه است و گره های باقیمانده به مجموعه های جدا از هم تقسیم می شوند كه هر یك از این مجموعه ها درخت هستند.,Què és un arbre?,"Una col·lecció de nodes, que té un node especial anomenat arrel, i la resta de nodes estan particionats en un o més conjunts disjunts, cadascun dels quals és un arbre.",Un arbre és un conjunt finit d&#39;un o més nodes amb un node especialment designat anomenat arrel i els nodes restants es particionen en conjunts disjunts on cadascun d&#39;aquests conjunts és un arbre.,Шта је дрво?,"Збирка чворова која има посебан чвор који се назива роот, а остатак чворова подељен је у један или више нераздвојених скупова, а сваки скуп је стабло.","Стабло је коначни скуп једног или више чворова са посебно назначеним чвором који се назива корен, а преостали чворови су подељени у дисјунктне скупове где је сваки од ових скупова стабло.",Apakah pohon itu?,"Kumpulan node, yang memiliki node khusus yang disebut root, dan node lainnya dipartisi menjadi satu atau lebih set terpisah, setiap set menjadi pohon.",Pohon adalah himpunan terbatas dari satu atau lebih simpul dengan simpul khusus yang disebut akar dan simpul yang tersisa dipartisi menjadi himpunan terpisah di mana setiap himpunan ini adalah sebuah pohon.,Hva er et tre?,"En samling noder, som har en spesiell node kalt root, og resten av nodene er delt inn i ett eller flere usammenhengende sett, hvor hvert sett er et tre.","Et tre er et endelig sett med en eller flere noder med en spesielt utpekt node som kalles roten, og de resterende nodene er delt inn i usammenhengende sett hvor hvert av disse settene er et tre.",나무는 무엇입니까?,루트라는 특수 노드가있는 노드 모음과 나머지 노드는 하나 이상의 분리 된 집합으로 분할되며 각 집합은 트리입니다.,트리는 루트라고하는 특별히 지정된 노드가있는 하나 이상의 노드로 구성된 유한 집합이며 나머지 노드는 이러한 집합 각각이 트리 인 분리 된 집합으로 분할됩니다.,Mikä on puu?,"Solmujen kokoelma, jolla on erityinen solmu nimeltä root, ja muut solmut jaetaan yhteen tai useampaan disjointjoukkoon, joista kukin on puu.","Puu on rajallinen joukko yhdestä tai useammasta solmusta, joilla on erityisesti nimetty solmu, jota kutsutaan juureksi, ja loput solmut jaetaan disjountijoukkoihin, joissa kukin näistä ryhmistä on puu.",Mi az a fa?,"Csomópontok gyűjteménye, amelynek van egy speciális, root nevű csomópontja, és a többi csomópont egy vagy több diszjunkt halmazba van felosztva, mindegyik halmaz egy fa.","A fa egy vagy több csomópont véges halmaza, egy speciálisan kijelölt csomópontnak, amelyet gyökérnek neveznek, és a fennmaradó csomópontokat diszjunkt halmazokba rendezik, ahol ezek a halmazok egy-egy fa.",Co je to strom?,"Kolekce uzlů, která má speciální uzel zvaný root, a zbytek uzlů je rozdělen do jedné nebo více nespojených sad, přičemž každá sada je strom.","Strom je konečná množina jednoho nebo více uzlů se speciálně určeným uzlem zvaným root a zbývající uzly jsou rozděleny do nesouvislých množin, kde každá z těchto sad je strom.",Šta je drvo?,"Zbirka čvorova koja ima poseban čvor koji se naziva root, a ostatak čvorova podijeljen je u jedan ili više nepodudarnih skupova, a svaki skup je stablo.","Stablo je konačni skup jednog ili više čvorova sa posebno određenim čvorom koji se naziva korijen, a preostali čvorovi podijeljeni su u nerazdružene skupove gdje je svaki od ovih skupova stablo."
224,224,1710,10.1,A finite set of nodes that starts with the root and terminates with leaves.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",What is a tree?,4.0,"Eine Sammlung von Knoten mit einem speziellen Knoten namens root und der Rest der Knoten sind in eine oder mehrere disjunkte Mengen unterteilt, wobei jede Menge ein Baum ist.",Was ist ein Baum?,"Eine endliche Menge von Knoten, die mit der Wurzel beginnt und mit Blättern endet.",Unsa ang usa ka kahoy?,"Usa ka koleksyon sa mga node, nga adunay usa ka espesyal nga node nga gitawag ug ugat, ug ang nahabilin nga mga node gibahin sa usa o daghan pa nga dili magkauyon nga mga set, nga ang matag set usa ka kahoy.",Usa ka katapusan nga hugpong sa mga node nga nagsugod sa ugat ug gitapos sa mga dahon.,Vad är ett träd?,"En samling noder, som har en speciell nod som kallas root, och resten av noderna är uppdelade i en eller flera separata uppsättningar, var och en uppsättning är ett träd.",En ändlig uppsättning noder som börjar med roten och slutar med löv.,Qu&#39;est-ce qu&#39;un arbre?,"Une collection de nœuds, qui a un nœud spécial appelé root, et le reste des nœuds sont partitionnés en un ou plusieurs ensembles disjoints, chaque ensemble étant un arbre.",Un ensemble fini de nœuds qui commence par la racine et se termine par des feuilles.,Wat is een boom?,"Een verzameling knooppunten, die een speciaal knooppunt heeft dat root wordt genoemd, en de rest van de knooppunten is onderverdeeld in een of meer disjuncte sets, waarbij elke set een boom is.",Een eindige reeks knooppunten die begint met de wortel en eindigt met bladeren.,Что такое дерево?,"Набор узлов, который имеет специальный узел, называемый корнем, а остальные узлы разделены на один или несколько непересекающихся наборов, каждый набор представляет собой дерево.","Конечный набор узлов, который начинается с корня и заканчивается листьями.",Cos&#39;è un albero?,"Una raccolta di nodi, che ha un nodo speciale chiamato root, e il resto dei nodi è partizionato in uno o più insiemi disgiunti, ogni insieme è un albero.",Un insieme finito di nodi che inizia con la radice e termina con le foglie.,¿Qué es un árbol?,"Una colección de nodos, que tiene un nodo especial llamado raíz, y el resto de los nodos están divididos en uno o más conjuntos disjuntos, siendo cada conjunto un árbol.",Un conjunto finito de nodos que comienza con la raíz y termina con las hojas.,Co to jest drzewo?,"Zbiór węzłów, który ma specjalny węzeł zwany korzeniem, a pozostałe węzły są podzielone na jeden lub więcej rozłącznych zestawów, z których każdy jest drzewem.","Skończony zbiór węzłów, który zaczyna się od korzenia i kończy liśćmi.",Cây là gì?,"Một tập hợp các nút, trong đó có một nút đặc biệt được gọi là gốc, và phần còn lại của các nút được phân chia thành một hoặc nhiều bộ rời rạc, mỗi bộ là một cây.",Một tập hợp hữu hạn các nút bắt đầu bằng gốc và kết thúc bằng lá.,木とは何ですか？,ルートと呼ばれる特別なノードを持つノードのコレクションと、残りのノードは1つ以上の互いに素なセットに分割され、各セットはツリーになります。,ルートで始まり、リーフで終わるノードの有限セット。,什么是树？,节点的集合，具有一个称为根的特殊节点，其余节点被划分为一个或多个不相交的集合，每个集合都是一棵树。,一组有限的节点，从根开始，以叶结束。,ما هي الشجرة؟,مجموعة من العقد ، التي لها عقدة خاصة تسمى الجذر ، ويتم تقسيم العقد المتبقية إلى مجموعة واحدة أو أكثر من المجموعات المنفصلة ، كل مجموعة عبارة عن شجرة.,مجموعة محدودة من العقد تبدأ بالجذر وتنتهي بالأوراق.,Що таке дерево?,"Колекція вузлів, яка має спеціальний вузол, який називається root, а решта вузлів розділені на один або кілька непересічних наборів, кожен набір являє собою дерево.","Кінцевий набір вузлів, який починається з кореня і закінчується листям.",O que é uma árvore?,"Uma coleção de nós, que possui um nó especial denominado raiz, e o resto dos nós são particionados em um ou mais conjuntos disjuntos, cada conjunto sendo uma árvore.",Um conjunto finito de nós que começa com a raiz e termina com folhas.,درخت چیست؟,مجموعه ای از گره ها که دارای گره خاصی به نام root است و بقیه گره ها به یک یا چند مجموعه جدا از هم تقسیم می شوند که هر مجموعه یک درخت است.,مجموعه محدودی از گره ها که با ریشه شروع می شود و با برگ پایان می یابد.,Què és un arbre?,"Una col·lecció de nodes, que té un node especial anomenat arrel, i la resta de nodes estan particionats en un o més conjunts disjunts, cadascun dels quals és un arbre.",Un conjunt finit de nodes que comença amb l&#39;arrel i acaba amb fulles.,Шта је дрво?,"Збирка чворова која има посебан чвор који се назива роот, а остатак чворова подељен је у један или више нераздвојених скупова, а сваки скуп је стабло.","Коначан скуп чворова који започиње кореном, а завршава листовима.",Apakah pohon itu?,"Kumpulan node, yang memiliki node khusus yang disebut root, dan node lainnya dipartisi menjadi satu atau lebih set terpisah, setiap set menjadi pohon.",Sekumpulan node terbatas yang dimulai dengan root dan diakhiri dengan daun.,Hva er et tre?,"En samling noder, som har en spesiell node kalt root, og resten av nodene er delt inn i ett eller flere usammenhengende sett, hvor hvert sett er et tre.",Et endelig sett med noder som starter med roten og slutter med blader.,나무는 무엇입니까?,루트라는 특수 노드가있는 노드 모음과 나머지 노드는 하나 이상의 분리 된 집합으로 분할되며 각 집합은 트리입니다.,루트에서 시작하여 잎으로 끝나는 유한 노드 집합입니다.,Mikä on puu?,"Solmujen kokoelma, jolla on erityinen solmu nimeltä root, ja muut solmut jaetaan yhteen tai useampaan disjointjoukkoon, joista kukin on puu.","Lopullinen joukko solmuja, jotka alkavat juuresta ja päättyvät lehtiin.",Mi az a fa?,"Csomópontok gyűjteménye, amelynek van egy speciális, root nevű csomópontja, és a többi csomópont egy vagy több diszjunkt halmazba van felosztva, mindegyik halmaz egy fa.","A csomópontok véges halmaza, amely a gyökérrel kezdődik és a levelekkel végződik.",Co je to strom?,"Kolekce uzlů, která má speciální uzel zvaný root, a zbytek uzlů je rozdělen do jedné nebo více nespojených sad, přičemž každá sada je strom.","Konečná sada uzlů, která začíná kořenem a končí listy.",Šta je drvo?,"Zbirka čvorova koja ima poseban čvor koji se naziva root, a ostatak čvorova podijeljen je u jedan ili više nepodudarnih skupova, a svaki skup je stablo.","Konačan skup čvorova koji započinje korijenom, a završava lišćem."
225,225,1239,7.5,"In a circular linked list, every node has a successor which means that the last node's successor is the head or first node.",The last element in a circular linked list points to the head of the list.,What is the difference between a circular linked list and a basic linked list?,5.0,Das letzte Element in einer kreisförmig verknüpften Liste zeigt auf den Kopf der Liste.,Was ist der Unterschied zwischen einer zirkulären verknüpften Liste und einer einfachen verknüpften Liste?,"In einer zirkular verknüpften Liste hat jeder Knoten einen Nachfolger, was bedeutet, dass der Nachfolger des letzten Knotens der Kopf oder der erste Knoten ist.",Unsa ang kalainan sa us aka lista nga nalakip sa lingin ug us aka sukaranan nga nalakip nga lista?,Ang ulahi nga elemento sa usa ka lista nga nalakip sa lingin nagtudlo sa ulo sa lista.,"Sa usa ka lista nga nalakip sa lingin, ang matag node adunay usa nga mopuli nga nagpasabut nga ang manununod sa katapusan nga node mao ang ulo o una nga node.",Vad är skillnaden mellan en cirkulär länkad lista och en grundlänkad lista?,Det sista elementet i en cirkulär länkad lista pekar på listans huvud.,I en cirkulär länkad lista har varje nod en efterträdare vilket innebär att den sista nodens efterträdare är huvudet eller första noden.,Quelle est la différence entre une liste chaînée circulaire et une liste chaînée de base?,Le dernier élément d&#39;une liste liée circulaire pointe vers la tête de la liste.,"Dans une liste liée circulaire, chaque nœud a un successeur, ce qui signifie que le successeur du dernier nœud est la tête ou le premier nœud.",Wat is het verschil tussen een circulaire gekoppelde lijst en een basis gekoppelde lijst?,Het laatste element in een circulaire gekoppelde lijst wijst naar de kop van de lijst.,"In een circulaire gekoppelde lijst heeft elk knooppunt een opvolger, wat betekent dat de opvolger van het laatste knooppunt het hoofd of het eerste knooppunt is.",В чем разница между круговым связанным списком и основным связанным списком?,Последний элемент в круговом связном списке указывает на заголовок списка.,"В круговом связном списке у каждого узла есть преемник, что означает, что преемник последнего узла является головным или первым узлом.",Qual è la differenza tra un elenco collegato circolare e un elenco collegato di base?,L&#39;ultimo elemento in un elenco collegato circolare punta all&#39;inizio dell&#39;elenco.,"In un elenco collegato circolare, ogni nodo ha un successore, il che significa che il successore dell&#39;ultimo nodo è il capo o il primo nodo.",¿Cuál es la diferencia entre una lista enlazada circular y una lista enlazada básica?,El último elemento de una lista enlazada circular apunta al encabezado de la lista.,"En una lista enlazada circular, cada nodo tiene un sucesor, lo que significa que el sucesor del último nodo es el principal o el primer nodo.",Jaka jest różnica między listą połączoną cyklicznie a listą podstawową?,Ostatni element na okrągłej liście połączonej wskazuje na początek listy.,"Na liście połączonej cyklicznie każdy węzeł ma następcę, co oznacza, że następcą ostatniego węzła jest węzeł główny lub pierwszy.",Sự khác biệt giữa danh sách liên kết vòng tròn và danh sách liên kết cơ bản là gì?,Phần tử cuối cùng trong danh sách được liên kết hình tròn trỏ đến phần đầu của danh sách.,"Trong danh sách liên kết vòng tròn, mọi nút đều có nút kế nhiệm có nghĩa là nút kế nhiệm cuối cùng là nút đầu hoặc nút đầu tiên.",循環リンクリストと基本リンクリストの違いは何ですか？,循環リンクリストの最後の要素は、リストの先頭を指します。,循環リンクリストでは、すべてのノードにサクセサがあります。これは、最後のノードのサクセサがヘッドノードまたは最初のノードであることを意味します。,循环链表和基本链表有什么区别？,循环链接列表中的最后一个元素指向列表的开头。,在循环链表中，每个节点都有一个后继节点，这意味着最后一个节点的后继节点是头节点或第一个节点。,ما الفرق بين قائمة مرتبطة دائرية وقائمة مرتبطة أساسية؟,يشير العنصر الأخير في قائمة مرتبطة دائرية إلى رأس القائمة.,في قائمة مرتبطة دائرية ، كل عقدة لها خلف مما يعني أن آخر عقدة هي الرأس أو العقدة الأولى.,Яка різниця між круговим пов&#39;язаним списком та основним пов&#39;язаним списком?,Останній елемент у круговому зв’язаному списку вказує на головку списку.,"У круговому зв’язаному списку кожен вузол має наступника, що означає, що наступником останнього вузла є головний або перший вузол.",Qual é a diferença entre uma lista ligada circular e uma lista ligada básica?,O último elemento em uma lista ligada circular aponta para o topo da lista.,"Em uma lista ligada circular, cada nó tem um sucessor, o que significa que o sucessor do último nó é o nó principal ou o primeiro.",تفاوت بین یک لیست پیوندی دایره ای و یک لیست پیوندی اساسی چیست؟,آخرین عنصر در یک لیست دایره ای مرتبط به سر لیست نشان می دهد.,در یک لیست پیوندی دایره ای ، هر گره یک جانشین دارد به این معنی که جانشین آخرین گره سر یا اولین گره است.,Quina diferència hi ha entre una llista enllaçada circular i una llista enllaçada bàsica?,L&#39;últim element d&#39;una llista enllaçada circular apunta al cap de llista.,"En una llista enllaçada circular, cada node té un successor, el que significa que el successor de l&#39;últim node és el cap o el primer node.",Која је разлика између кружно повезане листе и основне повезане листе?,Последњи елемент у кружно повезаној листи показује на главу листе.,У кружно повезаној листи сваки чвор има наследника што значи да је наследник последњег чвора глава или први чвор.,Apa perbedaan antara daftar tertaut melingkar dan daftar tertaut dasar?,Elemen terakhir dalam daftar tertaut melingkar mengarah ke kepala daftar.,"Dalam circular linked list, setiap node memiliki penerus yang artinya penerus node terakhir adalah head atau node pertama.",Hva er forskjellen mellom en sirkulær koblet liste og en grunnleggende koblet liste?,Det siste elementet i en sirkulær koblet liste peker mot hodet på listen.,"I en sirkulær koblet liste har hver node en etterfølger, noe som betyr at den siste nodens etterfølger er hodet eller den første noden.",순환 연결 목록과 기본 연결 목록의 차이점은 무엇입니까?,순환 연결 목록의 마지막 요소는 목록의 헤드를 가리 킵니다.,순환 연결 목록에서 모든 노드에는 후속 노드가 있으며 이는 마지막 노드의 후속 노드가 헤드 또는 첫 번째 노드임을 의미합니다.,Mitä eroa on pyöreällä linkitetyllä luettelolla linkitetyllä perusluettelolla?,Pyöreän linkitetyn luettelon viimeinen elementti osoittaa luettelon päähän.,"Pyöreässä linkitetyssä luettelossa jokaisella solmulla on seuraaja, mikä tarkoittaa, että viimeisen solmun seuraaja on pää tai ensimmäinen solmu.",Mi a különbség a kör alakú linkelt lista és az alap linkelt lista között?,A kör alakú összekapcsolt lista utolsó eleme a lista fejére mutat.,"Körkörös összekapcsolt listában minden csomópontnak van utódja, ami azt jelenti, hogy az utolsó csomópont utódja a fej vagy az első csomópont.",Jaký je rozdíl mezi cyklicky propojeným seznamem a základním propojeným seznamem?,Poslední prvek v kruhovém propojeném seznamu ukazuje na záhlaví seznamu.,"V kruhovém propojeném seznamu má každý uzel nástupce, což znamená, že nástupcem posledního uzlu je hlavní nebo první uzel.",Koja je razlika između kružno povezane liste i osnovne povezane liste?,Posljednji element na kružno povezanoj listi usmjerava na glavu popisa.,"U kružno povezanoj listi svaki čvor ima nasljednika, što znači da je nasljednik posljednjeg čvora glava ili prvi čvor."
226,226,1593,9.4,"Utilizing a front pointer and a back pointer.  The front poiner and back pointer points to the first item into the queue.  As you add items, the front remains the same but the back poiner 'next' points to the new item and the new item is assigned to become the 'new' back pointer.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",How can you implement a queue with a list?,4.5,"Lassen Sie die Rückseite der Warteschlange auf das Ende der verknüpften Liste zeigen, sodass die Warteschlangenoperation am Ende der Liste ausgeführt wird, und halten Sie die Vorderseite der Warteschlange auf den Kopf der verknüpften Liste, damit die Warteschlangenoperation ausgeführt wird am Anfang der Liste.",Wie können Sie eine Warteschlange mit einer Liste implementieren?,"Verwenden eines vorderen und eines hinteren Zeigers. Der vordere und der hintere Zeiger zeigen auf das erste Element in der Warteschlange. Wenn Sie Elemente hinzufügen, bleibt die Vorderseite gleich, aber der hintere Zeiger &#39;next&#39; zeigt auf das neue Element, und das neue Element wird als &#39;neuer&#39; hinterer Zeiger zugewiesen.",Giunsa nimo ipatuman ang usa ka pila nga adunay lista?,"Ipadayon ang likud sa pila nga nagpunting sa ikog sa nalambigit nga lista, mao nga ang enqueue nga operasyon gihimo sa katapusan sa lista, ug ipadayon ang atubangan sa pila nga nagtudlo sa ulohan sa na-link nga lista, mao nga nahuman ang operasyon sa dequeue sa pagsugod sa lista.","Paggamit usa ka pointer sa atubangan ug usa ka pointer sa likod. Ang front poiner ug back pointer nagpunting sa una nga butang sa pila. Samtang nagdugang ka mga aytem, ang atubangan nagpabilin nga parehas apan ang likod nga poiner &#39;sunod&#39; nagtudlo sa bag-ong butang ug ang bag-ong butang gitudlo nga mahimong &#39;bag-ong&#39; balik nga pointer.",Hur kan du implementera en kö med en lista?,"Håll den bakre delen av kön pekande mot svansen på den länkade listan, så enqueue-operationen görs i slutet av listan och håll den främre delen av kön pekande mot huvudet på den länkade listan, så att dequeue-operationen är klar i början av listan.",Använda en främre pekare och en bakre pekare. Den främre pekaren och den bakre pekaren pekar på det första objektet i kön. När du lägger till objekt förblir fronten densamma men bakre pekaren &#39;nästa&#39; pekar på det nya objektet och det nya objektet tilldelas att bli &#39;nytt&#39; bakpekaren.,Comment pouvez-vous implémenter une file d&#39;attente avec une liste?,"Gardez l&#39;arrière de la file d&#39;attente pointant vers la fin de la liste liée, de sorte que l&#39;opération de mise en file d&#39;attente soit effectuée à la fin de la liste, et gardez l&#39;avant de la file d&#39;attente pointant vers la tête de la liste liée, de sorte que l&#39;opération de retrait de la file d&#39;attente soit effectuée au début de la liste.","Utilisant un pointeur avant et un pointeur arrière. Le pointeur avant et le pointeur arrière indiquent le premier élément de la file d&#39;attente. Lorsque vous ajoutez des éléments, le recto reste le même mais le pointeur arrière «suivant» pointe vers le nouvel élément et le nouvel élément est affecté pour devenir le «nouveau» pointeur arrière.",Hoe implementeer je een wachtrij met een lijst?,"Houd de achterkant van de wachtrij naar de staart van de gekoppelde lijst, zodat de bewerking voor het in de wachtrij plaatsen aan het einde van de lijst wordt uitgevoerd en laat de voorkant van de wachtrij naar de kop van de gekoppelde lijst wijzen, zodat de bewerking voor het verwijderen van de wachtrij is voltooid aan het begin van de lijst.","Gebruikmakend van een voorwijzer en een achteraanwijzer. De voorwijzer en de achteraanwijzer wijzen naar het eerste item in de wachtrij. Terwijl u items toevoegt, blijft de voorkant hetzelfde, maar de achteraanwijzer &#39;volgende&#39; verwijst naar het nieuwe item en het nieuwe item wordt toegewezen om de &#39;nieuwe&#39; achteraanwijzer te worden.",Как можно реализовать очередь со списком?,"Задняя часть очереди должна указывать на конец связанного списка, чтобы операция постановки в очередь выполнялась в конце списка, а передняя часть очереди должна указывать на начало связанного списка, поэтому операция удаления из очереди выполняется в начале списка.","Использование переднего указателя и заднего указателя. Передний указатель и задний указатель указывают на первый элемент в очереди. Когда вы добавляете элементы, передняя часть остается прежней, но задний указатель «следующий» указывает на новый элемент, и новый элемент назначается, чтобы стать «новым» обратным указателем.",Come puoi implementare una coda con un elenco?,"Mantieni la parte posteriore della coda che punta alla coda della lista collegata, quindi l&#39;operazione di accodamento viene eseguita alla fine della lista e mantieni la parte anteriore della coda puntata all&#39;inizio della lista collegata, quindi l&#39;operazione di rimozione dalla coda è fatta all&#39;inizio della lista.","Utilizzando un puntatore anteriore e un puntatore posteriore. Il puntatore anteriore e il puntatore posteriore puntano al primo elemento nella coda. Man mano che aggiungi elementi, la parte anteriore rimane la stessa, ma il puntatore posteriore &quot;successivo&quot; punta al nuovo elemento e il nuovo elemento viene assegnato per diventare il &quot;nuovo&quot; puntatore posteriore.",¿Cómo se puede implementar una cola con una lista?,"Mantenga la parte posterior de la cola apuntando a la cola de la lista vinculada, de modo que la operación de puesta en cola se realice al final de la lista, y mantenga la parte delantera de la cola apuntando al encabezado de la lista vinculada, para que la operación de eliminación de la cola esté lista al principio de la lista.","Utilizando un puntero frontal y un puntero trasero. El puntero frontal y el puntero posterior apuntan al primer elemento de la cola. A medida que agrega elementos, el frente sigue siendo el mismo, pero el puntero hacia atrás &#39;siguiente&#39; apunta al nuevo elemento y el nuevo elemento se asigna para convertirse en el puntero hacia atrás &#39;nuevo&#39;.",Jak zaimplementować kolejkę z listą?,"Utrzymuj tył kolejki skierowany na koniec połączonej listy, aby operacja umieszczania w kolejce była wykonywana na końcu listy i utrzymuj przód kolejki skierowany na początek połączonej listy, aby operacja usunięcia z kolejki została zakończona na początku listy.","Wykorzystując przedni wskaźnik i tylny wskaźnik. Przedni wskaźnik i tylny wskaźnik wskazują pierwszą pozycję w kolejce. Podczas dodawania elementów przód pozostaje taki sam, ale tylny wskaźnik „następny” wskazuje nowy element, a nowy element jest przypisywany jako „nowy” tylny wskaźnik.",Làm thế nào bạn có thể triển khai một hàng đợi với một danh sách?,"Giữ phần phía sau của hàng đợi trỏ đến phần cuối của danh sách được liên kết, do đó, hoạt động xếp hàng được thực hiện ở cuối danh sách và giữ phần phía trước của hàng đợi trỏ đến phần đầu của danh sách được liên kết, do đó hoạt động xếp hàng được thực hiện ở đầu danh sách.","Sử dụng con trỏ phía trước và con trỏ phía sau. Con trỏ phía trước và con trỏ sau trỏ đến mục đầu tiên trong hàng đợi. Khi bạn thêm các mục, mặt trước vẫn như cũ nhưng người khảo sát phía sau &#39;tiếp theo&#39; trỏ đến mục mới và mục mới được chỉ định để trở thành con trỏ quay lại &#39;mới&#39;.",リストを使用してキューを実装するにはどうすればよいですか？,キューの後ろがリンクリストの末尾を指すようにして、エンキュー操作がリストの最後を指すようにし、キューの前をリンクリストの先頭を指すようにして、デキュー操作が行われるようにします。リストの最初に。,フロントポインタとバックポインタを利用します。フロントポインターとバックポインターは、キュー内の最初のアイテムを指します。アイテムを追加しても、フロントは同じままですが、バックポインターの「次へ」は新しいアイテムを指し、新しいアイテムは「新しい」バックポインターになるように割り当てられます。,如何实现带有列表的队列？,使队列的尾部指向链接列表的末尾，因此入队操作在列表的末尾进行，使队列的前部指向链接列表的头，因此完成出队操作在列表的开头。,利用前指针和后指针。前指针和后指针指向队列中的第一项。添加项目时，前部保持不变，但后指针“下一个”指向新项目，并且新项目被分配为“新”后指针。,كيف يمكنك تنفيذ قائمة انتظار مع قائمة؟,احتفظ بالجزء الخلفي من قائمة الانتظار يشير إلى ذيل القائمة المرتبطة ، بحيث تتم عملية قائمة الانتظار في نهاية القائمة ، واحتفظ بمقدمة قائمة الانتظار تشير إلى رأس القائمة المرتبطة ، بحيث تتم عملية إنهاء قائمة الانتظار في بداية القائمة.,استخدام مؤشر أمامي ومؤشر خلفي. يشير المؤشر الأمامي والمؤشر الخلفي إلى العنصر الأول في قائمة الانتظار. أثناء إضافة العناصر ، تظل الواجهة كما هي ولكن يشير المؤشر الخلفي &quot;التالي&quot; إلى العنصر الجديد ويتم تعيين العنصر الجديد ليصبح المؤشر الخلفي &quot;الجديد&quot;.,Як можна реалізувати чергу зі списком?,"Тримайте задню частину черги, спрямовану на хвіст пов’язаного списку, таким чином, операція чергування виконується в кінці списку, а передня частина черги вказує на голову пов’язаного списку, таким чином, операція скидання виконується на початку списку.","Використання переднього та заднього покажчика. Передній і задній покажчик вказують на перший елемент у черзі. Коли ви додаєте елементи, передня частина залишається незмінною, але задній покажчик «наступний» вказує на новий елемент, і новий елемент призначається стати «новим» зворотним покажчиком.",Como você pode implementar uma fila com uma lista?,"Mantenha a parte traseira da fila apontando para o final da lista vinculada, para que a operação de enfileiramento seja feita no final da lista, e mantenha a frente da fila apontando para o início da lista vinculada, para que a operação de desenfileiramento seja feita no início da lista.","Utilizando um ponteiro frontal e um ponteiro traseiro. O ponteiro frontal e o ponteiro traseiro apontam para o primeiro item da fila. Conforme você adiciona itens, a frente permanece a mesma, mas o ponteiro posterior &#39;próximo&#39; aponta para o novo item e o novo item é atribuído para se tornar o &#39;novo&#39; ponteiro posterior.",چگونه می توان صف را با لیست پیاده سازی کرد؟,قسمت عقب صف را به سمت انتهای لیست پیوندی نگه دارید ، بنابراین عملیات enqueue در انتهای لیست انجام می شود و قسمت جلوی صف را به سمت سر لیست پیوندی نگه دارید ، بنابراین عملیات حذف نتیجه انجام می شود در ابتدای لیست.,استفاده از یک اشاره گر جلو و یک نشانگر عقب. اشاره گر جلو و نشانگر عقب به اولین مورد در صف قرار می گیرد. همانطور که آیتم ها را اضافه می کنید ، قسمت جلو ثابت باقی می ماند اما نشانگر عقب &quot;بعدی&quot; به مورد جدید اشاره می کند و مورد جدید اختصاص داده می شود تا به اشاره گر &quot;جدید&quot; تبدیل شود.,Com es pot implementar una cua amb una llista?,"Mantingueu la part posterior de la cua apuntant a la cua de la llista enllaçada, de manera que l&#39;operació de cola es realitzarà al final de la llista i mantingueu la part frontal de la cua apuntant cap al cap de la llista enllaçada, de manera que l&#39;operació de cola es realitzi. al principi de la llista.","Utilitzant un punter frontal i un punter posterior. El punter frontal i el punter posterior apunta al primer element a la cua. A mesura que afegiu elements, la part frontal continua sent la mateixa, però el punter del darrere &quot;següent&quot; apunta al nou element i el nou element s&#39;assigna per convertir-se en el &quot;nou&quot; punter del darrere.",Како можете да примените ред са листом?,"Задњи део реда задржите тако да показује на реп повезане листе, тако да се операција чекања обавља на крају листе, а чек ред нека буде усмјерен на главу повезане листе, тако да је операција уклањања редоследа завршена на почетку списка.","Коришћење предњег и задњег показивача. Предњи показивач и задњи показивач упућују на прву ставку у реду. Како додајете ставке, предњи део остаје исти, али задњи показивач „следећи“ показује на нову ставку и нова ставка је додељена да постане „нови“ задњи показивач.",Bagaimana Anda bisa menerapkan antrian dengan daftar?,"Pertahankan bagian belakang antrian mengarah ke bagian belakang daftar tertaut, sehingga operasi antrean dilakukan di akhir daftar, dan pertahankan bagian depan antrean mengarah ke kepala daftar tertaut, sehingga operasi dequeue selesai di awal daftar.","Memanfaatkan penunjuk depan dan penunjuk belakang. Penunjuk depan dan penunjuk belakang menunjuk ke item pertama ke dalam antrian. Saat Anda menambahkan item, bagian depan tetap sama tetapi penunjuk belakang &#39;berikutnya&#39; menunjuk ke item baru dan item baru ditetapkan untuk menjadi penunjuk belakang &#39;baru&#39;.",Hvordan kan du implementere en kø med en liste?,"Hold baksiden av køen pekende mot halen på den koblede listen, slik at enqueue-operasjonen gjøres på slutten av listen, og hold forsiden av køen pekende mot hodet til den koblede listen, slik at dequeue-operasjonen er ferdig i begynnelsen av listen.","Bruke en frontpeker og en bakpeker. Forpekeren og bakpekeren peker på det første elementet i køen. Når du legger til gjenstander, forblir fronten den samme, men bakpekeren &#39;neste&#39; peker på det nye elementet, og det nye elementet er tildelt til å bli den &#39;nye&#39; bakpekeren.",목록이있는 대기열을 어떻게 구현할 수 있습니까?,대기열의 뒤쪽이 연결된 목록의 끝을 가리 키도록 유지하여 대기열에 넣기 작업이 목록의 끝에서 수행되도록하고 대기열의 앞쪽이 연결된 목록의 머리를 가리 키도록 유지하여 대기열에서 빼기 작업이 수행되도록합니다. 목록의 시작 부분에.,앞쪽 포인터와 뒤쪽 포인터를 활용합니다. 앞쪽 포인터와 뒤쪽 포인터는 대기열의 첫 번째 항목을 가리 킵니다. 항목을 추가 할 때 앞면은 동일하게 유지되지만 뒷부분의 &#39;next&#39;는 새 항목을 가리키고 새 항목은 &#39;새&#39;백 포인터가되도록 할당됩니다.,Kuinka voit toteuttaa jonon luettelon kanssa?,"Pidä jonon takaosaa linkitetyn luettelon hännään päin, jotta enqueue-toiminto tehdään luettelon lopussa, ja pidä jonon etu osoittavan linkitetyn luettelon päähän, joten purkotoiminto on valmis luettelon alussa.","Hyödyntämällä etu- ja takaosoitinta. Etuosoitin ja takaosoitin osoittavat ensimmäistä kohdetta jonossa. Kun lisäät kohteita, etuosa pysyy samana, mutta takaosan &quot;seuraava&quot; osoittaa uuteen kohtaan ja uudesta nimikkeestä tulee &quot;uusi&quot; takaosoitin.",Hogyan lehet megvalósítani a listát tartalmazó várólistát?,"Tartsa a sor hátulját a csatolt lista farka felé mutatva, így az enqueue műveletet a lista végén hajtja végre, és a sor elejét tartsa a linkelt lista fejére mutatva, így a dequeue művelet megtörténik a lista elején.","Az első mutató és a hátsó mutató használata. Az első mutató és a hátsó mutató a sorban lévő első elemre mutat. Elemek hozzáadásakor az elülső rész ugyanaz marad, de a hátsó &quot;következő&quot; mutató az új elemre mutat, és az új elem az &quot;új&quot; hátsó mutatóvá válik.",Jak můžete implementovat frontu se seznamem?,"Udržujte zadní část fronty směřující na konec propojeného seznamu, aby se operace zařazení do fronty prováděla na konci seznamu, a udržujte přední část fronty směřující k hlavě propojeného seznamu, aby se operace zrušení fronty prováděla na začátku seznamu.","Využití předního ukazatele a zadního ukazatele. Přední ukazatel a zadní ukazatel ukazují na první položku ve frontě. Jak přidáváte položky, přední část zůstává stejná, ale zadní poiner „next“ ukazuje na novou položku a nové položce se přiřadí, aby se stala „novým“ zpětným ukazatelem.",Kako možete implementirati red sa popisom?,"Zadnji dio reda neka bude usmjeren na rep povezane liste, tako da se operacija čekanja vrši na kraju popisa, a prednji dio reda mora biti usmjeren na glavu povezane liste, tako da je izvršena operacija uklanjanja reda na početku liste.","Korištenje prednjeg i stražnjeg pokazivača. Prednji pokazivač i zadnji pokazivač upućuju na prvu stavku u redu. Kako dodajete stavke, prednji ostaje isti, ali zadnji pokazivač &#39;next&#39; pokazuje na novu stavku i nova stavka je dodijeljena da postane &#39;novi&#39; zadnji pokazivač."
227,227,2038,11.6,Iteration by using loops,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?",Iteration mit Schleifen,Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,Iteration pinaagi sa paggamit sa mga galong,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,Iteration med hjälp av öglor,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,Itération à l&#39;aide de boucles,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,Iteratie door middel van loops,"Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,Итерация с использованием циклов,Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,Iterazione utilizzando i cicli,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,Iteración mediante bucles,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,Iteracja przy użyciu pętli,Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,Lặp lại bằng cách sử dụng các vòng lặp,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,ループを使用した反復,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,使用循环进行迭代,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,التكرار باستخدام الحلقات,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,Ітерація за допомогою петель,Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,Iteração usando loops,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,تکرار با استفاده از حلقه ها,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,Iteració mitjançant bucles,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,Понављање помоћу петљи,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,Iterasi dengan menggunakan loop,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,Iterasjon ved hjelp av løkker,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,루프를 사용하여 반복,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,Iteraatio käyttämällä silmukoita,Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,Iteráció hurkok használatával,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,Iterace pomocí smyček,Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,Iteracija pomoću petlji
228,228,403,2.7,To hide the definition and details of a class.  Also to help readability of the main C++ file.,"To store a class interface, including data members and member function prototypes.",What is the role of a header-file?,3.5,"Speichern einer Klassenschnittstelle, einschließlich Datenelementen und Elementfunktionsprototypen.",Welche Rolle spielt eine Header-Datei?,Um die Definition und Details einer Klasse auszublenden. Auch zur besseren Lesbarkeit der C ++ - Hauptdatei.,Unsa man ang papel sa usa ka header-file?,"Aron tipiganan ang usa ka interface sa klase, lakip ang mga miyembro sa datos ug mga prototype sa pagpaandar sa miyembro.",Aron matago ang kahulugan ug mga detalye sa usa ka klase. Aron usab matabangan nga mabasa ang punoan nga file nga C ++.,Vilken roll har en rubrikfil?,"Att lagra ett klassgränssnitt, inklusive datamedlemmar och prototyper för medlemsfunktioner.",För att dölja definitionen och detaljerna för en klass. Även för att underlätta läsbarheten i C ++ - filen.,Quel est le rôle d&#39;un fichier d&#39;en-tête?,"Pour stocker une interface de classe, y compris les membres de données et les prototypes de fonction membre.",Pour masquer la définition et les détails d&#39;une classe. Également pour aider à la lisibilité du fichier C ++ principal.,Wat is de rol van een header-bestand?,"Om een klasse-interface op te slaan, inclusief gegevensleden en prototypes van lidfuncties.",Om de definitie en details van een klas te verbergen. Ook om de leesbaarheid van het hoofdbestand C ++ te helpen.,Какова роль заголовочного файла?,"Для хранения интерфейса класса, включая члены данных и прототипы функций-членов.",Чтобы скрыть определение и детали класса. Также для облегчения чтения основного файла C ++.,Qual è il ruolo di un file di intestazione?,"Per memorizzare un&#39;interfaccia di classe, inclusi membri di dati e prototipi di funzioni membro.",Per nascondere la definizione e i dettagli di una classe. Anche per aiutare la leggibilità del file C ++ principale.,¿Cuál es la función de un archivo de encabezado?,"Para almacenar una interfaz de clase, incluidos los miembros de datos y los prototipos de funciones de miembros.",Ocultar la definición y los detalles de una clase. También para ayudar a la legibilidad del archivo principal de C ++.,Jaka jest rola pliku nagłówkowego?,"Do przechowywania interfejsu klasy, w tym składowych danych i prototypów funkcji składowych.",Aby ukryć definicję i szczegóły klasy. Również w celu ułatwienia czytelności głównego pliku C ++.,Vai trò của tệp tiêu đề là gì?,"Để lưu trữ một giao diện lớp, bao gồm các thành viên dữ liệu và các nguyên mẫu hàm thành viên.",Để ẩn định nghĩa và chi tiết của một lớp. Cũng để giúp dễ đọc của tệp C ++ chính.,ヘッダーファイルの役割は何ですか？,データメンバーとメンバー関数のプロトタイプを含むクラスインターフェイスを格納します。,クラスの定義と詳細を非表示にします。また、メインのC ++ファイルの読みやすさを支援します。,头文件的作用是什么？,存储一个类接口，包括数据成员和成员函数原型。,隐藏类的定义和详细信息。也有助于提高主C ++文件的可读性。,ما هو دور ملف الرأس؟,لتخزين واجهة فئة ، بما في ذلك أعضاء البيانات ونماذج وظائف الأعضاء.,لإخفاء تعريف وتفاصيل الفصل. أيضًا للمساعدة في سهولة قراءة ملف C ++ الرئيسي.,Яка роль заголовного файлу?,"Зберігати інтерфейс класу, включаючи члени даних та прототипи функцій членів.",Щоб приховати визначення та деталі класу. Також для покращення читабельності основного файлу C ++.,Qual é a função de um arquivo de cabeçalho?,"Para armazenar uma interface de classe, incluindo membros de dados e protótipos de função de membro.",Para ocultar a definição e os detalhes de uma classe. Também para ajudar na legibilidade do arquivo C ++ principal.,نقش یک پرونده هدر چیست؟,برای ذخیره یک رابط کلاس ، از جمله اعضای داده و نمونه های اولیه عملکرد اعضا.,برای مخفی کردن تعریف و جزئیات یک کلاس. همچنین برای کمک به خوانایی پرونده اصلی C ++.,Quin és el paper d&#39;un fitxer de capçalera?,"Per emmagatzemar una interfície de classe, inclosos membres de dades i prototips de funció de membre.",Per amagar la definició i els detalls d&#39;una classe. També per facilitar la llegibilitat del fitxer C ++ principal.,Која је улога заглавља-датотеке?,"Да чува интерфејс класе, укључујући чланове података и прототипове функције члана.",Да сакрије дефиницију и детаље класе. Такође ради лакше читљивости главне Ц ++ датотеке.,Apa peran file header?,"Untuk menyimpan antarmuka kelas, termasuk anggota data dan prototipe fungsi anggota.",Untuk menyembunyikan definisi dan detail kelas. Juga untuk membantu keterbacaan file utama C ++.,Hva er rollen som en header-fil?,"Å lagre et klassegrensesnitt, inkludert datamedlemmer og prototyper for medlemsfunksjoner.",For å skjule definisjonen og detaljene i en klasse. Også for å hjelpe lesbarheten til C ++ - filen.,헤더 파일의 역할은 무엇입니까?,데이터 멤버 및 멤버 함수 프로토 타입을 포함한 클래스 인터페이스를 저장합니다.,클래스의 정의 및 세부 정보를 숨기려면 또한 기본 C ++ 파일의 가독성을 높이기 위해.,Mikä on otsikkotiedoston rooli?,"Luokkaliittymän, mukaan lukien datajäsenet ja jäsenfunktioprototyypit, tallentaminen.",Piilota luokan määritelmä ja yksityiskohdat. Auttaa myös C ++ -päätiedoston luettavuutta.,Mi a fejlécfájl szerepe?,"Osztályfelület tárolására, beleértve az adattagokat és a tagfüggvény prototípusokat.",Az osztály definíciójának és részleteinek elrejtése. A fő C ++ fájl olvashatóságának elősegítésére is.,Jaká je role souboru záhlaví?,"K uložení rozhraní třídy, včetně datových členů a prototypů členské funkce.",Skrytí definice a podrobností třídy. Také pro lepší čitelnost hlavního souboru C ++.,Koja je uloga zaglavlja-datoteke?,"Za pohranu sučelja klase, uključujući članove podataka i prototipove funkcije člana.",Da sakrije definiciju i detalje klase. Takođe radi lakše čitljivosti glavne C ++ datoteke.
229,229,1228,7.4,A function with access to a linked list's head pointer has access to the entire list. Pass the head pointer to a function as a reference argument,By reference.,How are linked lists passed as arguments to a function?,5.0,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,Eine Funktion mit Zugriff auf den Kopfzeiger einer verknüpften Liste hat Zugriff auf die gesamte Liste. Übergeben Sie den Kopfzeiger als Referenzargument an eine Funktion,Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,Ang usa ka pagpaandar nga adunay pag-access sa ulohan sa lista sa us aka lista adunay access sa tibuuk nga lista. Ipasa ang punoan sa ulo sa usa ka gimbuhaton ingon usa ka argumento nga pakisayran,Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,En funktion med åtkomst till en länkad huvudpekare har åtkomst till hela listan. Skicka huvudpekaren till en funktion som ett referensargument,Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,Une fonction ayant accès au pointeur de tête d&#39;une liste chaînée a accès à toute la liste. Passez le pointeur de tête à une fonction comme argument de référence,Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,Een functie met toegang tot de hoofdaanwijzer van een gekoppelde lijst heeft toegang tot de volledige lijst. Geef de hoofdaanwijzer door aan een functie als referentieargument,Как связанные списки передаются в качестве аргументов функции?,По ссылке.,Функция с доступом к указателю заголовка связанного списка имеет доступ ко всему списку. Передайте указатель заголовка функции в качестве ссылочного аргумента,Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,Una funzione con accesso al puntatore principale di un elenco collegato ha accesso all&#39;intero elenco. Passa il puntatore a una funzione come argomento di riferimento,¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,Una función con acceso al puntero principal de una lista vinculada tiene acceso a toda la lista. Pase el puntero principal a una función como argumento de referencia,W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,Funkcja z dostępem do wskaźnika głównego połączonej listy ma dostęp do całej listy. Przekaż wskaźnik nagłówka do funkcji jako argument odniesienia,Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,Một chức năng có quyền truy cập vào con trỏ của danh sách được liên kết có quyền truy cập vào toàn bộ danh sách. Chuyển con trỏ đầu đến một hàm làm đối số tham chiếu,リンクリストはどのように引数として関数に渡されますか？,参照による。,リンクリストのヘッドポインタにアクセスできる関数は、リスト全体にアクセスできます。ヘッドポインタを参照引数として関数に渡します,链表如何作为参数传递给函数？,引用。,可以访问链接列表的头指针的函数可以访问整个列表。将头指针传递给函数作为参考参数,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,تتمتع الوظيفة التي لها حق الوصول إلى المؤشر الرئيسي لقائمة مرتبطة بإمكانية الوصول إلى القائمة بأكملها. قم بتمرير مؤشر الرأس إلى وظيفة كوسيطة مرجعية,Як зв’язані списки передаються як аргументи функції?,За посиланням.,Функція з доступом до головного покажчика пов&#39;язаного списку має доступ до всього списку. Передайте вказівник на голову функції як контрольний аргумент,Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,Uma função com acesso ao ponteiro principal de uma lista vinculada tem acesso à lista inteira. Passe o ponteiro principal para uma função como um argumento de referência,چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,عملکردی با دسترسی به نشانگر هدست لیست پیوندی به کل لیست دسترسی دارد. نشانگر هد را به عنوان آرگومان مرجع به یک تابع منتقل کنید,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,Una funció amb accés al punter de capçalera d&#39;una llista enllaçada té accés a tota la llista. Passeu el punter del cap a una funció com a argument de referència,Како се повезане листе прослеђују као аргументи функцији?,По референци.,Функција која има приступ главном показивачу повезане листе има приступ целој листи. Предај показивач главе функцији као референтни аргумент,Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,Sebuah fungsi dengan akses ke penunjuk kepala daftar tertaut memiliki akses ke seluruh daftar. Meneruskan penunjuk kepala ke suatu fungsi sebagai argumen referensi,Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,En funksjon med tilgang til en koblet listes hovedpeker har tilgang til hele listen. Send hodepekeren til en funksjon som et referanseargument,연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,연결 목록의 헤드 포인터에 액세스 할 수있는 함수는 전체 목록에 액세스 할 수 있습니다. 참조 인수로 함수에 헤드 포인터 전달,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,"Toiminnolla, jolla on yhteys linkitetyn luettelon pääosoittimeen, on pääsy koko luetteloon. Siirrä pääosoitin funktiolle viiteargumenttina",Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,A csatolt lista fejmutatójához hozzáférő funkció hozzáfér a teljes listához. Adja át a fejmutatót egy függvénynek referencia argumentumként,Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,Funkce s přístupem k hlavnímu ukazateli propojeného seznamu má přístup k celému seznamu. Předejte hlavní ukazatel na funkci jako referenční argument,Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,Funkcija s pristupom glavnom pokazivaču povezane liste ima pristup cijeloj listi. Proslijedite pokazivač glave na funkciju kao referentni argument
230,230,1529,9.1,a queue is a list of things that follows the first in first out behavior,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",What is a queue?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element das letzte ist, das entfernt wird (oder das First-In-First-Out).",Was ist eine Warteschlange?,"Eine Warteschlange ist eine Liste von Dingen, die dem First-In-First-Out-Verhalten folgen",Unsa ang pila?,"Ang usa ka istraktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang ulahi nga tangtangon (o una-sa-una-nga-out)",ang usa ka pila mao ang lista sa mga butang nga nagasunod sa una sa una nga paggawi,Vad är en kö?,"En datastruktur som kan lagra element, som har den egenskapen att det senast tillagda objektet är det sista som tas bort (eller först-in-först-ut).",en kö är en lista över saker som följer först in först ut beteendet,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le dernier à être supprimé (ou premier entré, premier sorti).","une file d&#39;attente est une liste de choses qui suivent le comportement du premier entré, premier sorti",Wat is een wachtrij?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item het laatste is dat wordt verwijderd (of first-in-first-out).",een wachtrij is een lijst met dingen die volgen op het first in first out-gedrag,Что такое очередь?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален последним (или первым пришел - первым ушел).","очередь - это список вещей, который следует за поведением первым пришел - первым ушел",Cos&#39;è una coda?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà l&#39;ultimo a essere rimosso (o first-in-first-out).",una coda è un elenco di cose che segue il comportamento first in first out,¿Qué es una cola?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el último en ser eliminado (o el primero en entrar, primero en salir).","una cola es una lista de cosas que sigue el comportamiento de primero en entrar, primero en salir",Co to jest kolejka?,"Struktura danych, która może przechowywać elementy, która ma tę właściwość, że ostatni dodany element będzie ostatnim do usunięcia (lub pierwszy na wejściu, pierwszy na wyjściu).","kolejka to lista rzeczy, które następują po zachowaniu first in first out",Hàng đợi là gì?,"Một cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử cuối cùng bị xóa (hoặc nhập trước xuất trước).",hàng đợi là danh sách những thứ tuân theo hành vi xuất trước nhập sau,キューとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最後に削除される（または先入れ先出し）というプロパティがあります。,キューは、先入れ先出し動作に続くもののリストです。,什么是队列？,可以存储元素的数据结构，其属性为最后添加的项将是最后要删除的（或先进先出）。,队列是遵循先进先出行为的事物列表,ما هو الطابور؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون آخر عنصر تتم إزالته (أو ما يرد أولاً يخرج أولاً).,قائمة الانتظار هي قائمة بالأشياء التي تتبع سلوك أول ما يصرف أولاً,Що таке черга?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде останнім, який буде видалено (або перший-у-першому-вихід).","Черга - це список речей, які слідують за першим у поведінці першого виходу",O que é uma fila?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o último a ser removido (ou primeiro a entrar, primeiro a sair).","uma fila é uma lista de coisas que seguem o comportamento do primeiro a entrar, primeiro a sair",صف چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده آخرین موردی است که حذف می شود (یا اولین بار در اولین بار).,یک صف لیستی از مواردی است که اولین رفتار در اولین بار را دنبال می کند,Què és una cua?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà l’últim que s’eliminarà (o el primer entrant-primer sortint).",una cua és una llista de coses que segueixen el primer comportament de primer en sortir,Шта је ред?,"Структура података која може да складишти елементе, а која има својство да ће последња додата ставка бити последња која ће бити уклоњена (или прва у првом).",ред је листа ствари која следи прва у понашању фирст оут,Apa itu antrian?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang item terakhir ditambahkan akan menjadi yang terakhir dihapus (atau pertama masuk pertama keluar).",antrian adalah daftar hal-hal yang mengikuti perilaku pertama masuk pertama keluar,Hva er kø?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det siste som blir fjernet (eller først-inn-først-ut).",en kø er en liste over ting som følger den første inn første oppførselen,대기열이란 무엇입니까?,마지막으로 추가 된 항목이 제거 될 마지막 항목 (또는 선입 선출)이라는 속성을 가진 요소를 저장할 수있는 데이터 구조입니다.,큐는 선입 선출 동작을 따르는 항목의 목록입니다.,Mikä on jono?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan viimeisenä (tai ensin sisään-sisään-ulos-lähtöön).","jono on luettelo asioista, jotka seuraavat ensimmäistä ensimmäisenä -käyttäytymistä",Mi a sor?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az utolsó, amelyet eltávolítanak (vagy az első az elsőben ki-be).","a várólista olyan dolgok listája, amelyek követik az első az első az elsőben viselkedést",Co je to fronta?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude poslední, která bude odebrána (nebo první-první-první-ven).","fronta je seznam věcí, které následují za chováním prvního do prvního",Šta je red?,"Struktura podataka koja može pohraniti elemente, koja ima svojstvo da će zadnja dodana stavka biti posljednja koja će se ukloniti (ili prva u prvom pojavljivanju).",red je lista stvari koja slijedi prvu u ponašanju first out
231,231,1792,10.5,"A binary tree where the value in any node n is greater than the value in every node in n's left subtree, but less than the value of every node in n's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,What is a binary search tree?,5.0,"Ein Binärbaum mit der Eigenschaft, dass für jeden Knoten das linke Kind kleiner als das übergeordnete Element ist, was wiederum kleiner als das rechte Kind ist.",Was ist ein binärer Suchbaum?,"Ein Binärbaum, bei dem der Wert in einem Knoten n größer ist als der Wert in jedem Knoten im linken Teilbaum von n, aber kleiner als der Wert jedes Knotens im rechten Teilbaum von n.",Unsa ang usa ka puno nga pagpangita sa binary?,Ang usa ka binary nga kahoy nga adunay kabtangan nga alang sa bisan unsang node ang wala nga bata mas gamay kaysa sa ginikanan nga sa baylo mas gamay kaysa sa tuo nga bata.,"Usa ka binary nga kahoy diin ang kantidad sa bisan unsang node n labi ka daghan kaysa kantidad sa matag node sa wala nga subtree sa n, apan mas gamay sa kantidad sa matag node sa tuo nga subtree sa n.",Vad är ett binärt sökträd?,Ett binärt träd som har egenskapen att för vilken nod som helst är det vänstra barnet mindre än föräldern som i sin tur är mindre än det högra barnet.,"Ett binärt träd där värdet i vilken nod som helst n är större än värdet i varje nod i n: s vänstra underträd, men mindre än värdet för varje nod i n: s högra underträd.",Qu&#39;est-ce qu&#39;un arbre de recherche binaire?,"Un arbre binaire qui a la propriété que pour tout nœud, l&#39;enfant gauche est plus petit que le parent qui à son tour est plus petit que l&#39;enfant droit.","Un arbre binaire où la valeur de tout nœud n est supérieure à la valeur de chaque nœud du sous-arbre gauche de n, mais inférieure à la valeur de chaque nœud du sous-arbre droit de n.",Wat is een binaire zoekboom?,"Een binaire boom die de eigenschap heeft dat voor elk knooppunt het linkerkind kleiner is dan de ouder, die op zijn beurt kleiner is dan het rechterkind.","Een binaire boom waarbij de waarde in een knooppunt n groter is dan de waarde in elk knooppunt in de linker substructuur van n, maar kleiner dan de waarde van elk knooppunt in de rechter substructuur van n.",Что такое двоичное дерево поиска?,"Бинарное дерево, обладающее тем свойством, что для любого узла левый дочерний элемент меньше, чем родительский, который, в свою очередь, меньше, чем правый дочерний элемент.","Двоичное дерево, в котором значение в любом узле n больше значения в каждом узле в левом поддереве n, но меньше значения каждого узла в правом поддереве n.",Cos&#39;è un albero di ricerca binario?,Un albero binario che ha la proprietà che per ogni nodo il figlio sinistro è più piccolo del genitore che a sua volta è più piccolo del figlio destro.,"Un albero binario in cui il valore in ogni nodo n è maggiore del valore in ogni nodo nel sottoalbero sinistro di n, ma inferiore al valore di ogni nodo nel sottoalbero destro di n.",¿Qué es un árbol de búsqueda binario?,"Un árbol binario que tiene la propiedad de que para cualquier nodo el hijo izquierdo es más pequeño que el padre, que a su vez es más pequeño que el hijo derecho.","Un árbol binario donde el valor en cualquier nodo n es mayor que el valor en cada nodo en el subárbol izquierdo de n, pero menor que el valor de cada nodo en el subárbol derecho de n.",Co to jest drzewo wyszukiwania binarnego?,"Drzewo binarne, które ma tę właściwość, że dla każdego węzła lewe dziecko jest mniejsze niż rodzic, które z kolei jest mniejsze niż prawe dziecko.","Drzewo binarne, w którym wartość w dowolnym węźle n jest większa niż wartość w każdym węźle w lewym poddrzewie n, ale mniejsza niż wartość w każdym węźle w prawym poddrzewie n.",Cây tìm kiếm nhị phân là gì?,"Một cây nhị phân có thuộc tính mà đối với bất kỳ nút nào, nút con bên trái đều nhỏ hơn nút cha, lần lượt nhỏ hơn nút con bên phải.","Cây nhị phân trong đó giá trị trong bất kỳ nút nào của n lớn hơn giá trị của mọi nút trong cây con bên trái của n, nhưng nhỏ hơn giá trị của mọi nút trong cây con bên phải của n.",二分探索木とは何ですか？,どのノードでも、左の子が親よりも小さく、親が右の子よりも小さいというプロパティを持つ二分木。,任意のノードnの値が、nの左側のサブツリーのすべてのノードの値よりも大きいが、nの右側のサブツリーのすべてのノードの値よりも小さいバイナリツリー。,什么是二叉搜索树？,具有以下属性的二叉树：对于任何节点，左子节点小于父节点，而父节点又比右子节点小。,二叉树，其中任何节点n的值都大于n左子树中每个节点的值，但小于n右子树中每个节点的值。,ما هي شجرة البحث الثنائية؟,شجرة ثنائية لها خاصية أن الطفل الأيسر لأي عقدة يكون أصغر من الأصل الذي بدوره أصغر من الطفل الأيمن.,شجرة ثنائية حيث تكون القيمة في أي عقدة n أكبر من القيمة الموجودة في كل عقدة في الشجرة الفرعية اليسرى لـ n ، ولكنها أقل من قيمة كل عقدة في الشجرة الفرعية اليمنى لـ n.,Що таке бінарне дерево пошуку?,"Бінарне дерево, яке має властивість, що для будь-якого вузла лівий дочірній елемент менший за батьківський, який, у свою чергу, менший від правого дочірнього.","Двійкове дерево, де значення в будь-якому вузлі n більше, ніж значення в кожному вузлі в лівому піддереві n, але менше значення кожного вузла в правому піддереві n.",O que é uma árvore de pesquisa binária?,"Uma árvore binária que possui a propriedade de que, para qualquer nó, o filho esquerdo é menor que o pai que, por sua vez, é menor que o filho direito.","Uma árvore binária onde o valor em qualquer nó n é maior que o valor em cada nó na subárvore esquerda de n, mas menor que o valor de cada nó na subárvore direita de n.",درخت جستجوی باینری چیست؟,یک درخت باینری است که خاصیتی دارد که برای هر گره کودک چپ کوچکتر از والد است که به نوبه خود کوچکتر از فرزند راست است.,یک درخت باینری که مقدار آن در هر گره n بیشتر از مقدار موجود در هر گره در زیر شاخه سمت چپ n باشد ، اما کمتر از مقدار هر گره در n شاخه سمت راست n است.,Què és un arbre de cerca binari?,"Un arbre binari que té la propietat que per a qualsevol node el fill esquerre és més petit que el pare, que al seu torn és més petit que el fill dret.","Un arbre binari on el valor de qualsevol node n és superior al valor de tots els nodes del subarbre esquerre de n, però inferior al valor de tots els nodes del subarbre dret de n.",Шта је бинарно стабло претраживања?,Бинарно стабло које има својство да је за било који чвор лево дете мање од родитеља које је пак мање од десног детета.,"Бинарно стабло где је вредност у било ком чвору н већа од вредности у сваком чвору у левом н подстаблу н, али мања од вредности сваког чвора у десном подстаблу н.",Apa itu pohon pencarian biner?,Sebuah pohon biner yang memiliki properti yang untuk setiap node anak kiri lebih kecil dari induk yang pada gilirannya lebih kecil dari anak kanan.,"Pohon biner di mana nilai di setiap node n lebih besar dari nilai di setiap node di sub pohon kiri n, tetapi lebih kecil dari nilai setiap node di sub pohon kanan n.",Hva er et binært søketre?,Et binært tre som har den egenskapen at for hvilken som helst node er det venstre barnet mindre enn foreldren som igjen er mindre enn det høyre barnet.,"Et binært tre der verdien i en hvilken som helst node n er større enn verdien i hver node i ns venstre undertrær, men mindre enn verdien til hver node i ns høyre undertrær.",이진 검색 트리 란 무엇입니까?,모든 노드에 대해 왼쪽 자식이 부모보다 작고 오른쪽 자식보다 작은 속성을 가진 이진 트리입니다.,노드 n의 값이 n의 왼쪽 하위 트리에있는 모든 노드의 값보다 크지 만 n의 오른쪽 하위 트리에있는 모든 노드의 값보다 작은 이진 트리입니다.,Mikä on binaarinen hakupuu?,"Binaarinen puu, jolla on ominaisuus, että minkä tahansa solmun vasen lapsi on pienempi kuin vanhempi, joka puolestaan on pienempi kuin oikea lapsi.","Binaarinen puu, jossa minkä tahansa solmun n arvo on suurempi kuin jokaisen solmun arvo n: n vasemmassa alipuussa, mutta pienempi kuin jokaisen solmun arvo n: n oikeassa alipuussa.",Mi az a bináris keresési fa?,"Egy bináris fa, amelynek az a tulajdonsága, hogy bármelyik csomópontnál a bal gyermek kisebb, mint a szülő, ami viszont kisebb, mint a jobb gyermek.","Egy bináris fa, ahol bármely n csomópont értéke nagyobb, mint n bal bal részfájának minden csomópontja, de kisebb, mint az n jobb oldali részfa minden csomópontjának értéke.",Co je to binární vyhledávací strom?,"Binární strom, který má vlastnost, že pro jakýkoli uzel je levé dítě menší než nadřazený, což je zase menší než pravé dítě.","Binární strom, kde hodnota v libovolném uzlu n je větší než hodnota v každém uzlu v levém podstromu n, ale menší než hodnota každého uzlu v pravém podstromu n.",Što je binarno stablo pretraživanja?,Binarno stablo koje ima svojstvo da je za bilo koji čvor lijevo dijete manje od roditelja koje je pak manje od desnog djeteta.,"Binarno stablo u kojem je vrijednost u bilo kojem čvoru n veća od vrijednosti u svakom čvoru u lijevom n podstablu, ali manja od vrijednosti svakog čvora u desnom podstablu n."
232,232,572,3.6,Either omitting the base case or writing the recursion step incorrectly so that it does not converge on the base case can cause an infinite recursion.,"If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",5.0,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,"Wenn Sie den Basisfall weglassen oder den Rekursionsschritt falsch schreiben, damit er nicht im Basisfall konvergiert, kann dies zu einer unendlichen Rekursion führen.","Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.",Bisan ang pagwagtang sa basehan nga kaso o pagsulat nga sayup nga lakang sa recursion aron dili kini magtapot sa punoan nga basehan mahimong hinungdan sa usa ka walay katapusan nga recursion.,Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,Att antingen utelämna basfallet eller skriva fel rekursionssteg så att det inte konvergerar i basfallet kan orsaka en oändlig rekursion.,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,L&#39;omission du cas de base ou l&#39;écriture incorrecte de l&#39;étape de récursivité afin qu&#39;elle ne converge pas vers le cas de base peut provoquer une récursivité infinie.,Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,Het weglaten van het basisscenario of het verkeerd schrijven van de recursiestap zodat deze niet convergeert naar het basisscenario kan een oneindige recursie veroorzaken.,Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.","Либо пропуск базового случая, либо неправильная запись шага рекурсии, так что он не сходится в базовом случае, может вызвать бесконечную рекурсию.","Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,L&#39;omissione del caso base o la scrittura errata del passaggio di ricorsione in modo che non converga sul caso base può causare una ricorsione infinita.,"Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,Omitir el caso base o escribir el paso de recursividad de forma incorrecta para que no converja en el caso base puede provocar una recursividad infinita.,Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,"Pominięcie przypadku podstawowego lub niepoprawne zapisanie kroku rekursji, tak aby nie zbiegał się w przypadku podstawowym, może spowodować nieskończoną rekursję.","Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",Việc bỏ qua trường hợp cơ sở hoặc viết sai bước đệ quy để nó không hội tụ vào trường hợp cơ sở có thể gây ra một đệ quy vô hạn.,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,基本ケースを省略するか、再帰ステップを誤って記述して基本ケースに収束しないようにすると、無限の再帰が発生する可能性があります。,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,忽略基本情况或错误地编写递归步骤以致于它不会收敛于基本情况都可能导致无限递归。,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,يمكن أن يؤدي حذف الحالة الأساسية أو كتابة خطوة العودية بشكل غير صحيح بحيث لا تتقارب في الحالة الأساسية إلى تكرار لا نهائي.,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.","Або опускання базового випадку, або неправильний запис кроку рекурсії, щоб він не сходився до базового випадку, може спричинити нескінченну рекурсію.","Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,A omissão do caso base ou a gravação incorreta da etapa de recursão para que não convirja no caso base pode causar uma recursão infinita.,هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,یا حذف مورد پایه یا نادرست نوشتن مرحله بازگشت به منظور عدم همگرایی با پرونده اصلی ، می تواند باعث بازگشت نامحدود شود.,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,O ometre el cas bàsic o escriure el pas de recursió de manera incorrecta perquè no convergeixi en el cas bàsic pot provocar una recursió infinita.,"При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,"Или изостављање основног случаја или погрешно писање корака рекурзије, тако да се не конвергира на основном случају, може проузроковати бесконачну рекурзију.","Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.",Menghilangkan kasus dasar atau menulis langkah rekursi secara tidak benar sehingga tidak menyatu pada kasus dasar dapat menyebabkan rekursi tak terbatas.,Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.","Enten å utelate basissaken eller skrive feil rekursjonstrinn slik at den ikke konvergerer i basissaken, kan føre til en uendelig rekursjon.",재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,기본 사례를 생략하거나 기본 사례에 수렴하지 않도록 재귀 단계를 잘못 작성하면 무한 재귀가 발생할 수 있습니다.,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,"Joko peruskokeen jättäminen pois tai rekursiovaiheen kirjoittaminen väärin, jotta se ei lähentyisi perustapaukseen, voi aiheuttaa loputtoman rekursio.",A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.","Vagy az alapeset elhagyása, vagy a rekurziós lépés helytelen megírása, hogy az ne konvergáljon az alap esetre, végtelen rekurziót okozhat.",Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.","Vynechání základního případu nebo nesprávné zapsání kroku rekurze, aby se nekonvergoval v základním případě, může způsobit nekonečnou rekurzi.","Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,"Ili izostavljanje osnovnog slučaja ili pogrešno pisanje koraka rekurzije, tako da se ne konvergira na osnovnom slučaju, može izazvati beskonačnu rekurziju."
233,233,2016,11.6,One can use iteration or by using a simple while/for loop.,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?",Man kann die Iteration oder eine einfache while / for-Schleife verwenden.,Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,Ang usa mahimo nga mogamit iteration o pinaagi sa paggamit sa usa ka yano nga / alang sa loop.,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,Man kan använda iteration eller genom att använda en enkel while / for-loop.,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,On peut utiliser l&#39;itération ou en utilisant une simple boucle while / for.,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,Men kan iteratie gebruiken of door een simpele while / for-lus te gebruiken.,"Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,Можно использовать итерацию или простой цикл while / for.,Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,Si può usare l&#39;iterazione o usando un semplice ciclo while / for.,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,Se puede utilizar la iteración o mediante un simple bucle while / for.,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,Można użyć iteracji lub użyć prostej pętli while / for.,Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,Người ta có thể sử dụng phép lặp hoặc bằng cách sử dụng một vòng lặp while / for đơn giản.,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,反復を使用するか、単純なwhile / forループを使用することができます。,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,可以使用迭代，也可以使用简单的while / for循环。,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,يمكن للمرء استخدام التكرار أو باستخدام حلقة while / for بسيطة.,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,Можна використовувати ітерацію або за допомогою простого циклу while / for.,Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,Pode-se usar iteração ou um loop while / for simples.,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,می توان از تکرار یا با استفاده از یک حلقه while / برای استفاده ساده استفاده کرد.,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,Es pot utilitzar la iteració o mitjançant un simple bucle while / for.,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,Може се користити итерација или једноставна вхиле / фор петља.,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,Seseorang dapat menggunakan iterasi atau dengan menggunakan while / for loop sederhana.,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,Man kan bruke iterasjon eller ved å bruke en enkel while / for loop.,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,반복을 사용하거나 간단한 while / for 루프를 사용할 수 있습니다.,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,Voidaan käyttää iterointia tai yksinkertaista while / for -silmukkaa.,Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,Használhatunk iterációt vagy egy egyszerű while / for ciklust használva.,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,Lze použít iteraci nebo pomocí jednoduché smyčky while / for.,Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,Može se koristiti iteracija ili pomoću jednostavne while / for petlje.
234,234,790,4.6,this is a run-time error or execution-time error.,Run-time error.,Using an index outside the bounds of the array generates an error. Is this a compilation error or a run-time error?,5.0,Laufzeit Fehler.,Die Verwendung eines Index außerhalb der Grenzen des Arrays erzeugt einen Fehler. Ist dies ein Kompilierungsfehler oder ein Laufzeitfehler?,Dies ist ein Laufzeitfehler oder ein Ausführungszeitfehler.,Ang paggamit sa usa ka indeks sa gawas sa utlanan sa han-ay naghatag usa ka sayup. Kini ba usa ka sayup nga panagsama o usa ba nga sayup sa pagdagan?,Sayup sa oras sa pagdagan.,kini usa ka sayup sa oras sa pagdagan o sayup sa oras sa pagpatuman.,Att använda ett index utanför gruppens gränser genererar ett fel. Är detta ett kompileringsfel eller ett körtidsfel?,Körtidsfel.,detta är ett körtidsfel eller körningstidsfel.,L&#39;utilisation d&#39;un index en dehors des limites du tableau génère une erreur. S&#39;agit-il d&#39;une erreur de compilation ou d&#39;une erreur d&#39;exécution?,Erreur d&#39;exécution.,il s&#39;agit d&#39;une erreur d&#39;exécution ou d&#39;une erreur d&#39;exécution.,Het gebruik van een index buiten de grenzen van de array genereert een fout. Is dit een compilatiefout of een runtime-fout?,Runtime-fout.,dit is een runtime-fout of een uitvoeringsfout.,Использование индекса за пределами массива вызывает ошибку. Это ошибка компиляции или ошибка времени выполнения?,Ошибка выполнения.,это ошибка времени выполнения или ошибка времени выполнения.,L&#39;utilizzo di un indice al di fuori dei limiti dell&#39;array genera un errore. È un errore di compilazione o un errore di runtime?,Errore di run-time.,questo è un errore in fase di esecuzione o un errore in fase di esecuzione.,El uso de un índice fuera de los límites de la matriz genera un error. ¿Es esto un error de compilación o un error de tiempo de ejecución?,Error de tiempo de ejecución.,este es un error de tiempo de ejecución o un error de tiempo de ejecución.,Użycie indeksu poza granicami tablicy generuje błąd. Czy to błąd kompilacji czy błąd czasu wykonywania?,Błąd wykonania.,jest to błąd czasu wykonania lub błąd czasu wykonania.,Sử dụng chỉ mục bên ngoài giới hạn của mảng sẽ tạo ra lỗi. Đây là lỗi biên dịch hay lỗi thời gian chạy?,Lỗi runtime.,đây là lỗi thời gian chạy hoặc lỗi thời gian thực thi.,配列の境界外のインデックスを使用すると、エラーが発生します。これはコンパイルエラーですか、それとも実行時エラーですか？,ランタイムエラー。,これは、実行時エラーまたは実行時エラーです。,在数组范围之外使用索引会产生错误。这是编译错误还是运行时错误？,运行时错误。,这是运行时错误或执行时错误。,يؤدي استخدام فهرس خارج حدود المصفوفة إلى حدوث خطأ. هل هذا خطأ تجميع أم خطأ وقت التشغيل؟,خطا وقت التشغيل.,هذا خطأ وقت التشغيل أو خطأ وقت التنفيذ.,Використання індексу поза межами масиву генерує помилку. Це помилка компіляції чи помилка виконання?,Помилка під час виконання.,це помилка під час виконання або помилка під час виконання.,Usar um índice fora dos limites da matriz gera um erro. Este é um erro de compilação ou um erro de tempo de execução?,Erro em tempo de execução.,este é um erro de tempo de execução ou erro de tempo de execução.,استفاده از فهرست خارج از آرایه خطایی ایجاد می کند. آیا این یک خطای تلفیقی است یا یک خطای زمان اجرا است؟,خطای زمان اجرا.,این یک خطای زمان اجرا یا خطای زمان اجرا است.,L’ús d’un índex fora dels límits de la matriu genera un error. Es tracta d&#39;un error de compilació o d&#39;un temps d&#39;execució?,Error d&#39;execució.,es tracta d&#39;un error en temps d&#39;execució o en temps d&#39;execució.,Коришћење индекса изван граница поља генерише грешку. Да ли је ово грешка у компилацији или грешка током извршавања?,Грешка у раду.,ово је грешка током извршавања или грешке током извршења.,Menggunakan indeks di luar batas-batas larik menghasilkan kesalahan. Apakah ini kesalahan kompilasi atau kesalahan run-time?,Kesalahan run-time.,ini adalah kesalahan waktu proses atau kesalahan waktu eksekusi.,Å bruke en indeks utenfor områdets grenser genererer en feil. Er dette en kompileringsfeil eller en kjøretidsfeil?,Kjøretidsfeil.,dette er en kjøretidsfeil eller kjøringstidsfeil.,배열 경계를 벗어난 인덱스를 사용하면 오류가 발생합니다. 컴파일 오류입니까 아니면 런타임 오류입니까?,런타임 오류.,이것은 런타임 오류 또는 실행 시간 오류입니다.,Hakemiston käyttö taulukon rajojen ulkopuolella tuottaa virheen. Onko tämä käännösvirhe vai ajonaikainen virhe?,Suorituksenaikainen virhe.,tämä on ajonaikainen virhe tai suoritusajan virhe.,A tömb határain kívüli index használata hibát eredményez. Összeállítási hiba vagy futásidejű hiba?,Futtatási hiba.,ez futási vagy végrehajtási hiba.,Použití indexu mimo hranice pole generuje chybu. Je to chyba kompilace nebo chyba běhu?,Chyba za běhu.,toto je chyba za běhu nebo chyba za běhu.,Korištenje indeksa izvan granica polja generira grešku. Je li ovo greška u kompilaciji ili pogreška u toku izvođenja?,Greška u vremenu izvođenja.,ovo je pogreška vremena izvođenja ili pogreške vremena izvršavanja.
235,235,1381,8.3,treat the beginning of the array as the beginning of the stack,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.0,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,Behandeln Sie den Anfang des Arrays als den Anfang des Stapels,Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.",pagtratar sa sinugdanan sa laray sama sa sinugdanan sa stack,Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.",behandla början av arrayen som början på stacken,Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.",traiter le début du tableau comme le début de la pile,Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.",behandel het begin van de array als het begin van de stapel,Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.",рассматривать начало массива как начало стека,Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.",considera l&#39;inizio dell&#39;array come l&#39;inizio dello stack,¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.",tratar el comienzo de la matriz como el comienzo de la pila,Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.",traktuj początek tablicy jako początek stosu,Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.",coi phần đầu của mảng là phần đầu của ngăn xếp,配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,配列の先頭をスタックの先頭として扱います,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,将数组的开头视为堆栈的开头,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,التعامل مع بداية المصفوفة كبداية للمكدس,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.",початок масиву розглядати як початок стека,Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.",tratar o início da matriz como o início da pilha,چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,شروع آرایه را به عنوان ابتدای پشته در نظر بگیرید,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.",tractar el començament de la matriu com el començament de la pila,Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.",третирати почетак низа као почетак стека,Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.",perlakukan awal array sebagai awal tumpukan,Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.",behandle begynnelsen av matrisen som begynnelsen på stakken,어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,배열의 시작을 스택의 시작으로 취급,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.",käsittele matriisin alkua pinon alkuun,Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.",kezelje a tömb elejét a verem kezdeteként,Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.",považovat začátek pole za začátek zásobníku,Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.",tretirati početak niza kao početak stoga
236,236,2416,12.1,The number of levels and the height of the tree,The height of the tree.,How many steps does it take to search a node in a binary search tree?,5.0,Die Höhe des Baumes.,"Wie viele Schritte sind erforderlich, um einen Knoten in einem binären Suchbaum zu durchsuchen?",Die Anzahl der Ebenen und die Höhe des Baumes,Pila ka mga lakang ang gikinahanglan aron makapangita usa ka node sa usa ka binary search tree?,Ang kataas sa kahoy.,Ang gidaghanon sa mga lebel ug ang gitas-on sa kahoy,Hur många steg tar det för att söka efter en nod i ett binärt sökträd?,Trädets höjd.,Antalet nivåer och trädets höjd,Combien d&#39;étapes faut-il pour rechercher un nœud dans une arborescence de recherche binaire?,La hauteur de l&#39;arbre.,Le nombre de niveaux et la hauteur de l&#39;arbre,Hoeveel stappen zijn er nodig om een knooppunt in een binaire zoekboom te zoeken?,De hoogte van de boom.,Het aantal niveaus en de hoogte van de boom,Сколько шагов нужно для поиска узла в двоичном дереве поиска?,Высота дерева.,Количество уровней и высота дерева,Quanti passaggi sono necessari per cercare un nodo in un albero di ricerca binario?,L&#39;altezza dell&#39;albero.,Il numero di livelli e l&#39;altezza dell&#39;albero,¿Cuántos pasos se necesitan para buscar un nodo en un árbol de búsqueda binaria?,La altura del árbol.,El número de niveles y la altura del árbol.,Ile kroków wymaga przeszukanie węzła w drzewie wyszukiwania binarnego?,Wysokość drzewa.,Liczba poziomów i wysokość drzewa,Có bao nhiêu bước để tìm kiếm một nút trong cây tìm kiếm nhị phân?,Chiều cao của cây.,Số cấp độ và chiều cao của cây,二分探索木でノードを検索するのに何ステップかかりますか？,木の高さ。,レベルの数と木の高さ,在二叉搜索树中搜索节点需要多少步骤？,树的高度。,树的数量和高度,كم عدد الخطوات التي يستغرقها البحث عن عقدة في شجرة بحث ثنائية؟,ارتفاع الشجرة.,عدد المستويات وارتفاع الشجرة,Скільки кроків потрібно для пошуку вузла в двійковому дереві пошуку?,Висота дерева.,Кількість рівнів і висота дерева,Quantas etapas são necessárias para pesquisar um nó em uma árvore de pesquisa binária?,A altura da árvore.,O número de níveis e a altura da árvore,چند مرحله برای جستجوی گره در یک درخت جستجوی باینری انجام می شود؟,ارتفاع درخت.,تعداد سطح و ارتفاع درخت,Quants passos cal fer per cercar un node en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre.,El nombre de nivells i l&#39;alçada de l&#39;arbre,Колико корака је потребно за претрагу чвора у бинарном стаблу претраживања?,Висина стабла.,Број нивоа и висина стабла,Berapa banyak langkah yang diperlukan untuk mencari node di pohon pencarian biner?,Ketinggian pohon.,Jumlah tingkatan dan tinggi pohon,Hvor mange trinn tar det å søke i en node i et binært søketre?,Høyden på treet.,Antall nivåer og høyden på treet,이진 검색 트리에서 노드를 검색하려면 몇 단계가 필요합니까?,나무의 높이.,레벨 수와 나무의 높이,Kuinka monta vaihetta tarvitaan etsimään solmua binäärihakupuussa?,Puun korkeus.,Tasojen lukumäärä ja puun korkeus,Hány lépés szükséges egy csomópont kereséséhez egy bináris keresési fában?,A fa magassága.,A szintek száma és a fa magassága,Kolik kroků je potřeba k vyhledání uzlu v binárním vyhledávacím stromu?,Výška stromu.,Počet úrovní a výška stromu,Koliko je koraka potrebno za pretraživanje čvora u binarnom stablu pretraživanja?,Visina stabla.,Broj nivoa i visina stabla
237,237,614,3.7,"Iteration and recursion both use repetition and perform several simple operations and algorithms successively until they reach a certain limit.  So both involve a termination test to find that limit and both slowly approach that termination limit.  Both are based on a control statement as well.    If coded poorly, both can continue on for forever until the compiler or the computer either locks up, shuts down or halts the operation.",They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,5.0,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,"Iteration und Rekursion verwenden beide Wiederholungen und führen mehrere einfache Operationen und Algorithmen nacheinander aus, bis sie eine bestimmte Grenze erreichen. Beide beinhalten also einen Terminierungstest, um diese Grenze zu finden, und beide nähern sich langsam dieser Terminierungsgrenze. Beide basieren ebenfalls auf einer Steueranweisung. Bei schlechter Codierung können beide für immer fortgesetzt werden, bis der Compiler oder der Computer entweder abstürzt, herunterfährt oder den Vorgang anhält.",Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,"Ang Iteration ug recursion pareho nga naggamit og pagbalik-balik ug naghimo daghang mga yano nga operasyon ug algorithm hangtod sa pagkab-ot nila sa usa ka piho nga utlanan. Mao nga pareho ang naglambigit sa usa ka pagsulay sa pagtapos aron makapangita kana nga utlanan ug parehas nga hinay nga moduol sa utlanan sa pagtapos. Ang duha gibase usab sa usa ka pahayag sa pagpugong usab. Kung dili maayo ang naka-code, pareho mahimong magpadayon hangtod sa hangtod hangtod nga ang nag-compiler o kompyuter bisan kinsa man maka-lock, ma-shut down o mapugngan ang operasyon.",Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,"Iteration och rekursion använder både repetition och utför flera enkla operationer och algoritmer successivt tills de når en viss gräns. Så båda involverar ett uppsägningstest för att hitta den gränsen och båda närmar sig långsamt den uppsägningsgränsen. Båda är också baserade på ett kontrolluttalande. Om kodat dåligt kan båda fortsätta för evigt tills kompilatorn eller datorn antingen låses, stängs av eller stoppar åtgärden.",Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,"L&#39;itération et la récursivité utilisent toutes deux la répétition et exécutent plusieurs opérations et algorithmes simples successivement jusqu&#39;à ce qu&#39;ils atteignent une certaine limite. Les deux impliquent donc un test de terminaison pour trouver cette limite et tous deux s&#39;approchent lentement de cette limite de terminaison. Les deux sont également basés sur une déclaration de contrôle. S&#39;ils sont mal codés, les deux peuvent continuer indéfiniment jusqu&#39;à ce que le compilateur ou l&#39;ordinateur se verrouille, s&#39;arrête ou arrête l&#39;opération.",Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,"Iteratie en recursie gebruiken beide herhaling en voeren achtereenvolgens verschillende eenvoudige bewerkingen en algoritmen uit totdat ze een bepaalde limiet bereiken. Dus beide omvatten een beëindigingstest om die limiet te vinden en beide benaderen langzaam die beëindigingslimiet. Beide zijn ook gebaseerd op een control statement. Als ze slecht gecodeerd zijn, kunnen beide voor altijd doorgaan totdat de compiler of de computer vastloopt, wordt afgesloten of de bewerking stopt.",В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"Итерация, и рекурсия используют повторение и последовательно выполняют несколько простых операций и алгоритмов, пока не достигнут определенного предела. Таким образом, оба включают тест завершения, чтобы найти этот предел, и оба медленно приближаются к этому пределу. Оба они также основаны на управляющем утверждении. При неправильном кодировании оба могут продолжаться бесконечно, пока компилятор или компьютер не заблокируется, не выключится или не остановит операцию.",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,"L&#39;iterazione e la ricorsione utilizzano entrambe la ripetizione ed eseguono diverse semplici operazioni e algoritmi in successione fino a raggiungere un certo limite. Quindi entrambi comportano un test di terminazione per trovare quel limite ed entrambi si avvicinano lentamente a tale limite. Entrambi sono basati anche su un&#39;istruzione di controllo. Se codificati male, entrambi possono continuare per sempre fino a quando il compilatore o il computer non si blocca, si spegne o interrompe l&#39;operazione.",¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,"La iteración y la recursividad utilizan la repetición y realizan varias operaciones y algoritmos simples sucesivamente hasta que alcanzan un cierto límite. Por lo tanto, ambos implican una prueba de terminación para encontrar ese límite y ambos se acercan lentamente a ese límite de terminación. Ambos también se basan en una declaración de control. Si se codifica mal, ambos pueden continuar para siempre hasta que el compilador o la computadora se bloquee, apague o detenga la operación.",Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,"Iteracja i rekurencja używają powtarzania i wykonują kolejno kilka prostych operacji i algorytmów, aż osiągną określony limit. Tak więc oba wymagają testu zakończenia, aby znaleźć ten limit, i oba powoli zbliżają się do tego limitu. Oba są również oparte na oświadczeniu kontrolnym. Jeśli zostanie źle zakodowany, oba mogą działać bez końca, dopóki kompilator lub komputer nie zablokuje się, wyłączy lub zatrzyma operację.",Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,"Lặp lại và đệ quy đều sử dụng sự lặp lại và thực hiện liên tiếp một số hoạt động và thuật toán đơn giản cho đến khi chúng đạt đến một giới hạn nhất định. Vì vậy, cả hai đều liên quan đến kiểm tra kết thúc để tìm ra giới hạn đó và cả hai từ từ tiếp cận giới hạn chấm dứt đó. Cả hai đều dựa trên một tuyên bố kiểm soát. Nếu được mã hóa kém, cả hai có thể tiếp tục hoạt động mãi mãi cho đến khi trình biên dịch hoặc máy tính khóa, tắt hoặc tạm dừng hoạt động.",反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,反復と再帰はどちらも繰り返しを使用し、特定の制限に達するまで、いくつかの単純な操作とアルゴリズムを連続して実行します。したがって、どちらもその制限を見つけるための終了テストを含み、両方ともゆっくりとその終了制限に近づきます。どちらも制御ステートメントに基づいています。コーディングが不十分な場合、コンパイラーまたはコンピューターがロックアップ、シャットダウン、または操作を停止するまで、両方が永久に継続する可能性があります。,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,迭代和递归都使用重复并连续执行一些简单的操作和算法，直到达到一定的极限为止。因此，两者都涉及终止测试以找到该极限，并且都缓慢接近该终止极限。两者也都基于控制语句。如果编码不正确，两者都可以永远持续下去，直到编译器或计算机锁定，关闭或中止操作为止。,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,يستخدم كل من التكرار والعودية التكرار ويقومان بالعديد من العمليات والخوارزميات البسيطة على التوالي حتى يصلوا إلى حد معين. لذا فإن كلاهما يتضمن اختبار إنهاء للعثور على هذا الحد وكلاهما يقترب ببطء من حد الإنهاء. كلاهما يعتمد على بيان التحكم أيضًا. إذا تم ترميزهما بشكل سيئ ، فيمكن أن يستمر كلاهما إلى الأبد حتى يقوم المترجم أو الكمبيوتر إما بإغلاق العملية أو إيقافها أو إيقافها.,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"Ітерація та рекурсія використовують повторення та виконують послідовно кілька простих операцій та алгоритмів, поки вони не досягнуть певної межі. Отже, обидва включають тест на припинення, щоб знайти цю межу, і обидва повільно наближаються до цього обмеження. Обидва вони також базуються на заяві про контроль. Якщо кодування погано, обидва вони можуть продовжувати вічно, доки компілятор або комп&#39;ютер не заблокує, не вимкне або не зупинить роботу.",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,"A iteração e a recursão usam a repetição e executam várias operações e algoritmos simples sucessivamente até atingirem um certo limite. Portanto, ambos envolvem um teste de rescisão para encontrar esse limite e ambos se aproximam lentamente desse limite. Ambos são baseados também em uma instrução de controle. Se mal codificados, ambos podem continuar indefinidamente até que o compilador ou o computador trave, encerre ou interrompa a operação.",شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,تکرار و بازگشت هر دو از تکرار استفاده می کنند و چندین عملیات ساده و الگوریتم را پشت سر هم انجام می دهند تا زمانی که به یک حد مشخص برسند. بنابراین هر دو برای یافتن آن حد شامل یک تست فسخ هستند و هر دو به آهستگی به آن حد خاتمه می رسند. همچنین هر دو مبتنی بر یک عبارت کنترل هستند. اگر کد نویسی ضعیفی داشته باشد ، هر دو می توانند برای همیشه ادامه دهند تا اینکه کامپایلر یا کامپیوتر قفل شود ، خاموش شود یا عملکرد را متوقف کند.,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,"La iteració i la recursió utilitzen la repetició i realitzen diverses operacions i algoritmes senzills successivament fins a assolir un límit determinat. Per tant, tots dos impliquen una prova de terminació per trobar aquest límit i tots dos s’apropen lentament a aquest límit de terminació. Tots dos es basen també en una declaració de control. Si no estan ben codificats, tots dos poden continuar sempre fins que el compilador o l’ordinador es bloquegin, apaguin o interrompin l’operació.",Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,"Итерација и рекурзија користе понављање и изводе неколико једноставних операција и алгоритама сукцесивно док не досегну одређену границу. Дакле, оба укључују тест завршетка како би се пронашло то ограничење и обојица се полако приближавају том ограничењу. Обе су такође засноване на контролној изјави. Ако су лоше кодирани, обоје могу да наставе заувек док се компајлер или рачунар не закључају, не искључе или не зауставе рад.",Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,"Iterasi dan rekursi sama-sama menggunakan pengulangan dan melakukan beberapa operasi dan algoritme sederhana secara berturut-turut hingga mencapai batas tertentu. Jadi keduanya melibatkan tes terminasi untuk menemukan batas itu dan keduanya perlahan mendekati batas terminasi itu. Keduanya juga didasarkan pada pernyataan kontrol. Jika dikodekan dengan buruk, keduanya dapat terus berjalan selamanya sampai kompiler atau komputer terkunci, mati atau menghentikan operasi.",Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,"Iterasjon og rekursjon bruker repetisjon og utfører flere enkle operasjoner og algoritmer suksessivt til de når en viss grense. Så begge involverer en avslutningstest for å finne den grensen, og begge nærmer seg langsomt den avslutningsgrensen. Begge er også basert på en kontrollerklæring. Hvis kodet dårlig, kan begge fortsette i evig tid til kompilatoren eller datamaskinen enten låser seg, slår av eller stopper operasjonen.",반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,반복과 재귀는 모두 반복을 사용하고 특정 제한에 도달 할 때까지 몇 가지 간단한 작업과 알고리즘을 연속적으로 수행합니다. 따라서 둘 다 해당 한계를 찾기 위해 종료 테스트를 포함하고 둘 다 해당 종료 한계에 천천히 접근합니다. 둘 다 제어문을 기반으로합니다. 잘못 코딩 된 경우 컴파일러 또는 컴퓨터가 작동을 잠 그거나 종료하거나 중지 할 때까지 둘 다 영원히 계속 될 수 있습니다.,Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,"Sekä iterointi että rekursio käyttävät toistoa ja suorittavat useita yksinkertaisia operaatioita ja algoritmeja peräkkäin, kunnes ne saavuttavat tietyn rajan. Joten molemmat sisältävät lopetustestin kyseisen rajan löytämiseksi ja molemmat lähestyvät hitaasti kyseistä lopetusrajaa. Molemmat perustuvat myös kontrollilausuntoon. Jos koodaus on heikko, molemmat voivat jatkua ikuisesti, kunnes kääntäjä tai tietokone lukkiutuu, sammuu tai keskeyttää toiminnon.",Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"Az iteráció és a rekurzió egyaránt használ ismétlést, és több egyszerű műveletet és algoritmust hajt végre egymás után, amíg el nem érnek egy bizonyos határt. Tehát mindkettő végződési tesztet tartalmaz a határ megállapításához, és mindkettő lassan megközelíti ezt a határértéket. Mindkettő egy ellenőrzési nyilatkozaton is alapul. Rossz kódolás esetén mindkettő örökké folytatódhat, amíg a fordító vagy a számítógép el nem zárja, le nem állítja vagy leállítja a műveletet.",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,"Iterace a rekurze používají opakování a postupně provádějí několik jednoduchých operací a algoritmů, dokud nedosáhnou určitého limitu. Takže oba zahrnují test ukončení, aby se zjistil tento limit, a oba se pomalu blíží tomuto limitu ukončení. Oba jsou také založeny na kontrolním prohlášení. Pokud jsou špatně kódovány, mohou oba pokračovat navždy, dokud kompilátor nebo počítač buď nezablokují, nevypnou nebo nezastaví operaci.",Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,"Iteracija i rekurzija koriste ponavljanje i izvode nekoliko jednostavnih operacija i algoritama sukcesivno dok ne dosegnu određenu granicu. Dakle, oba uključuju test završetka kako bi se pronašlo to ograničenje i obojica se polako približavaju tom ograničenju. Oba se također temelje na kontrolnoj izjavi. Ako su loše kodirani, oboje mogu nastaviti zauvijek dok se kompajler ili računalo ne zaključa, ne isključi ili ne zaustavi rad."
238,238,943,5.4,"if (right &gt; left)   {     mid = (right + left) / 2;     m_sort(numbers, temp, left, mid);     m_sort(numbers, temp, mid+1, right);      merge(numbers, temp, left, mid+1, right);   }",When the size of the array to be sorted is 1 (or 2),What is the base case for a recursive implementation of merge sort?,2.0,Wenn die Größe des zu sortierenden Arrays 1 (oder 2) beträgt,Was ist der Basisfall für eine rekursive Implementierung der Zusammenführungssortierung?,"if (rechts&gt; links) {mid = (rechts + links) / 2; m_sort (Zahlen, Temp, links, Mitte); m_sort (Zahlen, Temp, Mitte + 1, rechts); Zusammenführen (Zahlen, Temp, links, Mitte + 1, rechts); }}",Unsa man ang basehan nga kaso alang sa usa ka recursive nga pagpatuman sa merge sort?,Kung ang gidak-on sa laray nga paghan-ay mao ang 1 (o 2),"kung (tuo&gt; wala) {tunga = (tuo + wala) / 2; m_sort (mga numero, temp, wala, tungatunga); m_sort (mga numero, temp, tunga-tunga sa 1, tuo); paghiusa (mga numero, temp, wala, tunga-tunga sa 1, tuo); }",Vad är grunden för ett rekursivt genomförande av sammanslagningssortering?,När storleken på matrisen som ska sorteras är 1 (eller 2),"om (höger&gt; vänster) {mid = (höger + vänster) / 2; m_sort (siffror, temp, vänster, mitt); m_sort (siffror, temp, mitt + 1, höger); slå samman (siffror, temp, vänster, mitt + 1, höger); }",Quel est le cas de base pour une implémentation récursive du tri par fusion?,Lorsque la taille du tableau à trier est 1 (ou 2),"if (droite&gt; gauche) {milieu = (droite + gauche) / 2; m_sort (nombres, température, gauche, milieu); m_sort (nombres, temp, milieu + 1, droite); fusionner (nombres, température, gauche, milieu + 1, droite); }",Wat is het basisscenario voor een recursieve implementatie van samenvoegsortering?,Als de grootte van de te sorteren array 1 (of 2) is,"if (rechts&gt; links) {mid = (rechts + links) / 2; m_sort (nummers, temp, links, midden); m_sort (getallen, temp, mid + 1, rechts); samenvoegen (cijfers, temp, links, midden + 1, rechts); }",Каков базовый случай рекурсивной реализации сортировки слиянием?,Когда размер сортируемого массива равен 1 (или 2),"если (справа&gt; слева) {середина = (справа + слева) / 2; m_sort (числа, темп, слева, середина); m_sort (числа, темп, середина + 1, справа); слияние (числа, темп, слева, середина + 1, справа); }",Qual è il caso di base per un&#39;implementazione ricorsiva di merge sort?,Quando la dimensione dell&#39;array da ordinare è 1 (o 2),"if (destra&gt; sinistra) {mid = (destra + sinistra) / 2; m_sort (numeri, temperatura, sinistra, metà); m_sort (numeri, temperatura, metà + 1, destra); unisci (numeri, temperatura, sinistra, metà + 1, destra); }",¿Cuál es el caso base para una implementación recursiva del tipo de combinación?,Cuando el tamaño de la matriz a ordenar es 1 (o 2),"if (derecha&gt; izquierda) {mid = (derecha + izquierda) / 2; m_sort (números, temp, izquierda, medio); m_sort (números, temp, mid + 1, derecha); fusionar (números, temp, izquierda, mid + 1, derecha); }",Jaki jest podstawowy przypadek rekurencyjnej implementacji sortowania przez scalanie?,Gdy rozmiar sortowanej tablicy to 1 (lub 2),"if (prawa&gt; lewa) {mid = (prawa + lewa) / 2; m_sort (liczby, temp, lewo, środek); m_sort (liczby, temp, mid + 1, right); scal (liczby, temp, lewo, środek + 1, prawo); }",Trường hợp cơ sở cho việc triển khai đệ quy sắp xếp hợp nhất là gì?,Khi kích thước của mảng được sắp xếp là 1 (hoặc 2),"if (right&gt; left) {mid = (right + left) / 2; m_sort (số, tạm thời, trái, giữa); m_sort (số, tạm thời, giữa + 1, phải); hợp nhất (số, tạm thời, trái, giữa + 1, phải); }",マージソートの再帰的実装の基本ケースは何ですか？,ソートする配列のサイズが1（または2）の場合,if（right&gt; left）{mid =（right + left）/ 2; m_sort（numbers、temp、left、mid）; m_sort（numbers、temp、mid + 1、right）; merge（numbers、temp、left、mid + 1、right）; },递归实现合并排序的基本情况是什么？,当要排序的数组的大小为1（或2）时,如果（右&gt;左）{中=（右+左）/ 2; m_sort（数字，温度，左，中） m_sort（数字，温度，中+1，右）; merge（数字，温度，左，中+1，右）; },ما هي الحالة الأساسية للتنفيذ العودي لفرز الدمج؟,عندما يكون حجم المصفوفة المراد فرزها 1 (أو 2),إذا (يمين&gt; يسار) {mid = (right + left) / 2 ؛ m_sort (الأرقام ، درجة الحرارة ، اليسار ، المنتصف) ؛ m_sort (أرقام ، درجة الحرارة ، منتصف + 1 ، يمين) ؛ دمج (أرقام ، درجة حرارة ، يسار ، منتصف + 1 ، يمين) ؛ },Який базовий випадок для рекурсивної реалізації злиття?,Коли розмір сортуваного масиву дорівнює 1 (або 2),"якщо (праворуч&gt; ліворуч) {середина = (праворуч + ліворуч) / 2; m_sort (цифри, тимчасова, ліва, середня); m_sort (цифри, temp, mid + 1, праворуч); злиття (числа, тимчасова, ліва, середня + 1, права); }",Qual é o caso base para uma implementação recursiva de merge sort?,Quando o tamanho da matriz a ser classificada é 1 (ou 2),"if (direita&gt; esquerda) {meio = (direita + esquerda) / 2; m_sort (números, temp, esquerda, meio); m_sort (números, temp, mid + 1, direita); mesclar (números, temp, esquerda, médio + 1, direita); }",مورد اصلی برای اجرای بازگشتی نوع ادغام چیست؟,وقتی اندازه آرایه ای که مرتب می شود 1 (یا 2) باشد,if (راست&gt; چپ) {mid = (راست + چپ) / 2؛ m_sort (اعداد ، دما ، چپ ، وسط) m_sort (اعداد ، دما ، اواسط + 1 ، راست) ادغام (اعداد ، دما ، چپ ، اواسط + 1 ، راست) ؛ },Quin és el cas bàsic per a una implementació recursiva del tipus de combinació?,Quan la mida de la matriu a ordenar és 1 (o 2),"if (dreta&gt; esquerra) {mid = (dreta + esquerra) / 2; m_sort (nombres, temp, esquerra, mitja); m_sort (números, temp, mitja + 1, dreta); fusionar (números, temp, esquerra, mitja + 1, dreta); }",Који је основни случај за рекурзивну имплементацију сортирања спајања?,Када је величина низа за сортирање 1 (или 2),"ако (десно&gt; лево) {средина = (десно + лево) / 2; м_сорт (бројеви, привремена, лева, средња); м_сорт (бројеви, привремена температура, средина + 1, десно); спајање (бројеви, привремена, лева, средња + 1, десна); }",Apa kasus dasar untuk implementasi rekursif dari merge sort?,Jika ukuran larik yang akan diurutkan adalah 1 (atau 2),"jika (kanan&gt; kiri) {pertengahan = (kanan + kiri) / 2; m_sort (angka, suhu, kiri, tengah); m_sort (angka, suhu, pertengahan + 1, kanan); menggabungkan (angka, suhu, kiri, tengah + 1, kanan); }",Hva er grunnlag for en rekursiv implementering av sammenslåingssortering?,Når størrelsen på matrisen som skal sorteres er 1 (eller 2),"hvis (høyre&gt; venstre) {mid = (høyre + venstre) / 2; m_sort (tall, temp, venstre, midt); m_sort (tall, temp, midt + 1, høyre); flette (tall, temp, venstre, midt + 1, høyre); }",병합 정렬을 재귀 적으로 구현하는 기본 사례는 무엇입니까?,정렬 할 배열의 크기가 1 (또는 2) 인 경우,"if (오른쪽&gt; 왼쪽) {mid = (오른쪽 + 왼쪽) / 2; m_sort (숫자, 온도, 왼쪽, 중간); m_sort (숫자, 온도, 중간 +1, 오른쪽); merge (숫자, 온도, 왼쪽, 중간 +1, 오른쪽); }",Mikä on yhdistämisen lajittelun rekursiivisen toteutuksen perusta?,Kun lajiteltavan taulukon koko on 1 (tai 2),"jos (oikea&gt; vasen) {keski = (oikea + vasen) / 2; m_sort (numerot, lämpötila, vasen, keskellä); m_sort (numerot, lämpötila, keski + 1, oikea); yhdistäminen (numerot, lämpötila, vasen, keskiosa + 1, oikea); }",Mi az alapesete az egyesítés rendezésének rekurzív megvalósításának?,Amikor a rendezendő tömb mérete 1 (vagy 2),"if (jobb&gt; bal) {közép = (jobb + bal) / 2; m_sort (számok, temp, bal, közép); m_sort (számok, temp, közepe + 1, jobb); egyesítés (számok, temp, bal, közép + 1, jobb); }",Jaký je základní případ rekurzivní implementace typu sloučení?,"Když je velikost pole, které má být tříděno, 1 (nebo 2)","if (right&gt; left) {mid = (right + left) / 2; m_sort (čísla, teplota, vlevo, uprostřed); m_sort (čísla, teplota, střední + 1, vpravo); sloučení (čísla, teplota, vlevo, uprostřed + 1, vpravo); }",Koji je osnovni slučaj za rekurzivnu implementaciju spajanja sortiranja?,Kada je veličina niza za sortiranje 1 (ili 2),"ako (desno&gt; lijevo) {sredina = (desno + lijevo) / 2; m_sort (brojevi, privremena, lijeva, srednja); m_sort (brojevi, privremena temperatura, sredina + 1, desno); spajanje (brojevi, privremena, lijeva, srednja + 1, desna); }"
239,239,1233,7.4,by refrenece,By reference.,How are linked lists passed as arguments to a function?,5.0,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,durch Auffrischung,Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,pinaagi sa refrenece,Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,av refrenece,Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,par refrenece,Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,door refrenece,Как связанные списки передаются в качестве аргументов функции?,По ссылке.,по возрождению,Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,di refrenece,¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,por refrenece,W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,przez refrenece,Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,bởi refrenece,リンクリストはどのように引数として関数に渡されますか？,参照による。,refreneceによって,链表如何作为参数传递给函数？,引用。,通过刷新,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,عن طريق refrenece,Як зв’язані списки передаються як аргументи функції?,За посиланням.,за допомогою refrenece,Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,por refrenece,چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,توسط تفرج,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,per refrenece,Како се повезане листе прослеђују као аргументи функцији?,По референци.,рефренеце,Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,oleh refrenece,Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,av refrenece,연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,refrenece에 의해,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,kunnostamalla,Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,refrenece által,Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,refrenece,Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,refrenece
240,240,760,4.5,Size of subsequent dimensions are required. Compiler must know how many elements to skip to move to the second element in the first dimension,"All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,4.5,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?","Die Größe der nachfolgenden Abmessungen ist erforderlich. Der Compiler muss wissen, wie viele Elemente übersprungen werden müssen, um zum zweiten Element in der ersten Dimension zu gelangen",Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.",Gikinahanglan ang gidak-on sa sunod nga mga sukat. Kinahanglan mahibal-an sa tagatapok kung pila ka mga elemento ang laktawan aron mobalhin sa ikaduhang elemento sa unang sukat,Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",Storleken på efterföljande dimensioner krävs. Kompilatorn måste veta hur många element att hoppa över för att flytta till det andra elementet i den första dimensionen,Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.",La taille des dimensions suivantes est requise. Le compilateur doit savoir combien d&#39;éléments ignorer pour passer au deuxième élément de la première dimension,Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.",Grootte van volgende afmetingen is vereist. De compiler moet weten hoeveel elementen hij moet overslaan om naar het tweede element in de eerste dimensie te gaan,Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","Размер последующих размеров обязателен. Компилятор должен знать, сколько элементов нужно пропустить, чтобы перейти ко второму элементу в первом измерении.",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.",Le dimensioni delle dimensioni successive sono richieste. Il compilatore deve sapere quanti elementi saltare per passare al secondo elemento nella prima dimensione,¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.",Se requiere el tamaño de las dimensiones posteriores. El compilador debe saber cuántos elementos se deben omitir para pasar al segundo elemento de la primera dimensión.,Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.","Wymagane są wymiary kolejnych wymiarów. Kompilator musi wiedzieć, ile elementów przeskoczyć, aby przejść do drugiego elementu w pierwszym wymiarze",Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.",Kích thước của các kích thước tiếp theo là bắt buộc. Trình biên dịch phải biết có bao nhiêu phần tử cần bỏ qua để chuyển sang phần tử thứ hai trong chiều đầu tiên,多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,後続の寸法のサイズが必要です。コンパイラは、最初の次元の2番目の要素に移動するためにスキップする要素の数を知っている必要があります,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,需要后续尺寸的尺寸。编译器必须知道要跳到第一维的第二个元素要跳过多少个元素,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,حجم الأبعاد اللاحقة مطلوب. يجب أن يعرف المترجم عدد العناصر التي يجب تخطيها للانتقال إلى العنصر الثاني في البعد الأول,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","Потрібні розміри наступних розмірів. Компілятор повинен знати, скільки елементів пропустити, щоб перейти до другого елементу в першому вимірі",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.",O tamanho das dimensões subsequentes é obrigatório. O compilador deve saber quantos elementos pular para mover para o segundo elemento na primeira dimensão,هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,اندازه ابعاد بعدی لازم است. کامپایلر باید بداند که از چند عنصر برای عبور به عنصر دوم در بعد اول ، پرهیز می کند,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.",Es requereix la mida de les dimensions posteriors. El compilador ha de saber quants elements s&#39;ha d&#39;ometre per passar al segon element de la primera dimensió,Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.",Потребне су величине следећих димензија. Преводитељ мора знати колико елемената треба прескочити да би се пребацио на други елемент у првој димензији,Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.",Ukuran dimensi selanjutnya diperlukan. Penyusun harus mengetahui berapa banyak elemen yang akan dilewati untuk pindah ke elemen kedua di dimensi pertama,Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.",Størrelse på påfølgende dimensjoner kreves. Kompilatoren må vite hvor mange elementer som skal hoppes over for å flytte til det andre elementet i den første dimensjonen,다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,후속 치수의 크기가 필요합니다. 컴파일러는 첫 번째 차원의 두 번째 요소로 이동하기 위해 건너 뛸 요소 수를 알아야합니다.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.","Seuraavien mittojen koko vaaditaan. Kääntäjän on tiedettävä, kuinka monta elementtiä ohitetaan siirtyäksesi toiseen elementtiin ensimmäisessä ulottuvuudessa","Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","A következő méretek nagysága szükséges. A fordítónak tudnia kell, hogy hány elemet kell kihagynia, hogy az első dimenzió második eleméhez lépjen",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.","Velikost dalších rozměrů je nutná. Kompilátor musí vědět, kolik prvků má přeskočit, aby se přesunul na druhý prvek v první dimenzi",Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.",Potrebne su veličine sljedećih dimenzija. Prevoditelj mora znati koliko elemenata treba preskočiti da bi se prebacio na drugi element u prvoj dimenziji
241,241,1536,9.2,Enqueue and Dequeue,enqueue and dequeue,What are the two main functions defined by a queue?,5.0,Enqueue und Dequeue,Was sind die beiden Hauptfunktionen einer Warteschlange?,Enqueue und Dequeue,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka pila?,enqueue ug dequeue,Enqueue ug Dequeue,Vilka är de två huvudfunktionerna som definieras av en kö?,enqueue och dequeue,Enqueue och Dequeue,Quelles sont les deux principales fonctions définies par une file d&#39;attente?,mettre en file d&#39;attente et retirer la file d&#39;attente,Mettre en file d&#39;attente et retirer la file d&#39;attente,Wat zijn de twee belangrijkste functies die door een wachtrij worden gedefinieerd?,in de wachtrij plaatsen en uit de wachtrij halen,Enqueue en Dequeue,Какие две основные функции определяет очередь?,поставить в очередь и исключить из очереди,Поставить в очередь и удалить,Quali sono le due funzioni principali definite da una coda?,accodare e rimuovere dalla coda,Enqueue e Dequeue,¿Cuáles son las dos funciones principales definidas por una cola?,poner y quitar de la cola,Enqueue y Dequeue,Jakie dwie główne funkcje definiuje kolejka?,enqueue i dequeue,Dodaj do kolejki i usuń z kolejki,Hai hàm chính được xác định bởi một hàng đợi là gì?,enqueue và dequeue,Enqueue và Dequeue,キューによって定義される2つの主な機能は何ですか？,エンキューおよびデキュー,エンキューおよびデキュー,队列定义的两个主要功能是什么？,入队和出队,入队和出队,ما هي الوظيفتان الرئيسيتان اللتان تحددهما قائمة الانتظار؟,قائمة و dequeue,Enqueue و Dequeue,Які дві основні функції визначаються чергою?,чергу та випуск,Enqueue і Dequeue,Quais são as duas funções principais definidas por uma fila?,enfileirar e retirar da fila,Enfileirar e retirar da fila,دو عملکرد اصلی که توسط یک صف تعریف شده اند کدامند؟,enqueue و dequeue,Enqueue و Dequeue,Quines són les dues funcions principals definides per una cua?,cola i cola,Enqueue i Dequeue,Које су две главне функције дефинисане редом?,енкуеуе и декуеуе,Енкуеуе и Декуеуе,Apa dua fungsi utama yang ditentukan oleh antrian?,enqueue dan dequeue,Enqueue dan Dequeue,Hva er de to hovedfunksjonene definert av en kø?,enqueue og dequeue,Enqueue og Dequeue,대기열에서 정의하는 두 가지 주요 기능은 무엇입니까?,대기열에 넣기 및 대기열에서 빼기,대기열에 넣기 및 대기열에서 빼기,Mitkä ovat kaksi jonon määrittelemää päätoimintoa?,enqueue ja dequeue,Enqueue ja Dequeue,"Mi a két fő funkció, amelyet egy sor határoz meg?",enqueue és dequeue,Enqueue és Dequeue,Jaké jsou dvě hlavní funkce definované ve frontě?,zařazení do fronty a zařazení do fronty,Zařadit do fronty a zařadit do fronty,Koje su dvije glavne funkcije definirane redom?,enqueue i dequeue,Enqueue i Dequeue
242,242,2310,12.6,It is a particular set of entities that are put in to a certain order by the enqueue and the dequeue functions.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,3.5,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Es handelt sich um eine bestimmte Gruppe von Entitäten, die von den Funktionen enqueue und dequeue in eine bestimmte Reihenfolge gebracht werden.",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,Kini usa ka piho nga hugpong sa mga entity nga gibutang sa usa ka piho nga han-ay sa mga enqueue ug function nga dequeue.,Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,Det är en viss uppsättning enheter som placeras i en viss ordning av enqueue och dequeue-funktionerna.,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.",Il s&#39;agit d&#39;un ensemble particulier d&#39;entités qui sont placées dans un certain ordre par les fonctions de mise en file d&#39;attente et de retrait de la file d&#39;attente.,Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,Het is een bepaalde set entiteiten die in een bepaalde volgorde worden geplaatst door de wachtrij- en de wachtrijfuncties.,Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","Это особый набор сущностей, которые помещаются в определенный порядок функциями enqueue и dequeue.",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,Si tratta di un particolare insieme di entità che vengono inserite in un certo ordine dalle funzioni di accodamento e rimozione dalla coda.,¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.",Es un conjunto particular de entidades que se colocan en un orden determinado por las funciones de poner en cola y sacar de cola.,Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","Jest to określony zestaw jednostek, które są ustawiane w określonej kolejności przez funkcje enqueue i dequeue.",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,Nó là một tập hợp các thực thể cụ thể được đặt vào một thứ tự nhất định bởi các hàm enqueue và dequeue.,キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,これは、エンキューおよびデキュー機能によって特定の順序で配置される特定のエンティティのセットです。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,它是入队和出队功能按特定顺序放置的一组特定实体。,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,إنها مجموعة معينة من الكيانات التي يتم وضعها في ترتيب معين بواسطة وظائف enqueue و dequeue.,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","Це певний набір сутностей, які вводяться в певний порядок функціями enqueue та dequeue.",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.",É um conjunto específico de entidades que são colocadas em uma determinada ordem pelas funções de enfileiramento e desenfileiramento.,صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,این مجموعه خاصی از موجودیت ها است که توسط توابع enqueue و dequeue به ترتیب خاصی در می آیند.,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,És un conjunt particular d’entitats que es posen en un ordre determinat per les funcions de cola i cola.,Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,То је одређени скуп ентитета који су стављени у одређени редослед функцијама енкуеуе и декуеуе.,Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,Ini adalah sekumpulan entitas tertentu yang dimasukkan ke dalam urutan tertentu oleh fungsi enqueue dan dequeue.,Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,Det er et bestemt sett av enheter som blir satt i en viss rekkefølge av enqueue og dequeue-funksjonene.,대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,대기열에 넣기 및 대기열에서 빼기 기능에 의해 특정 순서로 배치되는 특정 항목 집합입니다.,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","Se on tietty joukko entiteettejä, jotka enqueue- ja dequeue-toiminnot asettavat tiettyyn järjestykseen.",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","Ez egy bizonyos entitáshalmaz, amelyet az enqueue és a dequeue függvények bizonyos sorrendbe állítanak.",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","Jedná se o konkrétní sadu entit, které jsou vloženy do určitého pořadí funkcí enqueue a dequeue.",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,To je određeni skup entiteta koji se stavljaju u određeni redoslijed funkcijama enqueue i dequeue.
243,243,813,4.7,"A bi-dimensional/two-dimensional array is stored in a row-column matrix.  Where the first index indicates the row and the second indicates the column.  This means that when array elements are accessed in the order in which they are actually stored in memory, the right index changes faster than the left.",By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",4.5,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?","Ein zweidimensionales / zweidimensionales Array wird in einer Zeilenspaltenmatrix gespeichert. Wobei der erste Index die Zeile und der zweite die Spalte angibt. Dies bedeutet, dass sich beim Zugriff auf Array-Elemente in der Reihenfolge, in der sie tatsächlich im Speicher gespeichert sind, der rechte Index schneller ändert als der linke.","Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,"Ang us aka bi-dimensional / two-dimensional nga array gitipig sa usa ka row-column matrix. Kung diin ang una nga indeks nagpaila sa laray ug ang ikaduha nagpaila sa haligi. Kini nagpasabut nga kung ang mga elemento sa array na-access sa han-ay diin gitipig kini sa memorya, ang tuo nga indeks nagbag-o labi ka wala.","Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,En tvådimensionell / tvådimensionell matris lagras i en radkolonnmatris. Där det första indexet anger raden och det andra indikerar kolumnen. Detta innebär att när arrayelement nås i den ordning de faktiskt lagras i minnet ändras det högra indexet snabbare än det vänstra.,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,"Un tableau bidimensionnel / bidimensionnel est stocké dans une matrice ligne-colonne. Où le premier index indique la ligne et le second indique la colonne. Cela signifie que lorsque les éléments du tableau sont accédés dans l&#39;ordre dans lequel ils sont réellement stockés en mémoire, l&#39;index droit change plus rapidement que le gauche.","Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,"Een tweedimensionale / tweedimensionale array wordt opgeslagen in een rij-kolommatrix. Waar de eerste index de rij aangeeft en de tweede de kolom. Dit betekent dat wanneer array-elementen worden benaderd in de volgorde waarin ze feitelijk in het geheugen zijn opgeslagen, de rechterindex sneller verandert dan de linker.",Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,"Двумерный / двумерный массив хранится в матрице строка-столбец. Где первый индекс указывает строку, а второй указывает столбец. Это означает, что при доступе к элементам массива в том порядке, в котором они фактически хранятся в памяти, правый индекс изменяется быстрее, чем левый.","Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,"Una matrice bidimensionale / bidimensionale viene archiviata in una matrice riga-colonna. Dove il primo indice indica la riga e il secondo indica la colonna. Ciò significa che quando si accede agli elementi dell&#39;array nell&#39;ordine in cui sono effettivamente archiviati in memoria, l&#39;indice destro cambia più velocemente di quello sinistro.","¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,"Una matriz bidimensional / bidimensional se almacena en una matriz fila-columna. Donde el primer índice indica la fila y el segundo indica la columna. Esto significa que cuando se accede a los elementos de la matriz en el orden en que se almacenan en la memoria, el índice derecho cambia más rápido que el izquierdo.","W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,"Dwuwymiarowa / dwuwymiarowa tablica jest przechowywana w macierzy wiersz-kolumna. Gdzie pierwszy indeks wskazuje wiersz, a drugi wskazuje kolumnę. Oznacza to, że gdy uzyskuje się dostęp do elementów tablicy w kolejności, w jakiej są faktycznie przechowywane w pamięci, prawy indeks zmienia się szybciej niż lewy.","Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,"Mảng hai chiều / hai chiều được lưu trữ trong ma trận hàng-cột. Trong đó chỉ số đầu tiên cho biết hàng và chỉ số thứ hai chỉ ra cột. Điều này có nghĩa là khi các phần tử mảng được truy cập theo thứ tự mà chúng thực sự được lưu trữ trong bộ nhớ, chỉ mục bên phải thay đổi nhanh hơn bên trái.",2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,2次元/ 2次元配列は行-列行列に格納されます。ここで、最初のインデックスは行を示し、2番目のインデックスは列を示します。これは、配列要素が実際にメモリに格納されている順序でアクセスされると、右側のインデックスが左側よりも速く変化することを意味します。,二维数组如何按行或按列存储在内存中？,按行。,二维/二维数组存储在行列矩阵中。第一个索引指示行，第二个索引指示列。这意味着当按数组元素实际存储在内存中的顺序访问数组元素时，右索引的变化快于左索引。,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,يتم تخزين المصفوفة ثنائية الأبعاد / ثنائية الأبعاد في مصفوفة عمود الصف. حيث يشير الفهرس الأول إلى الصف ويشير الثاني إلى العمود. هذا يعني أنه عند الوصول إلى عناصر المصفوفة بالترتيب الذي تم تخزينها به فعليًا في الذاكرة ، يتغير الفهرس الأيمن بشكل أسرع من اليسار.,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,"Двовимірний / двовимірний масив зберігається в матриці рядків-стовпців. Де перший індекс вказує на рядок, а другий - на стовпець. Це означає, що при доступі до елементів масиву в тому порядку, в якому вони фактично зберігаються в пам&#39;яті, правий індекс змінюється швидше, ніж лівий.","Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,"Uma matriz bidimensional / bidimensional é armazenada em uma matriz linha-coluna. Onde o primeiro índice indica a linha e o segundo indica a coluna. Isso significa que quando os elementos do array são acessados na ordem em que estão realmente armazenados na memória, o índice direito muda mais rápido do que o esquerdo.",آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,یک آرایه دو بعدی / دو بعدی در یک ماتریس ستون ردیف ذخیره می شود. جایی که شاخص اول ردیف را نشان می دهد و دومی ستون را نشان می دهد. این بدان معناست که وقتی به عناصر آرایه به ترتیب ذخیره شده در حافظه دسترسی پیدا می شود ، شاخص سمت راست سریعتر از سمت چپ تغییر می کند.,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,"Una matriu bidimensional / bidimensional s’emmagatzema en una matriu de columnes de files. On el primer índex indica la fila i el segon indica la columna. Això vol dir que quan s’accedeix als elements de la matriu en l’ordre en què s’emmagatzemen realment a la memòria, l’índex dret canvia més ràpidament que l’esquerra.","Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,"Дводимензионални / дводимензионални низ се чува у матрици реда-колоне. Где први индекс означава ред, а други ступац. То значи да када се елементима низа приступа оним редоследом којим се заправо чувају у меморији, десни индекс се мења брже од левог.","Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,"Array dua dimensi / dua dimensi disimpan dalam matriks baris-kolom. Dimana indeks pertama menunjukkan baris dan yang kedua menunjukkan kolom. Ini berarti bahwa ketika elemen array diakses dalam urutan penyimpanan sebenarnya dalam memori, indeks kanan berubah lebih cepat daripada indeks kiri.","Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,"En todimensjonal / todimensjonal matrise er lagret i en radkolonnematrise. Hvor den første indeksen indikerer raden og den andre indikerer kolonnen. Dette betyr at når du får tilgang til matriseelementer i den rekkefølgen de faktisk er lagret i minnet, endres høyre indeks raskere enn venstre.","2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,"2 차원 / 2 차원 배열은 행-열 행렬에 저장됩니다. 첫 번째 인덱스는 행을 나타내고 두 번째 인덱스는 열을 나타냅니다. 즉, 실제로 메모리에 저장된 순서대로 배열 요소에 액세스하면 오른쪽 인덱스가 왼쪽보다 빠르게 변경됩니다.","Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,"Kaksidimensionaalinen / kaksiulotteinen taulukko on tallennettu rivipylväsmatriisiin. Jos ensimmäinen indeksi osoittaa riviä ja toinen osoittaa saraketta. Tämä tarkoittaa, että kun matriisielementtejä käytetään siinä järjestyksessä, jossa ne todella tallennetaan muistiin, oikea indeksi muuttuu nopeammin kuin vasen.","Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,"Kétdimenziós / kétdimenziós tömböt egy sor-oszlop mátrix tárol. Ahol az első index a sort, a második pedig az oszlopot jelöli. Ez azt jelenti, hogy amikor a tömb elemeket abban a sorrendben érjük el, ahogyan azokat ténylegesen tárolják a memóriában, a jobb index gyorsabban változik, mint a bal.","Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,"Bi-dimenzionální / dvourozměrné pole je uloženo v matici řádek-sloupec. Kde první index označuje řádek a druhý označuje sloupec. To znamená, že při přístupu k prvkům pole v pořadí, ve kterém jsou ve skutečnosti uloženy v paměti, se pravý index mění rychleji než levý.","Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,"Dvodimenzionalni / dvodimenzionalni niz pohranjen je u matrici stupca reda. Gdje prvi indeks označava red, a drugi stupac. To znači da kada se elementima niza pristupa onim redoslijedom kojim su zapravo pohranjeni u memoriji, desni indeks se mijenja brže od lijevog."
244,244,517,3.4,Gives called function the ability to access and modify the callerÃ¢â¬â¢s argument data directly.,It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,3.5,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?","Gibt der aufgerufenen Funktion die Möglichkeit, direkt auf die Argumentdaten des Aufrufers zuzugreifen und diese zu ändern.",Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,Nahatagan nga gitawag nga pagpaandar ang abilidad sa pag-access ug pagbag-o sa mga nagtawag nga ¢ âer¬â „¢ s data sa lantugi direkta.,Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,Ger kallad funktion möjligheten att komma åt och modifiera den som ringer upp argumentdata direkt.,Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,Donne à la fonction appelée la possibilité d&#39;accéder et de modifier directement les données d&#39;argument de l&#39;appelant.,Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,Geeft de opgeroepen functie de mogelijkheid om de argumentgegevens van de beller rechtstreeks te openen en te wijzigen.,"Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,Предоставляет вызываемой функции возможность напрямую обращаться к данным аргумента вызывающего абонента и изменять их.,Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,Fornisce alla funzione chiamata la possibilità di accedere e modificare direttamente i dati dell&#39;argomento del chiamante.,¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,Otorga a la función llamada la capacidad de acceder y modificar directamente los datos del argumento del llamante.,"Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,Daje wywoływanej funkcji możliwość bezpośredniego dostępu i modyfikowania danych argumentu dzwoniącego.,Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,Cung cấp cho hàm được gọi khả năng truy cập và sửa đổi trực tiếp dữ liệu đối số của người gọi.,参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,呼び出された関数に、呼び出し元の引数データに直接アクセスして変更する機能を提供します。,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,使被调用的函数能够直接访问和修改调用者的参数数据。,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,يعطي وظيفة تسمى القدرة على الوصول إلى بيانات وسيطة المتصل وتعديلها مباشرة.,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,Надає викликаній функції можливість безпосередньо отримувати доступ до даних аргументів абонента та змінювати їх.,Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,Dá à função chamada a capacidade de acessar e modificar os dados do argumento do chamador diretamente.,مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,به تابع فراخوانی توانایی دسترسی و تغییر مستقیم داده های استدلال کننده تماس گیرنده را می دهد.,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,Dóna a la funció anomenada la possibilitat d&#39;accedir i modificar directament les dades d&#39;arguments de la persona que truca.,Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,Даје позваној функцији могућност директног приступа и измене података аргумената позиваоца.,Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,Memberikan fungsi yang dipanggil kemampuan untuk mengakses dan memodifikasi data argumen pemanggil secara langsung.,Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,Gir kalt funksjon muligheten til å få tilgang til og modifisere innringers argumentdata direkte.,참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,호출 된 함수에 호출자의 인수 데이터에 직접 액세스하고 수정할 수있는 기능을 제공합니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,Antaa kutsutulle toiminnolle mahdollisuuden käyttää ja muokata soittajan argumenttitietoja suoraan.,Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,Lehetővé teszi az úgynevezett függvény számára a hívó fél argumentumadatainak közvetlen elérését és módosítását.,"Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,Dává volané funkci schopnost přímého přístupu a úpravy dat argumentů volajícího.,Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,Daje pozvanoj funkciji mogućnost direktnog pristupa i izmjene podataka argumenata pozivatelja.
245,245,2233,12.3,from lowest to longest. log(log n); 2^(log n); n!;  n^2;  n^3;,log(log n);  2^(log n) ; n^2 ; n^3; n!,Order the following functions by their running time: n^2; log(log n) ; 2^(log n) ; n! ; n^3.,3.625,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,Ordnen Sie die folgenden Funktionen nach ihrer Laufzeit: n ^ 2; log (log n); 2 ^ (log n); n! ;; n ^ 3.,vom niedrigsten zum längsten. log (log n); 2 ^ (log n); n!; n ^ 2; n ^ 3;,Pag-order sa mga mosunud nga pag-andar pinaagi sa ilang oras sa pagdagan: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,gikan sa labing ubos hangtod sa labing kadugay. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Beställ följande funktioner efter deras körtid: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,från lägsta till längsta. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Classez les fonctions suivantes en fonction de leur durée de fonctionnement: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,du plus bas au plus long. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Sorteer de volgende functies op basis van hun looptijd: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,van laagste naar langste. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Отсортируйте следующие функции по времени выполнения: n ^ 2; журнал (журнал n); 2 ^ (журнал п); п! ; п ^ 3.,журнал (журнал n); 2 ^ (журнал п); п ^ 2; п ^ 3; п!,от самого низкого до самого длинного. журнал (журнал n); 2 ^ (журнал п); п !; п ^ 2; п ^ 3;,Ordina le seguenti funzioni in base al loro tempo di esecuzione: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,dal più basso al più lungo. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Ordene las siguientes funciones por su tiempo de ejecución: n ^ 2; log (log n); 2 ^ (log n); ¡norte! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; ¡norte!,de menor a mayor. log (log n); 2 ^ (log n); ¡norte!; n ^ 2; n ^ 3;,Uporządkuj następujące funkcje według ich czasu działania: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,od najniższego do najdłuższego. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Thứ tự các hàm sau theo thời gian chạy của chúng: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,từ thấp nhất đến dài nhất. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,次の関数を実行時間順に並べます。n^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,最も低いものから最も長いものへ。 log（log n）; 2 ^（log n）; n！; n ^ 2; n ^ 3;,按其运行时间排序以下功能：n ^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,从最低到最长。 log（log n）; 2 ^（log n）; n !; n ^ 2; n ^ 3;,اطلب الوظائف التالية حسب وقت تشغيلها: n ^ 2 ؛ سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن! ؛ ن ^ 3.,سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن ^ 2 ؛ ن ^ 3 ؛ ن!,من الأقل إلى الأطول. سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن!؛ ن ^ 2 ؛ ن ^ 3 ؛,Впорядкуйте такі функції за часом їх роботи: n ^ 2; журнал (журнал n); 2 ^ (журнал n); п! ; n ^ 3.,журнал (журнал n); 2 ^ (журнал n); n ^ 2; n ^ 3; п!,від найнижчого до найдовшого. журнал (журнал n); 2 ^ (журнал n); п !; n ^ 2; n ^ 3;,Ordene as seguintes funções por seu tempo de execução: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,do mais baixo ao mais longo. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,توابع زیر را بر اساس مدت زمان اجرای آنها ترتیب دهید: n ^ 2؛ log (log n) ؛ 2 ^ (ورود به سیستم) ن! ؛ n ^ 3,log (log n) ؛ 2 ^ (ورود به سیستم) n ^ 2 ؛ n ^ 3 ؛ ن!,از پایین ترین تا طولانی ترین log (log n) ؛ 2 ^ (ورود به سیستم) n !؛ n ^ 2 ؛ n ^ 3 ؛,Ordeneu les funcions següents pel seu temps d&#39;execució: n ^ 2; log (registre n); 2 ^ (registre n); n! ; n ^ 3.,log (registre n); 2 ^ (registre n); n ^ 2; n ^ 3; n!,de més baix a més llarg. log (registre n); 2 ^ (registre n); n !; n ^ 2; n ^ 3;,Наредите следеће функције према њиховом радном времену: н ^ 2; лог (лог н); 2 ^ (лог н); н! ; н ^ 3.,лог (лог н); 2 ^ (лог н); н ^ 2; н ^ 3; н!,од најнижег до најдужег. лог (лог н); 2 ^ (лог н); н !; н ^ 2; н ^ 3;,Urutkan fungsi-fungsi berikut berdasarkan waktu berjalannya: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,dari yang terendah sampai yang terlama. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Bestill følgende funksjoner etter kjøretid: n ^ 2; logg (logg n); 2 ^ (log n); n! ; n ^ 3.,logg (logg n); 2 ^ (log n); n ^ 2; n ^ 3; n!,fra laveste til lengste. logg (logg n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,실행 시간별로 다음 함수를 정렬하십시오. n ^ 2; log (log n); 2 ^ (log n); 엔! ; n ^ 3.,log (로그 n); 2 ^ (log n); n ^ 2; n ^ 3; 엔!,가장 낮은 것에서 가장 긴 것까지. log (로그 n); 2 ^ (로그 n); 엔!; n ^ 2; n ^ 3;,Järjestä seuraavat toiminnot niiden käyttöajan mukaan: n ^ 2; loki (log n); 2 ^ (log n); n! ; n ^ 3.,loki (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,alimmasta pisimpään. loki (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Rendezze a következő függvényeket futási idejük szerint: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,a legalacsonyabbtól a leghosszabbig. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Seřaďte následující funkce podle doby běhu: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,od nejnižší po nejdelší. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;,Poredaj sljedeće funkcije prema njihovom vremenu izvođenja: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,od najnižeg do najdužeg. log (log n); 2 ^ (log n); n !; n ^ 2; n ^ 3;
246,246,348,2.5,you can overload constructors as you need,Unlimited number.,How many constructors can be created for a class?,5.0,Unbegrenzte Anzahl.,Wie viele Konstruktoren können für eine Klasse erstellt werden?,Sie können Konstruktoren nach Bedarf überladen,Pila ka mga magtutukod ang mahimo alang sa usa ka klase?,Unlimited numero.,mahimo nimo daghang karga ang mga magtutukod kung kinahanglan nimo,Hur många konstruktörer kan skapas för en klass?,Obegränsat antal.,du kan överbelasta konstruktörer efter behov,Combien de constructeurs peuvent être créés pour une classe?,Nombre illimité.,vous pouvez surcharger les constructeurs selon vos besoins,Hoeveel constructeurs kunnen er voor een klasse worden gemaakt?,Onbeperkt aantal.,je kunt constructeurs naar behoefte overbelasten,Сколько конструкторов можно создать для класса?,Неограниченное количество.,вы можете перегружать конструкторы по мере необходимости,Quanti costruttori possono essere creati per una classe?,Numero illimitato.,puoi sovraccaricare i costruttori di cui hai bisogno,¿Cuántos constructores se pueden crear para una clase?,Número ilimitado.,puede sobrecargar los constructores como necesite,Ile konstruktorów można utworzyć dla klasy?,Nieograniczona liczba.,w razie potrzeby możesz przeciążać konstruktory,Có bao nhiêu hàm tạo có thể được tạo cho một lớp?,Số lượng không giới hạn.,bạn có thể quá tải các hàm tạo khi bạn cần,クラスに対していくつのコンストラクターを作成できますか？,無制限の数。,必要に応じてコンストラクターをオーバーロードできます,一个类可以创建多少个构造函数？,无限数量。,您可以根据需要重载构造函数,كم عدد المنشئين الذي يمكن إنشاؤه للفصل؟,عدد غير محدود.,يمكنك زيادة التحميل على المنشئين حسب حاجتك,Скільки конструкторів можна створити для класу?,Необмежена кількість.,"Ви можете перевантажувати конструктори, як Вам потрібно",Quantos construtores podem ser criados para uma classe?,Número ilimitado.,você pode sobrecarregar construtores conforme necessário,چند سازنده می تواند برای یک کلاس ایجاد شود؟,تعداد نامحدود,شما می توانید سازنده ها را در صورت نیاز اضافه بار کنید,Quants constructors es poden crear per a una classe?,Nombre il·limitat.,podeu sobrecarregar els constructors segons necessiteu,Колико конструктора може да се креира за класу?,Неограничен број.,можете преоптеретити конструкторе по потреби,Berapa banyak konstruktor yang dapat dibuat untuk sebuah kelas?,Jumlah tidak terbatas.,Anda dapat membebani konstruktor sesuai kebutuhan,Hvor mange konstruktører kan opprettes for en klasse?,Ubegrenset antall.,du kan overbelaste konstruktører etter behov,클래스에 생성 할 수있는 생성자는 몇 개입니까?,무제한 수.,필요에 따라 생성자를 오버로드 할 수 있습니다.,Kuinka monta rakennuttajaa luokalle voidaan luoda?,Rajoittamaton määrä.,voit ylikuormittaa rakentajia tarpeen mukaan,Hány konstruktort lehet létrehozni egy osztályhoz?,Korlátlan számú.,szükség szerint túlterhelheti a kivitelezőket,Kolik konstruktorů lze pro třídu vytvořit?,Neomezený počet.,"můžete přetížit konstruktory, jak potřebujete",Koliko konstruktora može biti stvoreno za klasu?,Neograničen broj.,možete preopteretiti konstruktore po potrebi
247,247,736,4.4,"Static arrays are those with a declared size, that is known to the program, whereas non-static arrays leave the size undeclared and open so it can be assigned later. Usually used for input purposes.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","What is the difference between an array declared as static, and one that is not?",3.0,"Die als statisch deklarierten Arrays leben während der gesamten Laufzeit des Programms. Das heißt, sie werden nur einmal initialisiert, wenn die Funktion, die das Array deklariert, zum ersten Mal aufgerufen wird.",Was ist der Unterschied zwischen einem als statisch deklarierten und einem nicht statischen Array?,"Statische Arrays sind solche mit einer deklarierten Größe, die dem Programm bekannt ist, während nicht statische Arrays die Größe nicht deklariert und geöffnet lassen, damit sie später zugewiesen werden kann. Wird normalerweise für Eingabezwecke verwendet.","Unsa ang kalainan tali sa usa ka laray nga gideklara nga static, ug usa nga dili?","Ang mga array gideklara nga static live sa tibuuk nga kinabuhi sa programa; kana mao, gisugdan ra sila kausa, kung ang pagpaandar nga nagpahayag sa pag-ayo una kini gitawag.","Ang mga static arrays mao kadtong adunay gideklarar nga kadako, nga nahibal-an sa programa, samtang ang mga dili static nga arrays gibilin ang gidak-on nga wala’y pahayag ug ablihan aron mahimo kini itudlo sa ulahi. Kasagaran gigamit alang sa katuyoan sa pag-input.",Vad är skillnaden mellan en matris som deklareras som statisk och en som inte är det?,"Arraysna som deklareras som statiska lever hela programmets livstid; det vill säga de initialiseras bara en gång, när den funktion som deklarerar matrisen kallas den först.","Statiska matriser är de med en deklarerad storlek, som är känd för programmet, medan icke-statiska matriser lämnar storleken odeklarerad och öppen så att den kan tilldelas senare. Används vanligtvis för inmatningsändamål.",Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,"Les tableaux déclarés statiques vivent tout au long de la vie du programme; c&#39;est-à-dire qu&#39;ils ne sont initialisés qu&#39;une seule fois, lorsque la fonction qui déclare le tableau est appelée pour la première fois.","Les tableaux statiques sont ceux dont la taille est déclarée, qui est connue du programme, tandis que les tableaux non statiques laissent la taille non déclarée et sont ouverts pour pouvoir être assignés ultérieurement. Habituellement utilisé à des fins de saisie.",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,"De arrays die als statisch zijn gedeclareerd, leven gedurende de levensduur van het programma; dat wil zeggen, ze worden slechts één keer geïnitialiseerd, wanneer de functie die de array declareert voor het eerst wordt aangeroepen.","Statische arrays zijn arrays met een opgegeven grootte, dat bekend is bij het programma, terwijl niet-statische arrays de grootte ongedeclareerd en open laten, zodat deze later kan worden toegewezen. Meestal gebruikt voor invoerdoeleinden.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?","Массивы, объявленные как статические, живут в течение всего времени работы программы; то есть они инициализируются только один раз при первом вызове функции, объявляющей массив.","Статические массивы - это массивы с объявленным размером, который известен программе, тогда как нестатические массивы оставляют размер необъявленным и открытыми, чтобы его можно было назначить позже. Обычно используется для ввода.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,"Gli array dichiarati come statici sono attivi per tutta la durata del programma; cioè, vengono inizializzati solo una volta, quando la funzione che dichiara l&#39;array viene chiamata per la prima volta.","Gli array statici sono quelli con una dimensione dichiarata, che è nota al programma, mentre gli array non statici lasciano la dimensione non dichiarata e aperta in modo che possa essere assegnata in seguito. Solitamente utilizzato per scopi di input.",¿Cuál es la diferencia entre una matriz declarada como estática y una que no lo es?,"Las matrices declaradas como estáticas viven durante toda la vida del programa; es decir, se inicializan solo una vez, cuando se llama por primera vez a la función que declara la matriz.","Las matrices estáticas son aquellas con un tamaño declarado, que es conocido por el programa, mientras que las matrices no estáticas dejan el tamaño sin declarar y abierto para que pueda asignarse más tarde. Usualmente se usa para propósitos de entrada.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice zadeklarowane jako statyczne na żywo przez cały czas trwania programu; to znaczy, są inicjowane tylko raz, kiedy funkcja deklarująca tablicę jest wywoływana jako pierwsza.","Tablice statyczne to takie, które mają zadeklarowany rozmiar, który jest znany programowi, podczas gdy tablice niestatyczne pozostawiają rozmiar niezadeklarowany i otwarty, aby można go było przypisać później. Zwykle używany do celów wejściowych.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng được khai báo là sống tĩnh trong suốt vòng đời của chương trình; nghĩa là chúng chỉ được khởi tạo một lần khi hàm khai báo mảng mà nó được gọi lần đầu tiên.,"Mảng tĩnh là những mảng có kích thước được khai báo mà chương trình đã biết, trong khi các mảng không tĩnh để kích thước không được khai báo và mở để nó có thể được gán sau này. Thường được sử dụng cho mục đích đầu vào.",静的として宣言された配列とそうでない配列の違いは何ですか？,静的として宣言された配列は、プログラムの存続期間を通じて有効です。つまり、配列を宣言する関数が最初に呼び出されたときに、一度だけ初期化されます。,静的配列は、プログラムに認識されている宣言されたサイズの配列ですが、非静的配列は、サイズを宣言せずに開いたままにして、後で割り当てることができるようにします。通常、入力目的で使用されます。,声明为静态的数组与未声明为静态的数组有什么区别？,声明为静态的数组在程序的整个生命周期内都有效；也就是说，当第一次调用声明数组的函数时，它们仅初始化一次。,静态数组是程序已知的具有声明大小的数组，而非静态数组则保留未声明和打开的大小，以便以后可以分配。通常用于输入目的。,ما الفرق بين المصفوفة المعلنة على أنها ثابتة والمصفوفة التي لا يتم الإعلان عنها؟,تعيش المصفوفات المعلنة على أنها ثابتة طوال عمر البرنامج ؛ أي ، يتم تهيئتها مرة واحدة فقط ، عندما يتم استدعاء الوظيفة التي تعلن عن المصفوفة لأول مرة.,المصفوفات الثابتة هي تلك ذات الحجم المعلن ، والمعروف للبرنامج ، في حين أن المصفوفات غير الثابتة تترك الحجم غير معلن ومفتوح بحيث يمكن تخصيصه لاحقًا. يستخدم عادة لأغراض الإدخال.,"У чому різниця між масивом, оголошеним як статичний, і масивом, який не є?","Масиви, оголошені як статичні живі протягом усього терміну служби програми; тобто вони ініціалізуються лише один раз, коли функція, яка оголошує масив, вона викликається вперше.","Статичні масиви - це такі із заявленим розміром, що відомо програмі, тоді як нестатичні масиви залишають розмір незадекларованим і відкритим, щоб його можна було призначити пізніше. Зазвичай використовується для цілей введення.",Qual é a diferença entre uma matriz declarada como estática e outra que não é?,"Os arrays declarados como estáticos vivem durante toda a vida do programa; ou seja, eles são inicializados apenas uma vez, quando a função que declara o array é chamada pela primeira vez.","Arrays estáticos são aqueles com um tamanho declarado, que é conhecido pelo programa, enquanto arrays não estáticos deixam o tamanho não declarado e aberto para que possa ser atribuído posteriormente. Normalmente usado para fins de entrada.",چه تفاوتی بین آرایه ای که بصورت استاتیک اعلام می شود و دیگری نیست؟,آرایه هایی که به عنوان ایستا در طول زندگی برنامه اعلام می شوند. یعنی فقط یک بار مقداردهی اولیه می شود ، وقتی تابعی که آرایه را برای اولین بار فراخوانی می کند.,آرایه های ساکن آنهایی هستند که دارای اندازه اعلام شده هستند ، که برای برنامه شناخته شده است ، در حالی که آرایه های غیر استاتیک اندازه را اعلام نکرده و باز می گذارند تا بعداً بتوان آن را تعیین کرد. معمولاً برای اهداف ورودی استفاده می شود.,Quina diferència hi ha entre una matriu declarada com estàtica i una que no ho és?,"Les matrius declarades estàtiques en directe durant tota la vida del programa; és a dir, només s’inicialitzen una vegada, quan s’anomena per primera vegada la funció que declara la matriu.","Les matrius estàtiques són aquelles amb una mida declarada, que el programa coneix, mentre que les matrius no estàtiques deixen la mida no declarada i oberta per poder assignar-la més endavant. Normalment s’utilitza amb finalitats d’entrada.",Која је разлика између низа који је проглашен статичким и оног који није?,"Низови декларисани као статични уживо током целог животног века програма; то јест, иницијализују се само једном, када се функција која декларише низ прво позове.","Статички низови су они са декларисаном величином, што је познато програму, док нестатични низови остављају величину непријављеном и отвореном, тако да се може доделити касније. Обично се користи у сврху уноса.","Apa perbedaan antara array yang dideklarasikan sebagai statis, dan yang tidak?","Array dideklarasikan sebagai live statis selama program berjalan; artinya, mereka diinisialisasi hanya sekali, ketika fungsi yang mendeklarasikan array yang dipanggil pertama kali.","Array statis adalah array dengan ukuran yang dideklarasikan, yang dikenal oleh program, sedangkan array non-statis membiarkan ukuran tidak dideklarasikan dan terbuka sehingga dapat ditetapkan nanti. Biasanya digunakan untuk keperluan input.","Hva er forskjellen mellom en matrise erklært som statisk, og en som ikke er det?","Arrangementene erklært som statisk lever gjennom hele programmets levetid; det vil si at de initialiseres bare en gang, når funksjonen som erklærer matrisen den først ble kalt.","Statiske matriser er de med en deklarert størrelse, som er kjent for programmet, mens ikke-statiske matriser lar størrelsen være svart og åpen slik at den kan tildeles senere. Vanligvis brukt til innspill.",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,"정적으로 선언 된 배열은 프로그램의 수명 내내 살아 있습니다. 즉, 배열을 선언하는 함수가 처음 호출 될 때 한 번만 초기화됩니다.","정적 배열은 프로그램에 알려진 크기로 선언 된 배열이며, 비 정적 배열은 크기를 선언되지 않은 상태로두고 나중에 할당 할 수 있도록 열린 상태로 둡니다. 일반적으로 입력 목적으로 사용됩니다.","Mitä eroa on staattiseksi ilmoitetun taulukon ja sellaisen välillä, joka ei ole staattinen?","Staattisiksi ilmoitetut taulukot elävät ohjelman koko elinkaaren ajan; eli ne alustetaan vain kerran, kun ensin kutsutaan funktio, joka ilmoittaa matriisin.","Staattiset taulukot ovat ilmoitettua kokoa, joka on ohjelman tiedossa, kun taas ei-staattiset taulukot jättävät koon ilmoittamattomaksi ja avoimeksi, jotta se voidaan määrittää myöhemmin. Yleensä käytetään syöttötarkoituksiin.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikusnak nyilvánított tömbök a program teljes élettartama alatt élnek; vagyis csak egyszer inicializálódnak, amikor először meghívják azt a függvényt, amely deklarálja a tömböt.","A statikus tömbök deklarált méretűek, amelyek a program számára ismertek, míg a nem statikus tömbök nem deklaráltan és nyitva hagyják a méretet, így később hozzárendelhetők. Általában beviteli célokra használják.","Jaký je rozdíl mezi polem deklarovaným jako statické a tím, které není?","Pole deklarovaná jako statická živá po celou dobu životnosti programu; to znamená, že jsou inicializovány pouze jednou, když je funkce, která deklaruje pole, které je nejprve voláno.","Statické pole jsou pole s deklarovanou velikostí, která je programu známa, zatímco nestatické pole ponechává velikost nedeklarovanou a otevřenou, takže ji lze později přiřadit. Obvykle se používá pro vstupní účely.",Koja je razlika između niza koji je deklariran kao statičan i onog koji nije?,"Nizovi deklarirani kao statični uživo tijekom cijelog životnog vijeka programa; to jest, inicijaliziraju se samo jednom, kada se funkcija koja deklarira niz prvi put pozove.","Statički nizovi su oni s deklariranom veličinom, što je poznato programu, dok nestatični nizovi ostavljaju veličinu neprijavljenom i otvorenom, tako da se može kasnije dodijeliti. Obično se koristi u svrhu unosa."
248,248,1773,10.4,"A binary tree is a tree in which all nodes have a maximum of two degrees, or can only have two children each.",A tree for which the maximum number of children per node is two.,What is a binary tree?,5.0,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Ein Binärbaum ist ein Baum, in dem alle Knoten maximal zwei Grad haben oder jeweils nur zwei Kinder haben können.",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,"Ang usa ka binary nga kahoy usa ka kahoy diin ang tanan nga mga node adunay labing kadaghan nga duha ka degree, o mahimo’g adunay duha ka mga bata matag usa.",Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,Ett binärt träd är ett träd där alla noder har högst två grader eller bara kan ha två barn vardera.,Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,"Un arbre binaire est un arbre dans lequel tous les nœuds ont un maximum de deux degrés, ou ne peuvent avoir que deux enfants chacun.",Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,"Een binaire boom is een boom waarin alle knooppunten maximaal twee graden hebben, of elk slechts twee kinderen kunnen hebben.",Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","Бинарное дерево - это дерево, в котором все узлы имеют максимум две степени или могут иметь только двух дочерних элементов.",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,Un albero binario è un albero in cui tutti i nodi hanno un massimo di due gradi o possono avere solo due figli ciascuno.,¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,"Un árbol binario es un árbol en el que todos los nodos tienen un máximo de dos grados, o solo pueden tener dos hijos cada uno.",Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","Drzewo binarne to drzewo, w którym wszystkie węzły mają maksymalnie dwa stopnie lub mogą mieć tylko dwoje dzieci.",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,Cây nhị phân là cây trong đó tất cả các nút có tối đa hai độ hoặc chỉ có thể có hai nút con mỗi độ.,二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,二分木は、すべてのノードが最大2度であるか、それぞれ2つの子しか持てないツリーです。,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,二叉树是其中所有节点最大为2度或每个节点只能有两个子级的树。,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,الشجرة الثنائية هي شجرة تحتوي كل العقد فيها على درجتين كحد أقصى ، أو يمكن أن يكون لكل منها طفلان فقط.,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","Бінарне дерево - це дерево, в якому всі вузли мають максимум два градуси, або можуть мати лише по два дочірні кожному.",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,Uma árvore binária é uma árvore em que todos os nós têm no máximo dois graus ou podem ter apenas dois filhos cada.,درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,درخت باینری به درختی گفته می شود که تمام گره ها حداکثر دو درجه داشته باشند یا هر کدام فقط دو فرزند داشته باشند.,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,Un arbre binari és un arbre en el qual tots els nodes tenen un màxim de dos graus o només poden tenir dos fills cadascun.,Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,Бинарно стабло је дрво у којем сви чворови имају највише два степена или могу имати само по двоје деце.,Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,"Pohon biner adalah pohon di mana semua simpul memiliki maksimum dua derajat, atau hanya dapat memiliki dua anak masing-masing.",Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,"Et binært tre er et tre der alle noder har maksimalt to grader, eller bare kan ha to barn hver.",이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,이진 트리는 모든 노드가 최대 2도를 갖거나 각각 두 개의 자식 만 가질 수있는 트리입니다.,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","Binaarinen puu on puu, jossa kaikilla solmuilla on korkeintaan kaksi astetta tai joilla voi olla vain kaksi lasta.",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","A bináris fa az a fa, amelyben az összes csomópont legfeljebb két fokos, vagy csak két gyermekük lehet.",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","Binární strom je strom, ve kterém mají všechny uzly maximálně dva stupně nebo každý může mít pouze dvě děti.",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,Binarno stablo je stablo u kojem svi čvorovi imaju najviše dva stupnja ili mogu imati samo po dvoje djece.
249,249,559,3.5,"it looks at the number, types, and order of arguments in the function call","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,5.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,"Es werden die Anzahl, Typen und Reihenfolge der Argumente im Funktionsaufruf angezeigt",Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.","gitan-aw niini ang numero, mga lahi, ug han-ay sa mga lantugi sa tawag sa pagpaandar",Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,"det tittar på antal, typer och ordning på argument i funktionsanropet",Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.","il examine le nombre, les types et l&#39;ordre des arguments dans l&#39;appel de fonction",Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.","het kijkt naar het aantal, de typen en de volgorde van argumenten in de functieaanroep",Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.","он смотрит на количество, типы и порядок аргументов в вызове функции",Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.","esamina il numero, i tipi e l&#39;ordine degli argomenti nella chiamata di funzione",¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.","mira el número, los tipos y el orden de los argumentos en la llamada a la función",W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.","sprawdza liczbę, typy i kolejność argumentów w wywołaniu funkcji",Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.","nó xem xét số lượng, kiểu và thứ tự của các đối số trong lệnh gọi hàm",オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,関数呼び出しの引数の数、タイプ、および順序を調べます,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,它查看函数调用中参数的数量，类型和顺序,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,يبحث في عدد وأنواع وترتيب الوسائط في استدعاء الوظيفة,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.","він розглядає кількість, типи та порядок аргументів у виклику функції",Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.","ele olha para o número, tipos e ordem dos argumentos na chamada de função",توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,تعداد ، انواع و ترتیب آرگومان ها را در فراخوانی تابع بررسی می کند,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.","es fixa en el nombre, els tipus i l&#39;ordre dels arguments de la trucada a la funció",Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.","гледа број, врсте и редослед аргумената у позиву функције",Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.","itu melihat jumlah, tipe, dan urutan argumen dalam pemanggilan fungsi",Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.","det ser på antall, typer og rekkefølgen på argumenter i funksjonsanropet",오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,"함수 호출에서 인수의 수, 유형 및 순서를 확인합니다.",Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.","se tarkastelee funktion kutsun määrää, tyyppejä ja argumenttien järjestystä",Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.","megnézi a függvényhívás argumentumainak számát, típusait és sorrendjét",Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.","zkoumá počet, typy a pořadí argumentů ve volání funkce",Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.","gleda broj, vrste i redoslijed argumenata u pozivu funkcije"
250,250,757,4.5,just the first one at least.,"All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,2.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?",zumindest der erste.,Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.",ang una lang gyud.,Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",bara den första åtminstone.,Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.",juste le premier au moins.,Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.",tenminste de eerste.,Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","по крайней мере, первый.",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.",almeno il primo.,¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.",solo el primero al menos.,Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.",przynajmniej pierwszy.,Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.",ít nhất chỉ là cái đầu tiên.,多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,少なくとも最初のものだけです。,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,至少是第一个。,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,فقط أول واحد على الأقل.,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","лише перший, принаймні.",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.","apenas o primeiro, pelo menos.",هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,حداقل اولین,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.",només el primer com a mínim.,Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.",само први.,Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.",paling tidak hanya yang pertama.,Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.",bare den første i det minste.,다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,적어도 첫 번째 것입니다.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.",ainakin ensimmäinen ainakin.,"Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.",legalább az első legalább.,Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.",alespoň první.,Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.",samo prvi.
251,251,1785,10.4,a tree where every parent has only two children,A tree for which the maximum number of children per node is two.,What is a binary tree?,4.5,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Ein Baum, in dem jeder Elternteil nur zwei Kinder hat",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,usa ka punoan diin ang matag ginikanan adunay duha ka mga anak,Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,ett träd där varje förälder bara har två barn,Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,un arbre où chaque parent n&#39;a que deux enfants,Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,een boom waar elke ouder maar twee kinderen heeft,Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","дерево, в котором у каждого родителя есть только двое детей",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,un albero dove ogni genitore ha solo due figli,¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,un árbol donde cada padre tiene solo dos hijos,Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","drzewo, na którym każdy rodzic ma tylko dwoje dzieci",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,một cái cây mà cha mẹ chỉ có hai con,二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,すべての親に2人の子供しかないツリー,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,一棵树，每个父母只有两个孩子,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,شجرة حيث لكل والد طفلين فقط,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","дерево, де кожен батько має лише двох дітей",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,uma árvore onde cada pai tem apenas dois filhos,درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,درختی که هر پدر و مادر فقط دو فرزند دارد,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,un arbre on tots els pares només tenen dos fills,Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,дрво где сваки родитељ има само двоје деце,Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,pohon di mana setiap orang tua hanya memiliki dua anak,Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,et tre der hver forelder bare har to barn,이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,모든 부모에게 두 자녀 만있는 나무,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","puu, jossa jokaisella vanhemmalla on vain kaksi lasta",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","egy fa, ahol minden szülőnek csak két gyermeke van",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","strom, kde má každý rodič jen dvě děti",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,drvo u kojem svaki roditelj ima samo dvoje djece
252,252,1246,7.5,"Circular linked lists are most useful for describing naturally circular structures, and have the advantage of regular structure and being able to traverse the list starting at any point.",The last element in a circular linked list points to the head of the list.,What is the difference between a circular linked list and a basic linked list?,2.5,Das letzte Element in einer kreisförmig verknüpften Liste zeigt auf den Kopf der Liste.,Was ist der Unterschied zwischen einer zirkulären verknüpften Liste und einer einfachen verknüpften Liste?,"Zirkular verknüpfte Listen sind am nützlichsten, um natürlich kreisförmige Strukturen zu beschreiben. Sie haben den Vorteil einer regulären Struktur und können die Liste ab einem beliebigen Punkt durchlaufen.",Unsa ang kalainan sa us aka lista nga nalakip sa lingin ug us aka sukaranan nga nalakip nga lista?,Ang ulahi nga elemento sa usa ka lista nga nalakip sa lingin nagtudlo sa ulo sa lista.,"Ang mga lista nga adunay kalabutan sa sirkular labing kapuslan alang sa paglaraw sa natural nga lingin nga mga istruktura, ug adunay bentaha sa naandan nga istraktura ug makalatas sa lista sugod sa bisan unsang punto.",Vad är skillnaden mellan en cirkulär länkad lista och en grundlänkad lista?,Det sista elementet i en cirkulär länkad lista pekar på listans huvud.,Cirkulärt länkade listor är mest användbara för att beskriva naturligt cirkulära strukturer och har fördelen med regelbunden struktur och att de kan korsa listan med början när som helst.,Quelle est la différence entre une liste chaînée circulaire et une liste chaînée de base?,Le dernier élément d&#39;une liste liée circulaire pointe vers la tête de la liste.,"Les listes chaînées circulaires sont les plus utiles pour décrire des structures naturellement circulaires, et ont l&#39;avantage d&#39;une structure régulière et de pouvoir parcourir la liste à partir de n&#39;importe quel point.",Wat is het verschil tussen een circulaire gekoppelde lijst en een basis gekoppelde lijst?,Het laatste element in een circulaire gekoppelde lijst wijst naar de kop van de lijst.,Circulair gekoppelde lijsten zijn het nuttigst voor het beschrijven van natuurlijk cirkelvormige structuren en hebben het voordeel van een regelmatige structuur en de mogelijkheid om de lijst vanaf elk punt te doorlopen.,В чем разница между круговым связанным списком и основным связанным списком?,Последний элемент в круговом связном списке указывает на заголовок списка.,"Списки с круговой связью наиболее полезны для описания естественно круговых структур и обладают преимуществом регулярной структуры и возможности перемещаться по списку, начиная с любой точки.",Qual è la differenza tra un elenco collegato circolare e un elenco collegato di base?,L&#39;ultimo elemento in un elenco collegato circolare punta all&#39;inizio dell&#39;elenco.,Gli elenchi concatenati circolari sono più utili per descrivere strutture naturalmente circolari e hanno il vantaggio di una struttura regolare e di essere in grado di attraversare l&#39;elenco a partire da qualsiasi punto.,¿Cuál es la diferencia entre una lista enlazada circular y una lista enlazada básica?,El último elemento de una lista enlazada circular apunta al encabezado de la lista.,Las listas enlazadas circulares son más útiles para describir estructuras naturalmente circulares y tienen la ventaja de tener una estructura regular y poder recorrer la lista comenzando en cualquier punto.,Jaka jest różnica między listą połączoną cyklicznie a listą podstawową?,Ostatni element na okrągłej liście połączonej wskazuje na początek listy.,"Listy z linkami kołowymi są najbardziej przydatne do opisywania naturalnie okrągłych struktur i mają tę zaletę, że mają regularną strukturę i możliwość przechodzenia przez listę zaczynając w dowolnym miejscu.",Sự khác biệt giữa danh sách liên kết vòng tròn và danh sách liên kết cơ bản là gì?,Phần tử cuối cùng trong danh sách được liên kết hình tròn trỏ đến phần đầu của danh sách.,Danh sách liên kết hình tròn hữu ích nhất để mô tả cấu trúc hình tròn tự nhiên và có lợi thế là cấu trúc thông thường và có thể duyệt qua danh sách bắt đầu từ bất kỳ điểm nào.,循環リンクリストと基本リンクリストの違いは何ですか？,循環リンクリストの最後の要素は、リストの先頭を指します。,循環リンクリストは、自然に円形の構造を記述するのに最も役立ち、規則的な構造であり、任意のポイントからリストをトラバースできるという利点があります。,循环链表和基本链表有什么区别？,循环链接列表中的最后一个元素指向列表的开头。,循环链接列表对于描述自然的圆形结构最有用，并且具有规则结构的优势，并且能够从任何点开始遍历列表。,ما الفرق بين قائمة مرتبطة دائرية وقائمة مرتبطة أساسية؟,يشير العنصر الأخير في قائمة مرتبطة دائرية إلى رأس القائمة.,تعد القوائم المرتبطة الدائرية مفيدة للغاية لوصف الهياكل الدائرية بشكل طبيعي ، وتتمتع بميزة البنية العادية والقدرة على اجتياز القائمة بدءًا من أي نقطة.,Яка різниця між круговим пов&#39;язаним списком та основним пов&#39;язаним списком?,Останній елемент у круговому зв’язаному списку вказує на головку списку.,"Кругові зв’язані списки є найбільш корисними для опису природно кругових структур, і вони мають перевагу регулярної структури та можливості обходу списку, починаючи з будь-якої точки.",Qual é a diferença entre uma lista ligada circular e uma lista ligada básica?,O último elemento em uma lista ligada circular aponta para o topo da lista.,Listas circulares vinculadas são mais úteis para descrever estruturas naturalmente circulares e têm a vantagem de uma estrutura regular e de poderem percorrer a lista começando em qualquer ponto.,تفاوت بین یک لیست پیوندی دایره ای و یک لیست پیوندی اساسی چیست؟,آخرین عنصر در یک لیست دایره ای مرتبط به سر لیست نشان می دهد.,لیست های پیوندی دایره ای برای توصیف ساختارهای دایره ای طبیعی بسیار مفید هستند و از مزایای ساختار منظم برخوردار هستند و می توانند از هر نقطه لیست را پیمایش کنند.,Quina diferència hi ha entre una llista enllaçada circular i una llista enllaçada bàsica?,L&#39;últim element d&#39;una llista enllaçada circular apunta al cap de llista.,Les llistes enllaçades circulars són més útils per descriure estructures circulars de forma natural i tenen l&#39;avantatge d&#39;estructurar regularment i de poder recórrer la llista a partir de qualsevol punt.,Која је разлика између кружно повезане листе и основне повезане листе?,Последњи елемент у кружно повезаној листи показује на главу листе.,Кружно повезане листе су најкорисније за описивање природно кружних структура и имају предност правилне структуре и могућности преласка листе почевши од било које тачке.,Apa perbedaan antara daftar tertaut melingkar dan daftar tertaut dasar?,Elemen terakhir dalam daftar tertaut melingkar mengarah ke kepala daftar.,"Daftar tertaut melingkar paling berguna untuk mendeskripsikan struktur melingkar alami, dan memiliki keuntungan dari struktur biasa serta dapat melintasi daftar mulai dari titik mana pun.",Hva er forskjellen mellom en sirkulær koblet liste og en grunnleggende koblet liste?,Det siste elementet i en sirkulær koblet liste peker mot hodet på listen.,"Sirkulærkoblede lister er mest nyttige for å beskrive naturlig sirkulære strukturer, og har fordelen av vanlig struktur og at de kan krysse listen fra et hvilket som helst punkt.",순환 연결 목록과 기본 연결 목록의 차이점은 무엇입니까?,순환 연결 목록의 마지막 요소는 목록의 헤드를 가리 킵니다.,순환 연결 목록은 자연스러운 순환 구조를 설명하는 데 가장 유용하며 규칙적인 구조의 장점이 있으며 어느 지점에서든 목록을 순회 할 수 있습니다.,Mitä eroa on pyöreällä linkitetyllä luettelolla linkitetyllä perusluettelolla?,Pyöreän linkitetyn luettelon viimeinen elementti osoittaa luettelon päähän.,"Pyöreät linkitetyt luettelot ovat hyödyllisimpiä luonnostaan pyöreiden rakenteiden kuvaamiseen, ja niiden etuna on säännöllinen rakenne ja mahdollisuus ylittää luettelo missä tahansa vaiheessa.",Mi a különbség a kör alakú linkelt lista és az alap linkelt lista között?,A kör alakú összekapcsolt lista utolsó eleme a lista fejére mutat.,"A körkörös összekapcsolt listák a természetes körkörös struktúrák leírására a leghasznosabbak, és az az előnyük, hogy a szabályos felépítésűek, és bármikor képesek bejárni a listát.",Jaký je rozdíl mezi cyklicky propojeným seznamem a základním propojeným seznamem?,Poslední prvek v kruhovém propojeném seznamu ukazuje na záhlaví seznamu.,Seznamy s kruhovým propojením jsou nejužitečnější pro popis přirozeně kruhových struktur a mají výhodu pravidelné struktury a možnosti procházet seznamem počínaje v jakémkoli bodě.,Koja je razlika između kružno povezane liste i osnovne povezane liste?,Posljednji element na kružno povezanoj listi usmjerava na glavu popisa.,Kružno povezane liste su najkorisnije za opisivanje prirodno kružnih struktura i imaju prednost pravilne strukture i mogućnosti prelaska popisa počevši od bilo koje tačke.
253,253,1685,9.7,a queue.  It wouldn't be unfair for the first job to finish last.,queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?","eine Schlange. Es wäre nicht unfair, wenn der erste Job als letzter beendet würde.","Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,usa ka pila Dili makiangayon alang sa una nga trabaho nga ninghuman sa ulahi.,"Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,en kö. Det skulle inte vara orättvist för det första jobbet att avsluta sist.,"Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,une queue. Il ne serait pas injuste que le premier travail se termine en dernier.,"Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,een rij. Het zou niet oneerlijk zijn als de eerste klus als laatste afloopt.,"Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,"очередь. Было бы неплохо, если бы первая работа закончилась последней.","Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,una coda. Non sarebbe ingiusto che il primo lavoro finisse per ultimo.,"¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,una fila. No sería injusto que el primer trabajo termine en último lugar.,"Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,"kolejka. Nie byłoby niesprawiedliwe, gdyby pierwsza praca była ostatnia.","Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,một hàng đợi. Sẽ không công bằng nếu công việc đầu tiên kết thúc cuối cùng.,プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,キュー。最初の仕事が最後に終わるのは不公平ではないでしょう。,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,一个队列。第一份工作最后完成并非不公平。,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,طابور. لن يكون من الظلم أن تنتهي المهمة الأولى في النهاية.,"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,"черга. Не буде несправедливо, якщо перша робота закінчиться останньою.","Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,uma fila. Não seria injusto que o primeiro trabalho terminasse por último.,چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,یک صف بی انصافی نیست که اولین کار آخرین کار را بکند.,"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,una cua. No seria injust que acabés el primer treball.,"Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,ред је. Не би било неправедно да први посао заврши последњи.,"Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,antrian. Tidak adil jika pekerjaan pertama selesai terakhir.,"Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,en kø. Det ville ikke være urettferdig at den første jobben ble ferdig sist.,"프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,대기열. 첫 번째 직업이 마지막으로 끝나는 것은 불공평하지 않을 것입니다.,"Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,"jono. Ei olisi epäoikeudenmukaista, jos ensimmäinen työ valmistuu viimeiseksi.","Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,"egy sor. Nem lenne igazságtalan, ha az első munka utolsó helyen végezne.","Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,"fronta. Nebylo by nefér, kdyby první práce skončila poslední.","Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,red. Ne bi bilo nepravedno da prvi posao završi zadnji.
254,254,2439,12.1,2n-1,The height of the tree.,How many steps does it take to search a node in a binary search tree?,2.5,Die Höhe des Baumes.,"Wie viele Schritte sind erforderlich, um einen Knoten in einem binären Suchbaum zu durchsuchen?",2n-1,Pila ka mga lakang ang gikinahanglan aron makapangita usa ka node sa usa ka binary search tree?,Ang kataas sa kahoy.,2n-1,Hur många steg tar det för att söka efter en nod i ett binärt sökträd?,Trädets höjd.,2n-1,Combien d&#39;étapes faut-il pour rechercher un nœud dans une arborescence de recherche binaire?,La hauteur de l&#39;arbre.,2n-1,Hoeveel stappen zijn er nodig om een knooppunt in een binaire zoekboom te zoeken?,De hoogte van de boom.,2n-1,Сколько шагов нужно для поиска узла в двоичном дереве поиска?,Высота дерева.,2н-1,Quanti passaggi sono necessari per cercare un nodo in un albero di ricerca binario?,L&#39;altezza dell&#39;albero.,2n-1,¿Cuántos pasos se necesitan para buscar un nodo en un árbol de búsqueda binaria?,La altura del árbol.,2n-1,Ile kroków wymaga przeszukanie węzła w drzewie wyszukiwania binarnego?,Wysokość drzewa.,2n-1,Có bao nhiêu bước để tìm kiếm một nút trong cây tìm kiếm nhị phân?,Chiều cao của cây.,2n-1,二分探索木でノードを検索するのに何ステップかかりますか？,木の高さ。,2n-1,在二叉搜索树中搜索节点需要多少步骤？,树的高度。,2n-1,كم عدد الخطوات التي يستغرقها البحث عن عقدة في شجرة بحث ثنائية؟,ارتفاع الشجرة.,2n-1,Скільки кроків потрібно для пошуку вузла в двійковому дереві пошуку?,Висота дерева.,2n-1,Quantas etapas são necessárias para pesquisar um nó em uma árvore de pesquisa binária?,A altura da árvore.,2n-1,چند مرحله برای جستجوی گره در یک درخت جستجوی باینری انجام می شود؟,ارتفاع درخت.,2n-1,Quants passos cal fer per cercar un node en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre.,2n-1,Колико корака је потребно за претрагу чвора у бинарном стаблу претраживања?,Висина стабла.,2н-1,Berapa banyak langkah yang diperlukan untuk mencari node di pohon pencarian biner?,Ketinggian pohon.,2n-1,Hvor mange trinn tar det å søke i en node i et binært søketre?,Høyden på treet.,2n-1,이진 검색 트리에서 노드를 검색하려면 몇 단계가 필요합니까?,나무의 높이.,2n-1,Kuinka monta vaihetta tarvitaan etsimään solmua binäärihakupuussa?,Puun korkeus.,2n-1,Hány lépés szükséges egy csomópont kereséséhez egy bináris keresési fában?,A fa magassága.,2n-1,Kolik kroků je potřeba k vyhledání uzlu v binárním vyhledávacím stromu?,Výška stromu.,2n-1,Koliko je koraka potrebno za pretraživanje čvora u binarnom stablu pretraživanja?,Visina stabla.,2n-1
255,255,992,6.2,"The memory address of operand, 0x000000 or something along those lines.",The memory address of its operand.,What does the address (&) operator return?,4.5,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,Die Speicheradresse des Operanden 0x000000 oder etwas in dieser Richtung.,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,"Ang adres sa panumduman sa operand, 0x000000 o uban pa sa mga linya.",Vad returnerar adressoperatören?,Minnesadressen för dess operand.,"Minnesadressen för operand, 0x000000 eller något i den riktningen.",Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,"L&#39;adresse mémoire de l&#39;opérande, 0x000000 ou quelque chose du genre.",Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,"Het geheugenadres van operand, 0x000000 of zoiets.",Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,"Адрес памяти операнда, 0x000000 или что-то в этом роде.",Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,"L&#39;indirizzo di memoria dell&#39;operando, 0x000000 o qualcosa del genere.",¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,"La dirección de memoria del operando, 0x000000 o algo por el estilo.",Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,"Adres pamięci operandu, 0x000000 lub coś podobnego w tych wierszach.",Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,"Địa chỉ bộ nhớ của toán hạng, 0x000000 hoặc thứ gì đó dọc theo các dòng đó.",アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,オペランドのメモリアドレス、0x000000またはそれらの行に沿った何か。,地址（＆）运算符返回什么？,其操作数的内存地址。,操作数的内存地址，0x000000或类似的行。,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,عنوان ذاكرة المعامل ، 0x000000 أو شيء من هذا القبيل.,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,"Адреса пам&#39;яті операнда, 0x000000 або щось подібне.",O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,"O endereço de memória do operando, 0x000000 ou algo semelhante.",عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,آدرس حافظه operand ، 0x000000 یا چیزی در امتداد آن خطوط.,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,"L&#39;adreça de memòria de l&#39;operant, 0x000000 o alguna cosa així.",Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,"Адреса меморије операнда, 0к000000 или нешто слично.",Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,"Alamat memori operan, 0x000000 atau sesuatu di sepanjang baris tersebut.",Hva returnerer adresseoperatøren?,Minneadressen til operanden.,"Minneadressen til operand, 0x000000 eller noe i den retning.",주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,"피연산자의 메모리 주소, 0x000000 또는 그 라인을 따라있는 것.",Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,"Operandin, 0x000000 tai jonkin muun muistin osoite näiden linjojen mukaisesti.",Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,"Az operandus memóriacíme, 0x000000 vagy valami ezek mentén.",Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,"Paměťová adresa operandu, 0x000000 nebo něco podobného.",Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,"Adresa memorije operanda, 0x000000 ili nešto slično."
256,256,1384,8.3,"for efficiency it is easiest to implement the left to right method, with the right most item being the one that is retrieved when a pop is performed, and a push places an object on the furthest element.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,3.5,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Aus Effizienzgründen ist es am einfachsten, die Methode von links nach rechts zu implementieren, wobei das Element ganz rechts dasjenige ist, das abgerufen wird, wenn ein Pop ausgeführt wird, und ein Push ein Objekt auf das am weitesten entfernte Element platziert.",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.","alang sa kahusayan labing kadali ang pagpatuman sa wala ngadto sa tuo nga pamaagi, nga adunay tama nga kadaghanan nga aytem nga nakuha kun gihimo ang usa ka pop, ug ang usa ka pagduso nagbutang usa ka butang sa labing kalayo nga elemento.",Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.","för effektivitet är det enklast att implementera metoden från vänster till höger, varvid det högsta objektet är det som hämtas när en pop utförs, och ett tryck placerar ett objekt på det längsta elementet.",Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.","pour plus d&#39;efficacité, il est plus facile d&#39;implémenter la méthode de gauche à droite, l&#39;élément le plus à droite étant celui qui est récupéré lorsqu&#39;un pop est effectué, et une poussée place un objet sur l&#39;élément le plus éloigné.",Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.","voor efficiëntie is het het gemakkelijkst om de methode van links naar rechts te implementeren, waarbij het meest rechtse item het item is dat wordt opgehaald wanneer een pop wordt uitgevoerd, en een push plaatst een object op het verste element.",Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","для эффективности проще всего реализовать метод слева направо, при этом самый правый элемент - это тот, который извлекается при выполнении всплывающего сообщения, а нажатие помещает объект в самый дальний элемент.",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.","per l&#39;efficienza è più semplice implementare il metodo da sinistra a destra, con l&#39;elemento più a destra quello che viene recuperato quando viene eseguito un pop, e una spinta posiziona un oggetto sull&#39;elemento più lontano.",¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.","Para mayor eficiencia, es más fácil implementar el método de izquierda a derecha, siendo el elemento más a la derecha el que se recupera cuando se realiza un pop, y un empujón coloca un objeto en el elemento más alejado.",Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","ze względu na efektywność najłatwiej jest zaimplementować metodę od lewej do prawej, przy czym najbardziej po prawej element jest pobierany podczas wykonywania popu, a naciśnięcie umieszcza obiekt na najdalszym elemencie.",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.","để có hiệu quả, cách dễ nhất là triển khai phương thức từ trái sang phải, với mục nhất bên phải là mục được truy xuất khi thực hiện một cửa sổ bật lên và một lần đẩy sẽ đặt một đối tượng lên phần tử xa nhất.",配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,効率を上げるには、左から右へのメソッドを実装するのが最も簡単です。右端のアイテムは、ポップが実行されたときに取得されるアイテムであり、プッシュすると、オブジェクトが最も遠い要素に配置されます。,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,为了提高效率，最简单的方法是实施从左到右的方法，其中最右边的项目是在执行弹出操作时检索到的项目，而推将对象放在最远的元素上。,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,من أجل الكفاءة ، من الأسهل تنفيذ طريقة اليسار إلى اليمين ، حيث يكون العنصر الأيمن هو العنصر الذي يتم استرداده عند تنفيذ فرقعة ، ويضع الدفع كائنًا على العنصر الأبعد.,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","для ефективності найпростіше застосувати метод зліва направо, причому самим правим елементом є той, який отримується, коли виконується поп, а натискання розміщує предмет на найдальшому елементі.",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.","para eficiência, é mais fácil implementar o método da esquerda para a direita, com o item mais à direita sendo aquele que é recuperado quando um pop é executado, e um empurrão coloca um objeto no elemento mais distante.",چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,برای کارآیی ، اجرای روش چپ به راست ساده ترین حالت است ، با بیشترین موارد مناسب ، همان موردی است که هنگام اجرای پاپ بازیابی می شود و یک فشار یک شی را روی دورترین عنصر قرار می دهد.,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.","per obtenir més eficiència, és més senzill implementar el mètode d’esquerra a dreta, essent l’element més dret el que es recupera quan es realitza un pop i un impuls situa un objecte a l’element més llunyà.",Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.","за ефикасност је најлакше применити методу слева надесно, с тим да је најдеснија ставка она која се преузима када се изврши искакање, а потискивање ставља предмет на најудаљенији елемент.",Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.","untuk efisiensi, paling mudah menerapkan metode kiri ke kanan, dengan item paling kanan adalah item yang diambil ketika pop dilakukan, dan push menempatkan objek pada elemen terjauh.",Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.","for effektivitet er det enklest å implementere metoden fra venstre til høyre, med den høyre elementet som er den som blir hentet når en pop utføres, og et trykk plasserer et objekt på det lengste elementet.",어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,효율성을 위해 왼쪽에서 오른쪽으로 방법을 구현하는 것이 가장 쉽습니다. 팝이 수행 될 때 가장 오른쪽 항목이 검색되고 푸시는 가장 먼 요소에 개체를 배치합니다.,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","tehokkuuden vuoksi on helpoin toteuttaa vasemmalta oikealle -menetelmä, jolloin oikeanpuoleisin kohde on se, joka haetaan popin suorituksen yhteydessä, ja työntö asettaa objektin kauimpaan elementtiin.",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.","A hatékonyság érdekében a legkönnyebb a balról jobbra módszert alkalmazni, ahol a jobb oldali legtöbb elem az, amelyet a pop végrehajtásakor kapnak le, és a lökés egy objektumot helyez a legtávolabbi elemre.",Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","pro efektivitu je nejjednodušší implementovat metodu zleva doprava, přičemž položka nejvíce vpravo je ta, která se načte při provedení popu a push umístí objekt na nejvzdálenější prvek.",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.","za efikasnost je najlakše primijeniti metodu slijeva udesno, s tim da je najdesnija stavka ona koja se preuzima kad se izvrši iskakanje, a potiskivanje stavlja objekt na najudaljeniji element."
257,257,521,3.4,"If a function's arguments are large in size, computing time and memory space is not wasted copying down the argument and passing it to the function.  Also pass by reference gives the function called the permission to read edit the argument directly.",It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,5.0,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?","Wenn die Argumente einer Funktion groß sind, wird keine Rechenzeit und kein Speicherplatz verschwendet, indem das Argument kopiert und an die Funktion übergeben wird. Durch Übergeben einer Referenz erhält die Funktion, die als Berechtigung zum Lesen bezeichnet wird, das Argument direkt zu bearbeiten.",Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,"Kung ang mga argumento sa usa ka function daghan ang gidak-on, ang oras sa pag-compute ug ang wanang sa panumduman dili mausik sa pagkopya sa argumento ug ipasa kini sa pagpaandar. Gipasa usab pinaagi sa pakisayran naghatag sa pagpaandar nga gitawag nga pagtugot nga mabasa nga diretso ang lantugi.",Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,"Om argumenten för en funktion är stora, går inte datatid och minnesutrymme bort genom att kopiera ner argumentet och överföra det till funktionen. Även passera referens ger funktionen som kallas tillstånd att läsa redigera argumentet direkt.",Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,"Si les arguments d&#39;une fonction sont de grande taille, le temps de calcul et l&#39;espace mémoire ne sont pas gaspillés pour copier l&#39;argument et le transmettre à la fonction. Passer par référence donne également à la fonction appelée l&#39;autorisation de lire et de modifier directement l&#39;argument.",Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,"Als de argumenten van een functie groot zijn, worden rekentijd en geheugenruimte niet verspild door het argument te kopiëren en door te geven aan de functie. Ook pass by reference geeft de functie met de naam toestemming om het argument rechtstreeks te lezen en te bewerken.","Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,"Если аргументы функции имеют большой размер, время вычислений и пространство памяти не тратятся на копирование аргумента и передачу его функции. Также передача по ссылке дает функции, называемой, разрешение на чтение и редактирование аргумента напрямую.",Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,"Se gli argomenti di una funzione sono di grandi dimensioni, il tempo di elaborazione e lo spazio di memoria non vengono sprecati copiando l&#39;argomento e passandolo alla funzione. Anche passare per riferimento dà alla funzione chiamata il permesso di leggere e modificare direttamente l&#39;argomento.",¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,"Si los argumentos de una función son de gran tamaño, el tiempo de cálculo y el espacio de memoria no se desperdician copiando el argumento y pasándolo a la función. También pasar por referencia otorga a la función llamada el permiso para leer y editar el argumento directamente.","Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,"Jeśli argumenty funkcji mają duży rozmiar, czas obliczeniowy i przestrzeń pamięci nie są marnowane na kopiowanie argumentu i przekazywanie go do funkcji. Również przekazanie przez referencję daje funkcji zwanej uprawnieniem do bezpośredniego odczytu i edycji argumentu.",Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,"Nếu các đối số của một hàm có kích thước lớn, thì thời gian tính toán và không gian bộ nhớ sẽ không bị lãng phí khi sao chép đối số xuống và chuyển nó đến hàm. Ngoài ra truyền bằng tham chiếu cung cấp cho hàm được gọi là quyền đọc chỉnh sửa trực tiếp đối số.",参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,関数の引数のサイズが大きい場合、計算時間とメモリスペースが無駄にならず、引数をコピーして関数に渡します。また、参照渡しは、引数を直接読み取り編集する権限と呼ばれる関数を提供します。,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,如果函数的参数很大，则不浪费计算时间和内存空间来复制参数并将其传递给函数。也通过引用传递给称为调用的功能，以直接读取编辑参数。,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,إذا كانت وسيطات الدالة كبيرة الحجم ، فلن يضيع وقت الحوسبة ومساحة الذاكرة في نسخ الوسيطة وتمريرها إلى الوظيفة. يمنحك تمرير المرجع أيضًا وظيفة تسمى الإذن لقراءة تحرير الوسيطة مباشرة.,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,"Якщо аргументи функції мають великі розміри, обчислювальний час і простір пам&#39;яті не витрачаються даремно, копіюючи аргумент і передаючи його функції. Також передача за посиланням дає функцію, яка називається дозвіл на безпосереднє редагування аргументу.",Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,"Se os argumentos de uma função forem grandes, o tempo de computação e o espaço de memória não serão desperdiçados copiando o argumento e passando-o para a função. A passagem por referência também dá à função chamada permissão para ler e editar o argumento diretamente.",مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,اگر اندازه آرگومان های یک تابع بزرگ باشد ، زمان کپی و فضای حافظه برای کپی کردن آرگومان و انتقال آن به تابع هدر نمی رود. همچنین عبور از طریق مرجع به تابعی موسوم به اجازه خواندن مستقیم ویرایش استدلال می دهد.,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,"Si els arguments d&#39;una funció són de grans dimensions, el temps de càlcul i l&#39;espai de memòria no es perden copiant l&#39;argument i passant-lo a la funció. També passar per referència dóna a la funció anomenada permís per llegir editar l&#39;argument directament.",Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,"Ако су аргументи функције велике величине, рачунање времена и меморијског простора не троши се на копирање аргумента и његово предавање функцији. Такође пасс би референце даје функцији која се назива дозволом за директно читање уређивања аргумента.",Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,"Jika argumen fungsi berukuran besar, waktu komputasi dan ruang memori tidak sia-sia untuk menyalin argumen dan meneruskannya ke fungsi. Juga lewat referensi memberi fungsi yang disebut izin untuk membaca edit argumen secara langsung.",Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,"Hvis argumentene til en funksjon er store, går ikke databehandlingstid og minneplass bort med å kopiere ned argumentet og overføre det til funksjonen. Også passerer referanse gir funksjonen kalt tillatelse til å lese redigere argumentet direkte.",참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,함수의 인수 크기가 크면 인수를 복사하여 함수에 전달하는 데 계산 시간과 메모리 공간이 낭비되지 않습니다. 또한 참조에 의한 전달은 인수를 직접 편집 할 수있는 권한을 제공합니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,"Jos funktion argumentit ovat suurikokoisia, aikaa ja muistitilaa ei tuhlata kopioimalla argumenttia alas ja siirtämällä se funktiolle. Myös ohi-viittaus antaa funktiolle nimeltä lupa lukea argumenttia suoraan.",Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,"Ha egy függvény argumentumai nagyméretűek, az idő és a memóriaterület kiszámítása nem pazarolható az argumentum lemásolásával és a függvénynek való átadásával. Az átadás hivatkozással engedélyt kap az argumentum közvetlen szerkesztésére az úgynevezett függvény számára.","Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,"Pokud jsou argumenty funkce velké, výpočetní čas a paměťový prostor se neztrácejí kopírováním argumentu a jeho předáním funkci. Také předání odkazem dává funkci nazvanou oprávnění ke čtení upravit argument přímo.",Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,"Ako su argumenti funkcije velike veličine, računanje vremena i memorijskog prostora ne troši se na kopiranje argumenta i njegovo prosljeđivanje funkciji. Također prosljeđivanje putem reference daje funkciji koja se naziva dozvolom za direktno čitanje uredi argument."
258,258,1853,10.7,It takes at most 3 comparisons to find and element in a binary search tree,The height of the tree (or log of the number of elements in the tree).,How many comparisons does it take to find an element in a binary search tree?,1.5,Die Höhe des Baums (oder das Protokoll der Anzahl der Elemente im Baum).,"Wie viele Vergleiche sind erforderlich, um ein Element in einem binären Suchbaum zu finden?","Es sind höchstens 3 Vergleiche erforderlich, um einen binären Suchbaum zu finden und zu elementieren",Pila ka mga pagtandi ang kinahanglan aron makapangita usa ka elemento sa usa ka puno nga binary search?,Ang kataas sa kahoy (o log sa gidaghanon sa mga elemento sa kahoy).,Gikinahanglan ang labing 3 nga mga pagtandi aron makapangita ug elemento sa usa ka puno nga pagpangita sa binary,Hur många jämförelser krävs för att hitta ett element i ett binärt sökträd?,Trädets höjd (eller logg över antalet element i trädet).,Det krävs högst tre jämförelser för att hitta och bestå i ett binärt sökträd,Combien de comparaisons faut-il pour trouver un élément dans un arbre de recherche binaire?,La hauteur de l&#39;arbre (ou journal du nombre d&#39;éléments dans l&#39;arbre).,Il faut au plus 3 comparaisons pour trouver un élément dans un arbre de recherche binaire,Hoeveel vergelijkingen zijn er nodig om een element in een binaire zoekboom te vinden?,De hoogte van de boom (of log van het aantal elementen in de boom).,Er zijn maximaal 3 vergelijkingen nodig om een element in een binaire zoekboom te vinden,"Сколько сравнений нужно, чтобы найти элемент в двоичном дереве поиска?",Высота дерева (или логарифм количества элементов в дереве).,Для нахождения и элемента в двоичном дереве поиска требуется не более 3 сравнений.,Quanti confronti sono necessari per trovare un elemento in un albero di ricerca binario?,L&#39;altezza dell&#39;albero (o il registro del numero di elementi dell&#39;albero).,Sono necessari al massimo 3 confronti per trovare un elemento in un albero di ricerca binario,¿Cuántas comparaciones se necesitan para encontrar un elemento en un árbol de búsqueda binaria?,La altura del árbol (o registro de la cantidad de elementos en el árbol).,Se necesitan como máximo 3 comparaciones para encontrar un elemento en un árbol de búsqueda binaria,"Ile porównań potrzeba, aby znaleźć element w drzewie wyszukiwania binarnego?",Wysokość drzewa (lub dziennik liczby elementów w drzewie).,"Potrzeba maksymalnie 3 porównań, aby znaleźć element w drzewie wyszukiwania binarnego",Có bao nhiêu phép so sánh để tìm một phần tử trong cây tìm kiếm nhị phân?,Chiều cao của cây (hoặc nhật ký của số phần tử trong cây).,Cần nhiều nhất 3 phép so sánh để tìm và thành phần trong cây tìm kiếm nhị phân,二分探索木で要素を見つけるのに何回の比較が必要ですか？,ツリーの高さ（またはツリー内の要素数のログ）。,二分探索木で要素を見つけるには、最大3つの比較が必要です。,在二进制搜索树中查找元素需要进行多少次比较？,树的高度（或树中元素数的对数）。,最多需要进行3个比较才能找到二叉搜索树中的元素,كم عدد المقارنات اللازمة للعثور على عنصر في شجرة بحث ثنائية؟,ارتفاع الشجرة (أو سجل عدد العناصر في الشجرة).,يتطلب الأمر 3 مقارنات على الأكثر للعثور على عنصر في شجرة بحث ثنائية,"Скільки порівнянь потрібно, щоб знайти елемент у двійковому дереві пошуку?",Висота дерева (або журнал кількості елементів у дереві).,Для пошуку та елемента в двійковому дереві пошуку потрібно не більше 3 порівнянь,Quantas comparações são necessárias para encontrar um elemento em uma árvore de pesquisa binária?,A altura da árvore (ou log do número de elementos na árvore).,Demora no máximo 3 comparações para encontrar um elemento em uma árvore de pesquisa binária,برای یافتن عنصری در یک درخت جستجوی باینری چند مقایسه لازم است؟,ارتفاع درخت (یا تعداد تعداد عناصر موجود در درخت).,برای یافتن و عنصر قرار دادن در یک درخت جستجوی دودویی حداکثر 3 مقایسه لازم است,Quantes comparacions es necessiten per trobar un element en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre (o registre del nombre d&#39;elements de l&#39;arbre).,Es necessiten com a màxim 3 comparacions per trobar i element en un arbre de cerca binari,Колико поређења је потребно да би се пронашао елемент у бинарном стаблу претраживања?,Висина стабла (или евиденција броја елемената у дрвету).,Потребна су највише 3 поређења да би се пронашло и елемент у бинарном стаблу претраживања,Berapa banyak perbandingan yang diperlukan untuk menemukan elemen dalam pohon pencarian biner?,Tinggi pohon (atau log dari jumlah elemen pada pohon).,Diperlukan paling banyak 3 perbandingan untuk menemukan dan elemen dalam pohon pencarian biner,Hvor mange sammenligninger tar det å finne et element i et binært søketre?,Høyden på treet (eller logg over antall elementer i treet).,Det tar maksimalt 3 sammenligninger å finne og elementere i et binært søketre,이진 검색 트리에서 요소를 찾는 데 얼마나 많은 비교가 필요합니까?,트리의 높이 (또는 트리의 요소 수에 대한 로그).,이진 검색 트리에서 및 요소를 찾으려면 최대 3 번의 비교가 필요합니다.,Kuinka monta vertailua tarvitaan elementin löytämiseksi binaarihakupuusta?,Puun korkeus (tai puun elementtien määrän loki).,Binaarihakupuun löytäminen ja elementtiminen vie korkeintaan 3 vertailua,Hány összehasonlítás szükséges egy elem megtalálásához a bináris keresési fában?,A fa magassága (vagy a fa elemeinek számának naplója).,Legfeljebb 3 összehasonlításra van szükség a bináris kereső fa megkereséséhez és eleméhez,Kolik srovnání je potřeba k nalezení prvku v binárním vyhledávacím stromu?,Výška stromu (nebo protokol o počtu prvků ve stromu).,Hledání a vložení do binárního vyhledávacího stromu trvá maximálně 3 srovnání,Koliko je usporedbi potrebno za pronalaženje elementa u binarnom stablu pretraživanja?,Visina stabla (ili evidencija broja elemenata u stablu).,Potrebne su najviše 3 usporedbe za pronalaženje i element u binarnom stablu pretraživanja
259,259,560,3.5,The compiler differentiates overloaded functions by their signature.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,5.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,Der Compiler unterscheidet überladene Funktionen anhand ihrer Signatur.,Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.",Gipalahi sa tag-compiler ang sobra nga mga pag-andar sa ilang pirma.,Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,Kompilatorn differentierar överbelastade funktioner genom sin signatur.,Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.",Le compilateur différencie les fonctions surchargées par leur signature.,Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.",De compiler onderscheidt overbelaste functies door hun handtekening.,Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.",Компилятор различает перегруженные функции по их сигнатуре.,Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.",Il compilatore differenzia le funzioni sovraccaricate dalla loro firma.,¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.",El compilador diferencia las funciones sobrecargadas por su firma.,W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.",Kompilator rozróżnia przeciążone funkcje według ich podpisu.,Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.",Trình biên dịch phân biệt các chức năng được nạp chồng bằng chữ ký của chúng.,オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,コンパイラーは、オーバーロードされた関数をそのシグネチャーによって区別します。,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,编译器通过签名区分重载函数。,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,يميز المترجم الوظائف المحملة بشكل زائد من خلال توقيعها.,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.",Компілятор диференціює перевантажені функції за їх підписом.,Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.",O compilador diferencia funções sobrecarregadas por sua assinatura.,توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,کامپایلر توابع بیش از حد را با امضای خود متمایز می کند.,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.",El compilador diferencia les funcions sobrecarregades per la seva signatura.,Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.",Компајлер разликује преоптерећене функције њиховим потписом.,Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.",Kompilator membedakan fungsi yang kelebihan beban dengan tanda tangannya.,Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.",Kompilatoren skiller overbelastede funksjoner etter signaturen.,오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,컴파일러는 오버로드 된 함수를 서명으로 구분합니다.,Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.",Kääntäjä erottaa ylikuormitetut toiminnot allekirjoituksellaan.,Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.",A fordító aláírásuk alapján különbözteti meg a túlterhelt függvényeket.,Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.",Kompilátor rozlišuje přetížené funkce podle jejich podpisu.,Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.",Kompajler razlikuje preopterećene funkcije njihovim potpisom.
260,260,1962,11.4,The function signature tells what the function parameters and includes all the function calls,"The name of the function and the list of parameters, including their types.",What is a function signature?,4.0,Der Name der Funktion und die Liste der Parameter einschließlich ihrer Typen.,Was ist eine Funktionssignatur?,Die Funktionssignatur gibt Auskunft über die Funktionsparameter und enthält alle Funktionsaufrufe,Unsa ang usa ka pirma sa pag-andar?,"Ang ngalan sa pagpaandar ug lista sa mga parameter, lakip ang ilang mga lahi.",Gisultihan sa pirma sa pag-andar kung unsa ang mga parameter sa pagpaandar ug kauban ang tanan nga mga tawag sa pag-andar,Vad är en funktionssignatur?,"Funktionens namn och listan med parametrar, inklusive deras typer.",Funktionssignaturen berättar vad funktionsparametrarna och innehåller alla funktionssamtal,Qu&#39;est-ce qu&#39;une signature de fonction?,"Le nom de la fonction et la liste des paramètres, y compris leurs types.",La signature de la fonction indique quels sont les paramètres de la fonction et inclut tous les appels de fonction,Wat is een functiehandtekening?,"De naam van de functie en de lijst met parameters, inclusief hun typen.",De functiehandtekening vertelt wat de functieparameters zijn en bevat alle functie-aanroepen,Что такое сигнатура функции?,"Имя функции и список параметров, включая их типы.","Сигнатура функции сообщает, какие параметры функции, и включает все вызовы функций.",Cos&#39;è una firma di funzione?,"Il nome della funzione e l&#39;elenco dei parametri, inclusi i loro tipi.",La firma della funzione dice quali sono i parametri della funzione e include tutte le chiamate di funzione,¿Qué es una firma de función?,"El nombre de la función y la lista de parámetros, incluidos sus tipos.",La firma de la función dice cuáles son los parámetros de la función e incluye todas las llamadas a la función,Co to jest podpis funkcji?,"Nazwa funkcji i lista parametrów, w tym ich typy.",Podpis funkcji określa parametry funkcji i obejmuje wszystkie wywołania funkcji,Chữ ký hàm là gì?,"Tên của hàm và danh sách các tham số, bao gồm cả loại của chúng.",Chữ ký hàm cho biết các tham số hàm và bao gồm tất cả các lệnh gọi hàm,関数シグネチャとは何ですか？,関数の名前と、タイプを含むパラメーターのリスト。,関数シグニチャは、関数パラメータを示し、すべての関数呼び出しを含みます,什么是功能签名？,函数的名称和参数列表，包括它们的类型。,函数签名告诉函数参数是什么，并包括所有函数调用,ما هو توقيع الوظيفة؟,اسم الوظيفة وقائمة المعلمات ، بما في ذلك أنواعها.,يخبر توقيع الوظيفة ما هي معلمات الوظيفة ويتضمن جميع استدعاءات الوظيفة,Що таке підпис функції?,"Назва функції та перелік параметрів, включаючи їх типи.","Підпис функції повідомляє, які параметри функції, і включає всі виклики функції",O que é uma assinatura de função?,"O nome da função e a lista de parâmetros, incluindo seus tipos.",A assinatura da função informa quais são os parâmetros da função e inclui todas as chamadas de função,امضای تابع چیست؟,نام عملکرد و لیست پارامترها ، از جمله انواع آنها.,امضای تابع می گوید که پارامترهای عملکرد چیست و همه فراخوانی عملکردها را شامل می شود,Què és una signatura de funció?,"El nom de la funció i la llista de paràmetres, inclosos els seus tipus.",La signatura de la funció indica quins són els paràmetres de la funció i inclou totes les trucades de funció,Шта је потпис функције?,"Назив функције и листа параметара, укључујући њихове типове.",Потпис функције говори који су параметри функције и укључује све позиве функције,Apa itu tanda tangan fungsi?,"Nama fungsi dan daftar parameter, termasuk tipenya.",Tanda tangan fungsi memberi tahu parameter fungsi dan menyertakan semua panggilan fungsi,Hva er en funksjonssignatur?,"Navnet på funksjonen og listen over parametere, inkludert typer.",Funksjonssignaturen forteller hva funksjonsparametrene er og inkluderer alle funksjonsanropene,함수 서명이란 무엇입니까?,함수 이름 및 유형을 포함한 매개 변수 목록.,함수 시그니처는 함수 매개 변수를 알려주고 모든 함수 호출을 포함합니다.,Mikä on funktion allekirjoitus?,"Funktion nimi ja parametrien luettelo, mukaan lukien niiden tyypit.",Funktion allekirjoitus kertoo toiminnon parametrit ja sisältää kaikki funktiokutsut,Mi a függvény aláírása?,"A függvény neve és a paraméterek listája, beleértve azok típusait is.","A függvény aláírása megmondja a függvény paramétereit, és tartalmazza az összes függvényhívást",Co je podpis funkce?,"Název funkce a seznam parametrů, včetně jejich typů.","Podpis funkce říká, jaké jsou parametry funkce, a zahrnuje všechna volání funkcí",Što je potpis funkcije?,"Naziv funkcije i lista parametara, uključujući njihove tipove.",Potpis funkcije govori koji su parametri funkcije i uključuje sve pozive funkcije
261,261,2153,11.1,"Take the initial array and split it into two, temporary, smaller arrays, sort the two smaller arrays, and merge them back into a single array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Briefly describe in one sentence how does merge sort work?,5.0,"Es teilt das ursprüngliche Array in zwei Teile, sortiert jede der beiden Hälften und führt dann die sortierten Arrays zusammen.","Beschreiben Sie in einem Satz kurz, wie das Zusammenführen von Sortierungen funktioniert.","Nehmen Sie das ursprüngliche Array und teilen Sie es in zwei temporäre, kleinere Arrays auf, sortieren Sie die beiden kleineren Arrays und führen Sie sie wieder zu einem einzigen Array zusammen.",Sa mubu nga paghulagway sa usa ka tudling-pulong kung giunsa molihok ang paghiusa?,"Gibahin niini ang orihinal nga laray sa duha, gisagol ang matag usa sa duha ka bahin, ug pagkahuman gisagol ang mga gihan-ay nga mga array.","Kuhaa ang inisyal nga paghan-ay ug bahinon kini sa duha, temporaryo, gagmay nga mga array, paghan-ay sa duha nga gagmay nga mga array, ug iusa kini pagbalik sa usa ka laray.",Beskriv kortfattat i en mening hur fungerar merge sort?,"Den delar upp den ursprungliga matrisen i två, sorterar var och en av de två halvorna och slår sedan ihop de sorterade matriserna.","Ta den ursprungliga matrisen och dela den i två, tillfälliga, mindre matriser, sortera de två mindre matriserna och slå samman dem i en enda matris.",Décrivez brièvement en une phrase comment fonctionne le tri par fusion?,"Il divise le tableau d&#39;origine en deux, trie chacune des deux moitiés, puis fusionne les tableaux triés.","Prenez le tableau initial et divisez-le en deux tableaux temporaires plus petits, triez les deux tableaux plus petits et fusionnez-les en un seul tableau.",Beschrijf kort in één zin hoe werkt samenvoegsortering?,"Het splitst de oorspronkelijke array in tweeën, sorteert elk van de twee helften en voegt vervolgens de gesorteerde arrays samen.","Neem de eerste array en splits deze in twee, tijdelijke, kleinere arrays, sorteer de twee kleinere arrays en voeg ze weer samen tot een enkele array.","Кратко опишите одним предложением, как работает сортировка слиянием?","Он разбивает исходный массив на две части, сортирует каждую из двух половин, а затем объединяет отсортированные массивы.","Возьмите исходный массив и разделите его на два временных меньших массива, отсортируйте два меньших массива и объедините их обратно в один массив.",Descrivi brevemente in una frase come funziona il merge sort?,"Divide l&#39;array originale in due, ordina ciascuna delle due metà e quindi unisce gli array ordinati.","Prendi l&#39;array iniziale e dividilo in due array temporanei e più piccoli, ordina i due array più piccoli e uniscili di nuovo in un singolo array.",Describe brevemente en una oración cómo funciona la ordenación por combinación.,"Divide la matriz original en dos, ordena cada una de las dos mitades y luego fusiona las matrices ordenadas.","Tome la matriz inicial y divídala en dos matrices temporales más pequeñas, ordene las dos matrices más pequeñas y vuelva a fusionarlas en una sola matriz.","Krótko opisz w jednym zdaniu, jak działa sortowanie przez scalanie?","Dzieli oryginalną tablicę na dwie części, sortuje każdą z dwóch połówek, a następnie łączy posortowane tablice.","Weź początkową tablicę i podziel ją na dwie tymczasowe, mniejsze tablice, posortuj dwie mniejsze tablice i połącz je z powrotem w jedną tablicę.",Mô tả ngắn gọn trong một câu cách sắp xếp hợp nhất hoạt động như thế nào?,"Nó chia mảng ban đầu thành hai, sắp xếp từng mảng trong số hai nửa, sau đó hợp nhất các mảng đã sắp xếp.","Lấy mảng ban đầu và chia nó thành hai mảng tạm thời, nhỏ hơn, sắp xếp hai mảng nhỏ hơn và hợp nhất chúng lại thành một mảng duy nhất.",マージソートはどのように機能するのかを一文で簡単に説明してください。,元の配列を2つに分割し、2つの半分のそれぞれを並べ替えてから、並べ替えられた配列をマージします。,最初の配列を取得し、それを2つの一時的な小さい配列に分割し、2つの小さい配列を並べ替えて、それらを1つの配列にマージします。,用一句话简单描述合并排序是如何工作的？,它将原始数组分为两部分，对两个半部分分别进行排序，然后合并排序后的数组。,取初始数组并将其拆分为两个临时的较小数组，对两个较小的数组进行排序，然后将它们合并回到单个数组中。,صف بإيجاز في جملة واحدة كيف يعمل دمج الفرز؟,يقسم المصفوفة الأصلية إلى قسمين ، يفرز كل من النصفين ، ثم يدمج المصفوفات التي تم فرزها.,خذ المصفوفة الأولية وقسمها إلى مصفوفتين مؤقتتين أصغر حجمًا ، وفرز المصفوفتين الأصغر حجمًا ، وادمجهما مرة أخرى في مصفوفة واحدة.,"Коротко опишіть одним реченням, як працює сортування злиттям?","Він розбиває вихідний масив на дві частини, сортує кожну з двох половин, а потім об&#39;єднує відсортовані масиви.","Візьміть початковий масив і розділіть його на два, тимчасові, менші масиви, відсортуйте два менших масиви та об&#39;єднайте їх назад в один масив.",Descreva resumidamente em uma frase como funciona a classificação por mesclagem?,"Ele divide o array original em dois, classifica cada uma das duas metades e, em seguida, mescla os arrays classificados.","Pegue o array inicial e divida-o em dois arrays menores temporários, classifique os dois arrays menores e mescle-os novamente em um único array.",به طور خلاصه در یک جمله توضیح دهید که چگونه ادغام مرتب سازی کار می کند؟,آرایه اصلی را به دو قسمت تقسیم می کند ، هر دو نیمه را مرتب می کند و سپس آرایه های مرتب شده را ادغام می کند.,آرایه اولیه را بگیرید و آن را به دو آرایه موقت و کوچکتر تقسیم کنید ، دو آرایه کوچکتر را مرتب کنید و دوباره در یک آرایه ادغام کنید.,Descriviu breument en una frase com funciona la classificació per fusió?,"Divideix la matriu original en dos, ordena cadascuna de les dues meitats i després fusiona les matrius ordenades.","Agafeu la matriu inicial i dividiu-la en dues matrius temporals més petites, ordeneu les dues matrius més petites i torneu a combinar-les en una matriu única.",Укратко опишите у једној реченици како функционише сортирање спајањем?,"Првобитни низ дели на две, сортира сваку од две половине, а затим обједињује сортиране низове.","Узмите почетни низ и поделите га на два привремена мања низа, сортирајте два мања низа и поново их спојите у један низ.",Jelaskan secara singkat dalam satu kalimat bagaimana cara kerja merge sort?,"Ini membagi larik asli menjadi dua, mengurutkan masing-masing dari dua bagian, lalu menggabungkan larik yang diurutkan.","Ambil array awal dan pisahkan menjadi dua, sementara, array yang lebih kecil, sortir dua array yang lebih kecil, dan gabungkan kembali menjadi satu array.",Beskriv kort i en setning hvordan fungerer sammenslåing?,"Den deler den originale matrisen i to, sorterer hver av de to halvdelene, og fletter deretter de sorterte matriser.","Ta den første matrisen og del den i to, midlertidige, mindre matriser, sorter de to mindre matriser, og slå dem sammen i en enkelt matrise.",병합 정렬이 어떻게 작동하는지 한 문장으로 간단히 설명해주세요.,원래 배열을 두 개로 분할하고 두 반쪽을 각각 정렬 한 다음 정렬 된 배열을 병합합니다.,초기 배열을 가져 와서 두 개의 임시 작은 배열로 분할하고 두 개의 작은 배열을 정렬 한 다음 다시 단일 배열로 병합합니다.,"Kuvaile lyhyesti yhdessä lauseessa, kuinka lajittelu toimii?","Se jakaa alkuperäisen taulukon kahteen osaan, lajittelee molemmat puoliskot ja yhdistää sitten lajitellut taulukot.","Ota alkuperäinen taulukko ja jaa se kahteen väliaikaiseen pienempään ryhmään, lajittele kaksi pienempää taulukkoa ja yhdistä ne takaisin yhdeksi taulukoksi.","Röviden írja le egy mondatban, hogyan működik az egyesítés rendezése?","Az eredeti tömböt kettéválasztja, a két felet rendezi, majd egyesíti a rendezett tömböket.","Vegye ki a kezdeti tömböt, és ossza fel két, ideiglenes, kisebb tömbre, rendezze a két kisebb tömböt, és egyesítse őket vissza egyetlen tömbbe.","Stručně popište jednou větou, jak funguje sloučení?","Rozdělí původní pole na dvě, roztřídí každou ze dvou polovin a poté sloučí seřazená pole.","Vezměte počáteční pole a rozdělte jej na dvě dočasná menší pole, roztřiďte dvě menší pole a spojte je zpět do jednoho pole.",Ukratko u jednoj rečenici opišite kako funkcionira sortiranje spajanja?,"Izvorni niz dijeli na dvije, sortira svaku od dvije polovice, a zatim spaja sortirane nizove.","Uzmite početni niz i podijelite ga na dva privremena manja niza, sortirajte dva manja niza i spojite ih natrag u jedan niz."
262,262,1673,9.7,queue because it guarantees that job are executed in the order they come in.,queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?","Warteschlange, da dadurch garantiert wird, dass der Job in der Reihenfolge ausgeführt wird, in der er eingeht.","Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,pila tungod kay gigarantiyahan niini nga ang trabaho gipatuman sa han-ay nga ilang gisulud.,"Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,kö eftersom det garanterar att jobbet utförs i den ordning de kommer in.,"Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,file d&#39;attente car il garantit que les travaux sont exécutés dans leur ordre d&#39;arrivée.,"Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,wachtrij omdat het garandeert dat de taak wordt uitgevoerd in de volgorde waarin ze binnenkomen.,"Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,"queue, потому что он гарантирует, что задания будут выполняться в том порядке, в котором они поступают.","Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,coda perché garantisce che i lavori vengano eseguiti nell&#39;ordine in cui arrivano.,"¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,cola porque garantiza que los trabajos se ejecuten en el orden en que entran.,"Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,"queue, ponieważ gwarantuje, że zadania są wykonywane w kolejności, w jakiej przychodzą.","Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,hàng đợi bởi vì nó đảm bảo rằng công việc được thực hiện theo thứ tự mà chúng đến.,プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,ジョブが入ってくる順序で実行されることが保証されるため、キューに入れます。,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,排队，因为它保证作业按进来的顺序执行。,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,queue لأنه يضمن تنفيذ المهمة بالترتيب الذي تأتي به.,"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,"чергу, оскільки це гарантує, що завдання буде виконано в тому порядку, в якому вони надійшли.","Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,fila porque garante que o trabalho seja executado na ordem em que eles entram.,چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,صف به دلیل تضمین این که شغل به ترتیب وارد شده اجرا می شود.,"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,a la cua perquè garanteix que el treball s&#39;executa en l&#39;ordre en què entra.,"Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,ред јер гарантује да се посао извршава редом којим долазе.,"Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,antrian karena itu menjamin bahwa pekerjaan dijalankan sesuai urutan mereka masuk.,"Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,kø fordi det garanterer at jobben blir utført i den rekkefølgen de kommer inn.,"프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,작업이 들어오는 순서대로 실행되도록 보장하기 때문입니다.,"Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,"jonossa, koska se takaa, että työ suoritetaan saapumisjärjestyksessä.","Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,"várakozási sor, mert garantálja, hogy a munkát a beérkezésük sorrendjében hajtják végre.","Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,"fronta, protože zaručuje, že úlohy jsou prováděny v pořadí, v jakém přicházejí.","Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,red jer jamči da se posao izvršava redom kojim dolaze.
263,263,1691,9.7,i would say that a queue is better because the first thing you try to print should be the first one to come out of the printer  (FIFO),queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?","Ich würde sagen, dass eine Warteschlange besser ist, weil das erste, was Sie zu drucken versuchen, das erste sein sollte, das aus dem Drucker kommt (FIFO).","Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,isulti ko nga ang usa ka pila labi ka maayo tungod kay ang una nga imong gisulayan nga i-print kinahanglan mao ang una nga mogawas sa tig-imprinta (FIFO),"Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,Jag skulle säga att en kö är bättre eftersom det första du försöker skriva ut ska vara den första som kommer ut ur skrivaren (FIFO),"Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,je dirais qu&#39;une file d&#39;attente est meilleure car la première chose que vous essayez d&#39;imprimer doit être la première à sortir de l&#39;imprimante (FIFO),"Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,ik zou zeggen dat een wachtrij beter is omdat het eerste dat je probeert af te drukken de eerste is die uit de printer komt (FIFO),"Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,"Я бы сказал, что очередь лучше, потому что первое, что вы пытаетесь распечатать, должно быть первым, которое выйдет из принтера (FIFO)","Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,direi che è meglio una coda perché la prima cosa che provi a stampare dovrebbe essere la prima che esce dalla stampante (FIFO),"¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,yo diría que una cola es mejor porque lo primero que intentas imprimir debe ser el primero en salir de la impresora (FIFO),"Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,"powiedziałbym, że kolejka jest lepsza, ponieważ pierwsza rzecz, którą próbujesz wydrukować, powinna być pierwszą, która wyjdzie z drukarki (FIFO)","Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,Tôi muốn nói rằng một hàng đợi tốt hơn vì thứ đầu tiên bạn cố in phải là thứ đầu tiên ra khỏi máy in (FIFO),プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,最初に印刷しようとするのは、プリンター（FIFO）から最初に出てくるものでなければならないので、キューの方が優れていると思います。,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,我会说队列更好，因为您尝试打印的第一件事应该是从打印机（FIFO）中出来的第一个东西,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,أود أن أقول إن قائمة الانتظار أفضل لأن أول شيء تحاول طباعته يجب أن يكون أول ما يخرج من الطابعة (FIFO),"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,"я б сказав, що черга краща, тому що перше, що ви намагаєтеся надрукувати, має бути першим, хто вийде з принтера (FIFO)","Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,Eu diria que uma fila é melhor porque a primeira coisa que você tenta imprimir deve ser a primeira a sair da impressora (FIFO),چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,من می گویم که یک صف بهتر است زیرا اولین چیزی که سعی می کنید چاپ کنید باید اولین بار باشد که از چاپگر خارج می شود (FIFO),"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,diria que és millor una cua perquè el primer que intenteu imprimir hauria de ser el primer que surt de la impressora (FIFO),"Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,рекао бих да је ред бољи јер прво што покушате да одштампате треба да буде прво које изађе из штампача (ФИФО),"Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,saya akan mengatakan bahwa antrian lebih baik karena hal pertama yang Anda coba cetak harus yang pertama keluar dari printer (FIFO),"Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,Jeg vil si at en kø er bedre fordi det første du prøver å skrive ut skal være den første som kommer ut av skriveren (FIFO),"프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,인쇄하려는 첫 번째 항목이 프린터 (FIFO)에서 나오는 첫 번째 항목이어야하므로 대기열이 더 좋습니다.,"Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,"sanoisin, että jono on parempi, koska ensimmäinen asia, jonka yrität tulostaa, tulee olla ensimmäinen, joka tulee ulos tulostimesta (FIFO)","Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,"azt mondanám, hogy jobb a sor, mert az első dolog, amit megpróbál nyomtatni, az legyen az első, amelyik kijön a nyomtatóból (FIFO)","Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,"Řekl bych, že fronta je lepší, protože první věc, kterou se pokusíte vytisknout, by měla být první, která vyjde z tiskárny (FIFO)","Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,rekao bih da je red bolji jer prvo što pokušate ispisati treba biti prvo koje izađe iz pisača (FIFO)
264,264,1843,10.7,O(log n),The height of the tree (or log of the number of elements in the tree).,How many comparisons does it take to find an element in a binary search tree?,5.0,Die Höhe des Baums (oder das Protokoll der Anzahl der Elemente im Baum).,"Wie viele Vergleiche sind erforderlich, um ein Element in einem binären Suchbaum zu finden?",O (log n),Pila ka mga pagtandi ang kinahanglan aron makapangita usa ka elemento sa usa ka puno nga binary search?,Ang kataas sa kahoy (o log sa gidaghanon sa mga elemento sa kahoy).,O (pag-log n),Hur många jämförelser krävs för att hitta ett element i ett binärt sökträd?,Trädets höjd (eller logg över antalet element i trädet).,O (log n),Combien de comparaisons faut-il pour trouver un élément dans un arbre de recherche binaire?,La hauteur de l&#39;arbre (ou journal du nombre d&#39;éléments dans l&#39;arbre).,O (log n),Hoeveel vergelijkingen zijn er nodig om een element in een binaire zoekboom te vinden?,De hoogte van de boom (of log van het aantal elementen in de boom).,O (logboek n),"Сколько сравнений нужно, чтобы найти элемент в двоичном дереве поиска?",Высота дерева (или логарифм количества элементов в дереве).,O (журнал n),Quanti confronti sono necessari per trovare un elemento in un albero di ricerca binario?,L&#39;altezza dell&#39;albero (o il registro del numero di elementi dell&#39;albero).,O (log n),¿Cuántas comparaciones se necesitan para encontrar un elemento en un árbol de búsqueda binaria?,La altura del árbol (o registro de la cantidad de elementos en el árbol).,O (log n),"Ile porównań potrzeba, aby znaleźć element w drzewie wyszukiwania binarnego?",Wysokość drzewa (lub dziennik liczby elementów w drzewie).,O (log n),Có bao nhiêu phép so sánh để tìm một phần tử trong cây tìm kiếm nhị phân?,Chiều cao của cây (hoặc nhật ký của số phần tử trong cây).,O (log n),二分探索木で要素を見つけるのに何回の比較が必要ですか？,ツリーの高さ（またはツリー内の要素数のログ）。,O（log n）,在二进制搜索树中查找元素需要进行多少次比较？,树的高度（或树中元素数的对数）。,O（log n）,كم عدد المقارنات اللازمة للعثور على عنصر في شجرة بحث ثنائية؟,ارتفاع الشجرة (أو سجل عدد العناصر في الشجرة).,O (تسجيل ن),"Скільки порівнянь потрібно, щоб знайти елемент у двійковому дереві пошуку?",Висота дерева (або журнал кількості елементів у дереві).,O (журнал n),Quantas comparações são necessárias para encontrar um elemento em uma árvore de pesquisa binária?,A altura da árvore (ou log do número de elementos na árvore).,O (log n),برای یافتن عنصری در یک درخت جستجوی باینری چند مقایسه لازم است؟,ارتفاع درخت (یا تعداد تعداد عناصر موجود در درخت).,O (ورود به سیستم),Quantes comparacions es necessiten per trobar un element en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre (o registre del nombre d&#39;elements de l&#39;arbre).,O (registre n),Колико поређења је потребно да би се пронашао елемент у бинарном стаблу претраживања?,Висина стабла (или евиденција броја елемената у дрвету).,О (лог н),Berapa banyak perbandingan yang diperlukan untuk menemukan elemen dalam pohon pencarian biner?,Tinggi pohon (atau log dari jumlah elemen pada pohon).,O (log n),Hvor mange sammenligninger tar det å finne et element i et binært søketre?,Høyden på treet (eller logg over antall elementer i treet).,O (log n),이진 검색 트리에서 요소를 찾는 데 얼마나 많은 비교가 필요합니까?,트리의 높이 (또는 트리의 요소 수에 대한 로그).,O (로그 n),Kuinka monta vertailua tarvitaan elementin löytämiseksi binaarihakupuusta?,Puun korkeus (tai puun elementtien määrän loki).,O (log n),Hány összehasonlítás szükséges egy elem megtalálásához a bináris keresési fában?,A fa magassága (vagy a fa elemeinek számának naplója).,O (log n),Kolik srovnání je potřeba k nalezení prvku v binárním vyhledávacím stromu?,Výška stromu (nebo protokol o počtu prvků ve stromu).,O (log n),Koliko je usporedbi potrebno za pronalaženje elementa u binarnom stablu pretraživanja?,Visina stabla (ili evidencija broja elemenata u stablu).,O (log n)
265,265,2201,12.2,BIG-OH,Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,2.5,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,BIG-OH,Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,DAKONG-OH,Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,STOR-OH,Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,BIG-OH,Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,BIG-OH,Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,БОЛЬШОЙ-ОН,Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,BIG-OH,¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,BIG-OH,Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,BIG-OH,Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,BIG-OH,アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,BIG-OH,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,大OH,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,بيج-أوه,Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,BIG-OH,Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,BIG-OH,روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,BIG-OH,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,BIG-OH,Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,БИГ-ОХ,Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,BIG-OH,Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,STOR-OH,알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,BIG-OH,Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,BIG-OH,Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,BIG-OH,Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,BIG-OH,Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,BIG-OH
266,266,1614,9.5,linked list based. because it doesn't store the items linearly in memory but instead as individual blocks.,"Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred for a queue, and why?",5.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird für eine Warteschlange bevorzugt und warum?,"verknüpfte Liste basiert. weil es die Elemente nicht linear im Speicher speichert, sondern als einzelne Blöcke.","Kinsa nga pagpatuman (nakabase sa laraw kumpara sa lista) ang gipili alang sa usa ka pila, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)",nakabase nga lista nga nakabase. tungod kay wala kini gitipig nga mga butang nga linearly sa memorya hinunoa ingon nga indibidwal nga mga bloke.,"Vilken implementering (arraybaserad kontra listbaserad) är att föredra för en kö, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),länkad lista baserad. eftersom det inte lagrar objekten linjärt i minnet utan istället som enskilda block.,"Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée pour une file d&#39;attente, et pourquoi?","Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)",basé sur une liste liée. car il ne stocke pas les éléments de manière linéaire en mémoire mais plutôt sous forme de blocs individuels.,"Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur voor een wachtrij, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)","gekoppelde lijst gebaseerd. omdat het de items niet lineair in het geheugen opslaat, maar in plaats daarvan als individuele blokken.",Какая реализация (на основе массива или на основе списка) предпочтительнее для очереди и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","связанный список на основе. потому что он хранит элементы в памяти не линейно, а как отдельные блоки.",Quale implementazione (basata su array o basata su elenco) è preferita per una coda e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)",basato su elenchi collegati. perché non memorizza gli elementi in modo lineare nella memoria ma come singoli blocchi.,¿Qué implementación (basada en matrices o basada en listas) se prefiere para una cola y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)","basado en lista enlazada. porque no almacena los elementos linealmente en la memoria, sino como bloques individuales.",Która implementacja (oparta na tablicy czy oparta na liście) jest preferowana dla kolejki i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","na podstawie listy połączonej. ponieważ nie przechowuje elementów w pamięci liniowo, ale jako pojedyncze bloki.",Việc triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên cho hàng đợi và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)",dựa trên danh sách liên kết. bởi vì nó không lưu trữ tuyến tính các mục trong bộ nhớ mà thay vào đó là các khối riêng lẻ.,キューにはどの実装（配列ベースとリストベース）が優先されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リンクリストベース。アイテムをメモリに線形に保存するのではなく、個々のブロックとして保存するためです。,队列首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,基于链表。因为它不会将项目线性存储在内存中，而是作为单独的块存储。,ما هو التنفيذ المفضل لقائمة الانتظار ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),قائمة مرتبطة على أساس. لأنه لا يخزن العناصر خطيًا في الذاكرة ولكن بدلاً من ذلك ككتل فردية.,"Яка реалізація (на основі масиву проти списку) є кращою для черги, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","на основі пов&#39;язаного списку. оскільки він не зберігає елементи лінійно в пам&#39;яті, а як окремі блоки.",Qual implementação (baseada em matriz vs. baseada em lista) é preferida para uma fila e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)","com base em lista vinculada. porque não armazena os itens linearmente na memória, mas como blocos individuais.",کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) برای یک صف ترجیح داده می شود و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),لیست پیوند داده شده بر اساس زیرا موارد را به صورت خطی در حافظه ذخیره نمی کند بلکه در عوض به عنوان بلوک های جداگانه ذخیره می شود.,Quina implementació (basada en matriu vs. basada en llista) es prefereix per a una cua i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)","basada en una llista enllaçada. perquè no emmagatzema els elements linealment a la memòria, sinó com a blocs individuals.",Која имплементација (заснована на низу на основу листе) је пожељна за ред и зашто?,"На основу везе, јер су динамични (без ограничења величине)","заснован на повезаној листи. јер ставке не чува линеарно у меморији, већ као појединачне блокове.","Implementasi mana (berbasis array vs. berbasis daftar) yang lebih disukai untuk antrian, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)",berdasarkan daftar tertaut. karena itu tidak menyimpan item secara linier dalam memori melainkan sebagai blok individu.,"Hvilken implementering (arraybasert vs. listebasert) foretrekkes for en kø, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)","koblet liste basert. fordi det ikke lagrer elementene lineært i minnet, men i stedet som individuelle blokker.",대기열에 대해 선호되는 구현 (배열 기반 대 목록 기반)은 무엇이며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",연결 목록 기반. 항목을 메모리에 선형으로 저장하지 않고 개별 블록으로 저장하기 때문입니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on jonossa suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","linkitetty luetteloon. koska se ei tallenna kohteita lineaarisesti muistiin, vaan yksittäisinä lohkoina.","Melyik implementációt (tömb alapú vagy lista alapú) részesítik előnyben a sorban, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","linkelt lista alapján. mert az elemeket nem lineárisan tárolja a memóriában, hanem inkább egyedi blokkokként.",Která implementace (založená na poli vs. založená na seznamu) je pro frontu upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","propojený seznam založený. protože neukládá položky lineárně do paměti, ale jako jednotlivé bloky.",Koja je implementacija (zasnovana na nizu ili na bazi popisa) poželjna za red i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)","zasnovan na povezanoj listi. jer stavke ne pohranjuje linearno u memoriju, već kao pojedinačne blokove."
267,267,679,4.2,array of characters need a termination character as well as size specification whether its explicit or implicit.,The strings declared using an array of characters have a null element added at the end of the array.,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,5.0,Bei den mit einem Zeichenarray deklarierten Zeichenfolgen wird am Ende des Arrays ein Nullelement hinzugefügt.,"Was ist der Hauptunterschied zwischen Zeichenfolgen, die mit dem Typ string deklariert wurden, und Zeichenfolgen, die mit einem Array von Zeichen deklariert wurden?","Array von Zeichen benötigen ein Abschlusszeichen sowie eine Größenangabe, ob explizit oder implizit.",Unsa ang punoan nga kalainan tali sa mga lubid nga gideklara nga gigamit ang type string kumpara sa mga string nga gideklara gamit ang usa ka han-ay nga mga karakter?,Ang mga kuwerdas nga gideklara gamit ang usa ka han-ay sa mga karakter adunay usa ka null nga elemento nga gidugang sa katapusan sa laray.,han-ay sa mga karakter kinahanglan sa usa ka katapusan nga karakter ingon man usab sa gidak-on nga detalye kung kini tin-aw o sa gipakita.,Vad är den största skillnaden mellan strängar som deklareras med hjälp av typsträngen kontra strängar som deklareras med en rad tecken?,Strängarna som deklareras med en rad tecken har ett nollelement som läggs till i slutet av matrisen.,"array av tecken behöver ett avslutningstecken samt storleksspecifikation, oavsett om det är uttryckligt eller implicit.",Quelle est la principale différence entre les chaînes déclarées à l&#39;aide de la chaîne de type et les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères?,Les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères ont un élément nul ajouté à la fin du tableau.,"tableau de caractères a besoin d&#39;un caractère de terminaison ainsi que d&#39;une spécification de taille, qu&#39;elle soit explicite ou implicite.",Wat is het belangrijkste verschil tussen strings die zijn gedeclareerd met behulp van het type string versus strings die zijn gedeclareerd met een reeks tekens?,"De strings die zijn gedeclareerd met behulp van een reeks tekens, hebben een null-element toegevoegd aan het einde van de reeks.","array van tekens heeft een terminatieteken nodig, evenals een groottespecificatie, zowel expliciet als impliciet.","В чем основное различие между строками, объявленными с использованием строки типа, и строками, объявленными с использованием массива символов?","Строки, объявленные с использованием массива символов, имеют нулевой элемент, добавленный в конец массива.","Для массива символов требуется символ завершения, а также указание размера, явное или неявное.",Qual è la principale differenza tra le stringhe dichiarate utilizzando il tipo stringa e le stringhe dichiarate utilizzando un array di caratteri?,Le stringhe dichiarate utilizzando un array di caratteri hanno un elemento nullo aggiunto alla fine dell&#39;array.,"L&#39;array di caratteri necessita di un carattere di terminazione e di una specifica della dimensione, sia essa esplicita o implicita.",¿Cuál es la principal diferencia entre las cadenas declaradas con el tipo cadena y las cadenas declaradas con una matriz de caracteres?,Las cadenas declaradas usando una matriz de caracteres tienen un elemento nulo agregado al final de la matriz.,"La matriz de caracteres necesita un carácter de terminación, así como una especificación de tamaño, ya sea explícita o implícita.",Jaka jest główna różnica między ciągami zadeklarowanymi przy użyciu typu string a ciągami zadeklarowanymi przy użyciu tablicy znaków?,Ciągi zadeklarowane przy użyciu tablicy znaków mają na końcu dodany element o wartości null.,"tablica znaków wymaga znaku zakończenia, a także określenia rozmiaru, czy to jawnego, czy niejawnego.",Sự khác biệt chính giữa các chuỗi được khai báo bằng cách sử dụng chuỗi kiểu so với các chuỗi được khai báo bằng cách sử dụng một mảng ký tự là gì?,Các chuỗi được khai báo bằng cách sử dụng một mảng ký tự có một phần tử rỗng được thêm vào cuối mảng.,mảng ký tự cần một ký tự kết thúc cũng như đặc điểm kỹ thuật kích thước cho dù nó rõ ràng hay tiềm ẩn.,文字列型を使用して宣言された文字列と文字の配列を使用して宣言された文字列の主な違いは何ですか？,文字の配列を使用して宣言された文字列には、配列の最後にnull要素が追加されています。,文字の配列には、明示的か暗黙的かを問わず、終了文字とサイズの指定が必要です。,使用字符串类型声明的字符串与使用字符数组声明的字符串之间的主要区别是什么？,使用字符数组声明的字符串在数组末尾添加了一个null元素。,字符数组需要终止字符以及大小规格（无论是显式的还是隐式的）。,ما هو الفرق الرئيسي بين الجمل المعلنة باستخدام سلسلة النوع مقابل الجمل المعلنة باستخدام مصفوفة من الأحرف؟,السلاسل المعلنة باستخدام مصفوفة من الأحرف لها عنصر فارغ يضاف في نهاية المصفوفة.,تحتاج مصفوفة الأحرف إلى حرف إنهاء بالإضافة إلى تحديد الحجم سواء كان صريحًا أو ضمنيًا.,"Яка основна різниця між рядками, оголошеними за допомогою типу string, від рядків, оголошених за допомогою масиву символів?","Рядки, оголошені за допомогою масиву символів, мають нульовий елемент, доданий в кінці масиву.","масиву символів потрібен символ закінчення, а також специфікація розміру, явна чи неявна.",Qual é a principal diferença entre strings declaradas usando o tipo string e strings declaradas usando uma matriz de caracteres?,As strings declaradas usando uma matriz de caracteres têm um elemento nulo adicionado ao final da matriz.,"array de caracteres precisa de um caracter de terminação, bem como de uma especificação de tamanho, seja explícito ou implícito.",تفاوت اصلی رشته های اعلام شده با استفاده از نوع رشته در مقابل رشته های اعلام شده با استفاده از آرایه ای از کاراکترها چیست؟,رشته هایی که با استفاده از یک آرایه از کاراکترها اعلان می شوند ، یک عنصر تهی در انتهای آرایه اضافه می کنند.,آرایه ای از نویسه ها به یک مشخصه خاتمه و همچنین مشخصات مشخص به صورت صریح یا ضمنی نیاز دارند.,Quina és la diferència principal entre les cadenes declarades mitjançant el tipus de cadena i les cadenes declarades mitjançant una matriu de caràcters?,Les cadenes declarades mitjançant una matriu de caràcters tenen un element nul afegit al final de la matriu.,"la matriu de caràcters necessita un caràcter de terminació, així com una especificació de mida, ja sigui explícita o implícita.",Која је главна разлика између низова декларисаних помоћу типа стринг у односу на низове декларисаних помоћу низа знакова?,Низови декларисани помоћу низа знакова имају нулти елемент додан на крају низа.,за низ знакова потребан је знак за завршетак као и спецификација величине било да је експлицитна или имплицитна.,Apa perbedaan utama antara string yang dideklarasikan menggunakan tipe string versus string yang dideklarasikan menggunakan array karakter?,String yang dideklarasikan menggunakan array karakter memiliki elemen null yang ditambahkan di akhir array.,Larik karakter membutuhkan karakter terminasi serta spesifikasi ukuran baik eksplisit maupun implisit.,Hva er hovedforskjellen mellom strenger deklarert ved hjelp av typestrengen versus strenger deklarert ved hjelp av en rekke tegn?,Strengene deklarert ved hjelp av en rekke tegn har et nullelement lagt til på slutten av matrisen.,"rekke tegn trenger et avslutningskarakter samt størrelsesspesifikasjon, enten det er eksplisitt eller implisitt.",문자열 유형을 사용하여 선언 된 문자열과 문자 배열을 사용하여 선언 된 문자열의 주요 차이점은 무엇입니까?,문자 배열을 사용하여 선언 된 문자열에는 배열 끝에 null 요소가 추가됩니다.,문자 배열은 명시 적이든 암시 적이든 종료 문자와 크기 사양이 필요합니다.,Mikä on tärkein ero merkkijonolla ilmoitettujen merkkijonojen ja merkkijonoa käyttäen ilmoitettujen merkkijonojen välillä?,Merkkijonoa käyttäen ilmoitetuissa merkkijonoissa taulukon loppuun lisätään nollaelementti.,"merkkijonot tarvitsevat lopetusmerkin sekä koon määrittelyn, onko se nimenomainen vai epäsuora.",Mi a fő különbség a karakterlánc használatával deklarált karakterláncok és a tömb karakterrel deklarált karakterláncok között?,A karaktertömb felhasználásával deklarált karakterláncok null elemet adnak a tömb végén.,"a karakterek tömbjének befejező karakterre van szüksége, valamint méretmeghatározásra, legyen az explicit vagy implicit.",Jaký je hlavní rozdíl mezi řetězci deklarovanými pomocí řetězce typu oproti řetězcům deklarovaným pomocí pole znaků?,Řetězce deklarované pomocí pole znaků mají na konci pole přidán nulový prvek.,"řada znaků potřebuje ukončovací znak i specifikaci velikosti, ať už je to explicitní nebo implicitní.",Koja je glavna razlika između nizova deklarisanih pomoću tipa string naspram nizova deklarisanih pomoću niza znakova?,Nizovi deklarirani pomoću niza znakova imaju nulti element dodan na kraju niza.,za niz znakova potreban je znak za završetak kao i specifikacija veličine bilo da je eksplicitna ili implicitna.
268,268,2177,12.1,a form of storing data that keeps the location in memory of an data type or object.,The address of a location in memory.,What is a pointer?,5.0,Die Adresse eines Speicherorts.,Was ist ein Zeiger?,"Eine Form zum Speichern von Daten, bei der der Speicherort eines Datentyps oder Objekts gespeichert wird.",Unsa ang usa ka pointer?,Ang adres sa usa ka lokasyon sa memorya.,usa ka porma sa pagtipig data nga nagpabilin sa lokasyon sa panumduman sa usa ka tipo sa datos o butang.,Vad är en pekare?,Adressen till en plats i minnet.,en form av lagring av data som håller platsen i minnet för en datatyp eller ett objekt.,Qu&#39;est-ce qu&#39;un pointeur?,L&#39;adresse d&#39;un emplacement en mémoire.,une forme de stockage de données qui conserve l&#39;emplacement en mémoire d&#39;un type de données ou d&#39;un objet.,Wat is een aanwijzer?,Het adres van een locatie in het geheugen.,een vorm van gegevensopslag die de locatie van een gegevenstype of object in het geheugen bewaart.,Что такое указатель?,Адрес места в памяти.,"форма хранения данных, которая хранит место в памяти типа данных или объекта.",Cos&#39;è un puntatore?,L&#39;indirizzo di una posizione in memoria.,una forma di archiviazione dei dati che mantiene la posizione in memoria di un tipo di dati o di un oggetto.,¿Qué es un puntero?,La dirección de una ubicación en la memoria.,una forma de almacenar datos que mantiene la ubicación en la memoria de un tipo de datos u objeto.,Co to jest wskaźnik?,Adres lokalizacji w pamięci.,"forma przechowywania danych, która utrzymuje lokalizację w pamięci typu danych lub obiektu.",Con trỏ là gì?,Địa chỉ của một vị trí trong bộ nhớ.,một hình thức lưu trữ dữ liệu giữ vị trí trong bộ nhớ của một kiểu dữ liệu hoặc đối tượng.,ポインタとは何ですか？,メモリ内の場所のアドレス。,データ型またはオブジェクトのメモリ内の場所を保持するデータを格納する形式。,什么是指针？,内存中位置的地址。,一种存储数据的形式，用于将位置保留在数据类型或对象的内存中。,ما هو المؤشر؟,عنوان موقع في الذاكرة.,شكل من أشكال تخزين البيانات يحافظ على الموقع في ذاكرة نوع البيانات أو الكائن.,Що таке вказівник?,Адреса місця в пам&#39;яті.,"форма зберігання даних, яка зберігає розташування в пам&#39;яті типу даних або об’єкта.",O que é um ponteiro?,O endereço de um local na memória.,uma forma de armazenamento de dados que mantém a localização na memória de um tipo de dados ou objeto.,اشاره گر چیست؟,آدرس مکانی در حافظه.,نوعی ذخیره اطلاعات که مکان را در حافظه نوع داده یا شی data ذخیره می کند.,Què és un punter?,L&#39;adreça d&#39;una ubicació a la memòria.,una forma d&#39;emmagatzemar dades que conserva la ubicació a la memòria d&#39;un tipus de dades o objecte.,Шта је показивач?,Адреса локације у меморији.,облик чувања података који задржава локацију у меморији типа података или објекта.,Apa itu penunjuk?,Alamat lokasi di memori.,bentuk penyimpanan data yang menyimpan lokasi dalam memori dari suatu tipe data atau objek.,Hva er en peker?,Adressen til en plassering i minnet.,en form for lagring av data som holder plasseringen i minnet til en datatype eller et objekt.,포인터 란 무엇입니까?,메모리에있는 위치의 주소.,데이터 유형 또는 객체의 메모리에 위치를 유지하는 데이터 저장 형식입니다.,Mikä on osoitin?,Muistissa olevan sijainnin osoite.,"tietojen tallennusmuoto, joka pitää sijainnin tietotyypin tai objektin muistissa.",Mi az a mutató?,A memóriában lévő hely címe.,"az adatok tárolásának olyan formája, amely egy adattípus vagy objektum memóriájában tartja a helyet.",Co je to ukazatel?,Adresa umístění v paměti.,"forma ukládání dat, která udržuje umístění v paměti datového typu nebo objektu.",Šta je pokazivač?,Adresa lokacije u memoriji.,oblik čuvanja podataka koji zadržava lokaciju u memoriji tipa podataka ili objekta.
269,269,654,4.1,"one way of specifying of array is A[10] ; other way of specifying array is a[arraysize] = [1,2,3,4,5,6,7,8,9,10}","In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,4.5,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?","Eine Möglichkeit zur Angabe eines Arrays ist A [10]. Eine andere Möglichkeit, ein Array anzugeben, ist [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.","ang us aka paagi sa paghingalan sa laray mao ang Usa ka [10]; uban pang paagi sa paghingalan sa array mao ang [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,"ett sätt att specificera array är A [10]; annat sätt att specificera matris är en [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,"une façon de spécifier un tableau est A [10]; une autre façon de spécifier un tableau est un [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.","een manier om een array te specificeren is A [10]; een andere manier om een array te specificeren is een [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,"один из способов задания массива - A [10]; другой способ указать массив - [arrayize] = [1,2,3,4,5,6,7,8,9,10}",Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,"un modo per specificare un array è A [10]; un altro modo per specificare l&#39;array è a [arraysize] = [1,2,3,4,5,6,7,8,9,10}",¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.","una forma de especificar una matriz es A [10]; otra forma de especificar una matriz es un [tamaño de matriz] = [1,2,3,4,5,6,7,8,9,10}",Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,"jednym ze sposobów określenia tablicy jest A [10]; inny sposób określenia tablicy to a [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,"một cách xác định của mảng là A [10]; một cách khác để chỉ định mảng là a [arrayize] = [1,2,3,4,5,6,7,8,9,10}",配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,"配列を指定する1つの方法はA [10]です。配列を指定する他の方法は、a [arraysize] = [1,2,3,4,5,6,7,8,9,10}です。",指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,"指定数组的一种方法是A [10]；指定数组的另一种方法是a [arraysize] = [1,2,3,4,5,6,7,8,9,10}",ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,إحدى طرق تحديد المصفوفة هي A [10] ؛ طريقة أخرى لتحديد المصفوفة هي [arraysize] = [1،2،3،4،5،6،7،8،9،10},Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,"одним із способів задання масиву є A [10]; інший спосіб вказати масив - це [масив розміру] = [1,2,3,4,5,6,7,8,9,10}",Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,"uma forma de especificar array é A [10]; outra maneira de especificar array é um [arraysize] = [1,2,3,4,5,6,7,8,9,10}",دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,یکی از روشهای تعیین آرایه A [10] است. روش دیگر تعیین آرایه [arraysize] = [1،2،3،4،5،6،7،8،9،10},Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,"una forma d&#39;especificar la matriu és A [10]; una altra forma d&#39;especificar la matriu és un [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,"један од начина специфицирања низа је А [10]; други начин специфицирања низа је [арраисизе] = [1,2,3,4,5,6,7,8,9,10}",Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.","salah satu cara untuk menentukan array adalah A [10]; cara lain untuk menentukan larik adalah [ukuran larik] = [1,2,3,4,5,6,7,8,9,10}",Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.","en måte å spesifisere array er A [10]; annen måte å spesifisere matrise på er [arraysize] = [1,2,3,4,5,6,7,8,9,10}",배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,"배열을 지정하는 한 가지 방법은 A [10]입니다. 배열을 지정하는 다른 방법은 a [arraysize] = [1,2,3,4,5,6,7,8,9,10}입니다.",Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,"yksi tapa määritellä taulukko on A [10]; muu tapa määrittää taulukko on [arraysize] = [1,2,3,4,5,6,7,8,9,10}",Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.","a tömb megadásának egyik módja A [10]; A tömb megadásának másik módja a [tömbméret] = [1,2,3,4,5,6,7,8,9,10}",Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,"jedním ze způsobů určení pole je A [10]; jiný způsob určení pole je [velikost pole] = [1,2,3,4,5,6,7,8,9,10}",Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,"jedan od načina specificiranja niza je A [10]; drugi način specificiranja niza je [arraysize] = [1,2,3,4,5,6,7,8,9,10}"
270,270,1461,8.6,in postfix format,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",How are infix expressions evaluated by computers?,4.0,"Zunächst werden sie in die Postfix-Form konvertiert, gefolgt von einer Auswertung des Postfix-Ausdrucks.",Wie werden Infix-Ausdrücke von Computern ausgewertet?,im Postfix-Format,Giunsa ang pagsusi sa mga ekspresyon sa infix sa mga kompyuter?,"Una, gibag-o sila ngadto sa porma nga postfix, gisundan sa usa ka pagsusi sa ekspresyon sa postfix.",sa format sa postfix,Hur utvärderas infixuttryck av datorer?,"Först omvandlas de till postfix-form, följt av en utvärdering av postfix-uttrycket.",i postfix-format,Comment les expressions infixes sont-elles évaluées par les ordinateurs?,"Tout d&#39;abord, ils sont convertis en forme de suffixe, suivi d&#39;une évaluation de l&#39;expression de suffixe.",au format postfix,Hoe worden tussenvoegseluitdrukkingen door computers geëvalueerd?,"Eerst worden ze omgezet in een postfix-vorm, gevolgd door een evaluatie van de postfix-expressie.",in postfix-formaat,Как инфиксные выражения оцениваются компьютерами?,"Сначала они преобразуются в постфиксную форму, после чего выполняется оценка постфиксного выражения.",в формате постфикса,Come vengono valutate le espressioni infisso dai computer?,"In primo luogo, vengono convertiti in formato suffisso, seguito da una valutazione dell&#39;espressione suffisso.",in formato suffisso,¿Cómo evalúan las computadoras las expresiones infijas?,"Primero, se convierten en forma de sufijo, seguido de una evaluación de la expresión de sufijo.",en formato postfix,W jaki sposób wyrażenia infix są oceniane przez komputery?,"Najpierw są konwertowane do postaci postfiksowej, po czym następuje ocena wyrażenia postfiksowego.",w formacie postfiksowym,Các biểu thức infix được máy tính đánh giá như thế nào?,"Đầu tiên, chúng được chuyển đổi thành dạng postfix, sau đó là đánh giá biểu thức postfix.",ở định dạng postfix,中置式はコンピューターによってどのように評価されますか？,最初に、それらは接尾辞形式に変換され、続いて接尾辞式が評価されます。,接尾辞形式,计算机如何评估中缀表达式？,首先，将它们转换为后缀形式，然后评估后缀表达式。,后缀格式,كيف يتم تقييم تعبيرات infix بواسطة أجهزة الكمبيوتر؟,أولاً ، يتم تحويلها إلى نموذج postfix ، متبوعًا بتقييم للتعبير postfix.,في شكل postfix,Як обчислюються комп’ютерні вирази для інфіксів?,"Спочатку вони перетворюються у форму постфіксу, після чого виконується оцінка виразу постфікса.",у форматі postfix,Como as expressões infixas são avaliadas por computadores?,"Primeiro, eles são convertidos para a forma pós-fixada, seguida por uma avaliação da expressão pós-fixada.",em formato postfix,عبارات اینفیکس توسط رایانه چگونه ارزیابی می شوند؟,ابتدا به فرم postfix تبدیل می شوند و به دنبال آن ارزیابی از بیان postfix می شود.,در قالب postfix,Com s’avaluen les expressions infix per ordinadors?,"En primer lloc, es converteixen en forma postfix, seguida d&#39;una avaluació de l&#39;expressió postfix.",en format postfix,Како рачунарски процењују инфиксне изразе?,"Прво се претварају у постфиксни облик, након чега следи процена израза постфикса.",у постфик формату,Bagaimana ekspresi infix dievaluasi oleh komputer?,"Pertama, mereka diubah menjadi bentuk postfix, diikuti dengan evaluasi ekspresi postfix.",dalam format postfix,Hvordan vurderes infix-uttrykk av datamaskiner?,"Først blir de konvertert til postfix-form, etterfulgt av en evaluering av postfix-uttrykket.",i postfix-format,중위 식은 컴퓨터에서 어떻게 평가됩니까?,먼저 접미사 형식으로 변환 된 다음 접미사 식의 평가가 이어집니다.,접미사 형식,Kuinka tietokoneet arvioivat infix-lausekkeita?,"Ensin ne muunnetaan postfix-muotoon, mitä seuraa postfix-lausekkeen arviointi.",postfix-muodossa,Hogyan értékelik a számítógépek az infix kifejezéseket?,"Először átalakítják őket postfix formává, majd értékelik a postfix kifejezést.",postfix formátumban,Jak jsou výrazy infixu vyhodnocovány počítači?,"Nejprve jsou převedeny do formy postfixu, následované hodnocením výrazu postfixu.",ve formátu postfix,Kako računarski procenjuju infiksne izraze?,"Prvo se pretvaraju u postfix oblik, nakon čega slijedi procjena izraza postfix.",u postfix formatu
271,271,1687,9.7,"A queue is more appropriate, because the clients which have waited the longest should be the first served.",queue,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",5.0,Warteschlange,"Welche Datenstruktur eignet sich besser zum Planen von Druckaufträgen auf einem Drucker, einem Stapel oder einer Warteschlange?","Eine Warteschlange ist besser geeignet, da die Clients, die am längsten gewartet haben, zuerst bedient werden sollten.","Unsang istraktura sa datos ang labi nga angay alang sa pag-iskedyul sa mga trabaho sa pag-print sa usa ka tig-imprinta, usa ka stack o usa ka pila?",pila,"Ang usa ka pila labi ka angay, tungod kay ang mga kliyente nga labing gihulat nga labing dugay kinahanglan maghulat sa una.","Vilken datastruktur är lämpligare för att schemalägga utskriftsjobb vid en skrivare, en stack eller en kö?",kö,"En kö är lämpligare, eftersom de klienter som har väntat längst bör vara förstklassiga.","Quelle structure de données est la plus appropriée pour planifier des travaux d&#39;impression sur une imprimante, une pile ou une file d&#39;attente?",queue,"Une file d&#39;attente est plus appropriée, car les clients qui ont attendu le plus longtemps devraient être les premiers servis.","Welke datastructuur is geschikter voor het plannen van printopdrachten bij een printer, een stapel of een wachtrij?",wachtrij,"Een wachtrij is geschikter, omdat de klanten die het langst hebben gewacht als eerste moeten worden bediend.","Какая структура данных больше подходит для планирования заданий печати на принтере, в стопке или очереди?",очередь,"Очередь более уместна, потому что клиенты, которые ждали дольше всего, должны обслуживаться первыми.","Quale struttura dati è più appropriata per programmare i lavori di stampa su una stampante, una pila o una coda?",coda,"Una coda è più appropriata, perché i client che hanno aspettato più a lungo dovrebbero essere i primi serviti.","¿Qué estructura de datos es más apropiada para programar trabajos de impresión en una impresora, una pila o una cola?",cola,"Una cola es más apropiada, porque los clientes que han esperado más tiempo deben ser los primeros en ser atendidos.","Jaka struktura danych jest bardziej odpowiednia do planowania zadań drukowania na drukarce, w stosie lub w kolejce?",kolejka,"Kolejka jest bardziej odpowiednia, ponieważ klienci, którzy czekali najdłużej, powinni być obsługiwani jako pierwsi.","Cấu trúc dữ liệu nào thích hợp hơn để lập lịch công việc in tại máy in, ngăn xếp hoặc hàng đợi?",xếp hàng,"Hàng đợi thích hợp hơn, vì những khách hàng đã chờ lâu nhất nên được phục vụ đầu tiên.",プリンタ、スタック、またはキューでの印刷ジョブのスケジュールに適したデータ構造はどれですか？,キュー,最も長く待機したクライアントが最初に処理される必要があるため、キューの方が適切です。,哪种数据结构更适合安排打印机，堆栈或队列中的打印作业？,队列,队列更合适，因为等待时间最长的客户端应该是第一个服务的。,ما هي بنية البيانات الأكثر ملاءمة لجدولة مهام الطباعة في طابعة أو مكدس أو قائمة انتظار؟,طابور,يعد الطابور أكثر ملاءمة ، لأن العملاء الذين انتظروا الأطول يجب أن يكونوا أول من يتم تقديمه.,"Яка структура даних більше підходить для планування завдань друку на принтері, стеку або черзі?",чергу,"Черга є більш доречною, оскільки клієнти, які очікували найдовше, повинні отримувати перше обслуговування.","Qual estrutura de dados é mais apropriada para agendar trabalhos de impressão em uma impressora, uma pilha ou uma fila?",fila,"Uma fila é mais apropriada, porque os clientes que esperaram mais tempo devem ser os primeiros a serem atendidos.",چه ساختار داده ای برای زمان بندی کارهای چاپ در چاپگر ، پشته یا صف مناسب تر است؟,صف,یک صف مناسب تر است ، زیرا مشتریانی که بیشترین انتظار را کشیده اند باید اولین خدمت باشند.,"Quina estructura de dades és més adequada per programar treballs d&#39;impressió en una impressora, una pila o una cua?",cua,"Una cua és més adequada, perquè els clients que han esperat més temps han de ser els primers servits.","Која је структура података прикладнија за заказивање послова штампања на штампачу, стогу или реду?",ред,"Ред је прикладнији, јер би клијенти који су најдуже чекали требали бити први услужени.","Struktur data apa yang lebih sesuai untuk menjadwalkan pekerjaan pencetakan di printer, tumpukan atau antrian?",antre,"Antrian lebih tepat, karena klien yang telah menunggu paling lama harus dilayani terlebih dahulu.","Hvilken datastruktur er mer hensiktsmessig for planlegging av utskriftsjobber på en skriver, en bunke eller en kø?",kø,"En kø er mer hensiktsmessig, fordi klientene som har ventet lengst, skal være førstegangs.","프린터, 스택 또는 대기열에서 인쇄 작업을 예약하는 데 더 적합한 데이터 구조는 무엇입니까?",열,가장 오래 기다린 클라이언트가 첫 번째로 제공되어야하므로 대기열이 더 적절합니다.,"Mikä tietorakenne on sopivampi tulostustöiden ajoitukseen tulostimessa, pinossa tai jonossa?",jonottaa,"Jono on sopivampi, koska asiakkaiden, jotka ovat odottaneet eniten, pitäisi olla ensimmäinen.","Milyen adatszerkezet megfelelőbb a nyomtatási feladatok ütemezéséhez nyomtatónál, veremnél vagy sornál?",sor,"A várakozási sor megfelelőbb, mivel a leghosszabb ideig várakozó ügyfeleket kell elsőnek kiszolgálni.","Jaká datová struktura je vhodnější pro plánování tiskových úloh na tiskárně, zásobníku nebo ve frontě?",fronta,"Fronta je vhodnější, protože klienti, kteří čekali nejdelší dobu, by měli být první obslouženi.","Koja je struktura podataka prikladnija za zakazivanje poslova ispisa na štampaču, stogu ili redu?",red,"Red je prikladniji, jer bi klijenti koji su najduže čekali trebali biti prvi usluženi."
272,272,1907,11.2,"local, global, local-variable, function specific",Private and public.,What are the access-specifiers that can be used in a C++ class definition?,2.5,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,"lokal, global, lokal variabel, funktionsspezifisch",Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,"local, global, local-variable, piho nga pag-andar",Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,"lokal, global, lokal variabel, funktionsspecifik",Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,"local, global, variable local, spécifique à la fonction",Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,"lokaal, globaal, lokaal-variabele, functiespecifiek",Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,"локальная, глобальная, локальная переменная, специфичная для функции",Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,"locale, globale, variabile locale, funzione specifica",¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,"local, global, variable local, función específica","Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,"lokalna, globalna, zmienna lokalna, specyficzna dla funkcji",Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,"cục bộ, toàn cục, biến cục bộ, hàm cụ thể",C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,ローカル、グローバル、ローカル変数、関数固有,C ++类定义中可以使用哪些访问说明符？,私人和公共。,局部，全局，局部变量，特定功能,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,محلي ، عالمي ، محلي ، متغير ، وظيفة محددة,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,"локальний, глобальний, локально-змінний, функціональний",Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,"local, global, variável local, função específica",مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,محلی ، جهانی ، محلی-متغیر ، عملکرد خاص,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,"local, global, local-variable, funció específica",Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,"локално, глобално, локално-променљиво, специфично за функцију",Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,"lokal, global, variabel lokal, spesifik fungsi",Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,"lokal, global, lokalvariabel, funksjonsspesifikk",C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,"로컬, 글로벌, 로컬 변수, 기능별","Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,"paikallinen, globaali, paikallinen muuttuja, toimintokohtainen",Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,"lokális, globális, lokális-változó, függvény-specifikus","Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,"lokální, globální, lokální proměnná, specifická funkce",Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,"lokalno, globalno, lokalno-varijabilno, specifično za funkciju"
273,273,2102,11.9,"For example we have an array on n elements, the divide and conquer splits up the array into equal halves and repeats this process until each element is by itself","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",Briefly describe the divide-and-conquer paradigm.,4.0,"Teilen Sie ein Problem in kleinere Teilprobleme auf, lösen Sie sie rekursiv und kombinieren Sie die Lösungen zu einer Lösung für das ursprüngliche Problem.",Beschreiben Sie kurz das Paradigma der Teilung und Eroberung.,"Zum Beispiel haben wir ein Array mit n Elementen, das Teilen und Erobern teilt das Array in gleiche Hälften auf und wiederholt diesen Vorgang, bis jedes Element für sich ist",Ihulagway sa mubu ang panig-ingnan sa pagkabahinbahin ug pagdaug.,"Bahina ang usa ka problema sa gagmay nga mga subproblems, sulbara kini pagbalik, ug pagkahuman isagol ang mga solusyon sa usa ka solusyon alang sa orihinal nga problema.","Pananglitan adunay kami usa ka laray sa mga n nga elemento, ang pagbahinbahin ug pagbuntog gibahin ang pag-ayo sa parehas nga katunga ug gibalikbalik kini nga proseso hangtod ang matag elemento mag-inusara.",Beskriv kort delnings- och erövringsparadigmet.,"Dela upp ett problem i mindre delproblem, lösa dem rekursivt och kombinera sedan lösningarna i en lösning för det ursprungliga problemet.","Till exempel har vi en matris på n-element, delningen och erövringen delar upp matrisen i lika halvor och upprepar denna process tills varje element är av sig själv",Décrivez brièvement le paradigme diviser pour vaincre.,"Divisez un problème en sous-problèmes plus petits, résolvez-les de manière récursive, puis combinez les solutions en une solution pour le problème d&#39;origine.","Par exemple, nous avons un tableau sur n éléments, le diviser et conquérir divise le tableau en deux moitiés égales et répète ce processus jusqu&#39;à ce que chaque élément soit par lui-même",Geef een korte beschrijving van het verdeel-en-heers-paradigma.,"Verdeel een probleem in kleinere deelproblemen, los ze recursief op en combineer de oplossingen vervolgens tot een oplossing voor het oorspronkelijke probleem.","We hebben bijvoorbeeld een array op n elementen, de verdeel en heers verdeelt de array in gelijke helften en herhaalt dit proces totdat elk element op zichzelf is",Кратко опишите парадигму «разделяй и властвуй».,"Разделите проблему на более мелкие подзадачи, решите их рекурсивно, а затем объедините решения в решение исходной проблемы.","Например, у нас есть массив из n элементов, функция «разделяй и властвуй» разбивает массив на равные половины и повторяет этот процесс, пока каждый элемент не будет сам по себе.",Descrivi brevemente il paradigma divide et impera.,"Dividere un problema in sottoproblemi più piccoli, risolverli in modo ricorsivo e quindi combinare le soluzioni in una soluzione per il problema originale.","Ad esempio, abbiamo un array su n elementi, il divide et impera divide l&#39;array in metà uguali e ripete questo processo finché ogni elemento è da solo",Describe brevemente el paradigma de divide y vencerás.,"Divida un problema en subproblemas más pequeños, resuélvalos de forma recursiva y luego combine las soluciones en una solución para el problema original.","Por ejemplo, tenemos una matriz de n elementos, dividir y conquistar divide la matriz en mitades iguales y repite este proceso hasta que cada elemento está por sí mismo",Krótko opisz paradygmat „dziel i rządź”.,"Podziel problem na mniejsze podproblemy, rozwiąż je rekurencyjnie, a następnie połącz rozwiązania w rozwiązanie pierwotnego problemu.","Na przykład mamy tablicę na n elementach, operacja divide and conquer dzieli tablicę na równe połowy i powtarza ten proces, aż każdy element będzie sam",Mô tả ngắn gọn mô hình chia để trị.,"Chia một vấn đề thành các bài toán con nhỏ hơn, giải chúng một cách đệ quy, sau đó kết hợp các giải pháp thành một giải pháp cho vấn đề ban đầu.","Ví dụ, chúng ta có một mảng trên n phần tử, phép chia và chia tách mảng thành các nửa bằng nhau và lặp lại quá trình này cho đến khi mỗi phần tử là chính nó",分割統治パラダイムについて簡単に説明します。,問題をより小さなサブ問題に分割し、それらを再帰的に解決してから、解決策を組み合わせて元の問題の解決策にします。,たとえば、n個の要素に配列があり、分割統治法は配列を等しい半分に分割し、各要素がそれ自体になるまでこのプロセスを繰り返します。,简要描述分而治之的范式。,将问题分成较小的子问题，递归地解决它们，然后将解决方案组合为原始问题的解决方案。,例如，我们在n个元素上有一个数组，除法和征服将数组分成相等的两半，并重复此过程，直到每个元素单独存在,صِف بإيجاز نموذج فرق تسد.,قسّم مشكلة إلى مشاكل فرعية أصغر ، وحلها بشكل متكرر ، ثم ادمج الحلول في حل للمشكلة الأصلية.,على سبيل المثال ، لدينا مصفوفة تحتوي على عدد n من العناصر ، يقسم القسمة والقهر المصفوفة إلى نصفين متساويين ويكرر هذه العملية حتى يصبح كل عنصر بمفرده,Коротко опишіть парадигму «розділи і переможи».,"Поділіть задачу на менші підзадачі, розв&#39;яжіть їх рекурсивно, а потім об&#39;єднайте розв&#39;язки у рішення вихідної задачі.","Наприклад, у нас є масив з n елементів, розділити і завоювати розбиває масив на рівні половини і повторює цей процес, поки кожен елемент не буде сам по собі",Descreva resumidamente o paradigma de dividir e conquistar.,"Divida um problema em subproblemas menores, resolva-os recursivamente e, em seguida, combine as soluções em uma solução para o problema original.","Por exemplo, temos uma matriz em n elementos, o dividir e conquistar divide a matriz em metades iguais e repete este processo até que cada elemento seja por si mesmo",الگوی تقسیم و تسخیر را به طور خلاصه توصیف کنید.,یک مسئله را به زیرمشکلات کوچکتر تقسیم کنید ، آنها را به صورت بازگشتی حل کنید و سپس راه حل ها را برای حل مسئله اصلی ترکیب کنید.,به عنوان مثال ما یک آرایه روی n عنصر داریم ، تقسیم و تسخیر آرایه را به دو قسمت مساوی تقسیم می کند و این روند را تکرار می کند تا زمانی که هر عنصر به خودی خود باشد,Descriviu breument el paradigma de dividir i conquerir.,"Dividiu un problema en subproblemes més petits, resoleu-los recursivament i, a continuació, combineu les solucions en una solució per al problema original.","Per exemple, tenim una matriu en n elements, la divisió i la conquesta divideix la matriu en meitats iguals i repeteix aquest procés fins que cada element està per si sol",Укратко опишите парадигму подели и освоји.,"Поделите проблем на мање потпроблеме, решите их рекурзивно, а затим комбинујте решења у решење за оригинални проблем.","На пример, имамо низ од н елемената, подели и освоји подели низ на једнаке половине и понавља овај поступак док сваки елемент не буде сам за себе",Jelaskan secara singkat paradigma bagi-dan-taklukkan.,"Bagilah masalah menjadi beberapa subproblem yang lebih kecil, selesaikan secara rekursif, lalu gabungkan solusi menjadi solusi untuk masalah aslinya.","Misalnya kita memiliki sebuah array pada n elemen, divide and conquer membagi array menjadi dua bagian yang sama dan mengulangi proses ini sampai setiap elemen dengan sendirinya",Beskriv kort splitt-og-erobre paradigmet.,"Del et problem i mindre delproblemer, løse dem rekursivt, og kombiner deretter løsningene til en løsning for det opprinnelige problemet.","For eksempel har vi en matrise på n elementer, delingen og erobringen deler opp matrisen i like halvdeler og gjentar denne prosessen til hvert element er av seg selv",분할 및 정복 패러다임을 간략하게 설명하십시오.,문제를 더 작은 하위 문제로 나누고 재귀 적으로 해결 한 다음 솔루션을 원래 문제에 대한 솔루션으로 결합합니다.,"예를 들어 n 개의 요소에 배열이 있고, 나누기와 정복은 배열을 동일한 절반으로 분할하고 각 요소가 자체적으로 될 때까지이 과정을 반복합니다.",Kuvaile lyhyesti jaa ja valloita -paradigmaa.,"Jaa ongelma pienempiin alaongelmiin, ratkaise ne rekursiivisesti ja yhdistä sitten ratkaisut alkuperäisen ongelman ratkaisuksi.","Esimerkiksi meillä on taulukko n elementistä, jako ja valloita jakaa matriisin yhtä suuriksi puoliksi ja toistaa prosessin, kunnes jokainen elementti on itsessään",Röviden írja le a megosztani és meghódítani paradigmát.,"Osszon egy problémát kisebb részproblémákra, oldja meg rekurzívan, majd a megoldásokat egyesítse az eredeti probléma megoldására.","Például van egy tömbünk n elemen, az osztás és meghódítás felosztja a tömböt egyenlő felekre és megismétli ezt a folyamatot, amíg minden elem önmagában nem lesz",Stručně popište paradigma rozděl a panuj.,"Rozdělte problém na menší dílčí problémy, řešte je rekurzivně a poté zkombinujte řešení do řešení původního problému.","Například máme pole na n prvcích, rozdělení a dobývání rozděluje pole na stejné poloviny a opakuje tento proces, dokud není každý prvek sám o sobě",Ukratko opišite paradigmu podijeli i osvoji.,"Podijelite problem na manje potprobleme, riješite ih rekurzivno, a zatim kombinirajte rješenja u rješenje za izvorni problem.","Na primjer, imamo niz na n elemenata, podijeli i osvoji podijeli niz na jednake polovice i ponavlja ovaj postupak dok svaki element ne postane sam za sebe"
274,274,2121,11.9,"smaller parts are easier to compare than comparing the whole, so it divides the problem down in halves until it can easily compare, then works backwards putting it back together to give the solution.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",Briefly describe the divide-and-conquer paradigm.,5.0,"Teilen Sie ein Problem in kleinere Teilprobleme auf, lösen Sie sie rekursiv und kombinieren Sie die Lösungen zu einer Lösung für das ursprüngliche Problem.",Beschreiben Sie kurz das Paradigma der Teilung und Eroberung.,"Kleinere Teile sind einfacher zu vergleichen als das Ganze zu vergleichen. Daher wird das Problem in zwei Hälften geteilt, bis es leicht zu vergleichen ist, und dann rückwärts zusammengesetzt, um die Lösung zu erhalten.",Ihulagway sa mubu ang panig-ingnan sa pagkabahinbahin ug pagdaug.,"Bahina ang usa ka problema sa gagmay nga mga subproblems, sulbara kini pagbalik, ug pagkahuman isagol ang mga solusyon sa usa ka solusyon alang sa orihinal nga problema.","ang gagmay nga mga bahin labi ka dali itanding kaysa pagtandi sa tibuuk, busa gibahinbahin ang problema sa mga bahin hangtod nga dali kini makumpara, dayon molihok paatras nga ibalik kini aron mahatagan solusyon.",Beskriv kort delnings- och erövringsparadigmet.,"Dela upp ett problem i mindre delproblem, lösa dem rekursivt och kombinera sedan lösningarna i en lösning för det ursprungliga problemet.","mindre delar är lättare att jämföra än att jämföra hela, så det delar upp problemet i halvor tills det enkelt kan jämföras, och arbetar sedan bakåt och sätter ihop det igen för att ge lösningen.",Décrivez brièvement le paradigme diviser pour vaincre.,"Divisez un problème en sous-problèmes plus petits, résolvez-les de manière récursive, puis combinez les solutions en une solution pour le problème d&#39;origine.","les pièces plus petites sont plus faciles à comparer que de comparer le tout, de sorte qu&#39;il divise le problème en deux jusqu&#39;à ce qu&#39;il puisse facilement comparer, puis travaille à rebours en le remettant ensemble pour donner la solution.",Geef een korte beschrijving van het verdeel-en-heers-paradigma.,"Verdeel een probleem in kleinere deelproblemen, los ze recursief op en combineer de oplossingen vervolgens tot een oplossing voor het oorspronkelijke probleem.","kleinere delen zijn gemakkelijker te vergelijken dan het geheel te vergelijken, dus het verdeelt het probleem in twee helften totdat het gemakkelijk kan worden vergeleken, en werkt vervolgens achteruit om het weer in elkaar te zetten om de oplossing te geven.",Кратко опишите парадигму «разделяй и властвуй».,"Разделите проблему на более мелкие подзадачи, решите их рекурсивно, а затем объедините решения в решение исходной проблемы.","меньшие части легче сравнивать, чем сравнивать целое, поэтому он делит проблему пополам, пока ее не будет легко сравнивать, а затем работает в обратном порядке, собирая ее вместе, чтобы дать решение.",Descrivi brevemente il paradigma divide et impera.,"Dividere un problema in sottoproblemi più piccoli, risolverli in modo ricorsivo e quindi combinare le soluzioni in una soluzione per il problema originale.","le parti più piccole sono più facili da confrontare che confrontare il tutto, quindi divide il problema a metà fino a quando non può facilmente confrontare, quindi lavora all&#39;indietro rimettendolo insieme per dare la soluzione.",Describe brevemente el paradigma de divide y vencerás.,"Divida un problema en subproblemas más pequeños, resuélvalos de forma recursiva y luego combine las soluciones en una solución para el problema original.","las partes más pequeñas son más fáciles de comparar que comparar el todo, por lo que divide el problema en mitades hasta que se pueda comparar fácilmente, luego trabaja al revés y vuelve a armarlo para dar la solución.",Krótko opisz paradygmat „dziel i rządź”.,"Podziel problem na mniejsze podproblemy, rozwiąż je rekurencyjnie, a następnie połącz rozwiązania w rozwiązanie pierwotnego problemu.","mniejsze części są łatwiejsze do porównania niż porównanie całości, więc dzieli problem na pół, aż będzie można go łatwo porównać, a następnie działa wstecz, składając go z powrotem, aby znaleźć rozwiązanie.",Mô tả ngắn gọn mô hình chia để trị.,"Chia một vấn đề thành các bài toán con nhỏ hơn, giải chúng một cách đệ quy, sau đó kết hợp các giải pháp thành một giải pháp cho vấn đề ban đầu.","Các phần nhỏ hơn dễ so sánh hơn so với tổng thể, vì vậy nó chia vấn đề thành một nửa cho đến khi nó có thể dễ dàng so sánh, sau đó hoạt động ngược lại gộp chúng lại với nhau để đưa ra giải pháp.",分割統治パラダイムについて簡単に説明します。,問題をより小さなサブ問題に分割し、それらを再帰的に解決してから、解決策を組み合わせて元の問題の解決策にします。,小さな部分は全体を比較するよりも比較しやすいので、問題を半分に分割して簡単に比較できるようにし、逆方向に作業して元に戻して解決策を提供します。,简要描述分而治之的范式。,将问题分成较小的子问题，递归地解决它们，然后将解决方案组合为原始问题的解决方案。,较小的部分比整体比较容易进行比较，因此它将问题分成两半，直到可以轻松比较为止，然后向后工作以将其放回一起以提供解决方案。,صِف بإيجاز نموذج فرق تسد.,قسّم مشكلة إلى مشاكل فرعية أصغر ، وحلها بشكل متكرر ، ثم ادمج الحلول في حل للمشكلة الأصلية.,من الأسهل مقارنة الأجزاء الأصغر من مقارنة الكل ، لذا فهي تقسم المشكلة إلى نصفين حتى يمكن مقارنتها بسهولة ، ثم تعمل بشكل عكسي مع إعادة تجميعها معًا لإعطاء الحل.,Коротко опишіть парадигму «розділи і переможи».,"Поділіть задачу на менші підзадачі, розв&#39;яжіть їх рекурсивно, а потім об&#39;єднайте розв&#39;язки у рішення вихідної задачі.","дрібніші частини легше порівняти, ніж порівнювати цілі, тому він ділить проблему навпіл, доки її не вдасться легко порівняти, а потім працює назад, складаючи її назад, щоб отримати рішення.",Descreva resumidamente o paradigma de dividir e conquistar.,"Divida um problema em subproblemas menores, resolva-os recursivamente e, em seguida, combine as soluções em uma solução para o problema original.","partes menores são mais fáceis de comparar do que comparar o todo, portanto, ele divide o problema pela metade até que possa ser facilmente comparado e, em seguida, trabalha de trás para frente, juntando-o novamente para fornecer a solução.",الگوی تقسیم و تسخیر را به طور خلاصه توصیف کنید.,یک مسئله را به زیرمشکلات کوچکتر تقسیم کنید ، آنها را به صورت بازگشتی حل کنید و سپس راه حل ها را برای حل مسئله اصلی ترکیب کنید.,مقایسه قطعات كوچكتر از مقایسه كل آسان تر است ، بنابراین مسئله را به دو نیم تقسیم می كند تا جایی كه بتواند به راحتی مقایسه شود ، سپس با كار برعكس آن را دوباره بهم می رساند تا محلول ارائه شود.,Descriviu breument el paradigma de dividir i conquerir.,"Dividiu un problema en subproblemes més petits, resoleu-los recursivament i, a continuació, combineu les solucions en una solució per al problema original.","les parts més petites són més fàcils de comparar que la de comparar la totalitat, de manera que divideix el problema a la meitat fins que es pot comparar fàcilment i, a continuació, funciona cap enrere i el torna a unir per donar la solució.",Укратко опишите парадигму подели и освоји.,"Поделите проблем на мање потпроблеме, решите их рекурзивно, а затим комбинујте решења у решење за оригинални проблем.","мање делове је лакше упоређивати него упоређивати целину, тако да проблем дели на пола док не може лако да се упореди, а затим ради уназад састављајући га поново дајући решење.",Jelaskan secara singkat paradigma bagi-dan-taklukkan.,"Bagilah masalah menjadi beberapa subproblem yang lebih kecil, selesaikan secara rekursif, lalu gabungkan solusi menjadi solusi untuk masalah aslinya.","bagian-bagian yang lebih kecil lebih mudah untuk dibandingkan daripada membandingkan keseluruhan, sehingga masalah itu terbagi menjadi dua bagian hingga dapat dengan mudah dibandingkan, kemudian bekerja mundur menyatukannya untuk memberikan solusi.",Beskriv kort splitt-og-erobre paradigmet.,"Del et problem i mindre delproblemer, løse dem rekursivt, og kombiner deretter løsningene til en løsning for det opprinnelige problemet.","mindre deler er lettere å sammenligne enn å sammenligne det hele, så det deler problemet ned i halvdeler til det enkelt kan sammenlignes, og jobber deretter bakover og setter det sammen igjen for å gi løsningen.",분할 및 정복 패러다임을 간략하게 설명하십시오.,문제를 더 작은 하위 문제로 나누고 재귀 적으로 해결 한 다음 솔루션을 원래 문제에 대한 솔루션으로 결합합니다.,작은 부분은 전체를 비교하는 것보다 비교하기가 더 쉽기 때문에 쉽게 비교할 수있을 때까지 문제를 반으로 나눈 다음 거꾸로 다시 결합하여 솔루션을 제공합니다.,Kuvaile lyhyesti jaa ja valloita -paradigmaa.,"Jaa ongelma pienempiin alaongelmiin, ratkaise ne rekursiivisesti ja yhdistä sitten ratkaisut alkuperäisen ongelman ratkaisuksi.","pienempiä osia on helpompi verrata kuin kokonaisuuden vertailua, joten se jakaa ongelman kahtia, kunnes se on helppo verrata, ja toimii sitten taaksepäin laittaen sen takaisin yhteen ratkaisun aikaansaamiseksi.",Röviden írja le a megosztani és meghódítani paradigmát.,"Osszon egy problémát kisebb részproblémákra, oldja meg rekurzívan, majd a megoldásokat egyesítse az eredeti probléma megoldására.","A kisebb részeket könnyebb összehasonlítani, mint összehasonlítani az egészet, ezért felosztja a problémát felekre, amíg könnyen össze nem hasonlítható, majd visszafelé haladva összerakja a megoldást.",Stručně popište paradigma rozděl a panuj.,"Rozdělte problém na menší dílčí problémy, řešte je rekurzivně a poté zkombinujte řešení do řešení původního problému.","menší části se snáze srovnávají než porovnávají celek, takže problém rozdělí na poloviny, dokud jej nebude možné snadno porovnat, a poté pracuje zpět a dá jej dohromady, aby poskytl řešení.",Ukratko opišite paradigmu podijeli i osvoji.,"Podijelite problem na manje potprobleme, riješite ih rekurzivno, a zatim kombinirajte rješenja u rješenje za izvorni problem.","manje dijelove je lakše usporediti nego uspoređivati cjelinu, pa problem dijeli na pola dok se ne može lako usporediti, a zatim djeluje unatrag, vraćajući ga zajedno dajući rješenje."
275,275,655,4.1,1-Initializing an array in a declaration with an initializer list 2-Specifying an arrayÃ¢â¬â¢s size with a constant variable,"In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,5.0,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?",1-Initialisieren eines Arrays in einer Deklaration mit einer Initialisiererliste 2-Angeben der Größe eines Arrays mit einer konstanten Variablen,Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.",1-Pagsugod sa usa ka laray sa usa ka deklarasyon nga adunay lista sa pasiuna nga 2-Pagpasabut sa usa ka sukat sa usa ka arrayÃ ¢ â¬â ¢ nga gidak-on nga adunay kanunay nga pagbag-o,Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,1-Initiera en matris i en deklaration med en initialiseringslista 2-Ange en matrisstorlek med en konstant variabel,Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,1-Initialisation d&#39;un tableau dans une déclaration avec une liste d&#39;initialisation 2-Spécification de la taille d&#39;un tableau avec une variable constante,Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.",1-Initialiseren van een array in een declaratie met een initialisatielijst 2-Specificeren van de grootte van een array met een constante variabele,Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,1-Инициализация массива в объявлении с помощью списка инициализаторов 2-Указание размера массива с помощью постоянной переменной,Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,1-Inizializzare un array in una dichiarazione con un elenco di inizializzatori 2-Specificare la dimensione di un array con una variabile costante,¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.",1-Inicializar una matriz en una declaración con una lista de inicializadores 2-Especificar el tamaño de una matriz con una variable constante,Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,1-Inicjowanie tablicy w deklaracji z listą inicjalizującą 2-Określanie rozmiaru tablicy za pomocą stałej zmiennej,Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,1-Khởi tạo mảng trong khai báo với danh sách bộ khởi tạo 2-Chỉ định kích thước mảng với một biến không đổi,配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,1-イニシャライザリストを使用して宣言で配列を初期化する2-定数変数を使用して配列のサイズを指定する,指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,1用初始化列表初始化一个声明中的数组2用常量变量指定一个数组的大小,ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,1-تهيئة مصفوفة في إعلان بقائمة مُهيئ 2- تحديد حجم مصفوفة بمتغير ثابت,Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,1-Ініціалізація масиву в декларації зі списком ініціалізатора 2-Вказівка розміру масиву з постійною змінною,Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,1-Inicializando um array em uma declaração com uma lista de inicializadores 2-Especificando o tamanho de um array com uma variável constante,دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,1-مقداردهی اولیه آرایه در یک اعلان با لیست آغازگر 2-تعیین اندازه آرایه با متغیر ثابت,Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,1-Inicialització d&#39;una matriu en una declaració amb una llista d&#39;inicialitzadors 2-Especificació de la mida d&#39;una matriu amb una variable constant,Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,1-Иницијализација низа у декларацији са листом иницијализатора 2-Одређивање величине низа са константном променљивом,Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.",1-Inisialisasi array dalam deklarasi dengan daftar penginisialisasi 2-Menentukan ukuran array dengan variabel konstan,Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.",1-Initialisere en matrise i en erklæring med en initialiseringsliste 2-Spesifisere en matrisestørrelse med en konstant variabel,배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,1- 이니셜 라이저 목록을 사용하여 선언에서 배열 초기화 2- 상수 변수로 배열 크기 지정,Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,1 - Taulukon matriisin alustaminen alustusluettelolla 2-Taulukon koon määrittäminen vakiomuuttujalla,Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.",1 - Tömb inicializálása egy deklarációban inicializáló listával. 2 - Tömb méretének megadása állandó változóval,Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,1-Inicializace pole v deklaraci pomocí seznamu inicializátorů 2-Určení velikosti pole s konstantní proměnnou,Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,1-Inicijalizacija niza u deklaraciji s listom inicijalizatora 2-Određivanje veličine niza s konstantnom varijablom
276,276,1998,11.5,a function that calls itself into a loop with a base case for a loop exit.,A function that calls itself.,What is a recursive function?,4.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine Funktion, die sich selbst in eine Schleife mit einem Basisfall für einen Schleifenausgang aufruft.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,usa ka function nga nagtawag sa iyang kaugalingon sa usa ka loop nga adunay base case alang sa usa ka loop exit.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,en funktion som kallar sig in i en slinga med ett basfall för en looputgång.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,une fonction qui s&#39;appelle dans une boucle avec un cas de base pour une sortie de boucle.,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,een functie die zichzelf aanroept in een lus met een basisscenario voor een lusuitgang.,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","функция, которая вызывает себя в цикл с базовым случаем для выхода из цикла.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,una funzione che chiama se stessa in un ciclo con un caso base per un&#39;uscita dal ciclo.,¿Qué es una función recursiva?,Una función que se llama a sí misma.,una función que se llama a sí misma en un bucle con un caso base para una salida de bucle.,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","funkcja, która wywołuje samą siebie w pętli z podstawą dla wyjścia pętli.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,một hàm gọi chính nó vào một vòng lặp với một trường hợp cơ sở để thoát khỏi vòng lặp.,再帰関数とは何ですか？,自分自身を呼び出す関数。,ループ出口のベースケースを使用して、自分自身をループに呼び出す関数。,什么是递归函数？,调用自身的函数。,一个以循环退出的基本情况将自己调用到循环中的函数。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,دالة تستدعي نفسها في حلقة مع حالة أساسية لخروج حلقة.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","функція, яка викликає себе в цикл з базовим випадком для виходу з циклу.",O que é uma função recursiva?,Uma função que chama a si mesma.,uma função que chama a si mesma em um loop com um caso base para uma saída de loop.,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,تابعی که خود را به یک حلقه با یک حالت پایه برای خروج حلقه فراخوانی می کند.,Què és una funció recursiva?,Una funció que s’autodenomina.,una funció que s&#39;anomena bucle amb una caixa base per a una sortida de bucle.,Шта је рекурзивна функција?,Функција која себе позива.,функција која себе позива у петљу са основним случајем за излаз из петље.,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,sebuah fungsi yang memanggil dirinya sendiri ke dalam loop dengan kasus dasar untuk keluar dari loop.,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,en funksjon som kaller seg til en sløyfe med en basissak for en sløyfeutgang.,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,루프 종료에 대한 기본 케이스가있는 루프로 자신을 호출하는 함수.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","toiminto, joka kutsuu itseään silmukkaan, jossa on peruskotelo silmukan poistumiselle.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","egy olyan függvény, amely behívja magát egy hurokba egy hurok kilépéshez szükséges alap tokkal.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","funkce, která se volá do smyčky se základním případem pro ukončení smyčky.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,funkcija koja se sama poziva u petlju s osnovnim slučajem za izlaz iz petlje.
277,277,851,5.1,Take a number and choose a pivot point and insert the number in the correct position from the pivot point.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","In one sentence, what is the main idea implemented by insertion sort?",3.0,"Wenn Sie jeweils ein Array-Element von links nach rechts nehmen, wird es an der rechten Position unter den bereits sortierten Elementen auf der linken Seite eingefügt.","Was ist in einem Satz die Hauptidee, die durch Einfügesortierung umgesetzt wird?",Nehmen Sie eine Zahl und wählen Sie einen Drehpunkt und fügen Sie die Zahl an der richtigen Position vom Drehpunkt aus ein.,"Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman pinaagi sa pagsulud?","Pagkuha usa ka elemento sa pag-ayo sa matag higayon, gikan sa wala ngadto sa tuo, gisukip kini sa tama nga posisyon taliwala sa mga naayos na nga elemento sa wala niini.",Pagkuha usa ka numero ug pagpili usa ka pivot point ug ipasok ang numero sa husto nga posisyon gikan sa pivot point.,"I en mening, vad är huvudidén som implementeras genom insättningssortering?","Tar ett matriselement åt gången, från vänster till höger, infogar det i rätt position bland de redan sorterade elementen till vänster.",Ta ett nummer och välj en pivotpunkt och sätt in numret i rätt position från pivotpunkten.,"En une phrase, quelle est l&#39;idée principale implémentée par le tri par insertion?","Prenant un élément du tableau à la fois, de gauche à droite, il l&#39;insère à la bonne position parmi les éléments déjà triés à sa gauche.",Prenez un nombre et choisissez un point de pivot et insérez le nombre dans la bonne position à partir du point de pivot.,Wat is in één zin het hoofdidee geïmplementeerd door invoegsortering?,"Het neemt één array-element tegelijk, van links naar rechts, en voegt het in de juiste positie tussen de reeds gesorteerde elementen aan de linkerkant.",Neem een nummer en kies een draaipunt en plaats het nummer op de juiste positie vanaf het draaipunt.,"Одним предложением, какова основная идея сортировки вставкой?","Принимая по одному элементу массива слева направо, он вставляет его в правильную позицию среди уже отсортированных элементов слева.","Возьмите число, выберите точку поворота и вставьте число в правильное положение от точки поворота.","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento per inserzione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, lo inserisce nella posizione giusta tra gli elementi già ordinati alla sua sinistra.",Prendi un numero e scegli un punto di rotazione e inserisci il numero nella posizione corretta dal punto di rotazione.,"En una oración, ¿cuál es la idea principal implementada por ordenación por inserción?","Tomando un elemento de matriz a la vez, de izquierda a derecha, lo inserta en la posición correcta entre los elementos ya ordenados a su izquierda.",Tome un número y elija un punto de pivote e inserte el número en la posición correcta desde el punto de pivote.,"Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wstawianie?","Biorąc jeden element tablicy na raz, od lewej do prawej, wstawia go we właściwej pozycji wśród już posortowanych elementów po jego lewej stronie.",Weź liczbę i wybierz punkt obrotu i wstaw liczbę we właściwej pozycji z punktu obrotu.,"Trong một câu, ý chính được triển khai bằng cách sắp xếp chèn là gì?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó sẽ chèn nó vào vị trí bên phải trong số các phần tử đã được sắp xếp ở bên trái của nó.",Lấy một số và chọn một điểm trục và chèn số vào đúng vị trí từ điểm trục.,一言で言えば、挿入ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、左側の既に並べ替えられた要素の中で正しい位置に挿入します。,番号を取り、ピボットポイントを選択し、ピボットポイントから正しい位置に番号を挿入します。,一句话，插入排序实现的主要思想是什么？,一次从左到右取一个数组元素，将其插入到左边已排序元素中的右边位置。,取一个数字并选择一个枢轴点，然后将数字插入到该枢轴点的正确位置。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الإدراج؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يدرجه في الموضع الصحيح بين العناصر التي تم فرزها بالفعل على يساره.,خذ رقمًا واختر نقطة محورية وأدخل الرقم في الموضع الصحيح من النقطة المحورية.,"В одному реченні, яка основна ідея реалізується шляхом вставки сортування?","Беручи по одному елементу масиву, зліва направо, він вставляє його в потрібне положення серед уже відсортованих елементів зліва.",Візьміть число та оберіть точку повороту та вставте число у правильне положення з точки повороту.,"Em uma frase, qual é a ideia principal implementada pelo tipo de inserção?","Pegando um elemento do array por vez, da esquerda para a direita, ele o insere na posição certa entre os elementos já classificados à sua esquerda.","Pegue um número, escolha um ponto pivô e insira o número na posição correta a partir do ponto pivô.",در یک جمله ، ایده اصلی که با درج مرتب سازی پیاده سازی شده است چیست؟,هر بار با گرفتن یک عنصر آرایه ، از چپ به راست ، آن را در موقعیت مناسب در میان عناصر مرتب شده در سمت چپ خود قرار می دهد.,یک عدد بردارید و یک نقطه محوری انتخاب کنید و شماره را در موقعیت صحیح از نقطه محوری وارد کنید.,"En una frase, quina és la idea principal implementada per la inserció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, l’insereix en la posició correcta entre els elements ja ordenats de la seva esquerra.",Agafeu un número i trieu un punt de pivot i inseriu el número en la posició correcta del punt de pivot.,"У једној реченици, која је главна идеја спроведена сортирањем уметања?","Узимајући по један елемент низа, слева надесно, убацује га у прави положај међу већ сортиране елементе лево.",Узмите број и одаберите тачку вешања и уметните број у тачну тачку из тачке везања.,"Dalam satu kalimat, apa ide utama yang diimplementasikan oleh insertion sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, itu menyisipkannya di posisi kanan di antara elemen yang sudah diurutkan di sebelah kirinya.",Ambil angka dan pilih titik pivot dan masukkan nomor pada posisi yang benar dari titik pivot.,"I en setning, hva er hovedideen implementert ved innsettingssortering?","Tar ett matriseelement om gangen, fra venstre til høyre, setter det inn i riktig posisjon blant de allerede sorterte elementene til venstre.",Ta et tall og velg et pivotpunkt og sett inn nummeret i riktig posisjon fra pivotpunktet.,한 문장에서 삽입 정렬로 구현 된 주요 아이디어는 무엇입니까?,한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 왼쪽에 이미 정렬 된 요소 중 오른쪽 위치에 삽입합니다.,숫자를 가져와 피벗 점을 선택하고 피벗 점에서 올바른 위치에 숫자를 삽입합니다.,Mikä on lisäyslajittelun pääidea yhdessä lauseessa?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se lisää sen oikeaan kohtaan jo järjestettyjen elementtien joukossa vasemmalla.",Ota numero ja valitse kääntöpiste ja lisää numero oikeaan kohtaan kääntöpisteestä.,"Egy mondatban mi a fő gondolat, amelyet a beszúrásos rendezéssel hajtanak végre?","Egyszerre egy tömb elemet vesz fel balról jobbra, és a bal oldali már rendezett elemek közé illeszti a jobb helyzetbe.","Vegyünk egy számot, válasszunk egy elfordulási pontot, és illesszük be a számot a helyes helyzetbe az elfordulási ponttól.","V jedné větě, jaká je hlavní myšlenka implementovaná třídou vložení?","Vezmeme-li po jednom prvku pole zleva doprava, vloží jej na správnou pozici mezi již seřazené prvky nalevo.",Vezměte číslo a vyberte otočný bod a vložte číslo do správné polohy z otočného bodu.,"U jednoj rečenici, koja je glavna ideja implementirana sortiranjem umetanja?","Uzimajući po jedan element niza, slijeva udesno, ubacuje ga u pravi položaj među već sortirane elemente s lijeve strane.",Uzmite broj i odaberite točku okretanja i umetnite broj u pravi položaj iz točke okretanja.
278,278,1772,10.4,a tree with up to two children or a right subtree and/or a left subtree,A tree for which the maximum number of children per node is two.,What is a binary tree?,5.0,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,ein Baum mit bis zu zwei Kindern oder einem rechten Teilbaum und / oder einem linken Teilbaum,Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,usa ka kahoy nga adunay hangtod sa duha ka mga anak o usa ka tuo nga subtree ug / o usa ka wala nga subtree,Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,ett träd med upp till två barn eller ett högert subtree och / eller ett vänster subtree,Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,un arbre avec jusqu&#39;à deux enfants ou un sous-arbre droit et / ou un sous-arbre gauche,Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,een boom met maximaal twee kinderen of een rechter substructuur en / of een linker substructuur,Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.",дерево с двумя дочерними элементами или правое поддерево и / или левое поддерево,Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,un albero con un massimo di due elementi secondari o una sottostruttura destra e / o una sottostruttura sinistra,¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,un árbol con hasta dos hijos o un subárbol derecho y / o un subárbol izquierdo,Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.",drzewo z maksymalnie dwojgiem dzieci lub prawe poddrzewo i / lub lewe poddrzewo,Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,cây có tối đa hai con hoặc cây con bên phải và / hoặc cây con bên trái,二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,最大2つの子を持つツリー、または右のサブツリーおよび/または左のサブツリー,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,最多有两个孩子的树或一个右子树和/或一个左子树,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,شجرة بها ما يصل إلى طفلين أو شجرة فرعية على اليمين و / أو شجرة فرعية يسار,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.",дерево з двома дітьми або праве піддерево та / або ліве піддерево,O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,uma árvore com até dois filhos ou uma subárvore direita e / ou uma subárvore esquerda,درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,درختی با حداکثر دو فرزند یا یک زیر شاخه راست و / یا یک زیر شاخه چپ,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,un arbre amb fins a dos fills o un subarbre dret i / o un subarbre esquerre,Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,дрво са до двоје деце или десно подстабло и / или лево подстабло,Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,pohon dengan maksimal dua anak atau anak pohon kanan dan / atau anak pohon kiri,Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,et tre med opptil to barn eller høyre undertre og / eller venstre undertreet,이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,최대 2 개의 하위 트리 또는 오른쪽 하위 트리 및 / 또는 왼쪽 하위 트리가있는 트리,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","puu, jossa on korkeintaan kaksi lasta, tai oikea ala- ja / tai vasen osa",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","egy fa legfeljebb két gyermekkel, vagy egy jobb és / vagy egy bal alfa",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.",strom až se dvěma dětmi nebo pravý podstrom a / nebo levý podstrom,Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,stablo s do dvoje djece ili desno poddrvo i / ili lijevo poddrvo
279,279,1477,8.6,"Writing arithmetic expressions is called infix notation.  This is because a binary operator (like '+') is written in between its two operands (as in ""a + b"").  There are two alternative forms of notation used in certain situations.  One is prefix notation, in which an operator is written before its operands.  In prefix notation, the sum of a and b is written ""+ a b"".  This is the notation used to write function calls in mathematics and computer science.  It is also used in the Lisp and Scheme programming languages.  In postfix notation, an operator is written after its operands.  The sum of a and b is written ""a b +"".  (You may have seen this as ""reverse Polish notation"".)  Postfix notation forms the conceptual basis for the way that arithmetic expressions are evaluated by a computer.  One important characteristic of both postfix and prefix notations is that they are unambiguous; no parentheses are needed to indicate the order of operations.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",How are infix expressions evaluated by computers?,5.0,"Zunächst werden sie in die Postfix-Form konvertiert, gefolgt von einer Auswertung des Postfix-Ausdrucks.",Wie werden Infix-Ausdrücke von Computern ausgewertet?,"Das Schreiben von arithmetischen Ausdrücken wird als Infixnotation bezeichnet. Dies liegt daran, dass ein binärer Operator (wie &#39;+&#39;) zwischen seine beiden Operanden geschrieben wird (wie in &quot;a + b&quot;). In bestimmten Situationen werden zwei alternative Notationsformen verwendet. Eine davon ist die Präfixnotation, in der ein Operator vor seinen Operanden geschrieben wird. In der Präfixnotation wird die Summe von a und b mit &quot;+ ab&quot; geschrieben. Dies ist die Notation, die zum Schreiben von Funktionsaufrufen in Mathematik und Informatik verwendet wird. Es wird auch in den Programmiersprachen Lisp und Scheme verwendet. In der Postfix-Notation wird ein Operator nach seinen Operanden geschrieben. Die Summe von a und b wird mit &quot;ab +&quot; geschrieben. (Möglicherweise haben Sie dies als &quot;umgekehrte polnische Notation&quot; angesehen.) Die Postfix-Notation bildet die konzeptionelle Grundlage für die Art und Weise, wie arithmetische Ausdrücke von einem Computer ausgewertet werden. Ein wichtiges Merkmal sowohl der Postfix- als auch der Präfixnotation ist, dass sie eindeutig sind. Es sind keine Klammern erforderlich, um die Reihenfolge der Operationen anzugeben.",Giunsa ang pagsusi sa mga ekspresyon sa infix sa mga kompyuter?,"Una, gibag-o sila ngadto sa porma nga postfix, gisundan sa usa ka pagsusi sa ekspresyon sa postfix.","Ang pagsulat sa mga ekspresyon sa aritmetika gitawag nga infix notation. Kini tungod kay ang usa ka binary operator (sama sa &#39;+&#39;) gisulat taliwala sa duha nga mga operan niini (sama sa &quot;a + b&quot;). Adunay duha nga kapilian nga porma sa notasyon nga gigamit sa piho nga mga sitwasyon. Ang usa mao ang notasyon sa unahan, diin ang usa ka operator gisulat sa wala pa ang mga opera niini. Sa pasiuna nga notasyon, ang kantidad sa a ug b gisulat nga &quot;+ ab&quot;. Kini ang gigamit nga notasyon sa pagsulat sa mga tawag sa pagpaandar sa matematika ug syensya sa kompyuter. Gigamit usab kini sa mga lengguahe sa programa nga Lisp ug Scheme. Sa notasyon sa postfix, ang usa ka operator gisulat pagkahuman sa mga opera niini. Ang kantidad sa a ug b gisulat nga &quot;ab +&quot;. (Mahimo nga nakita nimo kini ingon nga &quot;baligtad nga Polish nga notasyon&quot;.) Ang pahinumdom sa postfix naghimo sa konsepto nga basihan alang sa paagi nga ang mga ekspresyon sa aritmetika gisusi sa usa ka kompyuter. Ang usa ka hinungdanon nga kinaiyahan sa parehas nga mga pahinumdom sa postfix ug prefiks mao nga dili sila sigurado; dili kinahanglan ang parentesis aron ipakita ang han-ay sa operasyon.",Hur utvärderas infixuttryck av datorer?,"Först omvandlas de till postfix-form, följt av en utvärdering av postfix-uttrycket.","Att skriva aritmetiska uttryck kallas infixnotation. Detta beror på att en binär operator (som &#39;+&#39;) skrivs mellan sina två operander (som i &quot;a + b&quot;). Det finns två alternativa former av notering som används i vissa situationer. Det ena är prefixnotation, där en operatör skrivs före dess operander. I prefixnotation skrivs summan av a och b &quot;+ ab&quot;. Detta är notationen som används för att skriva funktionssamtal i matematik och datavetenskap. Den används också på programmeringsspråken Lisp och Scheme. I postfix-notation skrivs en operatör efter dess operander. Summan av a och b skrivs &quot;ab +&quot;. (Du kanske har sett detta som &quot;omvänd polsk notation&quot;.) Postfix-notation utgör den konceptuella grunden för hur aritmetiska uttryck utvärderas av en dator. Ett viktigt kännetecken för både postfix- och prefixnotationer är att de är entydiga; inga parenteser behövs för att ange arbetsordningen.",Comment les expressions infixes sont-elles évaluées par les ordinateurs?,"Tout d&#39;abord, ils sont convertis en forme de suffixe, suivi d&#39;une évaluation de l&#39;expression de suffixe.","L&#39;écriture d&#39;expressions arithmétiques est appelée notation infixe. C&#39;est parce qu&#39;un opérateur binaire (comme &#39;+&#39;) est écrit entre ses deux opérandes (comme dans &quot;a + b&quot;). Il existe deux formes alternatives de notation utilisées dans certaines situations. La première est la notation de préfixe, dans laquelle un opérateur est écrit avant ses opérandes. En notation de préfixe, la somme de a et b s&#39;écrit &quot;+ ab&quot;. C&#39;est la notation utilisée pour écrire les appels de fonction en mathématiques et en informatique. Il est également utilisé dans les langages de programmation Lisp et Scheme. En notation postfixe, un opérateur est écrit après ses opérandes. La somme de a et b s&#39;écrit &quot;ab +&quot;. (Vous avez peut-être vu cela comme une «notation polonaise inversée».) La notation Postfix constitue la base conceptuelle de la manière dont les expressions arithmétiques sont évaluées par un ordinateur. Une caractéristique importante des notations postfixes et préfixes est qu&#39;elles sont sans ambiguïté; aucune parenthèse n&#39;est nécessaire pour indiquer l&#39;ordre des opérations.",Hoe worden tussenvoegseluitdrukkingen door computers geëvalueerd?,"Eerst worden ze omgezet in een postfix-vorm, gevolgd door een evaluatie van de postfix-expressie.","Het schrijven van rekenkundige uitdrukkingen wordt tussenvoegselnotatie genoemd. Dit komt doordat een binaire operator (zoals &#39;+&#39;) tussen zijn twee operanden wordt geschreven (zoals in &quot;a + b&quot;). Er zijn twee alternatieve notatievormen die in bepaalde situaties worden gebruikt. Een daarvan is de prefixnotatie, waarin een operator vóór zijn operanden wordt geschreven. In de voorvoegselnotatie wordt de som van a en b geschreven als &quot;+ ab&quot;. Dit is de notatie die wordt gebruikt om functieaanroepen in wiskunde en informatica te schrijven. Het wordt ook gebruikt in de programmeertalen Lisp en Scheme. In postfix-notatie wordt een operator achter zijn operanden geschreven. De som van a en b wordt geschreven als &quot;ab +&quot;. (Je hebt dit misschien gezien als &quot;omgekeerde Poolse notatie&quot;.) Postfix-notatie vormt de conceptuele basis voor de manier waarop rekenkundige uitdrukkingen worden geëvalueerd door een computer. Een belangrijk kenmerk van zowel postfix- als prefix-notaties is dat ze ondubbelzinnig zijn; er zijn geen haakjes nodig om de volgorde van bewerkingen aan te geven.",Как инфиксные выражения оцениваются компьютерами?,"Сначала они преобразуются в постфиксную форму, после чего выполняется оценка постфиксного выражения.","Написание арифметических выражений называется инфиксной нотацией. Это потому, что бинарный оператор (например, &#39;+&#39;) записан между двумя его операндами (как в «a + b»). В определенных ситуациях используются две альтернативные формы обозначений. Одна из них - это префиксная запись, в которой оператор записывается перед его операндами. В префиксной записи сумма a и b записывается как «+ ab». Это обозначение, используемое для написания вызовов функций в математике и информатике. Он также используется в языках программирования Lisp и Scheme. В постфиксной записи оператор пишется после его операндов. Сумма a и b записывается как «ab +». (Возможно, вы видели это как «обратную польскую нотацию».) Постфиксная нотация формирует концептуальную основу того, как арифметические выражения вычисляются компьютером. Одной из важных характеристик как постфиксных, так и префиксных обозначений является то, что они недвусмысленны; для указания порядка операций скобки не нужны.",Come vengono valutate le espressioni infisso dai computer?,"In primo luogo, vengono convertiti in formato suffisso, seguito da una valutazione dell&#39;espressione suffisso.","La scrittura di espressioni aritmetiche è chiamata notazione infissa. Questo perché un operatore binario (come &#39;+&#39;) è scritto tra i suoi due operandi (come in &quot;a + b&quot;). Esistono due forme alternative di notazione utilizzate in determinate situazioni. Uno è la notazione del prefisso, in cui un operatore è scritto prima dei suoi operandi. Nella notazione del prefisso, la somma di aeb è scritta &quot;+ ab&quot;. Questa è la notazione utilizzata per scrivere chiamate di funzione in matematica e informatica. Viene anche utilizzato nei linguaggi di programmazione Lisp e Scheme. Nella notazione con suffisso, un operatore viene scritto dopo i suoi operandi. La somma di aeb è scritta &quot;ab +&quot;. (Potreste aver visto questo come &quot;notazione polacca inversa&quot;.) La notazione postfissa costituisce la base concettuale per il modo in cui le espressioni aritmetiche vengono valutate da un computer. Una caratteristica importante delle notazioni con suffisso e prefisso è che non sono ambigue; non sono necessarie parentesi per indicare l&#39;ordine delle operazioni.",¿Cómo evalúan las computadoras las expresiones infijas?,"Primero, se convierten en forma de sufijo, seguido de una evaluación de la expresión de sufijo.","Escribir expresiones aritméticas se llama notación infija. Esto se debe a que un operador binario (como &#39;+&#39;) está escrito entre sus dos operandos (como en &quot;a + b&quot;). Hay dos formas alternativas de notación que se utilizan en determinadas situaciones. Una es la notación de prefijo, en la que se escribe un operador antes de sus operandos. En notación de prefijo, la suma de ayb se escribe &quot;+ ab&quot;. Esta es la notación utilizada para escribir llamadas a funciones en matemáticas e informática. También se utiliza en los lenguajes de programación Lisp y Scheme. En notación postfija, un operador se escribe después de sus operandos. La suma de ayb se escribe &quot;ab +&quot;. (Es posible que haya visto esto como &quot;notación polaca inversa&quot;.) La notación de sufijo forma la base conceptual de la forma en que una computadora evalúa las expresiones aritméticas. Una característica importante de las notaciones de sufijo y de prefijo es que no son ambiguas; no se necesitan paréntesis para indicar el orden de las operaciones.",W jaki sposób wyrażenia infix są oceniane przez komputery?,"Najpierw są konwertowane do postaci postfiksowej, po czym następuje ocena wyrażenia postfiksowego.","Pisanie wyrażeń arytmetycznych nazywa się notacją wrostkową. Dzieje się tak, ponieważ operator binarny (taki jak „+”) jest zapisany pomiędzy jego dwoma operandami (jak w „a + b”). Istnieją dwie alternatywne formy notacji używane w pewnych sytuacjach. Jednym z nich jest notacja prefiksowa, w której operator jest zapisywany przed operandami. W notacji przedrostka suma a i b jest zapisana jako „+ ab”. Jest to notacja używana do pisania wywołań funkcji w matematyce i informatyce. Jest również używany w językach programowania Lisp i Scheme. W notacji postfiksowej po operandach zapisywany jest operator. Suma a i b jest zapisana jako „ab +”. (Być może widzieliście to jako &quot;odwróconą notację polską&quot;.) Notacja postfiksowa stanowi koncepcyjną podstawę sposobu, w jaki komputer oblicza wyrażenia arytmetyczne. Jedną z ważnych cech notacji zarówno z postfiksem, jak i przedrostkiem jest to, że są jednoznaczne; nie są potrzebne nawiasy, aby wskazać kolejność operacji.",Các biểu thức infix được máy tính đánh giá như thế nào?,"Đầu tiên, chúng được chuyển đổi thành dạng postfix, sau đó là đánh giá biểu thức postfix.","Viết biểu thức số học được gọi là ký hiệu infix. Điều này là do toán tử nhị phân (như &#39;+&#39;) được viết ở giữa hai toán hạng của nó (như trong &quot;a + b&quot;). Có hai hình thức ký hiệu thay thế được sử dụng trong một số trường hợp nhất định. Một là ký hiệu tiền tố, trong đó một toán tử được viết trước các toán hạng của nó. Trong ký hiệu tiền tố, tổng của a và b được viết &quot;+ ab&quot;. Đây là ký hiệu được sử dụng để viết các lệnh gọi hàm trong toán học và khoa học máy tính. Nó cũng được sử dụng trong các ngôn ngữ lập trình Lisp và Scheme. Trong ký hiệu hậu tố, một toán tử được viết sau các toán hạng của nó. Tổng của a và b được viết là &quot;ab +&quot;. (Bạn có thể coi đây là &quot;ký hiệu Ba Lan ngược&quot;.) Ký hiệu hậu tố tạo cơ sở khái niệm cho cách máy tính đánh giá các biểu thức số học. Một đặc điểm quan trọng của cả ký hiệu hậu tố và tiền tố là chúng không rõ ràng; không cần dấu ngoặc để chỉ ra thứ tự của các hoạt động.",中置式はコンピューターによってどのように評価されますか？,最初に、それらは接尾辞形式に変換され、続いて接尾辞式が評価されます。,算術式の記述は、中置記法と呼ばれます。これは、2項演算子（「+」など）が2つのオペランドの間に（「a + b」のように）書き込まれるためです。特定の状況で使用される表記法には、2つの代替形式があります。 1つはプレフィックス表記で、オペランドの前に演算子が記述されます。接頭辞表記では、aとbの合計は「+ ab」と表記されます。これは、数学やコンピュータサイエンスで関数呼び出しを書くために使用される表記法です。 LispおよびSchemeプログラミング言語でも使用されます。後置表記では、演算子はそのオペランドの後に記述されます。 aとbの合計は「ab +」と書かれます。 （これを「逆ポーランド記法」と見なしたかもしれません。）後置記法は、算術式がコンピューターによって評価される方法の概念的な基礎を形成します。接尾辞と接頭辞の両方の表記法の重要な特徴の1つは、それらが明確であることです。操作の順序を示すために括弧は必要ありません。,计算机如何评估中缀表达式？,首先，将它们转换为后缀形式，然后评估后缀表达式。,编写算术表达式称为中缀表示法。这是因为二进制运算符（如“ +”）被写入其两个操作数之间（如“ a + b”）。在某些情况下，可以使用两种替代形式的符号。一种是前缀表示法，其中在运算符之前写入一个运算符。用前缀表示法，a和b的总和写为“ + ab”。这是用于在数学和计算机科学中编写函数调用的表示法。 Lisp和Scheme编程语言中也使用它。在后缀表示法中，运算符写在其操作数之后。 a和b的总和写为“ ab +”。 （您可能已经将其视为“波兰语反向符号”。）后缀符号形成了计算机对算术表达式求值方式的概念基础。后缀和前缀表示法的一个重要特征是它们是明确的。无需括号即可指示操作顺序。,كيف يتم تقييم تعبيرات infix بواسطة أجهزة الكمبيوتر؟,أولاً ، يتم تحويلها إلى نموذج postfix ، متبوعًا بتقييم للتعبير postfix.,تسمى كتابة التعبيرات الحسابية بالتدوين اللوني. هذا لأن عامل التشغيل الثنائي (مثل &quot;+&quot;) مكتوب بين معامليه (كما في &quot;أ + ب&quot;). هناك نوعان من أشكال التدوين البديلة المستخدمة في مواقف معينة. الأول هو تدوين البادئة ، حيث يتم كتابة عامل التشغيل قبل معاملاته. في تدوين البادئة ، يتم كتابة مجموع a و b &quot;+ ab&quot;. هذا هو الترميز المستخدم لكتابة استدعاءات الوظائف في الرياضيات وعلوم الكمبيوتر. كما أنها تستخدم في لغات برمجة Lisp و Scheme. في تدوين postfix ، يتم كتابة عامل بعد معاملاته. مجموع a و b مكتوب &quot;ab +&quot;. (ربما تكون قد رأيت هذا على أنه &quot;تدوين بولندي عكسي&quot;.) يشكل تدوين Postfix الأساس المفاهيمي للطريقة التي يتم بها تقييم التعبيرات الحسابية بواسطة الكمبيوتر. إحدى السمات المهمة لكل من تدوينات ما بعد الإصلاح والبادئة هي أنها لا لبس فيها ؛ ليست هناك حاجة إلى أقواس للإشارة إلى ترتيب العمليات.,Як обчислюються комп’ютерні вирази для інфіксів?,"Спочатку вони перетворюються у форму постфіксу, після чого виконується оцінка виразу постфікса.","Запис арифметичних виразів називається інфіксною нотацією. Це тому, що між двома його операндами записаний двійковий оператор (наприклад, &quot;+&quot;) (як у &quot;a + b&quot;). У певних ситуаціях використовуються дві альтернативні форми позначення. Одним із них є позначення префікса, в якому оператор пишеться перед його операндами. У позначеннях префіксів сума a і b пишеться &quot;+ ab&quot;. Це позначення, яке використовується для написання викликів функцій у математиці та інформатиці. Він також використовується в мовах програмування Lisp і Scheme. У нотації постфікса оператор пишеться після його операндів. Сума a і b записується &quot;ab +&quot;. (Можливо, ви бачили це як &quot;зворотний польський запис&quot;.) Постфіксне позначення формує концептуальну основу способу обчислення арифметичних виразів за допомогою комп&#39;ютера. Однією з важливих характеристик як позначень постфіксів, так і префіксів є те, що вони є однозначними; для вказівки порядку операцій не потрібні дужки.",Como as expressões infixas são avaliadas por computadores?,"Primeiro, eles são convertidos para a forma pós-fixada, seguida por uma avaliação da expressão pós-fixada.","A escrita de expressões aritméticas é chamada de notação de infixo. Isso ocorre porque um operador binário (como &#39;+&#39;) é escrito entre seus dois operandos (como em &quot;a + b&quot;). Existem duas formas alternativas de notação usadas em certas situações. Uma é a notação de prefixo, na qual um operador é escrito antes de seus operandos. Na notação de prefixo, a soma de aeb é escrita &quot;+ ab&quot;. Esta é a notação usada para escrever chamadas de função em matemática e ciência da computação. Também é usado nas linguagens de programação Lisp e Scheme. Na notação pós-fixada, um operador é escrito após seus operandos. A soma de aeb é escrita &quot;ab +&quot;. (Você pode ter visto isso como &quot;notação polonesa reversa&quot;.) A notação pós-fixada forma a base conceitual para a maneira como as expressões aritméticas são avaliadas por um computador. Uma característica importante das notações pós-fixadas e prefixadas é que elas não são ambíguas; não são necessários parênteses para indicar a ordem das operações.",عبارات اینفیکس توسط رایانه چگونه ارزیابی می شوند؟,ابتدا به فرم postfix تبدیل می شوند و به دنبال آن ارزیابی از بیان postfix می شود.,نوشتن عبارات حسابي را نت نمي نامند. این بدان دلیل است که یک عملگر باینری (مانند &#39;+&#39;) در بین دو عملوند خود نوشته شده است (مانند &quot;a + b&quot;). دو شکل جایگزین نت گذاری وجود دارد که در شرایط خاص استفاده می شود. یکی پیشوند نماد گذاری است که در آن یک عملگر قبل از عملوندهای آن نوشته می شود. در نماد پیشوند ، مجموع a و b &quot;+ ab&quot; نوشته می شود. این علامت گذاری است که برای نوشتن فراخوانی عملکردی در ریاضیات و علوم کامپیوتر استفاده می شود. همچنین در زبان های برنامه نویسی Lisp و Scheme استفاده می شود. در علامت گذاری postfix ، یک عملگر بعد از عملوندها نوشته می شود. حاصل جمع a و b &quot;ab +&quot; نوشته شده است. (شاید این را به عنوان &quot;نماد معکوس لهستانی&quot; مشاهده کرده باشید.) نماد پسوند اساس مفهومی نحوه ارزیابی عبارات حساب توسط رایانه را تشکیل می دهد. یکی از ویژگیهای مهم نت پسوند و پیشوند این است که ابهام ندارند. برای نشان دادن ترتیب عملیات ، هیچ پرانتزی لازم نیست.,Com s’avaluen les expressions infix per ordinadors?,"En primer lloc, es converteixen en forma postfix, seguida d&#39;una avaluació de l&#39;expressió postfix.","L’escriptura d’expressions aritmètiques s’anomena notació per infixos. Això es deu al fet que un operador binari (com &#39;+&#39;) s&#39;escriu entre els seus dos operands (com en &quot;a + b&quot;). Hi ha dues formes alternatives de notació que s’utilitzen en determinades situacions. Un és la notació de prefix, en què un operador s’escriu abans dels seus operands. En la notació de prefix, la suma de a i b s&#39;escriu &quot;+ ab&quot;. Aquesta és la notació que s’utilitza per escriure trucades de funció en matemàtiques i informàtica. També s&#39;utilitza en els llenguatges de programació Lisp i Scheme. En la notació postfix, un operador s’escriu després dels seus operands. La suma de a i b s&#39;escriu &quot;ab +&quot;. (És possible que ho hàgiu vist com una &quot;notació polonesa inversa&quot;). La notació postfix constitueix la base conceptual de la manera com les expressions aritmètiques són avaluades per un ordinador. Una característica important de les notacions postfix i prefix és que són inequívocs; no calen parèntesis per indicar l&#39;ordre de les operacions.",Како рачунарски процењују инфиксне изразе?,"Прво се претварају у постфиксни облик, након чега следи процена израза постфикса.","Писање аритметичких израза назива се инфиксна нотација. То је зато што је између његова два операнда записан бинарни оператор (попут &#39;+&#39;) (као у &quot;а + б&quot;). Постоје два алтернативна облика записа који се користе у одређеним ситуацијама. Једна је ознака префикса, у којој је оператор написан пре својих операнда. У нотацији префикса сума а и б је написана „+ аб“. Ово је ознака која се користи за писање позива функција у математици и рачунарству. Такође се користи у програмским језицима Лисп и Сцхеме. У запису постфикса, оператор се пише иза његових операнда. Збир а и б записује се „аб +“. (Можда сте ово видели као „обрнути пољски запис“.) Постфиксни запис представља концептуалну основу за начин на који рачунар израчунава аритметичке изразе. Једна важна карактеристика нотација постфикса и префикса је да су недвосмислени; за означавање редоследа операција нису потребне заграде.",Bagaimana ekspresi infix dievaluasi oleh komputer?,"Pertama, mereka diubah menjadi bentuk postfix, diikuti dengan evaluasi ekspresi postfix.","Penulisan ekspresi aritmatika disebut notasi infiks. Ini karena operator biner (seperti &#39;+&#39;) ditulis di antara dua operannya (seperti dalam &quot;a + b&quot;). Ada dua bentuk notasi alternatif yang digunakan dalam situasi tertentu. Salah satunya adalah notasi prefiks, di mana operator ditulis sebelum operannya. Pada notasi prefiks, penjumlahan dari a dan b ditulis &quot;+ ab&quot;. Ini adalah notasi yang digunakan untuk menulis panggilan fungsi dalam matematika dan ilmu komputer. Ini juga digunakan dalam bahasa pemrograman Lisp dan Skema. Dalam notasi postfix, sebuah operator ditulis setelah operannya. Jumlah a dan b ditulis &quot;ab +&quot;. (Anda mungkin telah melihat ini sebagai &quot;notasi Polandia terbalik&quot;.) Notasi postfix membentuk dasar konseptual untuk cara ekspresi aritmatika dievaluasi oleh komputer. Salah satu karakteristik penting dari postfix dan notasi prefiks adalah bahwa keduanya tidak ambigu; tidak ada tanda kurung yang diperlukan untuk menunjukkan urutan operasi.",Hvordan vurderes infix-uttrykk av datamaskiner?,"Først blir de konvertert til postfix-form, etterfulgt av en evaluering av postfix-uttrykket.","Å skrive aritmetiske uttrykk kalles infiksnotasjon. Dette er fordi en binær operator (som &#39;+&#39;) er skrevet mellom de to operandene (som i &quot;a + b&quot;). Det er to alternative former for notasjon som brukes i visse situasjoner. Den ene er prefiksnotasjon, der en operatør er skrevet før operandene. I prefiksnotasjon skrives summen av a og b &quot;+ ab&quot;. Dette er notasjonen som brukes til å skrive funksjonsanrop i matematikk og informatikk. Den brukes også i programmeringsspråkene Lisp og Scheme. I postfix-notasjon skrives en operatør etter operandene. Summen av a og b er skrevet &quot;ab +&quot;. (Du har kanskje sett på dette som &quot;omvendt polsk notasjon&quot;.) Postfix-notasjon danner det konseptuelle grunnlaget for måten aritmetiske uttrykk blir evaluert av en datamaskin. Et viktig kjennetegn ved både postfiks og prefiksnotasjoner er at de er entydige; ingen parenteser er nødvendig for å indikere rekkefølgen på operasjonen.",중위 식은 컴퓨터에서 어떻게 평가됩니까?,먼저 접미사 형식으로 변환 된 다음 접미사 식의 평가가 이어집니다.,산술 식 작성을 중위 표기법이라고합니다. 이항 연산자 (예 : &#39;+&#39;)가 두 피연산자 사이에 작성되기 때문입니다 (예 : &quot;a + b&quot;). 특정 상황에서 사용되는 두 가지 대체 표기법이 있습니다. 하나는 연산자가 피연산자 앞에 쓰여지는 접두사 표기법입니다. 접두사 표기법에서 a와 b의 합은 &quot;+ ab&quot;로 표시됩니다. 이것은 수학 및 컴퓨터 과학에서 함수 호출을 작성하는 데 사용되는 표기법입니다. Lisp 및 Scheme 프로그래밍 언어에서도 사용됩니다. 접미사 표기법에서 연산자는 피연산자 뒤에 기록됩니다. a와 b의 합은 &quot;ab +&quot;로 기록됩니다. (이것을 &quot;역 폴란드 식 표기법&quot;으로 보셨을 것입니다.) 후위 표기법은 컴퓨터가 산술 식을 평가하는 방식에 대한 개념적 기반을 형성합니다. 접미사 표기법과 접두사 표기법의 중요한 특징 중 하나는 모호하지 않다는 것입니다. 작업 순서를 표시하는 데 괄호가 필요하지 않습니다.,Kuinka tietokoneet arvioivat infix-lausekkeita?,"Ensin ne muunnetaan postfix-muotoon, mitä seuraa postfix-lausekkeen arviointi.","Aritmeettisten lausekkeiden kirjoittamista kutsutaan infix-merkinnäksi. Tämä johtuu siitä, että binäärioperaattori (kuten &#39;+&#39;) kirjoitetaan sen kahden operandin väliin (kuten &quot;a + b&quot;). Tietyissä tilanteissa käytetään kahta vaihtoehtoista merkintämuotoa. Yksi on etuliitemerkintä, johon operaattori kirjoitetaan ennen operandiaan. Etuliitemerkinnöissä a: n ja b: n summa kirjoitetaan &quot;+ ab&quot;. Tätä merkintää käytetään funktiokutsujen kirjoittamiseen matematiikassa ja tietojenkäsittelytieteessä. Sitä käytetään myös Lisp- ja Scheme-ohjelmointikielissä. Postfix-merkinnässä operaattori kirjoitetaan sen operandien jälkeen. A: n ja b: n summa kirjoitetaan &quot;ab +&quot;. (Olet ehkä nähnyt tämän &quot;käänteisenä puolankielisenä merkintänä&quot;.) Postfix-merkinnät muodostavat käsitteellisen perustan tavalle, jolla tietokone arvioi aritmeettiset lausekkeet. Yksi tärkeä piirre sekä postfix- että prefix-merkinnöille on, että ne ovat yksiselitteisiä; toimintojen järjestyksen osoittamiseksi ei tarvita sulkeita.",Hogyan értékelik a számítógépek az infix kifejezéseket?,"Először átalakítják őket postfix formává, majd értékelik a postfix kifejezést.","A számtani kifejezések írását infix jelölésnek nevezzük. Ennek oka, hogy egy bináris operátor (például a &#39;+&#39;) két operandus közé van írva (mint az &quot;a + b&quot; -ben). Bizonyos helyzetekben kétféle alternatív jelölési formát lehet használni. Az egyik az előtag jelölés, amelyben egy operátort operandusai elé írnak. Az előtag jelölésében az a és b összege &quot;+ ab&quot;. Ez a jelölés a függvényhívások írására a matematikában és az informatikában. A Lisp és a Scheme programozási nyelvekben is használják. A postfix jelölésekben operátort írnak operandusai után. Az a és b összege &quot;ab +&quot;. (Lehet, hogy ezt &quot;fordított lengyel jelölésnek&quot; tekintette.) A Postfix jelölés képezi az alapját annak, ahogyan a számtani kifejezéseket egy számítógép értékeli. A postfix és prefix jelölések egyik fontos jellemzője, hogy egyértelműek; nincs szükség zárójelre a műveletek sorrendjének feltüntetésére.",Jak jsou výrazy infixu vyhodnocovány počítači?,"Nejprve jsou převedeny do formy postfixu, následované hodnocením výrazu postfixu.","Psaní aritmetických výrazů se nazývá infixová notace. Důvodem je, že binární operátor (jako &#39;+&#39;) je zapsán mezi dva operandy (jako v &quot;a + b&quot;). V určitých situacích se používají dvě alternativní formy notace. Jedním z nich je prefixový zápis, ve kterém je operátor zapsán před jeho operandy. V prefixovém zápisu je součet aab zapsán „+ ab“. Toto je zápis používaný k zápisu volání funkcí v matematice a informatice. Používá se také v programovacích jazycích Lisp a Scheme. V postfixové notaci je operátor zapsán za jeho operandy. Součet a a b je zapsán „ab +“. (Možná jste to viděli jako „obrácenou polskou notaci“.) Postfixová notace tvoří koncepční základ pro způsob, jakým jsou aritmetické výrazy vyhodnocovány počítačem. Jednou z důležitých charakteristik jak postfixových, tak prefixových notací je, že jsou jednoznačné; k označení pořadí operací nejsou potřeba žádné závorky.",Kako računarski procenjuju infiksne izraze?,"Prvo se pretvaraju u postfix oblik, nakon čega slijedi procjena izraza postfix.","Pisanje aritmetičkih izraza naziva se infix notacija. To je zato što je binarni operator (poput &#39;+&#39;) zapisan između svoja dva operanda (kao u &quot;a + b&quot;). Postoje dva alternativna oblika zapisa koji se koriste u određenim situacijama. Jedan je zapis prefiksa, u kojem je operator napisan prije svojih operanda. U notaciji prefiksa zbroj a i b zapisuje se &quot;+ ab&quot;. Ovo je oznaka koja se koristi za pisanje poziva funkcija u matematici i računarstvu. Takođe se koristi u programskim jezicima Lisp i Scheme. U notaciji postfiksa, operator se piše nakon njegovih operanda. Zbir a i b zapisuje se &quot;ab +&quot;. (Možda ste ovo vidjeli kao &quot;obrnuti poljski zapis&quot;.) Postfix notacija predstavlja konceptualnu osnovu za način na koji računar izračunava aritmetičke izraze. Jedna važna karakteristika notacija postfiksa i prefiksa je da su jednoznačne; nisu potrebne zagrade da bi se naznačio redoslijed operacija."
280,280,397,2.7,To hold reusable content or modules separate from the actual  source-code file that can be easily referenced and employed for different programs.,"To store a class interface, including data members and member function prototypes.",What is the role of a header-file?,4.0,"Speichern einer Klassenschnittstelle, einschließlich Datenelementen und Elementfunktionsprototypen.",Welche Rolle spielt eine Header-Datei?,"Wiederverwendbare Inhalte oder Module von der eigentlichen Quellcodedatei getrennt zu halten, auf die leicht verwiesen und für verschiedene Programme verwendet werden kann.",Unsa man ang papel sa usa ka header-file?,"Aron tipiganan ang usa ka interface sa klase, lakip ang mga miyembro sa datos ug mga prototype sa pagpaandar sa miyembro.",Aron mahuptan ang magamit nga sulud o mga modyul nga bulag gikan sa tinuud nga file sa source-code nga dali nga ma-refer ug magamit alang sa lainlaing mga programa.,Vilken roll har en rubrikfil?,"Att lagra ett klassgränssnitt, inklusive datamedlemmar och prototyper för medlemsfunktioner.",Att hålla återanvändbart innehåll eller moduler åtskilda från den faktiska källkodsfilen som enkelt kan hänvisas till och användas för olika program.,Quel est le rôle d&#39;un fichier d&#39;en-tête?,"Pour stocker une interface de classe, y compris les membres de données et les prototypes de fonction membre.",Pour conserver le contenu ou les modules réutilisables séparés du fichier de code source réel qui peut être facilement référencé et utilisé pour différents programmes.,Wat is de rol van een header-bestand?,"Om een klasse-interface op te slaan, inclusief gegevensleden en prototypes van lidfuncties.",Herbruikbare inhoud of modules gescheiden houden van het eigenlijke broncodebestand waarnaar gemakkelijk kan worden verwezen en die voor verschillende programma&#39;s kan worden gebruikt.,Какова роль заголовочного файла?,"Для хранения интерфейса класса, включая члены данных и прототипы функций-членов.","Хранить повторно используемый контент или модули отдельно от фактического файла исходного кода, на который можно легко ссылаться и использовать для различных программ.",Qual è il ruolo di un file di intestazione?,"Per memorizzare un&#39;interfaccia di classe, inclusi membri di dati e prototipi di funzioni membro.",Per mantenere i contenuti oi moduli riutilizzabili separati dal file del codice sorgente effettivo che può essere facilmente referenziato e utilizzato per diversi programmi.,¿Cuál es la función de un archivo de encabezado?,"Para almacenar una interfaz de clase, incluidos los miembros de datos y los prototipos de funciones de miembros.",Para mantener el contenido o los módulos reutilizables separados del archivo de código fuente real que puede ser fácilmente referenciado y empleado para diferentes programas.,Jaka jest rola pliku nagłówkowego?,"Do przechowywania interfejsu klasy, w tym składowych danych i prototypów funkcji składowych.","Aby przechowywać zawartość lub moduły wielokrotnego użytku oddzielnie od rzeczywistego pliku kodu źródłowego, do którego można łatwo się odwoływać i wykorzystywać w różnych programach.",Vai trò của tệp tiêu đề là gì?,"Để lưu trữ một giao diện lớp, bao gồm các thành viên dữ liệu và các nguyên mẫu hàm thành viên.",Để giữ nội dung hoặc mô-đun có thể tái sử dụng tách biệt với tệp mã nguồn thực tế để có thể dễ dàng tham chiếu và sử dụng cho các chương trình khác nhau.,ヘッダーファイルの役割は何ですか？,データメンバーとメンバー関数のプロトタイプを含むクラスインターフェイスを格納します。,さまざまなプログラムで簡単に参照および使用できる実際のソースコードファイルとは別に、再利用可能なコンテンツまたはモジュールを保持するため。,头文件的作用是什么？,存储一个类接口，包括数据成员和成员函数原型。,将可重用的内容或模块与实际的源代码文件分开存放，可以轻松地将其引用并用于不同的程序。,ما هو دور ملف الرأس؟,لتخزين واجهة فئة ، بما في ذلك أعضاء البيانات ونماذج وظائف الأعضاء.,لعقد محتوى أو وحدات قابلة لإعادة الاستخدام منفصلة عن ملف شفرة المصدر الفعلي الذي يمكن الرجوع إليه بسهولة واستخدامه في برامج مختلفة.,Яка роль заголовного файлу?,"Зберігати інтерфейс класу, включаючи члени даних та прототипи функцій членів.","Утримувати багаторазовий вміст або модулі окремо від фактичного файлу вихідного коду, на який можна легко посилатися та використовувати його для різних програм.",Qual é a função de um arquivo de cabeçalho?,"Para armazenar uma interface de classe, incluindo membros de dados e protótipos de função de membro.",Para manter o conteúdo reutilizável ou módulos separados do arquivo de código-fonte real que pode ser facilmente referenciado e empregado para diferentes programas.,نقش یک پرونده هدر چیست؟,برای ذخیره یک رابط کلاس ، از جمله اعضای داده و نمونه های اولیه عملکرد اعضا.,برای نگه داشتن محتوا یا ماژول های قابل استفاده مجدد جدا از فایل کد منبع واقعی که می تواند به راحتی برای برنامه های مختلف مورد استفاده قرار گیرد و مورد استفاده قرار گیرد.,Quin és el paper d&#39;un fitxer de capçalera?,"Per emmagatzemar una interfície de classe, inclosos membres de dades i prototips de funció de membre.",Per contenir contingut o mòduls reutilitzables separats del fitxer de codi font real que es pugui fer referència i utilitzar fàcilment per a diferents programes.,Која је улога заглавља-датотеке?,"Да чува интерфејс класе, укључујући чланове података и прототипове функције члана.",Да се садржај или модули за вишекратну употребу одвоје од стварне датотеке изворног кода на коју се лако може референцирати и користити за различите програме.,Apa peran file header?,"Untuk menyimpan antarmuka kelas, termasuk anggota data dan prototipe fungsi anggota.",Untuk menyimpan konten atau modul yang dapat digunakan kembali terpisah dari file kode sumber sebenarnya yang dapat dengan mudah direferensikan dan digunakan untuk program yang berbeda.,Hva er rollen som en header-fil?,"Å lagre et klassegrensesnitt, inkludert datamedlemmer og prototyper for medlemsfunksjoner.",Å holde gjenbrukbart innhold eller moduler atskilt fra den faktiske kildekodefilen som lett kan refereres til og brukes til forskjellige programmer.,헤더 파일의 역할은 무엇입니까?,데이터 멤버 및 멤버 함수 프로토 타입을 포함한 클래스 인터페이스를 저장합니다.,쉽게 참조하고 다른 프로그램에 사용할 수있는 실제 소스 코드 파일과는 별도로 재사용 가능한 컨텐츠 또는 모듈을 보유합니다.,Mikä on otsikkotiedoston rooli?,"Luokkaliittymän, mukaan lukien datajäsenet ja jäsenfunktioprototyypit, tallentaminen.","Uudelleenkäytettävän sisällön tai moduulien pitäminen erillään varsinaisesta lähdekooditiedostosta, johon voidaan helposti viitata ja käyttää eri ohjelmia.",Mi a fejlécfájl szerepe?,"Osztályfelület tárolására, beleértve az adattagokat és a tagfüggvény prototípusokat.","Az újrafelhasználható tartalom vagy modulok elkülönítése a tényleges forráskód fájltól, amely könnyen hivatkozható és felhasználható a különböző programokhoz.",Jaká je role souboru záhlaví?,"K uložení rozhraní třídy, včetně datových členů a prototypů členské funkce.","Držet opakovaně použitelný obsah nebo moduly odděleně od skutečného souboru zdrojového kódu, na který lze snadno odkazovat a použít jej pro různé programy.",Koja je uloga zaglavlja-datoteke?,"Za pohranu sučelja klase, uključujući članove podataka i prototipove funkcije člana.",Da se sadržaj ili moduli za višekratnu upotrebu odvoje od stvarne datoteke izvornog koda na koju se lako može referencirati i koristiti za različite programe.
281,281,1217,7.4,you send a pointer to an object of the LinkedList class,By reference.,How are linked lists passed as arguments to a function?,2.5,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,Sie senden einen Zeiger auf ein Objekt der LinkedList-Klasse,Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,nagpadala ka usa ka pointer sa usa ka butang sa klase sa LinkedList,Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,du skickar en pekare till ett objekt i klassen LinkedList,Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,vous envoyez un pointeur vers un objet de la classe LinkedList,Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,u stuurt een pointer naar een object van de klasse LinkedList,Как связанные списки передаются в качестве аргументов функции?,По ссылке.,вы отправляете указатель на объект класса LinkedList,Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,si invia un puntatore a un oggetto della classe LinkedList,¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,envía un puntero a un objeto de la clase LinkedList,W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,wysyłasz wskaźnik do obiektu klasy LinkedList,Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,bạn gửi một con trỏ đến một đối tượng của lớp LinkedList,リンクリストはどのように引数として関数に渡されますか？,参照による。,LinkedListクラスのオブジェクトへのポインタを送信します,链表如何作为参数传递给函数？,引用。,您发送一个指向LinkedList类的对象的指针,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,تقوم بإرسال مؤشر إلى كائن من فئة LinkedList,Як зв’язані списки передаються як аргументи функції?,За посиланням.,ви відправляєте вказівник на об&#39;єкт класу LinkedList,Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,você envia um ponteiro para um objeto da classe LinkedList,چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,شما یک اشاره گر به یک شی از کلاس LinkedList ارسال می کنید,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,envieu un punter a un objecte de la classe LinkedList,Како се повезане листе прослеђују као аргументи функцији?,По референци.,шаљете показивач на објекат класе ЛинкедЛист,Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,Anda mengirim penunjuk ke objek kelas LinkedList,Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,du sender en peker til et objekt fra LinkedList-klassen,연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,LinkedList 클래스의 객체에 대한 포인터를 보냅니다.,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,lähetät osoittimen LinkedList-luokan objektille,Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,mutatót küld a LinkedList osztály objektumának,Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,pošlete ukazatel na objekt třídy LinkedList,Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,šaljete pokazivač na objekt klase LinkedList
282,282,1416,8.4,use a linked list and keep track of a pointer that points to the first item,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,4.0,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,"Verwenden Sie eine verknüpfte Liste und verfolgen Sie einen Zeiger, der auf das erste Element zeigt",Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.",paggamit sa usa ka nalakip nga lista ug pagsubay sa usa ka pointer nga nagpunting sa una nga butang,Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,använd en länkad lista och håll reda på en pekare som pekar på det första objektet,Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.",utiliser une liste liée et garder une trace d&#39;un pointeur qui pointe vers le premier élément,Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.",gebruik een gekoppelde lijst en houd een aanwijzer bij die naar het eerste item verwijst,Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.","использовать связанный список и отслеживать указатель, указывающий на первый элемент",Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.",utilizzare un elenco collegato e tenere traccia di un puntatore che punta al primo elemento,¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.",usar una lista vinculada y realizar un seguimiento de un puntero que apunta al primer elemento,Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.","użyj połączonej listy i śledź wskaźnik, który wskazuje na pierwszą pozycję",Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.",sử dụng danh sách được liên kết và theo dõi con trỏ trỏ đến mục đầu tiên,リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,リンクリストを使用して、最初のアイテムを指すポインターを追跡します,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,使用链接列表并跟踪指向第一项的指针,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,استخدم قائمة مرتبطة وتتبع المؤشر الذي يشير إلى العنصر الأول,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.","використовуйте зв’язаний список і відстежуйте вказівник, який вказує на перший елемент",Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.",use uma lista vinculada e acompanhe um ponteiro que aponta para o primeiro item,چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,از یک لیست پیوندی استفاده کنید و یک اشاره گر را که به اولین مورد نشان می دهد ردیابی کنید,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.",utilitzeu una llista enllaçada i feu un seguiment d’un punter que apunta al primer element,Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.",користите повезану листу и пратите показивач који показује на прву ставку,Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.",gunakan daftar tertaut dan lacak penunjuk yang menunjuk ke item pertama,Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.",bruk en koblet liste og hold oversikt over en peker som peker mot det første elementet,목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,연결 목록을 사용하고 첫 번째 항목을 가리키는 포인터 추적,Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.",käytä linkitettyä luetteloa ja seuraa ensimmäiseen kohteeseen osoittavaa osoitinta,Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.","használjon összekapcsolt listát, és kövesse nyomon az első elemre mutató mutatót",Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.","použijte propojený seznam a sledujte ukazatel, který ukazuje na první položku",Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.",koristite povezanu listu i pratite pokazivač koji pokazuje na prvu stavku
283,283,1558,9.2,rear and front,enqueue and dequeue,What are the two main functions defined by a queue?,2.5,Enqueue und Dequeue,Was sind die beiden Hauptfunktionen einer Warteschlange?,hinten und vorne,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka pila?,enqueue ug dequeue,likud ug atubang,Vilka är de två huvudfunktionerna som definieras av en kö?,enqueue och dequeue,bak och fram,Quelles sont les deux principales fonctions définies par une file d&#39;attente?,mettre en file d&#39;attente et retirer la file d&#39;attente,arrière et avant,Wat zijn de twee belangrijkste functies die door een wachtrij worden gedefinieerd?,in de wachtrij plaatsen en uit de wachtrij halen,achter en voor,Какие две основные функции определяет очередь?,поставить в очередь и исключить из очереди,задняя и передняя,Quali sono le due funzioni principali definite da una coda?,accodare e rimuovere dalla coda,posteriore e anteriore,¿Cuáles son las dos funciones principales definidas por una cola?,poner y quitar de la cola,trasero y delantero,Jakie dwie główne funkcje definiuje kolejka?,enqueue i dequeue,tył i przód,Hai hàm chính được xác định bởi một hàng đợi là gì?,enqueue và dequeue,phía sau và phía trước,キューによって定義される2つの主な機能は何ですか？,エンキューおよびデキュー,リアとフロント,队列定义的两个主要功能是什么？,入队和出队,前后,ما هي الوظيفتان الرئيسيتان اللتان تحددهما قائمة الانتظار؟,قائمة و dequeue,الخلفية والأمامية,Які дві основні функції визначаються чергою?,чергу та випуск,ззаду і спереду,Quais são as duas funções principais definidas por uma fila?,enfileirar e retirar da fila,traseira e dianteira,دو عملکرد اصلی که توسط یک صف تعریف شده اند کدامند؟,enqueue و dequeue,عقب و جلو,Quines són les dues funcions principals definides per una cua?,cola i cola,posterior i frontal,Које су две главне функције дефинисане редом?,енкуеуе и декуеуе,позади и напред,Apa dua fungsi utama yang ditentukan oleh antrian?,enqueue dan dequeue,belakang dan depan,Hva er de to hovedfunksjonene definert av en kø?,enqueue og dequeue,bak og foran,대기열에서 정의하는 두 가지 주요 기능은 무엇입니까?,대기열에 넣기 및 대기열에서 빼기,후면 및 전면,Mitkä ovat kaksi jonon määrittelemää päätoimintoa?,enqueue ja dequeue,takana ja edessä,"Mi a két fő funkció, amelyet egy sor határoz meg?",enqueue és dequeue,hátul és elöl,Jaké jsou dvě hlavní funkce definované ve frontě?,zařazení do fronty a zařazení do fronty,zadní a přední,Koje su dvije glavne funkcije definirane redom?,enqueue i dequeue,straga i sprijeda
284,284,2054,11.7,static arrays cannot be changed while normal arrays can be changed,The static arrays are intialized only once when the function is called.,What is the difference between an array that is declared as static and one that is not?,2.5,Die statischen Arrays werden beim Aufruf der Funktion nur einmal initialisiert.,"Was ist der Unterschied zwischen einem Array, das als statisch deklariert ist, und einem Array, das nicht als statisch deklariert ist?","statische Arrays können nicht geändert werden, während normale Arrays geändert werden können",Unsa ang kalainan tali sa usa ka laray nga gideklara nga static ug usa nga dili?,Ang mga static arrays intialized kausa ra kung gitawag ang function.,dili mausab ang mga static array samtang mahimo’g mabag-o ang normal nga paghan-ay,Vad är skillnaden mellan en array som deklareras som statisk och en som inte är det?,De statiska matriserna intialiseras bara en gång när funktionen anropas.,statiska matriser kan inte ändras medan normala matriser kan ändras,Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,Les tableaux statiques ne sont initialisés qu&#39;une seule fois lorsque la fonction est appelée.,les tableaux statiques ne peuvent pas être modifiés tandis que les tableaux normaux peuvent être modifiés,Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,De statische arrays worden slechts één keer geïnitialiseerd wanneer de functie wordt aangeroepen.,"statische arrays kunnen niet worden gewijzigd, terwijl normale arrays kunnen worden gewijzigd","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?",Статические массивы инициализируются только один раз при вызове функции.,"статические массивы не могут быть изменены, в то время как обычные массивы могут быть изменены",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,Gli array statici vengono inizializzati solo una volta quando viene chiamata la funzione.,gli array statici non possono essere modificati mentre gli array normali possono essere modificati,¿Cuál es la diferencia entre una matriz que se declara como estática y una que no lo es?,Las matrices estáticas se inicializan solo una vez cuando se llama a la función.,"las matrices estáticas no se pueden cambiar, mientras que las matrices normales se pueden cambiar","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice statyczne są inicjowane tylko raz, gdy wywoływana jest funkcja.","tablic statycznych nie można zmieniać, podczas gdy zwykłe tablice można zmieniać",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng tĩnh chỉ được intialize một lần khi hàm được gọi.,mảng tĩnh không thể thay đổi trong khi mảng bình thường có thể được thay đổi,静的として宣言されている配列とそうでない配列の違いは何ですか？,静的配列は、関数が呼び出されたときに1回だけ初期化されます。,静的配列は変更できませんが、通常の配列は変更できます,声明为静态的数组与未声明为静态的数组有什么区别？,调用函数时，静态数组仅初始化一次。,静态数组无法更改，而普通数组可以更改,ما الفرق بين المصفوفة التي تم التصريح بأنها ثابتة والمصفوفة التي لا يتم التصريح عنها؟,يتم تهيئة المصفوفات الثابتة مرة واحدة فقط عند استدعاء الوظيفة.,لا يمكن تغيير المصفوفات الثابتة بينما يمكن تغيير المصفوفات العادية,"У чому різниця між масивом, який оголошено статичним, і масивом, який не є?",Статичні масиви ініціалізуються лише один раз при виклику функції.,"статичні масиви не можна змінити, тоді як звичайні масиви можна змінити",Qual é a diferença entre uma matriz que é declarada como estática e outra que não é?,"Os arrays estáticos são inicializados apenas uma vez, quando a função é chamada.",arrays estáticos não podem ser alterados enquanto arrays normais podem ser alterados,چه تفاوتی بین آرایه ای که به صورت استاتیک اعلام می شود و دیگری که نیست ، چیست؟,وقتی فراخوانی تابع می شود ، آرایه های ساکن فقط یک بار intialize می شوند.,آرایه های ساکن را نمی توان تغییر داد در حالی که آرایه های عادی را می توان تغییر داد,Quina diferència hi ha entre una matriu que es declara estàtica i una que no ho és?,Les matrius estàtiques només s’inicialitzen una vegada quan es crida la funció.,les matrius estàtiques no es poden canviar mentre que les matrius normals,Која је разлика између низа који је декларисан као статичан и низа који није?,Статички низови инцијализују се само једном када се функција позове.,статички низови се не могу мењати док се нормални низови могу мењати,Apa perbedaan antara array yang dideklarasikan sebagai statis dan yang tidak?,Array statis diinisialisasi hanya sekali ketika fungsi dipanggil.,array statis tidak dapat diubah sementara array normal dapat diubah,Hva er forskjellen mellom en matrise som er erklært som statisk og en som ikke er det?,De statiske matriser intialiseres bare en gang når funksjonen kalles.,statiske matriser kan ikke endres mens normale matriser kan endres,정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,함수가 호출 될 때 정적 배열은 한 번만 초기화됩니다.,정적 배열은 변경할 수 없지만 일반 배열은 변경할 수 있습니다.,Mitä eroa on staattiseksi ilmoitetun taulukon ja ei-taulukon välillä?,"Staattiset taulukot intialisoidaan vain kerran, kun funktio kutsutaan.","staattisia taulukoita ei voida muuttaa, kun taas normaaleja matriiseja voidaan muuttaa",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikus tömböket csak egyszer intializálják, amikor a függvény meghívásra kerül.","A statikus tömbök nem változtathatók meg, míg a normál tömbök megváltoztathatók","Jaký je rozdíl mezi polem, které je deklarováno jako statické a tím, které není?","Statická pole jsou inicializována pouze jednou, když je funkce volána.","statická pole nelze změnit, zatímco normální pole lze změnit",Koja je razlika između niza koji je deklariran kao statičan i niza koji nije?,Statički nizovi incijaliziraju se samo jednom kada se funkcija pozove.,statički nizovi se ne mogu mijenjati dok se normalni nizovi mogu mijenjati
285,285,2200,12.2,keep a value of how many operations it takes and add to this value each time a function is called.,Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,3.5,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,Behalten Sie einen Wert für die Anzahl der erforderlichen Operationen bei und addieren Sie diesen Wert bei jedem Aufruf einer Funktion.,Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,ipadayon ang usa ka kantidad kung pila ka mga operasyon ang gikinahanglan ug idugang sa kini nga kantidad sa matag higayon nga gitawag ang usa ka function.,Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,behåll ett värde på hur många operationer det tar och lägg till detta värde varje gång en funktion anropas.,Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,Conservez une valeur du nombre d&#39;opérations nécessaires et ajoutez-la à cette valeur chaque fois qu&#39;une fonction est appelée.,Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,houd een waarde bij van het aantal bewerkingen dat nodig is en voeg deze waarde toe telkens wanneer een functie wordt aangeroepen.,Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,сохраняйте значение количества операций и добавляйте к этому значению каждый раз при вызове функции.,Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,mantenere un valore di quante operazioni sono necessarie e aggiungere a questo valore ogni volta che viene chiamata una funzione.,¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,mantener un valor de cuántas operaciones se necesitan y agregar a este valor cada vez que se llama a una función.,Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,"zachowaj wartość liczby operacji, które trzeba wykonać i dodawaj do tej wartości za każdym razem, gdy wywoływana jest funkcja.",Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,giữ một giá trị của bao nhiêu phép toán mà nó thực hiện và thêm vào giá trị này mỗi khi một hàm được gọi.,アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,必要な操作の数の値を保持し、関数が呼び出されるたびにこの値に追加します。,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,保留需要执行多少操作的值，并在每次调用函数时将其添加到该值。,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,احتفظ بقيمة عدد العمليات التي تستغرقها وأضف إلى هذه القيمة في كل مرة يتم استدعاء وظيفة.,Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,"зберігайте значення кількості операцій, які потрібно, і додайте до цього значення кожного разу, коли викликається функція.",Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,mantenha um valor de quantas operações são necessárias e adicione a esse valor cada vez que uma função for chamada.,روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,مقداری از عملیات را نگه دارید و هر بار که یک تابع فراخوانی می شود به این مقدار اضافه کنید.,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,mantingueu un valor de quantes operacions es necessiten i afegiu-hi cada vegada que es crida una funció.,Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,задржите вредност броја операција и додајте овој вредности сваки пут када се функција позове.,Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,pertahankan nilai dari berapa banyak operasi yang diperlukan dan tambahkan ke nilai ini setiap kali fungsi dipanggil.,Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,"beholde en verdi av hvor mange operasjoner det tar, og legg til denne verdien hver gang en funksjon kalles.",알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,필요한 작업 수의 값을 유지하고 함수가 호출 될 때마다이 값에 추가합니다.,Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,"pidä arvo kuinka monta operaatiota se tarvitsee ja lisää tähän arvoon joka kerta, kun toiminto kutsutaan.",Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,"tartsa meg annak értékét, hogy hány művelet szükséges, és adja hozzá ezt az értéket minden egyes funkció meghívásakor.",Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,"udržujte hodnotu kolik operací trvá a přidejte k této hodnotě pokaždé, když je funkce volána.",Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,zadržite vrijednost koliko operacija je potrebno i dodajte toj vrijednosti svaki put kad se funkcija pozove.
286,286,1382,8.3,Use an index value called top to keep track of the last element in the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.5,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Verwenden Sie einen Indexwert namens top, um das letzte Element im Array zu verfolgen.",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.",Paggamit usa ka kantidad sa indeks nga gitawag sa taas aron masubay ang katapusang elemento sa laray.,Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.",Använd ett indexvärde som kallas top för att hålla reda på det sista elementet i arrayen.,Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.",Utilisez une valeur d&#39;index appelée top pour garder une trace du dernier élément du tableau.,Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.",Gebruik een indexwaarde met de naam top om het laatste element in de array bij te houden.,Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","Используйте значение индекса с именем top, чтобы отслеживать последний элемент в массиве.",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.",Usa un valore di indice chiamato top per tenere traccia dell&#39;ultimo elemento dell&#39;array.,¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.",Utilice un valor de índice llamado top para realizar un seguimiento del último elemento de la matriz.,Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","Użyj wartości indeksu o nazwie top, aby śledzić ostatni element tablicy.",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.",Sử dụng một giá trị chỉ mục được gọi là top để theo dõi phần tử cuối cùng trong mảng.,配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,topというインデックス値を使用して、配列の最後の要素を追跡します。,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,使用称为top的索引值来跟踪数组中的最后一个元素。,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,استخدم قيمة فهرس تسمى top لتتبع العنصر الأخير في المصفوفة.,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","Використовуйте значення індексу, яке називається top, щоб відстежувати останній елемент масиву.",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.",Use um valor de índice denominado top para controlar o último elemento do array.,چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,برای پیگیری آخرین عنصر آرایه از مقداری شاخص به نام top استفاده کنید.,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.",Utilitzeu un valor d&#39;índex anomenat superior per fer un seguiment de l&#39;últim element de la matriu.,Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.",Користите вредност индекса која се зове топ да бисте пратили последњи елемент у низу.,Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.",Gunakan nilai indeks yang disebut atas untuk melacak elemen terakhir dalam larik.,Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.",Bruk en indeksverdi kalt topp for å holde rede på det siste elementet i matrisen.,어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,배열의 마지막 요소를 추적하려면 top이라는 인덱스 값을 사용하십시오.,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","Käytä indeksin arvoa top, jotta voit seurata matriisin viimeistä elementtiä.",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.",A tömb utolsó elemének nyomon követéséhez használja a top nevű indexértéket.,Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","Chcete-li sledovat poslední prvek v poli, použijte hodnotu indexu zvanou top.",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.",Koristite vrijednost indeksa zvanu top da biste pratili posljednji element u nizu.
287,287,2190,12.2,"Try several sets of data on an algorithm that includes worst case, best case, and random cases.  Also try and run the same program on a different computer with the same specs",Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,4.5,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,"Probieren Sie mehrere Datensätze mit einem Algorithmus aus, der Worst-Case-, Best-Case- und Zufallsfälle umfasst. Versuchen Sie auch, dasselbe Programm auf einem anderen Computer mit denselben Spezifikationen auszuführen",Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,"Sulayi ang ubay-ubay nga mga hugpong sa datos sa usa ka algorithm nga adunay sulud nga labing daotan nga kaso, labing kaayo nga kaso, ug mga random nga kaso. Sulayan usab ang pagpadagan sa parehas nga programa sa lainlaing kompyuter nga adunay parehas nga mga detalye",Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,"Prova flera uppsättningar data på en algoritm som innehåller värsta fall, bästa fall och slumpmässiga fall. Försök också köra samma program på en annan dator med samma specifikationer",Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,"Essayez plusieurs ensembles de données sur un algorithme qui inclut le pire des cas, le meilleur des cas et les cas aléatoires. Essayez également d&#39;exécuter le même programme sur un ordinateur différent avec les mêmes spécifications",Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,"Probeer verschillende sets gegevens op een algoritme dat de worst case, best case en willekeurige gevallen omvat. Probeer ook hetzelfde programma uit te voeren op een andere computer met dezelfde specificaties",Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,"Попробуйте использовать несколько наборов данных по алгоритму, который включает наихудший случай, лучший случай и случайные случаи. Также попробуйте запустить ту же программу на другом компьютере с теми же характеристиками.",Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,"Prova diversi set di dati su un algoritmo che include casi peggiori, migliori e casuali. Prova anche a eseguire lo stesso programma su un computer diverso con le stesse specifiche",¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,"Pruebe varios conjuntos de datos en un algoritmo que incluya el peor de los casos, el mejor de los casos y los casos aleatorios. También intente ejecutar el mismo programa en una computadora diferente con las mismas especificaciones",Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,"Wypróbuj kilka zestawów danych w algorytmie obejmującym przypadki najgorsze, najlepsze i przypadkowe. Spróbuj także uruchomić ten sam program na innym komputerze z tymi samymi specyfikacjami",Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,"Thử một số bộ dữ liệu trên một thuật toán bao gồm trường hợp xấu nhất, trường hợp tốt nhất và trường hợp ngẫu nhiên. Cũng thử và chạy cùng một chương trình trên một máy tính khác với cùng thông số kỹ thuật",アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,最悪の場合、最良の場合、およびランダムな場合を含むアルゴリズムで、いくつかのデータセットを試してください。また、同じ仕様の別のコンピューターで同じプログラムを実行してみてください,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,在一种算法中尝试几组数据，包括最坏情况，最好情况和随机情况。还要尝试在具有相同规格的另一台计算机上运行相同的程序,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,جرب عدة مجموعات من البيانات على خوارزمية تتضمن أسوأ حالة وأفضل حالة وحالات عشوائية. حاول أيضًا تشغيل البرنامج نفسه على جهاز كمبيوتر مختلف بنفس المواصفات,Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,"Спробуйте кілька наборів даних щодо алгоритму, який включає найгірший випадок, найкращий випадок та випадкові випадки. Також спробуйте запустити ту саму програму на іншому комп’ютері з однаковими характеристиками",Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,"Experimente vários conjuntos de dados em um algoritmo que inclui o pior caso, o melhor caso e os casos aleatórios. Além disso, tente executar o mesmo programa em um computador diferente com as mesmas especificações",روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,چندین مجموعه داده را در یک الگوریتم امتحان کنید که شامل موارد بدترین ، بهترین حالت و تصادفی باشد. همچنین برنامه مشابه را روی رایانه دیگری با مشخصات یکسان اجرا کنید,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,"Proveu diversos conjunts de dades en un algorisme que inclou casos pitjors, millors i aleatoris. També intenteu executar el mateix programa en un equip diferent amb les mateixes especificacions",Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,"Испробајте неколико скупова података на алгоритму који укључује најгори случај, најбољи случај и случајне случајеве. Такође покушајте да покренете исти програм на другом рачунару са истим спецификацијама",Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,"Coba beberapa kumpulan data pada algoritme yang mencakup kasus terburuk, kasus terbaik, dan kasus acak. Coba juga dan jalankan program yang sama di komputer lain dengan spesifikasi yang sama",Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,"Prøv flere datasett på en algoritme som inkluderer worst case, best case og random cases. Prøv også å kjøre det samme programmet på en annen datamaskin med samme spesifikasjoner",알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,"최악의 경우, 최상의 경우 및 임의의 경우를 포함하는 알고리즘에서 여러 데이터 세트를 시도하십시오. 또한 동일한 사양의 다른 컴퓨터에서 동일한 프로그램을 시도하고 실행하십시오.",Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,"Kokeile useita tietojoukkoja algoritmissa, joka sisältää pahimman, parhaan ja satunnaisen tapauksen. Yritä myös suorittaa sama ohjelma eri tietokoneella samoilla tiedoilla",Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,"Próbáljon ki több adatsort olyan algoritmuson, amely magában foglalja a legrosszabb, a legjobb és a véletlenszerű eseteket. Próbálja meg ugyanazt a programot futtatni egy másik számítógépen, ugyanazokkal a specifikációkkal",Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,"Vyzkoušejte několik sad dat na algoritmu, který zahrnuje nejhorší případ, nejlepší případ a náhodné případy. Zkuste také spustit stejný program na jiném počítači se stejnými specifikacemi",Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,"Isprobajte nekoliko skupova podataka na algoritmu koji uključuje najgori slučaj, najbolji slučaj i slučajne slučajeve. Pokušajte i pokrenuti isti program na drugom računaru sa istim specifikacijama"
288,288,916,5.3,N number of times.  Where N equals the number of elements in the list.  Best-case scenario is that the elements in the list are already sorted.,N (the length of the array) operations achieved for a sorted array.,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",5.0,"N (die Länge des Arrays) Operationen, die für ein sortiertes Array erzielt wurden.","Wie viele Operationen müssen für die Einfügungssortierung in einem Best-Case-Szenario ausgeführt werden, und in welchem Best-Case-Szenario?",N-mal. Wobei N der Anzahl der Elemente in der Liste entspricht. Im besten Fall sind die Elemente in der Liste bereits sortiert.,"Unsa ang gidaghanon sa mga operasyon alang sa pagsulud nga sulud sa ilalum sa usa ka labing maayo nga kahimtang nga sitwasyon, ug unsa ang labing maayo nga sitwasyon nga hitabo?",N (ang gitas-on sa laray) nakamit ang mga operasyon alang sa usa ka gihan-ay nga laray.,N ihap sa mga panahon. Kung diin ang N katumbas sa gidaghanon sa mga elemento sa lista. Ang labing maayo nga kahimtang nga sitwasyon mao ang mga elemento sa lista nga gihan-ay na.,"Vad är antalet operationer för insättningssortering under ett bästa fall, och vad är det bästa fallet?",N (längden på matrisen) som uppnåtts för en sorterad matris.,N antal gånger. Där N är lika med antalet element i listan. Bästa fallet är att elementen i listan redan är sorterade.,Quel est le nombre d&#39;opérations pour le tri par insertion dans le meilleur des cas et quel est le meilleur des cas?,N (la longueur du tableau) opérations réalisées pour un tableau trié.,"N nombre de fois. Où N est égal au nombre d&#39;éléments dans la liste. Dans le meilleur des cas, les éléments de la liste sont déjà triés.","Wat is het aantal bewerkingen voor invoegsortering in het beste geval, en wat is het beste scenario?",N (de lengte van de array) bewerkingen die zijn bereikt voor een gesorteerde array.,N aantal keren. Waarbij N gelijk is aan het aantal elementen in de lijst. In het beste geval zijn de elementen in de lijst al gesorteerd.,Каково количество операций сортировки вставкой в лучшем случае и в каком сценарии лучше всего?,"N (длина массива) операций, выполненных для отсортированного массива.",N раз. Где N равно количеству элементов в списке. В лучшем случае элементы в списке уже отсортированы.,Qual è il numero di operazioni per l&#39;ordinamento per inserzione in uno scenario migliore e qual è lo scenario migliore?,N (la lunghezza dell&#39;array) operazioni ottenute per un array ordinato.,Numero di volte N. Dove N è uguale al numero di elementi nell&#39;elenco. Lo scenario migliore è che gli elementi nell&#39;elenco siano già ordinati.,¿Cuál es la cantidad de operaciones para la ordenación por inserción en el mejor de los casos y cuál es el mejor de los casos?,N (la longitud de la matriz) operaciones logradas para una matriz ordenada.,"N número de veces. Donde N es igual al número de elementos de la lista. En el mejor de los casos, los elementos de la lista ya están ordenados.",Jaka jest liczba operacji sortowania przez wstawianie w ramach najlepszego scenariusza i jaki jest najlepszy scenariusz?,N (długość tablicy) operacji uzyskanych dla posortowanej tablicy.,N wiele razy. Gdzie N jest równe liczbie elementów na liście. W najlepszym przypadku elementy na liście są już posortowane.,Số hoạt động để sắp xếp chèn trong trường hợp tốt nhất là bao nhiêu và trường hợp tốt nhất là gì?,N (độ dài của mảng) hoạt động đạt được cho một mảng đã sắp xếp.,N số lần. Trong đó N bằng số phần tử trong danh sách. Trường hợp tốt nhất là các phần tử trong danh sách đã được sắp xếp.,最良のシナリオでの挿入ソートの操作数と、最良のシナリオは何ですか？,ソートされた配列に対して達成されたN（配列の長さ）操作。,N回。ここで、Nはリスト内の要素の数と同じです。最良のシナリオは、リスト内の要素がすでにソートされていることです。,在最佳情况下，插入排序的操作数是多少？最佳情况是什么？,已排序的数组完成了N次（数组的长度）操作。,N次。其中N等于列表中的元素数。最好的情况是列表中的元素已经排序。,ما هو عدد العمليات لفرز الإدراج ضمن سيناريو أفضل حالة ، وما هو أفضل سيناريو؟,تم تحقيق N (طول المصفوفة) لعمليات مصفوفة مرتبة.,عدد مرات N. حيث N يساوي عدد العناصر في القائمة. السيناريو الأفضل هو أن العناصر الموجودة في القائمة مرتبة بالفعل.,"Яка кількість операцій для сортування вставки за найкращим сценарієм, і який найкращий варіант?","N (довжина масиву) операції, досягнуті для відсортованого масиву.","N кількість разів. Де N дорівнює кількості елементів у списку. Найкращий сценарій полягає в тому, що елементи у списку вже відсортовані.",Qual é o número de operações para classificação por inserção em um cenário de melhor caso e qual é o cenário de melhor caso?,N (o comprimento da matriz) operações obtidas para uma matriz classificada.,N número de vezes. Onde N é igual ao número de elementos na lista. O melhor cenário é que os elementos da lista já estejam classificados.,تعداد عملیات برای مرتب سازی درج در یک سناریوی بهترین حالت چقدر است و بهترین سناریو کدام است؟,N (طول آرایه) عملیاتی که برای یک آرایه مرتب شده بدست می آید.,تعداد دفعات N جایی که N برابر است با تعداد عناصر موجود در لیست. بهترین حالت این است که عناصر موجود در لیست مرتب شده اند.,Quin és el nombre d&#39;operacions per ordenar la inserció en un escenari del millor cas i quin és el millor cas?,N (la longitud de la matriu) operacions aconseguides per a una matriu ordenada.,N nombre de vegades. On N és igual al nombre d&#39;elements de la llista. El millor dels casos és que els elements de la llista ja estan ordenats.,"Који је број операција за сортирање уметања у најбољем случају, а који у најбољем случају?",Н (дужина низа) операција постигнутих за сортирани низ.,Н број пута. Где је Н једнак броју елемената на листи. Најбољи случај је да су елементи на листи већ сортирани.,"Berapa jumlah operasi untuk pengurutan penyisipan dalam skenario kasus terbaik, dan apa skenario kasus terbaik?",Operasi N (panjang array) dicapai untuk array yang diurutkan.,N kali. Dimana N sama dengan jumlah elemen dalam daftar. Skenario kasus terbaik adalah elemen dalam daftar sudah diurutkan.,"Hva er antall operasjoner for innsettingssortering under et best-case-scenario, og hva er best-case-scenariet?",N (lengden på matrisen) operasjoner oppnådd for en sortert matrise.,N antall ganger. Der N er lik antall elementer i listen. Best case-scenario er at elementene i listen allerede er sortert.,최상의 시나리오에서 삽입 정렬을위한 작업의 수와 최상의 시나리오는 무엇입니까?,정렬 된 배열에 대해 수행 된 N (배열의 길이) 작업.,N 회. 여기서 N은 목록의 요소 수와 같습니다. 최상의 시나리오는 목록의 요소가 이미 정렬 된 것입니다.,Mikä on parhaan mahdollisen skenaarion mukaan lisättävien toimintojen määrä ja mikä on paras tapaus?,"N (matriisin pituus) operaatiota, jotka on saatu lajitellulle taulukolle.","N useita kertoja. Missä N on luettelon elementtien lukumäärä. Paras tapaus on, että luettelon elementit on jo lajiteltu.","Mennyi a beillesztési műveletek száma a legjobb forgatókönyv szerint, és mi a legjobb eset?",N (a tömb hossza) rendezett tömbnél elért műveletek.,"N számú alkalommal. Ahol N egyenlő a listában szereplő elemek számával. A legjobb eset az, hogy a lista elemei már rendezve vannak.",Jaký je počet operací pro třídění vložení v případě nejlepšího scénáře a jaký je nejlepší případ?,N (délka pole) operace dosažené pro tříděné pole.,"Nkrát. Kde N se rovná počtu prvků v seznamu. Nejlepším scénářem je, že prvky v seznamu jsou již seřazeny.","Koji je broj operacija za sortiranje umetanja u najboljem scenariju, a koji je najbolji slučaj?",N (dužina niza) operacija postignutih za sortirani niz.,N broj puta. Gdje je N jednak broju elemenata na listi. Najbolji slučaj je da su elementi na listi već sortirani.
289,289,1308,7.7,"in a doubly linked list there are twice as many pointers for each element , therefore more memory is used",Extra space required to store the back pointers.,What is the main disadvantage of a doubly-linked list over a basic linked list?,5.0,Zusätzlicher Speicherplatz zum Speichern der hinteren Zeiger.,Was ist der Hauptnachteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"In einer doppelt verknüpften Liste gibt es doppelt so viele Zeiger für jedes Element, daher wird mehr Speicher verwendet",Unsa man ang punoan nga kakulian sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,Gikinahanglan ang dugang nga wanang aron tipigan ang mga back point.,"sa usa ka doble nga nalambigit nga lista adunay duha ka beses nga daghang mga tudlo alang sa matag elemento, busa daghang memorya ang gigamit",Vad är den största nackdelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,Extra utrymme krävs för att lagra bakre pekare.,"i en dubbelt länkad lista finns dubbelt så många pekare för varje element, därför används mer minne",Quel est le principal inconvénient d&#39;une liste à double lien par rapport à une liste liée de base?,Espace supplémentaire requis pour stocker les pointeurs arrière.,"dans une liste doublement chaînée, il y a deux fois plus de pointeurs pour chaque élément, donc plus de mémoire est utilisée",Wat is het grootste nadeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,Extra ruimte nodig om de rugwijzers op te bergen.,"in een dubbelgekoppelde lijst zijn er twee keer zoveel verwijzingen voor elk element, daarom wordt er meer geheugen gebruikt",В чем состоит главный недостаток двусвязного списка перед базовым связанным списком?,"Дополнительное место, необходимое для хранения обратных указателей.","в двусвязном списке в два раза больше указателей на каждый элемент, поэтому используется больше памяти",Qual è il principale svantaggio di un elenco a doppio collegamento rispetto a un elenco collegato di base?,Spazio aggiuntivo richiesto per memorizzare i puntatori indietro.,"in una lista doppiamente concatenata ci sono il doppio dei puntatori per ogni elemento, quindi viene utilizzata più memoria",¿Cuál es la principal desventaja de una lista enlazada doble sobre una lista enlazada básica?,Se requiere espacio adicional para almacenar los punteros traseros.,"en una lista doblemente enlazada hay el doble de punteros para cada elemento, por lo tanto, se usa más memoria",Jaka jest główna wada listy podwójnie połączonej w porównaniu z listą podstawową?,Wymagane dodatkowe miejsce do przechowywania wskazówek.,"na podwójnie połączonej liście znajduje się dwa razy więcej wskaźników dla każdego elementu, dlatego zużywa się więcej pamięci",Nhược điểm chính của danh sách liên kết kép so với danh sách liên kết cơ bản là gì?,Cần thêm không gian để lưu các con trỏ ngược.,"trong một danh sách được liên kết kép, có gấp đôi số con trỏ cho mỗi phần tử, do đó, nhiều bộ nhớ hơn được sử dụng",基本的なリンクリストに対する二重リンクリストの主な欠点は何ですか？,バックポインタを格納するために必要な追加スペース。,二重リンクリストでは、各要素に2倍のポインタがあるため、より多くのメモリが使用されます,与基本链表相比，双链表的主要缺点是什么？,存储后退指针所需的额外空间。,在双向链表中，每个元素的指针是其两倍，因此使用了更多的内存,ما هو العيب الرئيسي لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,مطلوب مساحة إضافية لتخزين المؤشرات الخلفية.,في قائمة مرتبطة بشكل مزدوج ، يوجد ضعف عدد المؤشرات لكل عنصر ، لذلك يتم استخدام المزيد من الذاكرة,Який головний недолік подвійно пов’язаного списку перед основним пов’язаним списком?,Для зберігання зворотних покажчиків потрібно додатковий простір.,"у подвійно пов&#39;язаному списку є вдвічі більше покажчиків для кожного елемента, тому використовується більше пам&#39;яті",Qual é a principal desvantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,Espaço extra necessário para armazenar os ponteiros de trás.,"em uma lista duplamente vinculada, há o dobro de ponteiros para cada elemento, portanto, mais memória é usada",ضرر اصلی یک لیست پیوندی مضاعف نسبت به یک لیست پیوندی اصلی چیست؟,فضای اضافی برای ذخیره نشانگرهای عقب مورد نیاز است.,در یک لیست پیوندی مضاعف ، برای هر عنصر نشانگر دو برابر وجود دارد ، بنابراین از حافظه بیشتری استفاده می شود,Quin és el principal desavantatge d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,Espai addicional necessari per emmagatzemar els punteres posteriors.,"en una llista doblement enllaçada hi ha el doble de punteres per a cada element, per tant s&#39;utilitza més memòria",Који је главни недостатак двоструко повезане листе у односу на основну повезану листу?,Додатни простор потребан за чување задњих показивача.,"у двоструко повезаној листи постоји двоструко више показивача за сваки елемент, па се користи више меморије",Apa kerugian utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,Ruang ekstra diperlukan untuk menyimpan penunjuk belakang.,"dalam daftar tertaut ganda ada dua kali lebih banyak petunjuk untuk setiap elemen, oleh karena itu lebih banyak memori yang digunakan",Hva er den største ulempen med en dobbeltkoblet liste i forhold til en grunnkoblet liste?,Ekstra plass kreves for å lagre bakpekerne.,"i en dobbeltkoblet liste er det dobbelt så mange pekere for hvert element, derfor brukes mer minne",기본 연결 목록에 비해 이중 연결 목록의 주요 단점은 무엇입니까?,백 포인터를 저장하려면 추가 공간이 필요합니다.,이중 연결 목록에는 각 요소에 대한 포인터가 두 배이므로 더 많은 메모리가 사용됩니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein haitta verrattuna linkitettyyn perusluetteloon?,Ylimääräinen tila tarvitaan takaosoittimien tallentamiseen.,"kaksinkertaisesti linkitetyssä luettelossa on kaksi kertaa niin monta osoitinta kullekin elementille, joten muistia käytetään enemmän",Mi a kettős linkelésű lista fő hátránya az alap linkelt listával szemben?,További hely szükséges a hátsó mutatók tárolásához.,"egy kétszeresen összekapcsolt listában kétszer annyi mutató van minden elemhez, ezért több memória kerül felhasználásra",Jaká je hlavní nevýhoda seznamu s dvojitým propojením oproti základnímu?,K uložení zadních ukazatelů je zapotřebí více místa.,"v dvojnásobně propojeném seznamu existuje dvakrát tolik ukazatelů pro každý prvek, proto se používá více paměti",Koji je glavni nedostatak dvostruko povezane liste u odnosu na osnovnu povezanu listu?,Dodatni prostor potreban za spremanje stražnjih pokazivača.,"na dvostruko povezanoj listi postoji dvostruko više pokazivača za svaki element, stoga se koristi više memorije"
290,290,1087,6.6,you can pass a pointer to a pointer or pass a reference to pointer.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",What are the different ways to pass a pointer to a function?,2.5,"Es gibt vier Möglichkeiten: nicht konstanter Zeiger auf konstante Daten, nicht konstanter Zeiger auf nicht konstante Daten, konstanter Zeiger auf konstante Daten, konstanter Zeiger auf nicht konstante Daten.","Welche verschiedenen Möglichkeiten gibt es, einen Zeiger auf eine Funktion zu übergeben?",Sie können einen Zeiger an einen Zeiger übergeben oder einen Verweis auf einen Zeiger übergeben.,Unsa ang lainlaing mga paagi aron maipasa ang usa ka pointer sa usa ka kalihokan?,"Adunay upat ka mga paagi: dili makanunayon nga tudlo sa kanunay nga datos, dili padayon nga tudlo sa dili pagsalig data, kanunay nga tudlo sa kanunay nga datos, kanunay nga tudlo sa dili makanunayon nga datos.",mahimo nimo ipasa ang usa ka pointer sa usa ka pointer o ipasa ang usa ka pakisayran sa pointer.,Vilka är de olika sätten att skicka en pekare till en funktion?,"Det finns fyra sätt: icke-konstant pekare till konstant data, icke-konstant pekare till icke-konstant data, konstant pekare till konstant data, konstant pekare till icke-konstant data.",du kan skicka en pekare till en pekare eller skicka en referens till pekaren.,Quelles sont les différentes manières de transmettre un pointeur à une fonction?,"Il existe quatre façons: pointeur non constant vers des données constantes, pointeur non constant vers des données non constantes, pointeur constant vers des données constantes, pointeur constant vers des données non constantes.",vous pouvez passer un pointeur à un pointeur ou passer une référence à un pointeur.,Wat zijn de verschillende manieren om een aanwijzer door te geven aan een functie?,"Er zijn vier manieren: niet-constante pointer naar constante gegevens, niet-constante pointer naar niet-constante data, constante pointer naar constante data, constante pointer naar niet-constante data.",u kunt een aanwijzer doorgeven aan een aanwijzer of een verwijzing aan een aanwijzer doorgeven.,Какими способами можно передать указатель на функцию?,"Существует четыре способа: непостоянный указатель на постоянные данные, непостоянный указатель на непостоянные данные, постоянный указатель на постоянные данные, постоянный указатель на непостоянные данные.",вы можете передать указатель на указатель или передать ссылку на указатель.,Quali sono i diversi modi per passare un puntatore a una funzione?,"Ci sono quattro modi: puntatore non costante a dati costanti, puntatore non costante a dati non costanti, puntatore costante a dati costanti, puntatore costante a dati non costanti.",puoi passare un puntatore a un puntatore o passare un riferimento al puntatore.,¿Cuáles son las diferentes formas de pasar un puntero a una función?,"Hay cuatro formas: puntero no constante a datos constantes, puntero no constante a datos no constantes, puntero constante a datos constantes, puntero constante a datos no constantes.",puede pasar un puntero a un puntero o pasar una referencia a un puntero.,Jakie są różne sposoby przekazywania wskaźnika do funkcji?,"Istnieją cztery sposoby: niestały wskaźnik do stałych danych, niestały wskaźnik do niestałych danych, stały wskaźnik do stałych danych, stały wskaźnik do niestałych danych.",możesz przekazać wskaźnik do wskaźnika lub przekazać referencję do wskaźnika.,Các cách khác nhau để truyền một con trỏ đến một hàm là gì?,"Có bốn cách: con trỏ không đổi tới dữ liệu không đổi, con trỏ không kiên định tới dữ liệu không thay đổi, con trỏ liên tục tới dữ liệu không đổi, con trỏ hằng tới dữ liệu không kiên định.",bạn có thể chuyển một con trỏ tới một con trỏ hoặc chuyển một tham chiếu tới con trỏ.,関数へのポインタを渡すさまざまな方法は何ですか？,4つの方法があります：定数データへの非定数ポインター、非定数データへの非定数ポインター、定数データへの定数ポインター、非定数データへの定数ポインター。,ポインターをポインターに渡すことも、参照をポインターに渡すこともできます。,将指针传递给函数有哪些不同的方法？,有四种方法：指向常量数据的非恒定指针，指向常量数据的非恒定指针，指向常量数据的常量指针，指向非常量数据的常量指针。,您可以将指针传递给指针或将引用传递给指针。,ما هي الطرق المختلفة لتمرير مؤشر إلى دالة؟,هناك أربع طرق: مؤشر غير ثابت إلى بيانات ثابتة ، ومؤشر غير ثابت إلى بيانات غير ثابتة ، ومؤشر ثابت إلى بيانات ثابتة ، ومؤشر ثابت إلى بيانات غير ثابتة.,يمكنك تمرير مؤشر إلى مؤشر أو تمرير مرجع إلى المؤشر.,Які різні способи передачі покажчика на функцію?,"Існує чотири шляхи: непостійний вказівник на постійні дані, непостійний вказівник на непостійні дані, постійний вказівник на постійні дані, постійний вказівник на непостійні дані.",Ви можете передати вказівник на вказівник або передати посилання на вказівник.,Quais são as diferentes maneiras de passar um ponteiro para uma função?,"Existem quatro maneiras: ponteiro não constante para dados constantes, ponteiro não constante para dados não constantes, ponteiro constante para dados constantes, ponteiro constante para dados não constantes.",você pode passar um ponteiro para um ponteiro ou uma referência para um ponteiro.,روش های مختلف برای انتقال نشانگر به یک عملکرد چیست؟,چهار روش وجود دارد: اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده غیر ثابت.,می توانید یک اشاره گر را به یک نشانگر منتقل کنید یا یک اشاره گر را به اشاره گر منتقل کنید.,Quines són les diferents maneres de passar un punter a una funció?,"Hi ha quatre maneres: punter no constant a dades constants, punter no constant a dades no constants, punter constant a dades constants, punter constant a dades no constants.",podeu passar un punter a un punter o passar una referència a punter.,Који су различити начини прослеђивања показивача на функцију?,"Постоје четири начина: нестални показивач на сталне податке, нестални показивач на несталне податке, стални показивач на сталне податке, стални показивач на несталне податке.",можете проследити показивач на показивач или упутити референцу на показивач.,Apa sajakah cara berbeda untuk meneruskan penunjuk ke suatu fungsi?,"Ada empat cara: penunjuk tidak konstan ke data konstan, penunjuk tidak konstan ke data tidak konstan, penunjuk konstan ke data konstan, penunjuk konstan ke data tidak konstan.",Anda dapat meneruskan sebuah pointer ke sebuah pointer atau memberikan sebuah referensi ke sebuah pointer.,Hva er de forskjellige måtene å overføre en peker til en funksjon på?,"Det er fire måter: ikke-konstant peker til konstant data, ikke-konstant peker til ikke-konstant data, konstant peker til konstant data, konstant peker til ikke-konstant data.",du kan sende en peker til en peker eller sende en referanse til pekeren.,함수에 대한 포인터를 전달하는 다른 방법은 무엇입니까?,"네 가지 방법이 있습니다 : 상수 데이터에 대한 비상 수 포인터, 상수 데이터에 대한 상수 포인터, 상수 데이터에 대한 상수 포인터, 비상 수 데이터에 대한 상수 포인터.",포인터에 포인터를 전달하거나 포인터에 대한 참조를 전달할 수 있습니다.,Mitä eri tapoja siirtää osoitin funktiolle?,"On neljä tapaa: jatkuva osoitin vakiotietoihin, epävakaa osoitin epävakaisiin tietoihin, vakioosoitin vakiotietoihin, jatkuva osoitin epävakaisiin tietoihin.",voit välittää osoittimen osoittimelle tai välittää viitteen osoittimelle.,Milyen módon lehet a mutatót átadni egy függvénynek?,"Négy módja van: nem állandó mutató az állandó adatokhoz, a nem állandó mutató a nem állandó adatokhoz, az állandó mutató az állandó adatokhoz, az állandó mutató a nem állandó adatokhoz.","átadhat egy mutatót egy mutatónak, vagy átadhat egy mutatót.","Jaké jsou různé způsoby, jak předat ukazatel na funkci?","Existují čtyři způsoby: nekonstantní ukazatel na konstantní data, nekonstantní ukazatel na nekonstantní data, konstantní ukazatel na konstantní data, konstantní ukazatel na nekonstantní data.",můžete předat ukazatel na ukazatel nebo předat odkaz na ukazatel.,Koji su različiti načini prosljeđivanja pokazivača na funkciju?,"Postoje četiri načina: nestalni pokazivač na konstantne podatke, nestalni pokazivač na nestalne podatke, stalni pokazivač na stalne podatke, stalni pokazivač na nestalne podatke.",možete proslijediti pokazivač na pokazivač ili proslijediti referencu na pokazivač.
291,291,2236,12.3,"2^(log n), n^3, n^2,  log(log n), n!",log(log n);  2^(log n) ; n^2 ; n^3; n!,Order the following functions by their running time: n^2; log(log n) ; 2^(log n) ; n! ; n^3.,2.0,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,Ordnen Sie die folgenden Funktionen nach ihrer Laufzeit: n ^ 2; log (log n); 2 ^ (log n); n! ;; n ^ 3.,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Pag-order sa mga mosunud nga pag-andar pinaagi sa ilang oras sa pagdagan: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Beställ följande funktioner efter deras körtid: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Classez les fonctions suivantes en fonction de leur durée de fonctionnement: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Sorteer de volgende functies op basis van hun looptijd: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Отсортируйте следующие функции по времени выполнения: n ^ 2; журнал (журнал n); 2 ^ (журнал п); п! ; п ^ 3.,журнал (журнал n); 2 ^ (журнал п); п ^ 2; п ^ 3; п!,"2 ^ (журнал п), п ^ 3, п ^ 2, журнал (журнал п), п!",Ordina le seguenti funzioni in base al loro tempo di esecuzione: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Ordene las siguientes funciones por su tiempo de ejecución: n ^ 2; log (log n); 2 ^ (log n); ¡norte! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; ¡norte!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Uporządkuj następujące funkcje według ich czasu działania: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Thứ tự các hàm sau theo thời gian chạy của chúng: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",次の関数を実行時間順に並べます。n^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,2 ^（log n）、n ^ 3、n ^ 2、log（log n）、n！,按其运行时间排序以下功能：n ^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,2 ^（log n），n ^ 3，n ^ 2，log（log n），n！,اطلب الوظائف التالية حسب وقت تشغيلها: n ^ 2 ؛ سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن! ؛ ن ^ 3.,سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن ^ 2 ؛ ن ^ 3 ؛ ن!,2 ^ (تسجيل ن) ، ن ^ 3 ، ن ^ 2 ، تسجيل (تسجيل ن) ، ن!,Впорядкуйте такі функції за часом їх роботи: n ^ 2; журнал (журнал n); 2 ^ (журнал n); п! ; n ^ 3.,журнал (журнал n); 2 ^ (журнал n); n ^ 2; n ^ 3; п!,"2 ^ (журнал n), n ^ 3, n ^ 2, журнал (log n), n!",Ordene as seguintes funções por seu tempo de execução: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",توابع زیر را بر اساس مدت زمان اجرای آنها ترتیب دهید: n ^ 2؛ log (log n) ؛ 2 ^ (ورود به سیستم) ن! ؛ n ^ 3,log (log n) ؛ 2 ^ (ورود به سیستم) n ^ 2 ؛ n ^ 3 ؛ ن!,2 ^ (log n) ، n ^ 3 ، n ^ 2 ، log (log n) ، n!,Ordeneu les funcions següents pel seu temps d&#39;execució: n ^ 2; log (registre n); 2 ^ (registre n); n! ; n ^ 3.,log (registre n); 2 ^ (registre n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Наредите следеће функције према њиховом радном времену: н ^ 2; лог (лог н); 2 ^ (лог н); н! ; н ^ 3.,лог (лог н); 2 ^ (лог н); н ^ 2; н ^ 3; н!,"2 ^ (лог н), н ^ 3, н ^ 2, лог (лог н), н!",Urutkan fungsi-fungsi berikut berdasarkan waktu berjalannya: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Bestill følgende funksjoner etter kjøretid: n ^ 2; logg (logg n); 2 ^ (log n); n! ; n ^ 3.,logg (logg n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",실행 시간별로 다음 함수를 정렬하십시오. n ^ 2; log (log n); 2 ^ (log n); 엔! ; n ^ 3.,log (로그 n); 2 ^ (log n); n ^ 2; n ^ 3; 엔!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Järjestä seuraavat toiminnot niiden käyttöajan mukaan: n ^ 2; loki (log n); 2 ^ (log n); n! ; n ^ 3.,loki (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Rendezze a következő függvényeket futási idejük szerint: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Seřaďte následující funkce podle doby běhu: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!",Poredaj sljedeće funkcije prema njihovom vremenu izvođenja: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), n ^ 3, n ^ 2, log (log n), n!"
292,292,1165,7.2,"The principal benefit of a linked list over a conventional array is that the order of the linked items may be different from the order that the data items are stored in memory or on disk, allowing the list of items to be traversed in a different order. A linked list is a self-referential datatype because it contains a pointer or link to another datum of the same type. Linked lists permit insertion and removal of nodes at any point in the list in constant time",The linked lists can be of variable length.,What is the main advantage of linked lists over arrays?,4.0,Die verknüpften Listen können von variabler Länge sein.,Was ist der Hauptvorteil von verknüpften Listen gegenüber Arrays?,"Der Hauptvorteil einer verknüpften Liste gegenüber einem herkömmlichen Array besteht darin, dass die Reihenfolge der verknüpften Elemente von der Reihenfolge abweichen kann, in der die Datenelemente im Speicher oder auf der Festplatte gespeichert werden, sodass die Liste der Elemente in einer anderen Reihenfolge durchlaufen werden kann. Eine verknüpfte Liste ist ein selbstreferenzieller Datentyp, da sie einen Zeiger oder eine Verknüpfung zu einem anderen Datum desselben Typs enthält. Verknüpfte Listen ermöglichen das Einfügen und Entfernen von Knoten an jedem Punkt der Liste in konstanter Zeit",Unsa ang punoan nga bentaha sa mga nalambigit nga lista sa mga pag-array?,Ang gilakip nga mga lista mahimong adunay gitas-on nga variable.,"Ang punoan nga kaayohan sa usa ka gilakip nga lista sa us aka naandan nga han-ay mao nga ang han-ay sa mga na-link nga mga butang mahimo nga lahi sa han-ay nga ang mga datos nga mga butang gitipig sa panumduman o sa disk, nga gitugotan ang lista sa mga aytem nga maagi sa lainlaing pagkahan-ay. Ang usa ka nalambigit nga lista usa ka datatype nga gikan sa kaugalingon tungod kay adunay sulud kini usa ka pointer o link sa lain nga datum nga parehas nga lahi. Ang mga nalista nga lista nagtugot sa pagsulud ug pagtangtang sa mga node sa bisan unsang punto sa lista sa kanunay nga oras",Vad är den största fördelen med länkade listor jämfört med matriser?,De länkade listorna kan ha varierande längd.,"Den huvudsakliga fördelen med en länkad lista över en konventionell matris är att ordningen på de länkade objekten kan skilja sig från den ordning som datalementen lagras i minnet eller på disken, vilket gör att listan över objekt kan passeras i en annan ordning. En länkad lista är en självreferensdatatyp eftersom den innehåller en pekare eller länk till ett annat datum av samma typ. Länkade listor tillåter införande och borttagning av noder när som helst i listan under konstant tid",Quel est le principal avantage des listes chaînées par rapport aux tableaux?,Les listes chaînées peuvent être de longueur variable.,"Le principal avantage d&#39;une liste chaînée par rapport à un tableau conventionnel est que l&#39;ordre des éléments liés peut être différent de l&#39;ordre dans lequel les éléments de données sont stockés en mémoire ou sur disque, ce qui permet à la liste d&#39;éléments d&#39;être parcourue dans un ordre différent. Une liste chaînée est un type de données auto-référentiel car il contient un pointeur ou un lien vers une autre donnée du même type. Les listes liées permettent l&#39;insertion et la suppression de nœuds à n&#39;importe quel point de la liste en temps constant",Wat is het belangrijkste voordeel van gekoppelde lijsten ten opzichte van arrays?,De gekoppelde lijsten kunnen een variabele lengte hebben.,"Het belangrijkste voordeel van een gekoppelde lijst ten opzichte van een conventionele array is dat de volgorde van de gekoppelde items kan verschillen van de volgorde waarin de gegevensitems in het geheugen of op schijf zijn opgeslagen, waardoor de lijst met items in een andere volgorde kan worden doorlopen. Een gelinkte lijst is een zelfreferentieel datatype omdat het een pointer of link bevat naar een ander datum van hetzelfde type. Met gekoppelde lijsten kunnen knooppunten op elk punt in de lijst in constante tijd worden ingevoegd en verwijderd",В чем главное преимущество связанных списков перед массивами?,Связанные списки могут быть переменной длины.,"Основное преимущество связанного списка перед обычным массивом состоит в том, что порядок связанных элементов может отличаться от порядка, в котором элементы данных хранятся в памяти или на диске, что позволяет перемещаться по списку элементов в другом порядке. Связанный список - это тип данных с саморегулированием, поскольку он содержит указатель или ссылку на другой элемент данных того же типа. Связанные списки позволяют вставлять и удалять узлы в любой точке списка в постоянное время.",Qual è il vantaggio principale degli elenchi collegati rispetto agli array?,Le liste collegate possono essere di lunghezza variabile.,"Il vantaggio principale di un elenco collegato rispetto a un array convenzionale è che l&#39;ordine degli elementi collegati può essere diverso dall&#39;ordine in cui gli elementi di dati sono archiviati in memoria o su disco, consentendo di scorrere l&#39;elenco degli elementi in un ordine diverso. Un elenco collegato è un tipo di dati autoreferenziale perché contiene un puntatore o un collegamento a un altro dato dello stesso tipo. Gli elenchi collegati consentono l&#39;inserimento e la rimozione di nodi in qualsiasi punto dell&#39;elenco a tempo costante",¿Cuál es la principal ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas pueden tener una longitud variable.,"El principal beneficio de una lista vinculada sobre una matriz convencional es que el orden de los elementos vinculados puede ser diferente del orden en que los elementos de datos se almacenan en la memoria o en el disco, lo que permite recorrer la lista de elementos en un orden diferente. Una lista vinculada es un tipo de datos autorreferencial porque contiene un puntero o vínculo a otro dato del mismo tipo. Las listas enlazadas permiten la inserción y eliminación de nodos en cualquier punto de la lista en tiempo constante",Jaka jest główna przewaga połączonych list nad tablicami?,Połączone listy mogą mieć różną długość.,"Główną zaletą połączonej listy w porównaniu z konwencjonalną tablicą jest to, że kolejność połączonych elementów może różnić się od kolejności, w jakiej elementy danych są przechowywane w pamięci lub na dysku, umożliwiając przeglądanie listy elementów w innej kolejności. Lista połączona jest typem danych odwołującym się do siebie, ponieważ zawiera wskaźnik lub łącze do innej danej tego samego typu. Połączone listy umożliwiają wstawianie i usuwanie węzłów w dowolnym miejscu listy w stałym czasie",Ưu điểm chính của danh sách liên kết so với mảng là gì?,Các danh sách được liên kết có thể có độ dài thay đổi.,"Lợi ích chính của danh sách được liên kết trên một mảng thông thường là thứ tự của các mục được liên kết có thể khác với thứ tự của các mục dữ liệu được lưu trữ trong bộ nhớ hoặc trên đĩa, cho phép danh sách các mục được duyệt theo một thứ tự khác. Danh sách được liên kết là một kiểu dữ liệu tự tham chiếu vì nó chứa một con trỏ hoặc liên kết đến một dữ liệu khác cùng loại. Danh sách được liên kết cho phép chèn và xóa các nút tại bất kỳ điểm nào trong danh sách trong thời gian cố định",配列に対するリンクリストの主な利点は何ですか？,リンクリストは可変長にすることができます。,従来の配列に対するリンクリストの主な利点は、リンクされたアイテムの順序が、データアイテムがメモリまたはディスクに格納される順序と異なる場合があり、アイテムのリストを異なる順序でトラバースできることです。リンクリストには、同じタイプの別のデータへのポインタまたはリンクが含まれているため、自己参照データ型です。リンクリストを使用すると、リスト内の任意の時点で一定時間内にノードを挿入および削除できます。,链表相对于数组的主要优点是什么？,链表的长度可以变化。,链接列表相对于常规阵列的主要好处是，链接项的顺序可能与数据项在内存或磁盘上存储的顺序不同，从而允许以不同顺序遍历项目列表。链表是一种自引用数据类型，因为它包含指向相同类型的另一个数据的指针或链接。链接列表允许在恒定时间内在列表的任何位置插入和删除节点,ما هي الميزة الرئيسية للقوائم المرتبطة على المصفوفات؟,يمكن أن تكون القوائم المرتبطة متغيرة الطول.,الفائدة الأساسية من القائمة المرتبطة على المصفوفة التقليدية هي أن ترتيب العناصر المرتبطة قد يختلف عن ترتيب عناصر البيانات المخزنة في الذاكرة أو على القرص ، مما يسمح بعبور قائمة العناصر بترتيب مختلف. القائمة المرتبطة هي نوع بيانات مرجعي ذاتي لأنها تحتوي على مؤشر أو ارتباط بمرجع آخر من نفس النوع. تسمح القوائم المرتبطة بإدراج العقد وإزالتها في أي وقت في القائمة في وقت ثابت,Яка головна перевага пов’язаних списків над масивами?,Пов’язані списки можуть мати різну довжину.,"Основна перевага зв’язаного списку над звичайним масивом полягає в тому, що порядок зв’язаних елементів може відрізнятися від порядку збереження елементів даних у пам’яті або на диску, що дозволяє переглядати список елементів у іншому порядку. Зв’язаний список є самореференційним типом даних, оскільки він містить покажчик або посилання на іншу дату цього ж типу. Зв’язані списки дозволяють вставляти та видаляти вузли в будь-яку точку списку за постійний час",Qual é a principal vantagem das listas vinculadas em relação às matrizes?,As listas vinculadas podem ter comprimento variável.,"O principal benefício de uma lista vinculada em relação a uma matriz convencional é que a ordem dos itens vinculados pode ser diferente da ordem em que os itens de dados são armazenados na memória ou no disco, permitindo que a lista de itens seja percorrida em uma ordem diferente. Uma lista vinculada é um tipo de dados autorreferencial porque contém um ponteiro ou link para outro datum do mesmo tipo. Listas vinculadas permitem a inserção e remoção de nós em qualquer ponto da lista em tempo constante",مزیت اصلی لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی می توانند از طول متغیر باشند.,مزیت اصلی یک لیست پیوندی نسبت به یک آرایه معمولی این است که ترتیب موارد پیوسته ممکن است متفاوت از ترتیب ذخیره شدن داده های داده در حافظه یا روی دیسک باشد ، به این ترتیب امکان لیست موارد به ترتیب دیگری فراهم می شود. لیست پیوندی یک نوع داده خود ارجاع است زیرا شامل یک اشاره گر یا پیوند به یک داده دیگر از همان نوع است. لیست های پیوند خورده اجازه درج و حذف گره ها را در هر زمان از لیست در زمان ثابت دارند,Quin és el principal avantatge de les llistes enllaçades sobre les matrius?,Les llistes enllaçades poden tenir una longitud variable.,"L’avantatge principal d’una llista enllaçada respecte d’una matriu convencional és que l’ordre dels elements enllaçats pot ser diferent de l’ordre en què s’emmagatzemen els elements de dades a la memòria o al disc, cosa que permet recórrer la llista d’elements en un ordre diferent. Una llista enllaçada és un tipus de dades autoreferencial perquè conté un punter o un enllaç a una altra dada del mateix tipus. Les llistes enllaçades permeten inserir i eliminar nodes en qualsevol punt de la llista en temps constant",Која је главна предност повезаних листа над низовима?,Повезане листе могу бити променљиве дужине.,"Главна предност повезане листе у односу на конвенционални низ је та што се редослед повезаних ставки може разликовати од редоследа складиштења података у меморији или на диску, што омогућава листању ставки да се прелазе у другом редоследу. Повезана листа је самореференцијални тип података јер садржи показивач или везу до другог податка истог типа. Повезане листе омогућавају уметање и уклањање чворова у било којој тачки листе у константном времену",Apa keuntungan utama dari daftar tertaut dibandingkan array?,Panjang daftar tertaut bisa bervariasi.,"Manfaat utama dari daftar tertaut di atas larik konvensional adalah bahwa urutan item yang ditautkan mungkin berbeda dari urutan item data yang disimpan dalam memori atau pada disk, yang memungkinkan daftar item untuk dilintasi dalam urutan yang berbeda. Daftar tertaut adalah tipe data referensi sendiri karena berisi penunjuk atau tautan ke datum lain dengan tipe yang sama. Daftar tertaut mengizinkan penyisipan dan penghapusan node di titik mana pun dalam daftar dalam waktu yang konstan",Hva er den største fordelen med koblede lister fremfor matriser?,De lenkede listene kan ha variabel lengde.,"Den viktigste fordelen med en koblet liste over en konvensjonell matrise er at rekkefølgen på de koblede elementene kan være forskjellig fra rekkefølgen dataelementene lagres i minnet eller på disken, slik at listen over elementer kan krysses i en annen rekkefølge. En koblet liste er en selvhenvisende datatype fordi den inneholder en peker eller lenke til et annet datum av samme type. Koblede lister tillater innsetting og fjerning av noder når som helst på listen i konstant tid",배열에 비해 연결 목록의 주요 이점은 무엇입니까?,연결된 목록은 가변 길이 일 수 있습니다.,기존 배열에 비해 연결된 목록의 주요 이점은 연결된 항목의 순서가 데이터 항목이 메모리 나 디스크에 저장되는 순서와 다를 수 있으므로 항목 목록이 다른 순서로 순회 될 수 있다는 것입니다. 링크 된 목록은 동일한 유형의 다른 기준에 대한 포인터 또는 링크를 포함하기 때문에 자체 참조 데이터 유형입니다. 연결된 목록은 목록의 어느 지점에서나 일정한 시간에 노드의 삽입 및 제거를 허용합니다.,Mikä on linkitettyjen luetteloiden tärkein etu matriiseihin nähden?,Linkitetyt luettelot voivat olla vaihtelevia pituisia.,"Linkitetyn luettelon pääasiallinen etu tavanomaiseen ryhmään nähden on, että linkitettyjen kohteiden järjestys voi olla erilainen kuin järjestys, jossa dataerät tallennetaan muistiin tai levylle, jolloin kohteiden luettelo voidaan kulkea eri järjestyksessä. Linkitetty luettelo on itseviittaava tietotyyppi, koska se sisältää osoittimen tai linkin toiseen samantyyppiseen peruspisteeseen. Linkitetyt luettelot mahdollistavat solmujen lisäämisen ja poistamisen missä tahansa luettelon kohdassa vakiona",Mi a linkelt listák fő előnye a tömbökhöz képest?,A linkelt listák változó hosszúságúak lehetnek.,"A összekapcsolt lista elsődleges előnye a hagyományos tömbhöz képest az, hogy a kapcsolt elemek sorrendje eltérhet az adatelemek memóriában vagy lemezen történő tárolásának sorrendjétől, lehetővé téve az elemek listájának más sorrendben való áthaladását. A csatolt lista önreferenciális adattípus, mert mutatót vagy hivatkozást tartalmaz egy másik azonos típusú nullapontra. Az összekapcsolt listák lehetővé teszik a csomópontok beillesztését és eltávolítását a lista bármely pontján, állandó időben",Jaká je hlavní výhoda propojených seznamů oproti polím?,Propojené seznamy mohou mít různou délku.,"Hlavní výhodou propojeného seznamu oproti konvenčnímu poli je to, že pořadí propojených položek se může lišit od pořadí, ve kterém jsou datové položky uloženy v paměti nebo na disku, což umožňuje procházení seznamu položek v jiném pořadí. Propojený seznam je datový typ s vlastním odkazem, protože obsahuje ukazatel nebo odkaz na jiný údaj stejného typu. Propojené seznamy umožňují vkládání a odebírání uzlů v libovolném bodě seznamu v konstantním čase",Koja je glavna prednost povezanih lista nad nizovima?,Povezane liste mogu biti promjenljive dužine.,"Glavna prednost povezane liste u odnosu na konvencionalni niz je ta što se redoslijed povezanih stavki može razlikovati od redoslijeda skladištenja podataka u memoriji ili na disku, što omogućava listanju stavki da se kreću u drugom redoslijedu. Povezana lista je autoreferencijalni tip podataka jer sadrži pokazivač ili vezu na drugi datum istog tipa. Povezane liste omogućavaju umetanje i uklanjanje čvorova u bilo kojoj tački liste u konstantnom vremenu"
293,293,486,3.3,Ignores the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,3.0,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,Ignoriert das Inline-Qualifikationsmerkmal und dies normalerweise für alle bis auf die kleinsten Funktionen.,Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,Wala tagda ang kwalipikado sa lihok ug kasagarang gihimo kini alang sa tanan apan ang labing gamay nga gimbuhaton.,Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,Ignorerar inline-kvalet och gör det vanligtvis för alla utom de minsta funktionerna.,Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,Ignore le qualificatif en ligne et le fait généralement pour toutes les fonctions sauf les plus petites.,Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,Negeert de inline-kwalificatie en doet dit meestal voor alle functies behalve de kleinste.,Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.","Игнорирует встроенный квалификатор и обычно делает это для всех, кроме самых маленьких функций.",In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,Ignora il qualificatore inline e in genere lo fa per tutte le funzioni tranne le più piccole.,¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,Ignora el calificador en línea y normalmente lo hace para todas las funciones menos las más pequeñas.,Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.",Ignoruje kwalifikator wbudowany i zwykle robi to dla wszystkich funkcji oprócz najmniejszych.,Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,Bỏ qua bộ định lượng nội tuyến và thường làm như vậy cho tất cả trừ các hàm nhỏ nhất.,コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,インライン修飾子を無視し、通常、最小の関数を除くすべての関数に対して無視します。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,忽略内联限定符，通常对除最小函数以外的所有函数都起作用。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,يتجاهل المؤهل المضمن ويفعل ذلك عادةً لجميع الوظائف باستثناء أصغرها.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.","Ігнорує вбудований кваліфікатор і зазвичай робить це для всіх функцій, крім найменших.",Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"Ignora o qualificador embutido e normalmente faz isso para todas as funções, exceto as menores.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,صلاحیت درون خطی را نادیده می گیرد و معمولاً این کار را برای همه به جز کوچکترین عملکردها انجام می دهد.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,Ignora el qualificador en línia i normalment ho fa per a totes les funcions menys les més petites.,Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,"Занемарује уграђени квалификатор и обично то ради за све функције, осим за најмање.",Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,Mengabaikan inline qualifier dan biasanya melakukannya untuk semua kecuali fungsi terkecil.,Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,Ignorer den innebygde kvalifiseringen og gjør det vanligvis for alle unntatt de minste funksjonene.,컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,인라인 한정자를 무시하고 일반적으로 가장 작은 함수를 제외하고 모두 무시합니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.",Ohittaa sisäisen määrittelijän ja tekee sen yleensä kaikille paitsi pienimmille toiminnoille.,Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.","Figyelmen kívül hagyja az inline minősítőt, és általában ezt teszi a legkisebb funkciók kivételével.",Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.",Ignoruje vložený kvalifikátor a obvykle to dělá pro všechny kromě nejmenších funkcí.,Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,"Zanemaruje ugrađeni kvalifikator i obično to čini za sve funkcije, osim za najmanje."
294,294,1556,9.2,enqueue and dequeue,enqueue and dequeue,What are the two main functions defined by a queue?,5.0,Enqueue und Dequeue,Was sind die beiden Hauptfunktionen einer Warteschlange?,Enqueue und Dequeue,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka pila?,enqueue ug dequeue,enqueue ug dequeue,Vilka är de två huvudfunktionerna som definieras av en kö?,enqueue och dequeue,enqueue och dequeue,Quelles sont les deux principales fonctions définies par une file d&#39;attente?,mettre en file d&#39;attente et retirer la file d&#39;attente,mettre en file d&#39;attente et retirer la file d&#39;attente,Wat zijn de twee belangrijkste functies die door een wachtrij worden gedefinieerd?,in de wachtrij plaatsen en uit de wachtrij halen,in de wachtrij plaatsen en uit de wachtrij halen,Какие две основные функции определяет очередь?,поставить в очередь и исключить из очереди,поставить в очередь и исключить из очереди,Quali sono le due funzioni principali definite da una coda?,accodare e rimuovere dalla coda,accodare e rimuovere dalla coda,¿Cuáles son las dos funciones principales definidas por una cola?,poner y quitar de la cola,poner y quitar de la cola,Jakie dwie główne funkcje definiuje kolejka?,enqueue i dequeue,enqueue i dequeue,Hai hàm chính được xác định bởi một hàng đợi là gì?,enqueue và dequeue,enqueue và dequeue,キューによって定義される2つの主な機能は何ですか？,エンキューおよびデキュー,エンキューおよびデキュー,队列定义的两个主要功能是什么？,入队和出队,入队和出队,ما هي الوظيفتان الرئيسيتان اللتان تحددهما قائمة الانتظار؟,قائمة و dequeue,قائمة و dequeue,Які дві основні функції визначаються чергою?,чергу та випуск,чергу та випуск,Quais são as duas funções principais definidas por uma fila?,enfileirar e retirar da fila,enfileirar e retirar da fila,دو عملکرد اصلی که توسط یک صف تعریف شده اند کدامند؟,enqueue و dequeue,enqueue و dequeue,Quines són les dues funcions principals definides per una cua?,cola i cola,cola i cola,Које су две главне функције дефинисане редом?,енкуеуе и декуеуе,енкуеуе и декуеуе,Apa dua fungsi utama yang ditentukan oleh antrian?,enqueue dan dequeue,enqueue dan dequeue,Hva er de to hovedfunksjonene definert av en kø?,enqueue og dequeue,enqueue og dequeue,대기열에서 정의하는 두 가지 주요 기능은 무엇입니까?,대기열에 넣기 및 대기열에서 빼기,대기열에 넣기 및 대기열에서 빼기,Mitkä ovat kaksi jonon määrittelemää päätoimintoa?,enqueue ja dequeue,enqueue ja dequeue,"Mi a két fő funkció, amelyet egy sor határoz meg?",enqueue és dequeue,enqueue és dequeue,Jaké jsou dvě hlavní funkce definované ve frontě?,zařazení do fronty a zařazení do fronty,zařazení do fronty a zařazení do fronty,Koje su dvije glavne funkcije definirane redom?,enqueue i dequeue,enqueue i dequeue
295,295,1354,8.2,push (add an element) pop (remove an element),push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?",push (ein Element hinzufügen) pop (ein Element entfernen),Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,iduso (pagdugang usa ka elemento) pop (tangtanga usa ka elemento),Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,tryck (lägg till ett element) pop (ta bort ett element),Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,push (ajouter un élément) pop (supprimer un élément),Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,push (element toevoegen) pop (element verwijderen),Какие две основные функции определяет стек?,толкать и хлопать,push (добавить элемент) pop (удалить элемент),Quali sono le due funzioni principali definite da uno stack?,spingere e pop,push (aggiungi un elemento) pop (rimuovi un elemento),¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,empujar (agregar un elemento) pop (eliminar un elemento),Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,push (dodaj element) pop (usuń element),Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,push (thêm một phần tử) pop (xóa một phần tử),スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,push（要素を追加）pop（要素を削除）,堆栈定义的两个主要功能是什么？,推和弹出,推送（添加元素）弹出（移除元素）,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,دفع (إضافة عنصر) فرقعة (إزالة عنصر),Які дві основні функції визначає стек?,натискання та поп,натиснути (додати елемент) висунути (видалити елемент),Quais são as duas funções principais definidas por uma pilha?,empurre e estale,push (adicionar um elemento) pop (remover um elemento),دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,فشار دادن (افزودن یک عنصر) پاپ (حذف یک عنصر),Quines són les dues funcions principals definides per una pila?,empenta i esclata,prémer (afegir un element) pop (eliminar un element),Које су две главне функције дефинисане стеком?,гурај и пуцај,притисните (додајте елемент) поп (уклоните елемент),Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,push (tambahkan elemen) pop (hapus elemen),Hva er de to hovedfunksjonene definert av en stabel?,push og pop,trykk (legg til et element) pop (fjern et element),스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,push (요소 추가) pop (요소 제거),Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,työnnä (lisää elementti) pop (poista elementti),Mi a verem által definiált két fő funkció?,nyomja és pattog,push (elem hozzáadása) pop (elem eltávolítása),Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,push (přidat prvek) pop (odebrat prvek),Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,pritisnite (dodajte element) pop (uklonite element)
296,296,2217,12.2,running the input with various inputs measuring the running time with  system time,Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,4.5,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,"Ausführen des Eingangs mit verschiedenen Eingängen, die die Laufzeit mit der Systemzeit messen",Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,pagpadagan sa input nga adunay lainlaing mga input nga pagsukod sa oras sa pagdagan nga adunay oras sa sistema,Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,köra ingången med olika ingångar som mäter körtiden med systemtiden,Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,exécution de l&#39;entrée avec différentes entrées mesurant le temps de fonctionnement avec l&#39;heure système,Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,het uitvoeren van de ingang met verschillende ingangen die de looptijd met systeemtijd meten,Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,"запуск входа с различными входами, измерение времени работы с системным временем",Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,esecuzione dell&#39;input con vari input misurando il tempo di esecuzione con l&#39;ora del sistema,¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,ejecutar la entrada con varias entradas medir el tiempo de ejecución con el tiempo del sistema,Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,uruchamianie wejścia z różnymi wejściami mierzącymi czas pracy z czasem systemowym,Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,chạy đầu vào với các đầu vào khác nhau đo thời gian chạy với thời gian hệ thống,アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,さまざまな入力で入力を実行し、システム時間で実行時間を測定します,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,使用各种输入来运行输入，以系统时间来衡量运行时间,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,تشغيل الإدخال بمدخلات مختلفة تقيس وقت التشغيل مع وقت النظام,Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,"запуск вводу з різними входами, вимірювання часу роботи з системним часом",Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,executando a entrada com várias entradas medindo o tempo de execução com o tempo do sistema,روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,ورودی را با ورودی های مختلف اندازه گیری زمان اجرا با زمان سیستم اجرا کنید,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,executant l&#39;entrada amb diverses entrades que mesuren el temps d&#39;execució amb el temps del sistema,Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,покретање улаза са различитим улазима мерећи време рада са системским временом,Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,menjalankan input dengan berbagai input mengukur waktu berjalan dengan waktu sistem,Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,kjører inngangen med forskjellige innganger som måler kjøretiden med systemtiden,알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,시스템 시간으로 실행 시간을 측정하는 다양한 입력으로 입력 실행,Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,tulon suorittaminen erilaisilla tuloilla mittaamalla käyntiaika järjestelmän ajan kanssa,Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,"a bemenet futtatása különféle bemenetekkel, a futási idő mérése a rendszeridővel",Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,běh vstupu s různými vstupy měřící dobu běhu se systémovým časem,Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,pokretanje ulaza s različitim ulazima mjereći vrijeme rada sa sistemskim vremenom
297,297,314,2.4,When a class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",When does C++ create a default constructor?,5.0,"Wenn kein Konstruktor angegeben ist, stellt der Compiler standardmäßig einen bereit. Wenn für eine Klasse ein Konstruktor definiert ist, erstellt der Compiler keinen Standardkonstruktor.",Wann erstellt C ++ einen Standardkonstruktor?,Wenn eine Klasse keinen Konstruktor explizit enthält.,Kanus-a maghimo ang C ++ usa ka default nga magtutukod?,"Kung wala gihatag ang magtutukod, ang tagatala naghatag usa ingon default. Kung ang usa ka magtutukod gihubit alang sa usa ka klase, ang tagtipon dili maghimo usa ka default nga magtutukod.",Kung ang usa ka klase dili tin-aw nga kauban sa usa ka magtutukod.,När skapar C ++ en standardkonstruktör?,Om ingen konstruktör tillhandahålls tillhandahåller kompilatorn en som standard. Om en konstruktör är definierad för en klass skapar inte kompilatorn en standardkonstruktör.,När en klass inte uttryckligen innehåller en konstruktör.,Quand C ++ crée-t-il un constructeur par défaut?,"Si aucun constructeur n&#39;est fourni, le compilateur en fournit un par défaut. Si un constructeur est défini pour une classe, le compilateur ne crée pas de constructeur par défaut.",Lorsqu&#39;une classe n&#39;inclut pas explicitement un constructeur.,Wanneer maakt C ++ een standaardconstructor?,"Als er geen constructor is opgegeven, biedt de compiler er standaard een aan. Als een constructor is gedefinieerd voor een klasse, maakt de compiler geen standaardconstructor.",Wanneer een klasse niet expliciet een constructor bevat.,Когда C ++ создает конструктор по умолчанию?,"Если конструктор не указан, компилятор предоставляет его по умолчанию. Если для класса определен конструктор, компилятор не создает конструктор по умолчанию.",Когда класс явно не включает конструктор.,Quando C ++ crea un costruttore predefinito?,"Se non viene fornito alcun costruttore, il compilatore ne fornisce uno per impostazione predefinita. Se un costruttore è definito per una classe, il compilatore non crea un costruttore predefinito.",Quando una classe non include esplicitamente un costruttore.,¿Cuándo crea C ++ un constructor predeterminado?,"Si no se proporciona ningún constructor, el compilador proporciona uno por defecto. Si se define un constructor para una clase, el compilador no crea un constructor predeterminado.",Cuando una clase no incluye explícitamente un constructor.,Kiedy C ++ tworzy domyślny konstruktor?,"Jeśli nie podano konstruktora, kompilator udostępnia go domyślnie. Jeśli konstruktor jest zdefiniowany dla klasy, kompilator nie tworzy konstruktora domyślnego.",Gdy klasa nie zawiera jawnie konstruktora.,Khi nào C ++ tạo một phương thức khởi tạo mặc định?,"Nếu không có hàm tạo nào được cung cấp, trình biên dịch sẽ cung cấp một hàm tạo theo mặc định. Nếu một phương thức khởi tạo được định nghĩa cho một lớp, trình biên dịch không tạo một phương thức khởi tạo mặc định.",Khi một lớp không bao gồm một phương thức khởi tạo một cách rõ ràng.,C ++はいつデフォルトのコンストラクターを作成しますか？,コンストラクターが提供されていない場合、コンパイラーはデフォルトでコンストラクターを提供します。クラスにコンストラクターが定義されている場合、コンパイラーはデフォルトのコンストラクターを作成しません。,クラスにコンストラクターが明示的に含まれていない場合。,C ++何时创建默认构造函数？,如果未提供构造函数，则编译器默认提供一个构造函数。如果为类定义了构造函数，则编译器不会创建默认构造函数。,当类没有显式包括构造函数时。,متى تقوم C ++ بإنشاء مُنشئ افتراضي؟,إذا لم يتم توفير مُنشئ ، يوفر المترجم واحدًا افتراضيًا. إذا تم تعريف مُنشئ لفئة ، فلن يقوم المترجم بإنشاء مُنشئ افتراضي.,عندما لا يتضمن الفصل صراحة المنشئ.,Коли C ++ створює конструктор за замовчуванням?,"Якщо конструктор не вказаний, компілятор надає такий за замовчуванням. Якщо для класу визначено конструктор, компілятор не створює конструктор за замовчуванням.",Коли клас явно не включає конструктор.,Quando C ++ cria um construtor padrão?,"Se nenhum construtor for fornecido, o compilador fornece um por padrão. Se um construtor é definido para uma classe, o compilador não cria um construtor padrão.",Quando uma classe não inclui explicitamente um construtor.,C ++ چه زمانی سازنده پیش فرض ایجاد می کند؟,اگر سازنده ای ارائه نشده باشد ، کامپایلر به طور پیش فرض سازنده ای را ارائه می دهد. اگر سازنده ای برای یک کلاس تعریف شده باشد ، کامپایلر یک سازنده پیش فرض ایجاد نمی کند.,وقتی یک کلاس صریحاً شامل یک سازنده نباشد.,Quan crea C ++ un constructor per defecte?,"Si no es proporciona cap constructor, el compilador en proporciona un per defecte. Si es defineix un constructor per a una classe, el compilador no crea un constructor per defecte.",Quan una classe no inclou explícitament un constructor.,Када Ц ++ креира подразумевани конструктор?,"Ако није наведен ниједан конструктор, компајлер га подразумевано нуди. Ако је конструктор дефинисан за класу, компајлер не креира подразумевани конструктор.",Када класа експлицитно не садржи конструктор.,Kapan C ++ membuat konstruktor default?,"Jika tidak ada konstruktor yang disediakan, kompilator menyediakannya secara default. Jika konstruktor ditentukan untuk kelas, kompilator tidak membuat konstruktor default.",Ketika kelas tidak secara eksplisit menyertakan konstruktor.,Når oppretter C ++ en standardkonstruktør?,"Hvis ingen konstruktører er gitt, gir kompilatoren en som standard. Hvis en konstruktør er definert for en klasse, lager ikke kompilatoren en standardkonstruktør.",Når en klasse ikke eksplisitt inkluderer en konstruktør.,C ++는 언제 기본 생성자를 생성합니까?,생성자가 제공되지 않으면 컴파일러는 기본적으로 생성자를 제공합니다. 생성자가 클래스에 대해 정의 된 경우 컴파일러는 기본 생성자를 만들지 않습니다.,클래스에 생성자가 명시 적으로 포함되지 않은 경우.,Milloin C ++ luo oletusrakentajan?,"Jos rakennuttajaa ei ole, kääntäjä antaa sellaisen oletusarvoisesti. Jos luokalle on määritetty konstruktori, kääntäjä ei luo oletusrakentajaa.",Kun luokka ei nimenomaisesti sisällä konstruktoria.,Mikor hoz létre a C ++ egy alapértelmezett konstruktort?,"Ha nincs megadva konstruktor, akkor a fordító alapértelmezés szerint biztosít egyet. Ha egy osztályhoz definiált egy konstruktort, akkor a fordító nem hoz létre alapértelmezett konstruktort.",Amikor egy osztály nem tartalmaz kifejezetten konstruktort.,Kdy C ++ vytvoří výchozí konstruktor?,"Pokud není k dispozici žádný konstruktor, kompilátor ho ve výchozím nastavení poskytuje. Pokud je pro třídu definován konstruktor, kompilátor nevytvoří výchozí konstruktor.",Když třída výslovně neobsahuje konstruktor.,Kada C ++ kreira zadani konstruktor?,"Ako nije naveden nijedan konstruktor, kompajler ga prema zadanim postavkama daje. Ako je konstruktor definiran za klasu, kompajler ne stvara zadani konstruktor.",Kada klasa ne sadrži eksplicitno konstruktor.
298,298,1735,10.2,the number of generations or levels the tree has,The length of the longest path from the root to any of its leaves.,What is the height of a tree?,4.5,Die Länge des längsten Weges von der Wurzel zu einem seiner Blätter.,Wie hoch ist ein Baum?,"Die Anzahl der Generationen oder Ebenen, die der Baum hat",Unsa ang kataas sa usa ka kahoy?,Ang gitas-on sa labing kadugay nga agianan gikan sa gamot hangtod sa bisan unsang dahon niini.,ang ihap sa mga henerasyon o lebel nga naa sa kahoy,Vad är höjden på ett träd?,Längden på den längsta vägen från roten till någon av dess löv.,antalet generationer eller nivåer som trädet har,Quelle est la hauteur d&#39;un arbre?,La longueur du chemin le plus long de la racine à l&#39;une de ses feuilles.,le nombre de générations ou de niveaux de l&#39;arbre,Wat is de hoogte van een boom?,De lengte van het langste pad van de wortel tot een van de bladeren.,het aantal generaties of niveaus dat de boom heeft,Какая высота у дерева?,Длина самого длинного пути от корня до любого из его листьев.,количество поколений или уровней дерева,Qual è l&#39;altezza di un albero?,La lunghezza del percorso più lungo dalla radice a una qualsiasi delle sue foglie.,il numero di generazioni o livelli di cui dispone l&#39;albero,¿Cuál es la altura de un árbol?,La longitud del camino más largo desde la raíz hasta cualquiera de sus hojas.,el número de generaciones o niveles que tiene el árbol,Jaka jest wysokość drzewa?,Długość najdłuższej ścieżki od korzenia do któregokolwiek z liści.,liczba pokoleń lub poziomów drzewa,Chiều cao của cây là bao nhiêu?,Chiều dài của con đường dài nhất từ gốc đến bất kỳ lá nào của nó.,số thế hệ hoặc cấp độ mà cây có,木の高さはどれくらいですか？,根からその葉のいずれかまでの最長の経路の長さ。,ツリーの世代またはレベルの数,一棵树的高度是多少？,从根到其任何叶子的最长路径的长度。,树具有的世代或级别数,ما هو ارتفاع الشجرة؟,طول أطول مسار من الجذر إلى أي من أوراقه.,عدد الأجيال أو المستويات التي تمتلكها الشجرة,Яка висота дерева?,Довжина найдовшого шляху від кореня до будь-якого його листя.,"кількість поколінь або рівнів, які має дерево",Qual é a altura de uma árvore?,O comprimento do caminho mais longo da raiz a qualquer uma de suas folhas.,o número de gerações ou níveis que a árvore tem,ارتفاع یک درخت چقدر است؟,طول طولانی ترین مسیر از ریشه تا هر برگ آن.,تعداد نسل یا سطح درخت است,Quina alçada té un arbre?,La longitud del camí més llarg des de l’arrel fins a qualsevol de les seves fulles.,el nombre de generacions o nivells que té l’arbre,Колика је висина дрвета?,Дужина најдужег пута од корена до било ког његовог лишћа.,број генерација или нивоа које дрво има,Berapa tinggi pohon?,Panjang jalur terpanjang dari akar ke salah satu daunnya.,jumlah generasi atau tingkatan yang dimiliki pohon,Hva er høyden på et tre?,Lengden på den lengste stien fra roten til noen av bladene.,antall generasjoner eller nivåer treet har,나무의 높이는 얼마입니까?,뿌리에서 잎까지 가장 긴 경로의 길이입니다.,트리의 세대 또는 레벨 수,Mikä on puun korkeus?,Pisin reitin pituus juuresta mihin tahansa sen lehteen.,sukupolvien tai tasojen lukumäärä puulla,Mekkora egy fa magassága?,A leghosszabb út hossza a gyökértől bármelyik leveléig.,a fa generációinak vagy szintjeinek száma,Jaká je výška stromu?,Délka nejdelší cesty od kořene po kterýkoli z jejích listů.,"počet generací nebo úrovní, které strom má",Kolika je visina drveta?,Dužina najdužeg puta od korijena do bilo kojeg od njegovih listova.,broj generacija ili nivoa koje drvo ima
299,299,828,4.7,Rows,By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",5.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?",Reihen,"Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,Laray nga gihulma,"Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,Rader,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,Lignes,"Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,Rijen,Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,Рядов,"Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,Righe,"¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,Filas,"W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,Wydziwianie,"Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,Hàng,2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,行,二维数组如何按行或按列存储在内存中？,按行。,行数,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,صفوف,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,Рядки,"Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,Linhas,آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,ردیف ها,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,Fileres,"Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,Редови,"Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,Baris,"Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,Rader,"2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,행,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,Rivit,"Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,Sorok,"Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,Řádky,"Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,Redovi
300,300,508,3.4,Passing by reference can eliminate the pass-by-value overhead of copying large amounts of data.,It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,5.0,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?",Durch das Übergeben als Referenz kann der Aufwand für das Übergeben von Werten beim Kopieren großer Datenmengen beseitigt werden.,Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,Ang pag-agi sa pakisayran mahimong makatangtang sa pass-by-value overhead sa pagkopya sa daghang mga datos.,Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,Att skicka med referens kan eliminera förbikopplingsvärdet för kopiering av stora mängder data.,Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,Le passage par référence peut éliminer la surcharge pass-par-valeur de la copie de grandes quantités de données.,Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,Passeren via referentie kan de pass-by-value overhead van het kopiëren van grote hoeveelheden gegevens elimineren.,"Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,Передача по ссылке может устранить накладные расходы на передачу по значению при копировании больших объемов данных.,Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,Il passaggio per riferimento può eliminare il sovraccarico del valore di trasferimento della copia di grandi quantità di dati.,¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,El paso por referencia puede eliminar la sobrecarga de paso por valor de copiar grandes cantidades de datos.,"Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,Przekazywanie przez odniesienie może wyeliminować narzut przekazywania wartości związany z kopiowaniem dużych ilości danych.,Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,Chuyển bằng tham chiếu có thể loại bỏ chi phí chuyển theo giá trị khi sao chép một lượng lớn dữ liệu.,参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,参照渡しにより、大量のデータをコピーする際の値渡しのオーバーヘッドを排除できます。,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,通过引用传递可以消除复制大量数据的传递值的开销。,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,يمكن أن يؤدي التمرير حسب المرجع إلى التخلص من عبء تمرير القيمة لنسخ كميات كبيرة من البيانات.,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,Передача за посиланням може усунути накладні витрати на копіювання великих обсягів даних.,Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,A passagem por referência pode eliminar a sobrecarga da passagem por valor de copiar grandes quantidades de dados.,مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,عبور از طریق مرجع می تواند هزینه اضافی مربوط به کپی کردن مقدار زیادی از داده را از بین ببرد.,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,Passar per referència pot eliminar la sobrecàrrega pass-by-value de copiar grans quantitats de dades.,Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,Пролазак референцом може елиминисати опште трошкове преноса при копирању великих количина података.,Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,Meneruskan referensi dapat menghilangkan overhead nilai lewat dari menyalin data dalam jumlah besar.,Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,Ved å passere ved referanse kan du eliminere forbipasseringsverdien for kopiering av store datamengder.,참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,참조로 전달하면 많은 양의 데이터를 복사하는 값별 전달 오버 헤드를 제거 할 수 있습니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,Viitteiden välittäminen voi poistaa suurten tietomäärien kopioinnin ohitusarvon.,Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,Hivatkozással történő továbbítás kiküszöböli a nagy mennyiségű adat másolásának átengedett értékét.,"Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,Předávání odkazem může eliminovat režii kolem hodnoty kopírování velkého množství dat.,Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,Prolazak referencom može eliminirati opće troškove prosljeđivanja pri kopiranju velikih količina podataka.
301,301,1973,11.4,"a function signature should include the name of the function, parameters, and a body.","The name of the function and the list of parameters, including their types.",What is a function signature?,4.0,Der Name der Funktion und die Liste der Parameter einschließlich ihrer Typen.,Was ist eine Funktionssignatur?,"Eine Funktionssignatur sollte den Namen der Funktion, Parameter und einen Text enthalten.",Unsa ang usa ka pirma sa pag-andar?,"Ang ngalan sa pagpaandar ug lista sa mga parameter, lakip ang ilang mga lahi.","ang usa ka pirma sa pag-andar kinahanglan maglakip sa ngalan sa pagpaandar, mga parameter, ug usa ka lawas.",Vad är en funktionssignatur?,"Funktionens namn och listan med parametrar, inklusive deras typer.","en funktionssignatur bör innehålla namnet på funktionen, parametrar och en kropp.",Qu&#39;est-ce qu&#39;une signature de fonction?,"Le nom de la fonction et la liste des paramètres, y compris leurs types.","une signature de fonction doit inclure le nom de la fonction, des paramètres et un corps.",Wat is een functiehandtekening?,"De naam van de functie en de lijst met parameters, inclusief hun typen.","een functiehandtekening moet de naam van de functie, parameters en een hoofdtekst bevatten.",Что такое сигнатура функции?,"Имя функции и список параметров, включая их типы.","сигнатура функции должна включать имя функции, параметры и тело.",Cos&#39;è una firma di funzione?,"Il nome della funzione e l&#39;elenco dei parametri, inclusi i loro tipi.","una firma di funzione dovrebbe includere il nome della funzione, i parametri e un corpo.",¿Qué es una firma de función?,"El nombre de la función y la lista de parámetros, incluidos sus tipos.","la firma de una función debe incluir el nombre de la función, los parámetros y un cuerpo.",Co to jest podpis funkcji?,"Nazwa funkcji i lista parametrów, w tym ich typy.","podpis funkcji powinien zawierać nazwę funkcji, parametry i treść.",Chữ ký hàm là gì?,"Tên của hàm và danh sách các tham số, bao gồm cả loại của chúng.","một chữ ký hàm phải bao gồm tên của hàm, các tham số và nội dung.",関数シグネチャとは何ですか？,関数の名前と、タイプを含むパラメーターのリスト。,関数シグネチャには、関数の名前、パラメーター、および本体を含める必要があります。,什么是功能签名？,函数的名称和参数列表，包括它们的类型。,函数签名应包括函数名称，参数和主体。,ما هو توقيع الوظيفة؟,اسم الوظيفة وقائمة المعلمات ، بما في ذلك أنواعها.,يجب أن يتضمن توقيع الوظيفة اسم الوظيفة والمعلمات والجسم.,Що таке підпис функції?,"Назва функції та перелік параметрів, включаючи їх типи.","підпис функції повинен містити назву функції, параметри та тіло.",O que é uma assinatura de função?,"O nome da função e a lista de parâmetros, incluindo seus tipos.","uma assinatura de função deve incluir o nome da função, parâmetros e um corpo.",امضای تابع چیست؟,نام عملکرد و لیست پارامترها ، از جمله انواع آنها.,یک امضای عملکرد باید شامل نام عملکرد ، پارامترها و بدنه باشد.,Què és una signatura de funció?,"El nom de la funció i la llista de paràmetres, inclosos els seus tipus.","una signatura de funció ha d&#39;incloure el nom de la funció, els paràmetres i un cos.",Шта је потпис функције?,"Назив функције и листа параметара, укључујући њихове типове.","потпис функције треба да садржи име функције, параметре и тело.",Apa itu tanda tangan fungsi?,"Nama fungsi dan daftar parameter, termasuk tipenya.","tanda tangan fungsi harus menyertakan nama fungsi, parameter, dan badan.",Hva er en funksjonssignatur?,"Navnet på funksjonen og listen over parametere, inkludert typer.","en funksjonssignatur skal inneholde navnet på funksjonen, parametere og en kropp.",함수 서명이란 무엇입니까?,함수 이름 및 유형을 포함한 매개 변수 목록.,"함수 서명에는 함수 이름, 매개 변수 및 본문이 포함되어야합니다.",Mikä on funktion allekirjoitus?,"Funktion nimi ja parametrien luettelo, mukaan lukien niiden tyypit.","funktion allekirjoituksen tulee sisältää funktion nimi, parametrit ja runko.",Mi a függvény aláírása?,"A függvény neve és a paraméterek listája, beleértve azok típusait is.","a függvény aláírásának tartalmaznia kell a függvény nevét, a paramétereket és a törzset.",Co je podpis funkce?,"Název funkce a seznam parametrů, včetně jejich typů.","podpis funkce by měl obsahovat název funkce, parametry a tělo.",Što je potpis funkcije?,"Naziv funkcije i lista parametara, uključujući njihove tipove.","potpis funkcije trebao bi sadržavati ime funkcije, parametre i tijelo."
302,302,1928,11.3,"If the object refers to a class, the constructor(s) will initialize the objects based on return type and parameters passed. Compiler will auto-create one if one is not provided.",By using constructors.,How are objects initialized when they are created?,5.0,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,"Wenn sich das Objekt auf eine Klasse bezieht, initialisieren die Konstruktoren die Objekte basierend auf dem Rückgabetyp und den übergebenen Parametern. Der Compiler erstellt automatisch eine, wenn keine bereitgestellt wird.",Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,"Kung ang butang nga nagpasabut sa usa ka klase, ang (mga) magtutukod magpasugod sa mga butang nga gibase sa tipo sa pagbalik ug gipasa nga mga parameter. Awtomatikong maghimo usa ang tagatala kung wala gihatag ang usa.",Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,Om objektet hänvisar till en klass initierar konstruktorn (arna) objekten baserat på returtyp och skickade parametrar. Kompilatorn skapar automatiskt en om den inte tillhandahålls.,Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,"Si l&#39;objet fait référence à une classe, le (s) constructeur (s) initialiseront les objets en fonction du type de retour et des paramètres passés. Le compilateur en créera automatiquement un si aucun n&#39;est fourni.",Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,"Als het object naar een klasse verwijst, initialiseren de constructor (s) de objecten op basis van het retourtype en de doorgegeven parameters. De compiler maakt er automatisch een als er geen is opgegeven.",Как инициализируются объекты при их создании?,Используя конструкторы.,"Если объект ссылается на класс, конструктор (ы) инициализирует объекты на основе возвращаемого типа и переданных параметров. Компилятор автоматически создаст его, если он не указан.",Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,"Se l&#39;oggetto fa riferimento a una classe, i costruttori inizializzeranno gli oggetti in base al tipo restituito e ai parametri passati. Il compilatore ne creerà automaticamente uno se non ne viene fornito uno.",¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,"Si el objeto se refiere a una clase, el constructor (es) inicializará los objetos según el tipo de retorno y los parámetros pasados. El compilador creará uno automáticamente si no se proporciona uno.",Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,"Jeśli obiekt odwołuje się do klasy, konstruktor (y) zainicjuje obiekty na podstawie zwracanego typu i przekazanych parametrów. Kompilator automatycznie utworzy taki, jeśli nie zostanie dostarczony.",Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,"Nếu đối tượng tham chiếu đến một lớp, (các) phương thức khởi tạo sẽ khởi tạo các đối tượng dựa trên kiểu trả về và các tham số được truyền vào. Trình biên dịch sẽ tự động tạo nếu một trình biên dịch không được cung cấp.",オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,オブジェクトがクラスを参照している場合、コンストラクターは、渡された戻り値の型とパラメーターに基づいてオブジェクトを初期化します。提供されていない場合、コンパイラは自動作成します。,创建对象时如何初始化它们？,通过使用构造函数。,如果对象引用一个类，则构造函数将根据返回类型和传递的参数来初始化对象。如果未提供编译器，编译器将自动创建一个。,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,إذا كان الكائن يشير إلى فئة ، فسيقوم المُنشئ (المُنشئ) بتهيئة الكائنات بناءً على نوع الإرجاع والمعلمات التي تم تمريرها. سيقوم المترجم بإنشاء واحد تلقائيًا إذا لم يتم توفيره.,Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,"Якщо об&#39;єкт посилається на клас, конструктор (и) ініціалізує об&#39;єкти на основі типу повернення та переданих параметрів. Компілятор автоматично створить його, якщо такого не передбачено.",Como os objetos são inicializados quando são criados?,Usando construtores.,"Se o objeto se referir a uma classe, o (s) construtor (es) inicializarão os objetos com base no tipo de retorno e nos parâmetros passados. O compilador criará automaticamente um, se não for fornecido.",چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,اگر شی object به یک کلاس ارجاع شود ، سازنده (ها) اشیا objects را براساس نوع بازگشت و پارامترهای عبور داده شده اولیه می کنند. اگر کامپایلر ارائه نشود ، یکی ایجاد می کند.,Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,"Si l&#39;objecte fa referència a una classe, els constructors inicialitzaran els objectes en funció del tipus de retorn i dels paràmetres passats. El compilador en crearà automàticament si no se&#39;n proporciona cap.",Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,"Ако се објект односи на класу, конструктори ће иницијализовати објекте на основу типа повратка и прослеђених параметара. Преводник ће га аутоматски креирати ако није наведен.",Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,"Jika objek merujuk ke kelas, konstruktor akan menginisialisasi objek berdasarkan jenis kembalian dan parameter yang diteruskan. Kompiler akan otomatis membuatnya jika tidak tersedia.",Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,"Hvis objektet refererer til en klasse, vil konstruktøren (e) initialisere objektene basert på returtype og passerte parametere. Kompilatoren oppretter automatisk en hvis den ikke er gitt.",객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,객체가 클래스를 참조하는 경우 생성자는 반환 유형과 전달 된 매개 변수를 기반으로 객체를 초기화합니다. 제공되지 않으면 컴파일러가 자동으로 생성합니다.,"Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,"Jos objekti viittaa luokkaan, konstruktori (t) alustavat objektit palautustyypin ja välitettyjen parametrien perusteella. Kääntäjä luo sellaisen automaattisesti, jos sitä ei toimiteta.","Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,"Ha az objektum osztályra hivatkozik, a konstruktor (ok) inicializálja az objektumokat a visszatérés típusa és az átadott paraméterek alapján. A fordító automatikusan létrehoz egyet, ha nincs megadva.","Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,"Pokud objekt odkazuje na třídu, konstruktory inicializují objekty na základě vráceného typu a předaných parametrů. Pokud jeden není k dispozici, překladač jej automaticky vytvoří.",Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,"Ako se objekt odnosi na klasu, konstruktor (i) će inicijalizirati objekte na osnovu tipa povratka i prosljeđenih parametara. Prevoditelj će ga automatski kreirati ako nije naveden."
303,303,839,4.7,No answer,By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",1.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?",Keine Antwort,"Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,Walay tubag,"Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,Inget svar,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,Pas de réponse,"Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,Geen antwoord,Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,Нет ответа,"Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,Nessuna risposta,"¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,Sin respuesta,"W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,Brak odpowiedzi,"Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,Không có câu trả lời,2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,答えなし,二维数组如何按行或按列存储在内存中？,按行。,没有答案,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,لا اجابة,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,Без відповіді,"Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,Sem resposta,آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,بدون پاسخ,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,Sense resposta,"Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,Нема одговора,"Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,Tidak ada Jawaban,"Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,Ingen svar,"2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,대답 없음,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,Ei vastausta,"Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,Nincs válasz,"Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,Žádná odpověď,"Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,Nema odgovora
304,304,610,3.7,"Both are based on a control statement, Both involve repetition, Both involve a termination test, Both gradually approach termination, Both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,5.0,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,Beide basieren auf einer Kontrollanweisung. Beide beinhalten eine Wiederholung. Beide beinhalten einen Beendigungstest. Beide nähern sich allmählich der Beendigung. Beide können unendlich auftreten,Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,"Parehas nga gibase sa usa ka pamahayag sa pagkontrol, Parehong adunay kalabutan sa pagsubli, Parehas nga naglangkob sa usa ka pagsulay sa pagtapos, Parehas nga anam-anam nga moduol sa pagtapos, Parehas nga mahimo’g matapos",Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,"Båda är baserade på ett kontrolluttalande, båda involverar upprepning, båda innebär ett avslutningstest, båda närmar sig gradvis avslutning, båda kan inträffa oändligt",Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,"Les deux sont basés sur une déclaration de contrôle, les deux impliquent une répétition, les deux impliquent un test de terminaison, les deux se rapprochent progressivement de la fin, les deux peuvent se produire indéfiniment",Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,"Beide zijn gebaseerd op een controleverklaring, beide hebben betrekking op herhaling, beide omvatten een beëindigingstest, beide naderen geleidelijk beëindiging, beide kunnen oneindig voorkomen",В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"Оба основаны на управляющем утверждении, Оба предполагают повторение, Оба включают тест на завершение, Оба постепенно приближаются к завершению, Оба могут происходить бесконечно",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,"Entrambi si basano su una dichiarazione di controllo, Entrambi comportano la ripetizione, Entrambi comportano un test di terminazione, Entrambi si avvicinano gradualmente alla risoluzione, Entrambi possono verificarsi all&#39;infinito",¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,"Ambos se basan en una declaración de control, Ambos implican repetición, Ambos implican una prueba de terminación, Ambos se acercan gradualmente a la terminación, Ambos pueden ocurrir infinitamente",Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,"Oba są oparte na oświadczeniu kontrolnym, Oba obejmują powtórzenia, Oba obejmują test zakończenia, Oba stopniowo zbliżają się do zakończenia, Oba mogą występować w nieskończoność",Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,"Cả hai đều dựa trên một tuyên bố kiểm soát, Cả hai đều liên quan đến sự lặp lại, Cả hai đều liên quan đến kiểm tra kết thúc, Cả hai dần dần tiếp cận kết thúc, Cả hai đều có thể xảy ra vô hạn",反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,両方とも制御ステートメントに基づいています、両方とも繰り返しを含みます、両方とも終了テストを含みます、両方とも徐々に終了に近づきます、両方とも無限に発生する可能性があります,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,两者都基于控制语句，都涉及重复，都涉及终止测试，都逐渐接近终止，都可以无限地发生,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,كلاهما يعتمد على بيان تحكم ، كلاهما يتضمن التكرار ، كلاهما يتضمن اختبار إنهاء ، كلاهما يقترب تدريجياً من الإنهاء ، كلاهما يمكن أن يحدث بلا حدود,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"Обидва засновані на контрольному твердженні, Обидва передбачають повторення, Обидва передбачають тест закінчення, Обидва поступово наближаються до припинення, Обидва можуть відбуватися нескінченно",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,"Ambos são baseados em uma instrução de controle, Ambos envolvem repetição, Ambos envolvem um teste de término, Ambos se aproximam gradualmente do término, Ambos podem ocorrer infinitamente",شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,هر دو مبتنی بر یک عبارت کنترل هستند ، هر دو شامل تکرار ، هر دو شامل یک آزمایش خاتمه ، هر دو به تدریج به خاتمه نزدیک می شوند ، هر دو می توانند بی نهایت رخ دهند,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,"Ambdues es basen en una declaració de control, ambdues impliquen repetició, ambdues impliquen una prova de terminació, ambdues s’acosten gradualment a la terminació, ambdues es poden produir infinitament.",Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,"Оба се заснивају на контролној изјави, оба укључују понављање, оба укључују тест завршетка, оба се постепено приближавају прекиду, оба се могу догодити бесконачно",Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,"Keduanya didasarkan pada pernyataan kontrol, Keduanya melibatkan pengulangan, Keduanya melibatkan tes penghentian, Keduanya secara bertahap mendekati penghentian, Keduanya dapat terjadi tanpa batas",Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,"Begge er basert på en kontrolluttalelse, begge involverer repetisjon, begge involverer en avslutningstest, begge nærmer seg gradvis avslutning, begge kan forekomme uendelig",반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,"둘 다 제어문을 기반으로 함, 둘 다 반복이 포함됨, 둘 다 종료 테스트가 포함됨, 둘 다 점차적으로 종료 됨, 둘 다 무한히 발생할 수 있음",Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,"Molemmat perustuvat kontrollilausekkeeseen, Molemmat sisältävät toistoa, Molemmat sisältävät lopetustestin, Molemmat lähestyvät asteittain lopetusta, Molempia voi esiintyä loputtomasti",Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"Mindkettő vezérlő nyilatkozaton alapul, Mindkettő ismétlést tartalmaz, Mindkettő végződési tesztet tartalmaz, Mindkettő fokozatosan megközelíti a felmondást, Mindkettő végtelenül előfordulhat",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,"Oba jsou založeny na kontrolním příkazu, Oba zahrnují opakování, Oba zahrnují test ukončení, Oba se postupně blíží ukončení, Oba mohou nastat nekonečně",Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,"Obje se temelje na kontrolnoj izjavi, obje uključuju ponavljanje, obje uključuju test završetka, obje se postupno približavaju prekidu, obje mogu nastati beskonačno"
305,305,2106,11.9,"To divide and conquer, you divide the program in half once or multiple times to the extent that the program as a whole is easier to work in groups to solve the problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",Briefly describe the divide-and-conquer paradigm.,4.5,"Teilen Sie ein Problem in kleinere Teilprobleme auf, lösen Sie sie rekursiv und kombinieren Sie die Lösungen zu einer Lösung für das ursprüngliche Problem.",Beschreiben Sie kurz das Paradigma der Teilung und Eroberung.,"Um zu teilen und zu erobern, teilen Sie das Programm ein- oder mehrmals in zwei Hälften, so dass es einfacher ist, das gesamte Programm in Gruppen zu bearbeiten, um das Problem zu lösen.",Ihulagway sa mubu ang panig-ingnan sa pagkabahinbahin ug pagdaug.,"Bahina ang usa ka problema sa gagmay nga mga subproblems, sulbara kini pagbalik, ug pagkahuman isagol ang mga solusyon sa usa ka solusyon alang sa orihinal nga problema.","Aron mabahin ug mabuntog, gibahinbahin nimo ang programa sa katunga kausa o daghang beses sa sukod nga ang programa sa tibuuk dali nga magtrabaho sa mga grupo aron masulbad ang problema.",Beskriv kort delnings- och erövringsparadigmet.,"Dela upp ett problem i mindre delproblem, lösa dem rekursivt och kombinera sedan lösningarna i en lösning för det ursprungliga problemet.",För att dela och erövra delar du programmet i hälften en eller flera gånger i den utsträckning att programmet som helhet är lättare att arbeta i grupper för att lösa problemet.,Décrivez brièvement le paradigme diviser pour vaincre.,"Divisez un problème en sous-problèmes plus petits, résolvez-les de manière récursive, puis combinez les solutions en une solution pour le problème d&#39;origine.","Pour diviser et conquérir, vous divisez le programme en deux une ou plusieurs fois dans la mesure où le programme dans son ensemble est plus facile à travailler en groupe pour résoudre le problème.",Geef een korte beschrijving van het verdeel-en-heers-paradigma.,"Verdeel een probleem in kleinere deelproblemen, los ze recursief op en combineer de oplossingen vervolgens tot een oplossing voor het oorspronkelijke probleem.","Om te verdelen en te veroveren, deel je het programma een of meerdere keren in tweeën in die mate dat het programma als geheel gemakkelijker in groepen te werken is om het probleem op te lossen.",Кратко опишите парадигму «разделяй и властвуй».,"Разделите проблему на более мелкие подзадачи, решите их рекурсивно, а затем объедините решения в решение исходной проблемы.","Чтобы разделять и властвовать, вы делите программу пополам один или несколько раз до такой степени, чтобы с программой в целом было легче работать в группах для решения проблемы.",Descrivi brevemente il paradigma divide et impera.,"Dividere un problema in sottoproblemi più piccoli, risolverli in modo ricorsivo e quindi combinare le soluzioni in una soluzione per il problema originale.","Per dividere e conquistare, dividi il programma a metà una o più volte nella misura in cui il programma nel suo complesso è più facile da lavorare in gruppo per risolvere il problema.",Describe brevemente el paradigma de divide y vencerás.,"Divida un problema en subproblemas más pequeños, resuélvalos de forma recursiva y luego combine las soluciones en una solución para el problema original.","Para dividir y conquistar, divide el programa por la mitad una o varias veces en la medida en que el programa en su conjunto sea más fácil de trabajar en grupos para resolver el problema.",Krótko opisz paradygmat „dziel i rządź”.,"Podziel problem na mniejsze podproblemy, rozwiąż je rekurencyjnie, a następnie połącz rozwiązania w rozwiązanie pierwotnego problemu.","Aby dzielić i zwyciężać, dzieli się program na pół raz lub wielokrotnie, do tego stopnia, że program jako całość jest łatwiejszy do pracy w grupach w celu rozwiązania problemu.",Mô tả ngắn gọn mô hình chia để trị.,"Chia một vấn đề thành các bài toán con nhỏ hơn, giải chúng một cách đệ quy, sau đó kết hợp các giải pháp thành một giải pháp cho vấn đề ban đầu.","Để phân chia và chinh phục, bạn chia đôi chương trình một lần hoặc nhiều lần để chương trình nói chung dễ làm việc theo nhóm để giải quyết vấn đề hơn.",分割統治パラダイムについて簡単に説明します。,問題をより小さなサブ問題に分割し、それらを再帰的に解決してから、解決策を組み合わせて元の問題の解決策にします。,分割統治するには、プログラム全体をグループで作業して問題を解決しやすい程度に、プログラムを1回または複数回半分に分割します。,简要描述分而治之的范式。,将问题分成较小的子问题，递归地解决它们，然后将解决方案组合为原始问题的解决方案。,要进行分而治之，您可以将程序分成一次或多次一半，以使程序整体更易于成组地工作以解决问题。,صِف بإيجاز نموذج فرق تسد.,قسّم مشكلة إلى مشاكل فرعية أصغر ، وحلها بشكل متكرر ، ثم ادمج الحلول في حل للمشكلة الأصلية.,للتقسيم والقهر ، تقوم بتقسيم البرنامج إلى نصفين مرة واحدة أو عدة مرات إلى الحد الذي يسهل على البرنامج ككل العمل في مجموعات لحل المشكلة.,Коротко опишіть парадигму «розділи і переможи».,"Поділіть задачу на менші підзадачі, розв&#39;яжіть їх рекурсивно, а потім об&#39;єднайте розв&#39;язки у рішення вихідної задачі.","Щоб розділити та підкорити, ви розділяєте програму навпіл один раз або кілька разів настільки, що програмі в цілому легше працювати в групах для вирішення проблеми.",Descreva resumidamente o paradigma de dividir e conquistar.,"Divida um problema em subproblemas menores, resolva-os recursivamente e, em seguida, combine as soluções em uma solução para o problema original.","Para dividir e conquistar, você divide o programa pela metade uma ou várias vezes, na medida em que o programa como um todo fica mais fácil trabalhar em grupos para resolver o problema.",الگوی تقسیم و تسخیر را به طور خلاصه توصیف کنید.,یک مسئله را به زیرمشکلات کوچکتر تقسیم کنید ، آنها را به صورت بازگشتی حل کنید و سپس راه حل ها را برای حل مسئله اصلی ترکیب کنید.,برای تقسیم و تسخیر ، شما برنامه را یک بار یا چند بار به نصف تقسیم می کنید تا حدی که کار در کل برنامه برای حل مسئله آسان تر است.,Descriviu breument el paradigma de dividir i conquerir.,"Dividiu un problema en subproblemes més petits, resoleu-los recursivament i, a continuació, combineu les solucions en una solució per al problema original.","Per dividir i conquerir, dividiu el programa per la meitat una o diverses vegades en la mesura que el programa en general sigui més fàcil de treballar en grups per resoldre el problema.",Укратко опишите парадигму подели и освоји.,"Поделите проблем на мање потпроблеме, решите их рекурзивно, а затим комбинујте решења у решење за оригинални проблем.","Да бисте поделили и освојили, једанпут поделите програм на пола једном или више пута до те мере да је програм као целина лакши за рад у групама ради решавања проблема.",Jelaskan secara singkat paradigma bagi-dan-taklukkan.,"Bagilah masalah menjadi beberapa subproblem yang lebih kecil, selesaikan secara rekursif, lalu gabungkan solusi menjadi solusi untuk masalah aslinya.","Untuk membagi dan menaklukkan, Anda membagi program menjadi dua satu kali atau beberapa kali sejauh program secara keseluruhan lebih mudah untuk bekerja dalam kelompok untuk memecahkan masalah.",Beskriv kort splitt-og-erobre paradigmet.,"Del et problem i mindre delproblemer, løse dem rekursivt, og kombiner deretter løsningene til en løsning for det opprinnelige problemet.","For å dele og erobre, deler du programmet halvparten en eller flere ganger i den grad programmet som helhet er lettere å jobbe i grupper for å løse problemet.",분할 및 정복 패러다임을 간략하게 설명하십시오.,문제를 더 작은 하위 문제로 나누고 재귀 적으로 해결 한 다음 솔루션을 원래 문제에 대한 솔루션으로 결합합니다.,나누고 정복하려면 프로그램 전체가 문제를 해결하기 위해 그룹으로 작업하는 것이 더 쉬울 정도로 프로그램을 한 번 또는 여러 번 절반으로 나눕니다.,Kuvaile lyhyesti jaa ja valloita -paradigmaa.,"Jaa ongelma pienempiin alaongelmiin, ratkaise ne rekursiivisesti ja yhdistä sitten ratkaisut alkuperäisen ongelman ratkaisuksi.","Voit jakaa ja voittaa jakamalla ohjelman puoliksi kerran tai useita kertoja siinä määrin, että ohjelmaa kokonaisuutena on helpompi työskennellä ryhmissä ongelman ratkaisemiseksi.",Röviden írja le a megosztani és meghódítani paradigmát.,"Osszon egy problémát kisebb részproblémákra, oldja meg rekurzívan, majd a megoldásokat egyesítse az eredeti probléma megoldására.","A felosztáshoz és meghódításhoz a programot egyszer vagy többször felére osztja, olyan mértékben, hogy a program egésze könnyebben csoportosan dolgozzon a probléma megoldása érdekében.",Stručně popište paradigma rozděl a panuj.,"Rozdělte problém na menší dílčí problémy, řešte je rekurzivně a poté zkombinujte řešení do řešení původního problému.","Chcete-li rozdělit a dobýt, rozdělte program na polovinu jednou nebo vícekrát, a to v rozsahu, v jakém je snazší pracovat s programem jako celkem na řešení problému ve skupinách.",Ukratko opišite paradigmu podijeli i osvoji.,"Podijelite problem na manje potprobleme, riješite ih rekurzivno, a zatim kombinirajte rješenja u rješenje za izvorni problem.","Da biste podijelili i osvojili, podijelite program na pola jednom ili više puta do te mjere da je program kao cjelina lakši za rad u grupama radi rješavanja problema."
306,306,2169,12.1,A pointer is a variable that holds the address of a given variable (and of a given data type),The address of a location in memory.,What is a pointer?,5.0,Die Adresse eines Speicherorts.,Was ist ein Zeiger?,"Ein Zeiger ist eine Variable, die die Adresse einer bestimmten Variablen (und eines bestimmten Datentyps) enthält.",Unsa ang usa ka pointer?,Ang adres sa usa ka lokasyon sa memorya.,Ang usa ka pointer usa ka variable nga naghupot sa adres sa usa ka gihatag nga variable (ug usa ka gihatag nga tipo sa datos),Vad är en pekare?,Adressen till en plats i minnet.,En pekare är en variabel som innehåller adressen till en viss variabel (och av en given datatyp),Qu&#39;est-ce qu&#39;un pointeur?,L&#39;adresse d&#39;un emplacement en mémoire.,Un pointeur est une variable qui contient l&#39;adresse d&#39;une variable donnée (et d&#39;un type de données donné),Wat is een aanwijzer?,Het adres van een locatie in het geheugen.,Een pointer is een variabele die het adres van een bepaalde variabele (en van een bepaald gegevenstype) bevat,Что такое указатель?,Адрес места в памяти.,"Указатель - это переменная, которая содержит адрес данной переменной (и данного типа данных).",Cos&#39;è un puntatore?,L&#39;indirizzo di una posizione in memoria.,Un puntatore è una variabile che contiene l&#39;indirizzo di una data variabile (e di un dato tipo di dati),¿Qué es un puntero?,La dirección de una ubicación en la memoria.,Un puntero es una variable que contiene la dirección de una variable dada (y de un tipo de datos dado),Co to jest wskaźnik?,Adres lokalizacji w pamięci.,Wskaźnik to zmienna przechowująca adres danej zmiennej (i danego typu danych),Con trỏ là gì?,Địa chỉ của một vị trí trong bộ nhớ.,Con trỏ là một biến chứa địa chỉ của một biến nhất định (và của một kiểu dữ liệu nhất định),ポインタとは何ですか？,メモリ内の場所のアドレス。,ポインタは、特定の変数（および特定のデータ型）のアドレスを保持する変数です。,什么是指针？,内存中位置的地址。,指针是一个变量，用于保存给定变量（和给定数据类型）的地址。,ما هو المؤشر؟,عنوان موقع في الذاكرة.,المؤشر هو متغير يحمل عنوان متغير معين (ونوع بيانات معين),Що таке вказівник?,Адреса місця в пам&#39;яті.,"Покажчик - це змінна, яка містить адресу даної змінної (і даного типу даних)",O que é um ponteiro?,O endereço de um local na memória.,Um ponteiro é uma variável que contém o endereço de uma determinada variável (e de um determinado tipo de dados),اشاره گر چیست؟,آدرس مکانی در حافظه.,اشاره گر متغیری است که آدرس یک متغیر داده شده (و از یک نوع داده داده شده) را نگه می دارد,Què és un punter?,L&#39;adreça d&#39;una ubicació a la memòria.,Un punter és una variable que conté l&#39;adreça d&#39;una variable determinada (i d&#39;un tipus de dades determinat),Шта је показивач?,Адреса локације у меморији.,Показивач је променљива која садржи адресу дате променљиве (и датог типа података),Apa itu penunjuk?,Alamat lokasi di memori.,Pointer adalah variabel yang menyimpan alamat variabel tertentu (dan tipe data tertentu),Hva er en peker?,Adressen til en plassering i minnet.,En peker er en variabel som inneholder adressen til en gitt variabel (og av en gitt datatype),포인터 란 무엇입니까?,메모리에있는 위치의 주소.,포인터는 주어진 변수 (및 주어진 데이터 유형)의 주소를 보유하는 변수입니다.,Mikä on osoitin?,Muistissa olevan sijainnin osoite.,"Osoitin on muuttuja, joka pitää sisällään tietyn muuttujan (ja tietyn tietotyypin) osoitteen",Mi az a mutató?,A memóriában lévő hely címe.,"A mutató egy olyan változó, amely egy adott változó (és egy adott adattípus) címét tartalmazza",Co je to ukazatel?,Adresa umístění v paměti.,"Ukazatel je proměnná, která obsahuje adresu dané proměnné (a daného datového typu)",Šta je pokazivač?,Adresa lokacije u memoriji.,Pokazivač je varijabla koja sadrži adresu zadate varijable (i datog tipa podataka)
307,307,608,3.7,"Incorrectly writing either can result in infinite loops, both perform the same task over and over.",They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,3.5,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,"Falsches Schreiben kann zu Endlosschleifen führen, beide führen immer wieder dieselbe Aufgabe aus.",Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,"Ang sayup nga pagsulat bisan kinsa mahimong magresulta sa walay katapusan nga mga galong, parehas nga gihimo ang parehas nga buluhaton sa kanunay.",Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,"Felaktigt skrivande kan resultera i oändliga slingor, båda utför samma uppgift om och om igen.",Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,"Une écriture incorrecte peut entraîner des boucles infinies, les deux effectuant la même tâche à plusieurs reprises.",Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,"Het onjuist schrijven van een van beide kan resulteren in oneindige lussen, beide voeren dezelfde taak steeds weer uit.",В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"Неправильное написание любого из них может привести к бесконечным циклам, поскольку оба выполняют одну и ту же задачу снова и снова.",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,"Scrivere in modo errato può causare cicli infiniti, entrambi eseguono la stessa operazione più e più volte.",¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,"Escribir incorrectamente cualquiera de ellos puede resultar en bucles infinitos, ambos realizan la misma tarea una y otra vez.",Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,"Niepoprawne zapisanie któregoś z nich może skutkować nieskończonymi pętlami, które w kółko wykonują to samo zadanie.",Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,"Viết sai có thể dẫn đến vòng lặp vô hạn, cả hai đều thực hiện lặp đi lặp lại cùng một tác vụ.",反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,どちらかを誤って書き込むと、無限ループが発生する可能性があり、どちらも同じタスクを何度も実行します。,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,错误地编写任何一个都可能导致无限循环，并且都一遍又一遍地执行相同的任务。,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,يمكن أن تؤدي الكتابة غير الصحيحة لأي منهما إلى حلقات لا نهائية ، وكلاهما يؤدي نفس المهمة مرارًا وتكرارًا.,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"Неправильне написання будь-якого може призвести до нескінченних циклів, обидва виконують одне і те ж завдання знову і знову.",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,"A gravação incorreta de qualquer um dos dois pode resultar em loops infinitos, ambos realizam a mesma tarefa continuamente.",شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,نوشتن نادرست می تواند منجر به حلقه های بی نهایت شود ، هر دو یک وظیفه را بارها و بارها انجام می دهند.,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,"L’escriptura incorrecta pot provocar infinits bucles, tots dos realitzen la mateixa tasca una i altra vegada.",Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,"Нетачно писање било ког може резултирати бесконачним петљама, оба изнова изводе исти задатак.",Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,"Penulisan yang salah dapat mengakibatkan loop tak terbatas, keduanya melakukan tugas yang sama berulang kali.",Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,"Feil skriving kan føre til uendelige løkker, begge utfører den samme oppgaven om og om igjen.",반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,둘 중 하나를 잘못 쓰면 무한 루프가 발생할 수 있으며 둘 다 동일한 작업을 반복해서 수행합니다.,Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,"Kummankin virheellinen kirjoittaminen voi johtaa äärettömiin silmukoihin, molemmat suorittavat saman tehtävän uudestaan ja uudestaan.",Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"A helytelen írás bármelyikével végtelen ciklusokat eredményezhet, mindkettő ugyanazt a feladatot látja el újra és újra.",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,"Nesprávné psaní může mít za následek nekonečné smyčky, oba provádějí stále stejný úkol.",Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,"Pogrešno pisanje bilo kojeg može rezultirati beskonačnim petljama, oba izvode isti zadatak uvijek iznova."
308,308,1045,6.4,The array can act as a pointer or be referenced by a pointer.  *(arrayPtr + 3) or *(array + 3),"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,4.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,Das Array kann als Zeiger fungieren oder von einem Zeiger referenziert werden. * (arrayPtr + 3) oder * (array + 3),Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",Ang array mahimo nga molihok ingon usa ka pointer o mahimong pakisayran sa usa ka pointer. * (arrayPtr + 3) o * (array + 3),Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,Matrisen kan fungera som en pekare eller refereras av en pekare. * (arrayPtr + 3) eller * (array + 3),Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",Le tableau peut agir comme un pointeur ou être référencé par un pointeur. * (arrayPtr + 3) ou * (array + 3),Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",De array kan fungeren als een pointer of er kan naar worden verwezen door een pointer. * (arrayPtr + 3) of * (array + 3),Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",Массив может действовать как указатель или на него может ссылаться указатель. * (arrayPtr + 3) или * (array + 3),Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,L&#39;array può fungere da puntatore o essere referenziato da un puntatore. * (arrayPtr + 3) o * (array + 3),¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,La matriz puede actuar como un puntero o ser referenciada por un puntero. * (matrizPtr + 3) o * (matriz + 3),Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.",Tablica może działać jako wskaźnik lub odwoływać się za pomocą wskaźnika. * (tablicaPtr + 3) lub * (tablica + 3),Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",Mảng có thể hoạt động như một con trỏ hoặc được tham chiếu bởi một con trỏ. * (arrayPtr + 3) hoặc * (array + 3),配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,配列は、ポインターとして機能することも、ポインターによって参照されることもあります。 *（arrayPtr + 3）または*（array + 3）,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,该数组可以充当指针或被指针引用。 *（arrayPtr + 3）或*（array + 3）,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,يمكن أن تعمل المصفوفة كمؤشر أو يمكن الرجوع إليها بواسطة مؤشر. * (arrayPtr + 3) أو * (صفيف + 3),Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",Масив може діяти як вказівник або на який посилається вказівник. * (arrayPtr + 3) або * (array + 3),Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",A matriz pode atuar como um ponteiro ou ser referenciada por um ponteiro. * (arrayPtr + 3) ou * (array + 3),چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,آرایه می تواند به عنوان یک اشاره گر عمل کند یا توسط یک اشاره گر ارجاع شود. * (arrayPtr + 3) یا * (array + 3),Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",La matriu pot actuar com un punter o fer-hi referència un punter. * (arrayPtr + 3) o * (array + 3),Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",Низ може деловати као показивач или се на њега позива показивач. * (арраиПтр + 3) или * (низ + 3),Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",Array dapat bertindak sebagai penunjuk atau direferensikan oleh penunjuk. * (arrayPtr + 3) atau * (array + 3),Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",Matrisen kan fungere som en peker eller bli referert til av en peker. * (arrayPtr + 3) eller * (array + 3),포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,배열은 포인터 역할을하거나 포인터에 의해 참조 될 수 있습니다. * (arrayPtr + 3) 또는 * (array + 3),Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,Matriisi voi toimia osoittimena tai osoitin voi viitata siihen. * (matriisiPtr + 3) tai * (matriisi + 3),Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.","A tömb mutatóként működhet, vagy egy mutató hivatkozhat rá. * (tömbPtr + 3) vagy * (tömb + 3)",Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,Pole může fungovat jako ukazatel nebo na něj může odkazovat ukazatel. * (arrayPtr + 3) nebo * (array + 3),Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",Niz može djelovati kao pokazivač ili se na njega poziva pokazivač. * (arrayPtr + 3) ili * (niz + 3)
309,309,2034,11.6,the alternative way to solve a problem that could be solved using recursion is iteration.,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?","Die alternative Möglichkeit, ein Problem zu lösen, das mithilfe der Rekursion gelöst werden könnte, ist die Iteration.",Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,ang kapilian nga paagi aron masulbad ang usa ka problema nga mahimong masulbad gamit ang recursion mao ang iteration.,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,det alternativa sättet att lösa ett problem som kan lösas med rekursion är iteration.,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,la manière alternative de résoudre un problème qui pourrait être résolu en utilisant la récursivité est l&#39;itération.,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,"de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursie, is iteratie.","Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,"альтернативный способ решения проблемы, которую можно решить с помощью рекурсии, - это итерация.",Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,il modo alternativo per risolvere un problema che potrebbe essere risolto usando la ricorsione è l&#39;iterazione.,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,la forma alternativa de resolver un problema que podría resolverse mediante la recursividad es la iteración.,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,"alternatywnym sposobem rozwiązania problemu, który można rozwiązać za pomocą rekurencji, jest iteracja.",Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,cách thay thế để giải quyết một vấn đề có thể được giải quyết bằng cách sử dụng đệ quy là lặp.,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,再帰を使用して解決できる問題を解決する別の方法は、反復です。,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,解决使用递归可以解决的问题的另一种方法是迭代。,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,الطريقة البديلة لحل مشكلة يمكن حلها باستخدام العودية هي التكرار.,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,"альтернативним способом вирішення проблеми, яку можна було б вирішити за допомогою рекурсії, є ітерація.",Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,a forma alternativa de resolver um problema que poderia ser resolvido usando recursão é a iteração.,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,روش جایگزین برای حل مسئله ای که می تواند با استفاده از روش بازگشت حل شود تکرار است.,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,la forma alternativa de resoldre un problema que es podria resoldre mitjançant la recursió és la iteració.,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,алтернативни начин решавања проблема који би се могао решити рекурзијом је итерација.,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,cara alternatif untuk menyelesaikan suatu masalah yang dapat diselesaikan dengan menggunakan rekursi adalah iterasi.,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,den alternative måten å løse et problem som kan løses ved hjelp av rekursjon er iterasjon.,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,재귀를 사용하여 해결할 수있는 문제를 해결하는 다른 방법은 반복입니다.,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,"vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiolla, on iterointi.",Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,a rekurzióval megoldható probléma megoldásának alternatív módja az iteráció.,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,"alternativním způsobem řešení problému, který lze vyřešit pomocí rekurze, je iterace.",Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,alternativni način rješavanja problema koji bi se mogao riješiti rekurzijom je iteracija.
310,310,54,1.2,"Refining stage, Production stage, and Maintenance stage.",The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),What stages in the software life cycle are influenced by the testing stage?,3.5,Die Teststufe kann sowohl die Codierungsstufe (Phase 5) als auch die Lösungsverfeinerungsstufe (Phase 7) beeinflussen.,Welche Phasen im Software-Lebenszyklus werden von der Testphase beeinflusst?,"Raffinierungsphase, Produktionsphase und Wartungsphase.",Unsang mga yugto sa siklo sa kinabuhi sa software ang naimpluwensyahan sa yugto sa pagsulay?,Ang yugto sa pagsulay mahimong makaimpluwensya sa pareho nga yugto sa pag-coding (yugto 5) ug ang yugto sa pagpino sa solusyon (yugto 7),"Paghinlo sa yugto, yugto sa Production, ug yugto sa Pagpadayon.",Vilka steg i programvarans livscykel påverkas av testfasen?,Teststeget kan påverka både kodningssteget (fas 5) och lösningsförfiningssteget (fas 7),"Raffineringssteg, produktionssteg och underhållssteg.",Quelles étapes du cycle de vie du logiciel sont influencées par l&#39;étape de test?,L&#39;étape de test peut influencer à la fois l&#39;étape de codage (phase 5) et l&#39;étape de raffinement de la solution (phase 7),"Étape de raffinage, étape de production et étape de maintenance.",Welke fasen in de levenscyclus van software worden beïnvloed door de testfase?,De testfase kan zowel de coderingsfase (fase 5) als de oplossingsverfijningsfase (fase 7) beïnvloeden,"Verfijningsfase, productiefase en onderhoudsfase.",На какие этапы жизненного цикла ПО влияет этап тестирования?,"Этап тестирования может влиять как на этап кодирования (этап 5), так и на этап уточнения решения (этап 7).","Этап переработки, этап производства и этап обслуживания.",Quali fasi del ciclo di vita del software sono influenzate dalla fase di test?,La fase di test può influenzare sia la fase di codifica (fase 5) che la fase di affinamento della soluzione (fase 7),"Fase di raffinazione, fase di produzione e fase di manutenzione.",¿Qué etapas del ciclo de vida del software están influenciadas por la etapa de prueba?,La etapa de prueba puede influir tanto en la etapa de codificación (fase 5) como en la etapa de refinamiento de la solución (fase 7),"Etapa de Refino, Etapa de Producción y Etapa de Mantenimiento.",Na jakie etapy cyklu życia oprogramowania wpływa etap testowania?,"Etap testowania może wpływać zarówno na etap kodowania (faza 5), jak i na etap udoskonalania rozwiązania (faza 7)","Etap rafinacji, etap produkcji i etap konserwacji.",Giai đoạn nào trong vòng đời phần mềm bị ảnh hưởng bởi giai đoạn kiểm thử?,Giai đoạn thử nghiệm có thể ảnh hưởng đến cả giai đoạn mã hóa (giai đoạn 5) và giai đoạn tinh chỉnh giải pháp (giai đoạn 7),"Giai đoạn tinh chế, giai đoạn sản xuất và giai đoạn bảo trì.",ソフトウェアライフサイクルのどの段階がテスト段階の影響を受けますか？,テスト段階は、コーディング段階（フェーズ5）とソリューションの改良段階（フェーズ7）の両方に影響を与える可能性があります。,精製段階、生産段階、および保守段階。,测试阶段会影响软件生命周期的哪些阶段？,测试阶段可以影响编码阶段（阶段5）和解决方案优化阶段（阶段7）,提炼阶段，生产阶段和维护阶段。,ما هي مراحل دورة حياة البرنامج التي تتأثر بمرحلة الاختبار؟,يمكن أن تؤثر مرحلة الاختبار على كل من مرحلة التشفير (المرحلة 5) ومرحلة تحسين الحل (المرحلة 7),مرحلة التكرير ومرحلة الإنتاج ومرحلة الصيانة.,На які етапи життєвого циклу програмного забезпечення впливає етап тестування?,"Стадія випробування може впливати як на стадію кодування (фаза 5), так і на стадію доробки розчину (фаза 7)","Стадія переробки, стадія виробництва та стадія технічного обслуговування.",Que fases do ciclo de vida do software são influenciadas pela fase de teste?,O estágio de teste pode influenciar tanto o estágio de codificação (fase 5) quanto o estágio de refinamento da solução (fase 7),"Estágio de Refino, Estágio de Produção e Estágio de Manutenção.",چه مرحله هایی از چرخه عمر نرم افزار تحت تأثیر مرحله آزمایش قرار می گیرند؟,مرحله آزمایش می تواند هم در مرحله کدگذاری (مرحله 5) و هم در مرحله تصفیه محلول (مرحله 7) تأثیر بگذارد.,مرحله تصفیه ، مرحله تولید و مرحله نگهداری.,Quines etapes del cicle de vida del programari estan influïdes per la fase de proves?,L&#39;etapa de prova pot influir tant en l&#39;etapa de codificació (fase 5) com en l&#39;etapa de refinament de la solució (fase 7),"Etapa de refinament, etapa de producció i etapa de manteniment.",На које фазе у животном циклусу софтвера утиче фаза тестирања?,Фаза испитивања може утицати и на фазу кодирања (фаза 5) и на фазу усавршавања раствора (фаза 7),"Фаза прераде, фаза производње и фаза одржавања.",Tahapan apa dalam siklus hidup perangkat lunak yang dipengaruhi oleh tahap pengujian?,Tahap pengujian dapat mempengaruhi tahap pengkodean (tahap 5) dan tahap perbaikan solusi (tahap 7),"Tahap pemurnian, tahap produksi, dan tahap pemeliharaan.",Hvilke stadier i programvarens livssyklus påvirkes av testfasen?,Testfasen kan påvirke både kodingsfasen (fase 5) og løsningsfinesseringen (fase 7),"Raffineringstrinn, produksjonsfase og vedlikeholdstrinn.",테스트 단계의 영향을받는 소프트웨어 수명주기의 단계는 무엇입니까?,테스트 단계는 코딩 단계 (5 단계)와 솔루션 개선 단계 (7 단계) 모두에 영향을 미칠 수 있습니다.,"정제 단계, 생산 단계 및 유지 관리 단계.",Mihin ohjelmiston elinkaaren vaiheisiin testausvaihe vaikuttaa?,Testausvaihe voi vaikuttaa sekä koodausvaiheeseen (vaihe 5) että liuoksen jalostusvaiheeseen (vaihe 7),"Jalostusvaihe, tuotantovaihe ja huoltovaihe.",A szoftver életciklusának mely szakaszait befolyásolja a tesztelési szakasz?,"A tesztelési szakasz befolyásolhatja mind a kódolási (5. fázis), mind az oldat-finomítási fázist (7. fázis)","Finomítási, gyártási és karbantartási szakasz.",Na jaké fáze životního cyklu softwaru má fáze testování vliv?,"Fáze testování může ovlivnit jak fázi kódování (fáze 5), tak fázi zdokonalení řešení (fáze 7)","Fáze rafinace, fáze výroby a fáze údržby.",Na koje faze u životnom ciklusu softvera utiče faza testiranja?,Faza ispitivanja može utjecati i na fazu kodiranja (faza 5) i na fazu usavršavanja rastvora (faza 7),"Faza rafiniranja, faza proizvodnje i faza održavanja."
311,311,1613,9.5,"List based.  Because it is on the run time order of N, also it does not have a limited size like an array does","Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred for a queue, and why?",4.5,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird für eine Warteschlange bevorzugt und warum?,"Listenbasiert. Da es in der Laufzeitreihenfolge von N liegt, hat es auch keine begrenzte Größe wie ein Array","Kinsa nga pagpatuman (nakabase sa laraw kumpara sa lista) ang gipili alang sa usa ka pila, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)","Gibase ang lista. Tungod kay kini naa sa run time order sa N, wala usab kini usa ka gikutuban nga gidak-on sama sa gihimo sa usa ka array","Vilken implementering (arraybaserad kontra listbaserad) är att föredra för en kö, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),Listbaserad. Eftersom den är på körtiden för N har den inte heller en begränsad storlek som en matris gör,"Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée pour une file d&#39;attente, et pourquoi?","Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)","Basé sur une liste. Parce qu&#39;il est dans l&#39;ordre d&#39;exécution de N, il n&#39;a pas non plus une taille limitée comme le fait un tableau","Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur voor een wachtrij, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)","Lijst gebaseerd. Omdat het zich in de runtime-volgorde van N bevindt, heeft het ook geen beperkte grootte zoals een array",Какая реализация (на основе массива или на основе списка) предпочтительнее для очереди и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","На основе списка. Поскольку он находится в порядке времени выполнения N, он также не имеет ограниченного размера, как массив.",Quale implementazione (basata su array o basata su elenco) è preferita per una coda e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)","Basato su elenco. Poiché è nell&#39;ordine del tempo di esecuzione di N, inoltre non ha una dimensione limitata come fa un array",¿Qué implementación (basada en matrices o basada en listas) se prefiere para una cola y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)","Basado en listas. Debido a que está en el orden de tiempo de ejecución de N, tampoco tiene un tamaño limitado como lo hace una matriz",Która implementacja (oparta na tablicy czy oparta na liście) jest preferowana dla kolejki i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","Na podstawie listy. Ponieważ jest w czasie wykonywania N, nie ma również ograniczonego rozmiaru, jak ma to miejsce w przypadku tablicy",Việc triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên cho hàng đợi và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)","Dựa trên danh sách. Bởi vì nó theo thứ tự thời gian chạy N, nó cũng không có kích thước giới hạn như một mảng",キューにはどの実装（配列ベースとリストベース）が優先されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リストベース。実行時の順序はNであるため、配列のようにサイズに制限はありません。,队列首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,基于列表。因为它在N的运行时间顺序上，所以它也没有像数组那样大小受限,ما هو التنفيذ المفضل لقائمة الانتظار ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),قائمة على أساس. نظرًا لأنه يعمل بترتيب وقت التشغيل لـ N ، فإنه أيضًا ليس له حجم محدود مثل المصفوفة,"Яка реалізація (на основі масиву проти списку) є кращою для черги, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","На основі списку. Оскільки він знаходиться за порядком виконання N, він також не має обмеженого розміру, як це робить масив",Qual implementação (baseada em matriz vs. baseada em lista) é preferida para uma fila e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)","Baseado em lista. Por estar na ordem de tempo de execução de N, também não tem um tamanho limitado como um array tem",کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) برای یک صف ترجیح داده می شود و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),براساس لیست. از آنجا که در سفارش زمان اجرا از N است ، همچنین مانند آرایه ای اندازه محدودی ندارد,Quina implementació (basada en matriu vs. basada en llista) es prefereix per a una cua i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)","Llista basada. Com que es troba en l&#39;ordre de temps d&#39;execució de N, tampoc no té una mida limitada com ho fa una matriu",Која имплементација (заснована на низу на основу листе) је пожељна за ред и зашто?,"На основу везе, јер су динамични (без ограничења величине)","На основу листе. Будући да је у редоследу времена извођења од Н, такође нема ограничену величину као низ","Implementasi mana (berbasis array vs. berbasis daftar) yang lebih disukai untuk antrian, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)","Berbasis daftar. Karena berada pada urutan run time N, juga tidak memiliki ukuran terbatas seperti yang dimiliki sebuah array","Hvilken implementering (arraybasert vs. listebasert) foretrekkes for en kø, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)","Listebasert. Fordi den er på kjøretid for N, har den heller ikke en begrenset størrelse som en matrise gjør",대기열에 대해 선호되는 구현 (배열 기반 대 목록 기반)은 무엇이며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",목록 기반. N의 런타임 순서이기 때문에 배열처럼 크기가 제한되지 않습니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on jonossa suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","Luettelopohjainen. Koska se on N: n ajoaikajärjestyksessä, sillä ei myöskään ole rajoitettua kokoa, kuten matriisilla","Melyik implementációt (tömb alapú vagy lista alapú) részesítik előnyben a sorban, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","Lista alapú. Mivel az N futási sorrendjében van, ezért annak mérete sem korlátozott, mint egy tömb",Která implementace (založená na poli vs. založená na seznamu) je pro frontu upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","Seznam vychází. Protože je v pořadí běhu N, také nemá omezenou velikost jako pole",Koja je implementacija (zasnovana na nizu ili na bazi popisa) poželjna za red i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)","Na osnovu liste. Budući da je u redoslijedu vremena izvođenja od N, također nema ograničenu veličinu kao niz"
312,312,825,4.7,"x by y is row by column. So x is rows, and y is columns. Since the length of the row is not needed when passing the array to the function, this leads me to believe that bi-dimensional arrays are stored by rows at a time.",By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",5.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?","x mal y ist zeilenweise. X ist also Zeilen und y ist Spalten. Da die Länge der Zeile beim Übergeben des Arrays an die Funktion nicht benötigt wird, kann ich davon ausgehen, dass zweidimensionale Arrays zeilenweise gespeichert werden.","Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,"x by y sunod-sunod nga kolum. Mao nga ang x mga laray, ug ang y mga haligi. Tungod kay ang gitas-on sa laray dili kinahanglan kung ipasa ang laraw sa pagpaandar, kini nagdala kanako sa pagtuo nga ang bi-dimensional arrays gitipig sa mga laray sa matag higayon.","Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,"x efter y är rad för kolumn. Så x är rader och y är kolumner. Eftersom längden på raden inte behövs när matrisen överförs till funktionen, får jag mig att tro att tvådimensionella matriser lagras av rader i taget.","Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,"x par y est ligne par colonne. Donc x est des lignes et y est des colonnes. Étant donné que la longueur de la ligne n&#39;est pas nécessaire lors du passage du tableau à la fonction, cela me porte à croire que les tableaux bidimensionnels sont stockés par lignes à la fois.","Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,"x bij y is rij voor kolom. Dus x is rijen en y is kolommen. Aangezien de lengte van de rij niet nodig is bij het doorgeven van de array aan de functie, denk ik dat tweedimensionale arrays in rijen tegelijk worden opgeslagen.",Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,"x by y - строка за столбцом. Итак, x - это строки, а y - столбцы. Поскольку длина строки не требуется при передаче массива функции, это наводит меня на мысль, что двумерные массивы хранятся по строкам за раз.","Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,"x per y è riga per colonna. Quindi x è righe e y è colonne. Poiché la lunghezza della riga non è necessaria quando si passa l&#39;array alla funzione, questo mi porta a credere che gli array bidimensionali siano archiviati per righe alla volta.","¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,"x por y es fila por columna. Entonces x son filas e y son columnas. Dado que la longitud de la fila no es necesaria al pasar la matriz a la función, esto me lleva a creer que las matrices bidimensionales se almacenan por filas a la vez.","W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,"x na y to wiersz po kolumnie. Więc x to rzędy, a y to kolumny. Ponieważ długość wiersza nie jest potrzebna przy przekazywaniu tablicy do funkcji, to prowadzi mnie do przekonania, że dwuwymiarowe tablice są przechowywane w wierszach naraz.","Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,"x bởi y là hàng theo cột. Vì vậy, x là hàng và y là cột. Vì độ dài của hàng không cần thiết khi truyền mảng cho hàm, điều này khiến tôi tin rằng mảng hai chiều được lưu trữ theo hàng tại một thời điểm.",2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,x xyは行ごとです。したがって、xは行、yは列です。配列を関数に渡すときに行の長さは必要ないので、これにより、2次元配列は一度に行ごとに格納されると思います。,二维数组如何按行或按列存储在内存中？,按行。,x by y是逐列。所以x是行，y是列。由于将数组传递给函数时不需要行的长度，因此使我相信二维数组一次由行存储。,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,x على y صف بعمود. إذن ، x عبارة عن صفوف ، و y هي أعمدة. نظرًا لعدم الحاجة إلى طول الصف عند تمرير المصفوفة إلى الوظيفة ، فإن هذا يقودني إلى الاعتقاد بأن المصفوفات ثنائية الأبعاد يتم تخزينها بواسطة صفوف في كل مرة.,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,"x на y - рядок за стовпцем. Отже, x - це рядки, а y - стовпці. Оскільки довжина рядка не потрібна при передачі масиву функції, це змушує мене думати, що двовимірні масиви одночасно зберігаються рядками.","Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,"x por y é linha por coluna. Portanto, x são linhas ey são colunas. Como o comprimento da linha não é necessário ao passar o array para a função, isso me leva a acreditar que os arrays bidimensionais são armazenados por linhas de cada vez.",آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,x توسط y ردیف به ستون است. بنابراین x ردیف است و y ستون است. از آنجا که هنگام عبور آرایه به تابع به طول ردیف نیازی نیست ، این باعث می شود که من باور کنم آرایه های دو بعدی توسط ردیف ها همزمان ذخیره می شوند.,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,"x per y és fila per columna. Així doncs, x són files i y són columnes. Com que la longitud de la fila no és necessària quan es passa la matriu a la funció, això em fa pensar que les matrius bidimensionals s’emmagatzemen per files a la vegada.","Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,"к по и је ред по ступац. Дакле, к су редови, а и су колоне. С обзиром да дужина реда није потребна приликом прослеђивања низа функцији, ово ме наводи на уверење да се дводимензионални низови одједном чувају по редовима.","Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,"x dengan y adalah baris demi kolom. Jadi x adalah baris, dan y adalah kolom. Karena panjang baris tidak diperlukan saat meneruskan array ke fungsi, ini membuat saya percaya bahwa array dua dimensi disimpan oleh baris pada satu waktu.","Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,"x etter y er rad for kolonne. Så x er rader, og y er kolonner. Siden lengden på raden ikke er nødvendig når du overfører matrisen til funksjonen, får dette meg til å tro at todimensjonale matriser lagres av rader om gangen.","2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,x x y는 행 단위입니다. 따라서 x는 행이고 y는 열입니다. 배열을 함수에 전달할 때 행의 길이가 필요하지 않기 때문에 2 차원 배열이 한 번에 행별로 저장된다고 믿게됩니다.,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,"x x y on rivi kerrallaan. Joten x on rivejä ja y on sarakkeita. Koska rivin pituutta ei tarvita siirrettäessä matriisia funktiolle, se saa minut uskomaan, että kaksiulotteiset taulukot tallennetaan riveillä kerrallaan.","Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,"x x y soronként oszloponként. Tehát x sor és y oszlop. Mivel a tömbnek a függvényhez történő továbbításakor nincs szükség a sor hosszára, ez arra enged következtetni, hogy a kétdimenziós tömböket egyszerre sorok tárolják.","Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,"x x y je řádek po sloupci. Takže x jsou řádky a y jsou sloupce. Protože délka řádku není při předávání pole funkci nutná, vede mě to k domněnce, že bimenzionální pole jsou ukládána řádky najednou.","Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,"x po y je red po stupac. Dakle, x su redovi, a y su stupci. Budući da prilikom prosljeđivanja niza funkciji dužina reda nije potrebna, to me navodi na pretpostavku da se dvodimenzionalni nizovi pohranjuju po redovima odjednom."
313,313,192,1.7,A while statement tests the condition before it can start. A do...while statement loops through once before the condition is tested.,The block inside a do...while statement will execute at least once.,What is the main difference between a while and a do...while statement?,5.0,Der Block in einer do ... while-Anweisung wird mindestens einmal ausgeführt.,Was ist der Hauptunterschied zwischen einer while- und einer do ... while-Anweisung?,"Eine while-Anweisung testet die Bedingung, bevor sie gestartet werden kann. Eine do ... while-Anweisung wird einmal durchlaufen, bevor die Bedingung getestet wird.",Unsa ang punoan nga kalainan tali sa usa ka samtang ug usa nga buhaton ... samtang pahayag?,Ang bloke sa sulud sa usa ka buhaton ... samtang ang pahayag magpatuman labing menos kausa.,Ang usa ka pahayag nga samtang gisulayan ang kondisyon sa wala pa kini magsugod. Usa ka buhata ... samtang ang pahayag gilibut sa makausa sa wala pa gisulayan ang kondisyon.,Vad är den största skillnaden mellan ett tag och ett do ... while-uttalande?,Blocket inuti ett do ... while-uttalande kommer att köras minst en gång.,Ett tag uttalande testar tillståndet innan det kan börja. Ett gör ... medan uttalandet slingrar igenom en gång innan tillståndet testas.,Quelle est la principale différence entre une déclaration while et une déclaration do ... while?,Le bloc à l&#39;intérieur d&#39;une instruction do ... while s&#39;exécutera au moins une fois.,Une instruction while teste la condition avant qu&#39;elle ne puisse démarrer. Une instruction do ... while boucle une fois avant que la condition ne soit testée.,Wat is het belangrijkste verschil tussen een while en een do ... while-verklaring?,Het blok binnen een do ... while-instructie wordt minstens één keer uitgevoerd.,Een while-instructie test de toestand voordat deze kan starten. Een do ... while-instructie loopt één keer door voordat de voorwaarde wordt getest.,В чем основное различие между оператором while и do ... while?,Блок внутри оператора do ... while будет выполнен как минимум один раз.,Оператор while проверяет условие перед его запуском. Оператор do ... while проходит один раз перед проверкой условия.,Qual è la differenza principale tra un&#39;istruzione while e a do ... while?,Il blocco all&#39;interno di un&#39;istruzione do ... while verrà eseguito almeno una volta.,Un&#39;istruzione while verifica la condizione prima che possa iniziare. Un&#39;istruzione do ... while viene ripetuta una volta prima che la condizione venga verificata.,¿Cuál es la principal diferencia entre una declaración while y do ... while?,El bloque dentro de una instrucción do ... while se ejecutará al menos una vez.,Una instrucción while prueba la condición antes de que pueda comenzar. Una declaración do ... while se repite una vez antes de que se pruebe la condición.,Jaka jest główna różnica między stwierdzeniem a while a do ... while?,Blok wewnątrz instrukcji do ... while zostanie wykonany co najmniej raz.,"Instrukcja while sprawdza warunek, zanim będzie można go uruchomić. Instrukcja do ... while wykonuje pętlę przed sprawdzeniem warunku.",Sự khác biệt chính giữa câu lệnh while và do ... while là gì?,Khối bên trong câu lệnh do ... while sẽ thực thi ít nhất một lần.,Câu lệnh while kiểm tra điều kiện trước khi nó có thể bắt đầu. Câu lệnh do ... while lặp lại một lần trước khi điều kiện được kiểm tra.,whileステートメントとdo ... whileステートメントの主な違いは何ですか？,do ... whileステートメント内のブロックは、少なくとも1回実行されます。,whileステートメントは、開始する前に条件をテストします。 do ... whileステートメントは、条件がテストされる前に1回ループします。,while和do ... while语句之间的主要区别是什么？,do ... while语句中的块将至少执行一次。,while语句会在条件开始之前对其进行测试。 do ... while语句在测试条件之前会循环一次。,ما هو الفرق الرئيسي بين جملة while و a do ... while؟,سيتم تنفيذ الكتلة داخل بيان do ... while مرة واحدة على الأقل.,يختبر بيان الوقت الشرط قبل أن يبدأ. A do ... while البيان يتكرر مرة واحدة قبل أن يتم اختبار الشرط.,Яка головна різниця між твердженням while та do ... while?,Блок усередині оператора do ... while виконуватиметься принаймні один раз.,"Оператор while перевіряє стан перед тим, як його можна запустити. Оператор do ... while прокручується один раз перед тестуванням умови.",Qual é a principal diferença entre a instrução while e do ... while?,O bloco dentro de uma instrução do ... while será executado pelo menos uma vez.,Uma instrução while testa a condição antes de começar. Uma instrução do ... while faz um loop uma vez antes de a condição ser testada.,تفاوت اصلی میان جمله و حالات do ... while چیست؟,بلوک داخل دستور do ... while حداقل یک بار اجرا می شود.,دستور while شرایط را قبل از شروع آزمایش می کند. قبل از آزمایش شرط یک بار انجام می شود در حالی که دستور یک بار حلقه می زند.,Quina és la diferència principal entre una afirmació mentre que una sentència do ... while?,El bloc dins d&#39;una sentència do ... while s&#39;executarà almenys una vegada.,Una sentència mentre prova la condició abans que pugui començar. Una instrucció do ... while es realitza una vegada abans de provar la condició.,Која је главна разлика између изјаве неко време и уради ... док?,Блок унутар наредбе до ... вхиле извршиће се најмање једном.,Изјава вхиле тестира стање пре него што започне. Наредба до ... вхиле наредба петља једном пре тестирања услова.,Apa perbedaan utama antara pernyataan while dan do ... while?,Blok di dalam pernyataan do ... while akan dieksekusi setidaknya sekali.,Pernyataan while menguji kondisi sebelum dapat dimulai. Pernyataan do ... while loop melalui sekali sebelum kondisi diuji.,Hva er hovedforskjellen mellom en stund og en gjør ... mens uttalelse?,Blokken inne i en gjør ... mens uttalelsen vil kjøres minst en gang.,En stund uttalelse tester tilstanden før den kan starte. En gjør ... mens uttalelsen går gjennom en gang før tilstanden testes.,while과 do ... while 문의 주요 차이점은 무엇입니까?,do ... while 문 내부의 블록은 한 번 이상 실행됩니다.,while 문은 시작하기 전에 조건을 테스트합니다. do ... while 문은 조건이 테스트되기 전에 한 번 반복됩니다.,Mikä on tärkein ero hetken ja tekemisen ... lausunnon välillä?,Lohko do ... while-lauseen sisällä suoritetaan ainakin kerran.,Jonkin aikaa lause testaa kunnon ennen kuin se voi alkaa. Tee ... kun lause käy läpi kerran ennen ehdon testaamista.,Mi a fő különbség egy idő és egy tennivaló ... kijelentés között?,A blokk a do ... while utasításban legalább egyszer végrehajtásra kerül.,"Egy darabig állítás teszteli az állapotot, mielőtt elindulhatna. A do ... míg az utasítás egyszer végigvezet a feltétel tesztelése előtt.",Jaký je hlavní rozdíl mezi příkazem while a do ... while?,Blok uvnitř příkazu do ... while se provede alespoň jednou.,"Příkaz while testuje podmínku, než může začít. Příkaz do ... while prochází jednou před testováním podmínky.",Koja je glavna razlika između izjave neko vrijeme i do ... while?,Blok unutar naredbe do ... while izvršit će se najmanje jednom.,Izjava while testira stanje prije nego što može početi. Naredba do ... while petlju se provlači jednom prije testiranja stanja.
314,314,1779,10.4,a tree where each node can have at most 2 children.,A tree for which the maximum number of children per node is two.,What is a binary tree?,5.0,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Ein Baum, in dem jeder Knoten höchstens 2 Kinder haben kann.",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,usa ka kahoy diin ang matag node mahimo nga adunay labing daghan nga 2 nga mga bata.,Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,ett träd där varje nod kan ha högst två barn.,Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,un arbre où chaque nœud peut avoir au plus 2 enfants.,Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,een boom waar elk knooppunt maximaal 2 kinderen kan hebben.,Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","дерево, в котором каждый узел может иметь не более 2 дочерних элементов.",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,un albero dove ogni nodo può avere al massimo 2 figli.,¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,un árbol donde cada nodo puede tener como máximo 2 hijos.,Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","drzewo, w którym każdy węzeł może mieć maksymalnie 2 dzieci.",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,một cây mà mỗi nút có thể có nhiều nhất 2 nút con.,二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,各ノードが最大2つの子を持つことができるツリー。,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,一棵树，每个节点最多可以有两个孩子。,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,شجرة حيث يمكن أن تحتوي كل عقدة على طفلين على الأكثر.,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","дерево, де кожен вузол може мати щонайбільше 2 дітей.",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,uma árvore onde cada nó pode ter no máximo 2 filhos.,درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,درختی که هر گره حداکثر می تواند 2 فرزند داشته باشد.,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,un arbre on cada node pot tenir com a màxim 2 fills.,Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,дрво где сваки чвор може имати највише 2 деце.,Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,pohon di mana setiap node dapat memiliki paling banyak 2 anak.,Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,et tre der hver node kan ha maksimalt 2 barn.,이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,각 노드가 최대 2 개의 자식을 가질 수있는 트리.,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","puu, jossa jokaisessa solmussa voi olla enintään 2 lasta.",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","egy fa, ahol minden csomópontban legfeljebb 2 gyermek lehet.",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","strom, kde každý uzel může mít maximálně 2 děti.",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,stablo na kojem svaki čvor može imati najviše 2 djece.
315,315,1539,9.2,"Remove the item added first, add items to the back.",enqueue and dequeue,What are the two main functions defined by a queue?,5.0,Enqueue und Dequeue,Was sind die beiden Hauptfunktionen einer Warteschlange?,Entfernen Sie das zuerst hinzugefügte Element und fügen Sie Elemente auf der Rückseite hinzu.,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka pila?,enqueue ug dequeue,"Kuhaa una ang butang nga gidugang, idugang ang mga butang sa likud.",Vilka är de två huvudfunktionerna som definieras av en kö?,enqueue och dequeue,"Ta bort objektet som läggs till först, lägg till objekt på baksidan.",Quelles sont les deux principales fonctions définies par une file d&#39;attente?,mettre en file d&#39;attente et retirer la file d&#39;attente,"Supprimez l&#39;élément ajouté en premier, ajoutez des éléments à l&#39;arrière.",Wat zijn de twee belangrijkste functies die door een wachtrij worden gedefinieerd?,in de wachtrij plaatsen en uit de wachtrij halen,"Verwijder het eerst toegevoegde item, voeg items toe aan de achterkant.",Какие две основные функции определяет очередь?,поставить в очередь и исключить из очереди,"Удалите элемент, добавленный первым, добавьте элементы назад.",Quali sono le due funzioni principali definite da una coda?,accodare e rimuovere dalla coda,"Rimuovere prima l&#39;elemento aggiunto, aggiungere gli elementi sul retro.",¿Cuáles son las dos funciones principales definidas por una cola?,poner y quitar de la cola,"Quite el elemento agregado primero, agregue elementos a la parte posterior.",Jakie dwie główne funkcje definiuje kolejka?,enqueue i dequeue,"Usuń element dodany jako pierwszy, dodaj elementy z tyłu.",Hai hàm chính được xác định bởi một hàng đợi là gì?,enqueue và dequeue,"Bỏ mục thêm vào trước, thêm mục vào sau.",キューによって定義される2つの主な機能は何ですか？,エンキューおよびデキュー,最初に追加したアイテムを削除し、後ろにアイテムを追加します。,队列定义的两个主要功能是什么？,入队和出队,删除首先添加的项目，然后在后面添加项目。,ما هي الوظيفتان الرئيسيتان اللتان تحددهما قائمة الانتظار؟,قائمة و dequeue,قم بإزالة العنصر المضاف أولاً ، أضف العناصر إلى الخلف.,Які дві основні функції визначаються чергою?,чергу та випуск,"Видаліть доданий елемент першим, додайте елементи ззаду.",Quais são as duas funções principais definidas por uma fila?,enfileirar e retirar da fila,"Remova o item adicionado primeiro, adicione os itens atrás.",دو عملکرد اصلی که توسط یک صف تعریف شده اند کدامند؟,enqueue و dequeue,ابتدا مورد اضافه شده را بردارید ، موارد را به پشت اضافه کنید.,Quines són les dues funcions principals definides per una cua?,cola i cola,Traieu primer l’element afegit i afegiu-los a la part posterior.,Које су две главне функције дефинисане редом?,енкуеуе и декуеуе,"Уклоните ставку која је прва додата, додајте ставке на задњу страну",Apa dua fungsi utama yang ditentukan oleh antrian?,enqueue dan dequeue,"Hapus item yang ditambahkan pertama, tambahkan item ke belakang.",Hva er de to hovedfunksjonene definert av en kø?,enqueue og dequeue,"Fjern elementet som er lagt til først, legg til elementer på baksiden.",대기열에서 정의하는 두 가지 주요 기능은 무엇입니까?,대기열에 넣기 및 대기열에서 빼기,먼저 추가 한 항목을 제거하고 뒷면에 항목을 추가합니다.,Mitkä ovat kaksi jonon määrittelemää päätoimintoa?,enqueue ja dequeue,"Poista ensin lisätty kohde, lisää kohteet takaosaan.","Mi a két fő funkció, amelyet egy sor határoz meg?",enqueue és dequeue,"Távolítsa el az először hozzáadott elemet, és tegyen elemeket a hátuljába.",Jaké jsou dvě hlavní funkce definované ve frontě?,zařazení do fronty a zařazení do fronty,"Nejprve odeberte přidanou položku, přidejte položky dozadu.",Koje su dvije glavne funkcije definirane redom?,enqueue i dequeue,"Uklonite prvo dodanu stavku, dodajte je na poleđinu."
316,316,2325,12.6,a queue is a set of elements where the first element inserted is the first element to be removed,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,5.0,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Eine Warteschlange ist eine Gruppe von Elementen, bei denen das erste eingefügte Element das erste zu entfernende Element ist",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,ang usa ka pila usa ka hugpong sa mga elemento diin ang unang elemento nga gisal-ut mao ang una nga gikuha nga elemento,Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,en kö är en uppsättning element där det första elementet som infogas är det första elementet som ska tas bort,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.",une file d&#39;attente est un ensemble d&#39;éléments où le premier élément inséré est le premier élément à supprimer,Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,"een wachtrij is een set elementen waarbij het eerste element dat wordt ingevoegd, het eerste element is dat moet worden verwijderd",Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","очередь - это набор элементов, в котором первый вставленный элемент является первым удаляемым элементом",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,una coda è un insieme di elementi in cui il primo elemento inserito è il primo elemento da rimuovere,¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.",una cola es un conjunto de elementos donde el primer elemento insertado es el primer elemento a ser eliminado,Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","kolejka to zestaw elementów, w których pierwszy wstawiony element jest pierwszym elementem do usunięcia",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,hàng đợi là một tập hợp các phần tử trong đó phần tử đầu tiên được chèn vào là phần tử đầu tiên bị xóa,キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,キューは、挿入された最初の要素が削除される最初の要素である要素のセットです。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,队列是一组元素，其中插入的第一个元素是要删除的第一个元素,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,قائمة الانتظار هي مجموعة من العناصر حيث يكون العنصر الأول المدرج هو العنصر الأول المراد إزالته,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","Черга - це набір елементів, де перший вставлений елемент є першим елементом, який потрібно видалити",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.",uma fila é um conjunto de elementos onde o primeiro elemento inserido é o primeiro elemento a ser removido,صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,صف به مجموعه ای از عناصر گفته می شود که اولین عنصر درج شده اولین عنصری است که حذف می شود,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,una cua és un conjunt d&#39;elements on el primer element inserit és el primer element que es treu,Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,ред је скуп елемената где је први уметнути елемент први елемент који се уклања,Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,antrian adalah sekumpulan elemen di mana elemen pertama yang disisipkan adalah elemen pertama yang akan dihapus,Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,en kø er et sett med elementer der det første elementet som er satt inn er det første elementet som skal fjernes,대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,큐는 삽입 된 첫 번째 요소가 제거 될 첫 번째 요소 인 요소 세트입니다.,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","jono on joukko elementtejä, joista ensimmäinen lisätty elementti on ensimmäinen poistettava elementti",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","a várólista olyan elemek összessége, ahol az első beillesztett elem az első eltávolítandó elem",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","fronta je sada prvků, kde první vložený prvek je prvním prvkem, který má být odstraněn",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,red je skup elemenata gdje je prvi umetnuti element prvi element koji se uklanja
317,317,1862,11.1,"The name of the class file, the parameters it must take to perform its function.  Also a brief description of what the class does.",Function members and data members.,What are the elements typically included in a class definition?,3.0,Funktionsmitglieder und Datenelemente.,Welche Elemente sind normalerweise in einer Klassendefinition enthalten?,"Der Name der Klassendatei, die Parameter, die zur Ausführung ihrer Funktion erforderlich sind. Auch eine kurze Beschreibung dessen, was die Klasse tut.",Unsa ang mga elemento nga sagad nga gilakip sa usa ka kahulugan sa klase?,Mga miyembro sa pagpaandar ug mga miyembro sa datos.,"Ang ngalan sa file sa klase, ang mga parameter nga kinahanglan niini aron mahimo ang pagpaandar niini. Usa usab ka mubu nga paghulagway kung unsa ang gibuhat sa klase.",Vilka är de element som vanligtvis ingår i en klassdefinition?,Funktionsmedlemmar och datamedlemmar.,"Namnet på klassfilen, parametrarna som krävs för att utföra dess funktion. Också en kort beskrivning av vad klassen gör.",Quels sont les éléments généralement inclus dans une définition de classe?,Membres de fonction et membres de données.,"Le nom du fichier de classe, les paramètres qu&#39;il doit prendre pour exécuter sa fonction. Également une brève description de ce que fait la classe.",Wat zijn de elementen die typisch zijn opgenomen in een klassendefinitie?,Functieleden en gegevensleden.,"De naam van het klassebestand, de parameters die nodig zijn om zijn functie uit te voeren. Ook een korte beschrijving van wat de klas doet.",Какие элементы обычно включаются в определение класса?,Члены функций и члены данных.,"Имя файла класса, параметры, которые он должен принимать для выполнения своей функции. Также краткое описание того, что делает класс.",Quali sono gli elementi tipicamente inclusi in una definizione di classe?,Membri della funzione e membri dei dati.,"Il nome del file di classe, i parametri che deve assumere per svolgere la sua funzione. Anche una breve descrizione di ciò che fa la classe.",¿Cuáles son los elementos que normalmente se incluyen en una definición de clase?,Miembros de funciones y miembros de datos.,"El nombre del archivo de clase, los parámetros que debe tomar para realizar su función. También una breve descripción de lo que hace la clase.",Jakie elementy są zwykle zawarte w definicji klasy?,Członkowie funkcji i członkowie danych.,"Nazwa pliku klasy, parametry, które musi przyjąć, aby wykonać swoją funkcję. Również krótki opis tego, czym zajmuje się klasa.",Các phần tử thường được bao gồm trong định nghĩa lớp là gì?,Thành viên chức năng và thành viên dữ liệu.,"Tên của tệp lớp, các tham số mà nó phải có để thực hiện chức năng của nó. Cũng là một mô tả ngắn gọn về những gì lớp học làm.",クラス定義に通常含まれる要素は何ですか？,関数メンバーとデータメンバー。,クラスファイルの名前、その機能を実行するために必要なパラメータ。また、クラスの機能についても簡単に説明します。,类定义中通常包含哪些元素？,函数成员和数据成员。,类文件的名称，执行其功能必须使用的参数。还简要说明了该类的功能。,ما هي العناصر التي يتم تضمينها عادة في تعريف الفئة؟,أعضاء الوظيفة وأعضاء البيانات.,اسم ملف الفصل ، المعلمات التي يجب أن يأخذها لأداء وظيفته. أيضًا وصف موجز لما يفعله الفصل.,Які елементи зазвичай входять до визначення класу?,Члени функції та члени даних.,"Назва файлу класу, параметри, які він повинен прийняти для виконання своєї функції. Також короткий опис того, чим займається клас.",Quais são os elementos normalmente incluídos em uma definição de classe?,Membros de função e membros de dados.,"O nome do arquivo de classe, os parâmetros que deve seguir para executar sua função. Também uma breve descrição do que a classe faz.",عناصر معمولاً در تعریف کلاس کدامند؟,اعضای عملکرد و اعضای داده,نام فایل کلاس ، پارامترهایی که باید برای انجام عملکرد خود داشته باشد. همچنین شرح مختصری از آنچه کلاس انجام می دهد.,Quins són els elements que normalment s&#39;inclouen en una definició de classe?,Membres de funció i membres de dades.,"El nom del fitxer de classe, els paràmetres que ha de prendre per realitzar la seva funció. També una breu descripció del que fa la classe.",Који су елементи обично укључени у дефиницију класе?,Чланови функције и чланови података.,"Име датотеке класе, параметри које мора предузети да би извршавао своју функцију. Такође кратак опис онога што разред ради.",Apa saja elemen yang biasanya disertakan dalam definisi kelas?,Anggota fungsi dan anggota data.,"Nama file kelas, parameter yang diperlukan untuk menjalankan fungsinya. Juga deskripsi singkat tentang apa yang dilakukan kelas.",Hva er elementene som vanligvis inngår i en klassedefinisjon?,Funksjonsmedlemmer og datamedlemmer.,"Navnet på klassefilen, parametrene den må ta for å utføre funksjonen. Også en kort beskrivelse av hva klassen gjør.",일반적으로 클래스 정의에 포함되는 요소는 무엇입니까?,함수 멤버 및 데이터 멤버.,"클래스 파일의 이름, 기능을 수행하기 위해 취해야하는 매개 변수. 또한 수업이하는 일에 대한 간략한 설명입니다.",Mitkä elementit kuuluvat tyypillisesti luokan määritelmään?,Toiminto- ja datajäsenet.,"Luokkatiedoston nimi, parametrit, jotka se tarvitsee tehtävänsä suorittamiseen. Myös lyhyt kuvaus luokan toiminnasta.","Melyek azok az elemek, amelyeket általában az osztálydefiníció tartalmaz?",Funkciótagok és adattagok.,"Az osztályfájl neve, azok a paraméterek, amelyekre a funkció végrehajtásához szükség van. Rövid leírás arról is, hogy mit csinál az osztály.",Jaké prvky jsou obvykle zahrnuty v definici třídy?,Funkční členové a datoví členové.,"Název souboru třídy, parametry, které musí provést, aby mohl vykonávat svou funkci. Také krátký popis toho, co třída dělá.",Koji su elementi obično uključeni u definiciju klase?,Članovi funkcije i članovi podataka.,"Ime datoteke klase, parametri koje mora poduzeti da bi izvršavao svoju funkciju. Takođe kratak opis onoga što razred radi."
318,318,1122,6.7,Pointer variables that point to function addresses.,The address of the location in memory where the function code resides.,What is a function pointer?,5.0,"Die Adresse des Speicherorts, an dem sich der Funktionscode befindet.",Was ist ein Funktionszeiger?,"Zeigervariablen, die auf Funktionsadressen verweisen.",Unsa ang usa ka function pointer?,Ang adres sa lokasyon sa panumduman diin nagpuyo ang function code.,Mga variable sa pointer nga nagpunting sa mga adres sa pagpaandar.,Vad är en funktionspekare?,Adressen till platsen i minnet där funktionskoden finns.,Pekervariabler som pekar på funktionsadresser.,Qu&#39;est-ce qu&#39;un pointeur de fonction?,L&#39;adresse de l&#39;emplacement en mémoire où réside le code de fonction.,Variables de pointeur qui pointent vers des adresses de fonction.,Wat is een functie-aanwijzer?,Het adres van de locatie in het geheugen waar de functiecode zich bevindt.,Pointervariabelen die naar functie-adressen verwijzen.,Что такое указатель на функцию?,"Адрес места в памяти, где находится код функции.","Переменные-указатели, указывающие на адреса функций.",Cos&#39;è un puntatore a funzione?,L&#39;indirizzo della posizione in memoria in cui risiede il codice funzione.,Variabili puntatore che puntano a indirizzi di funzioni.,¿Qué es un puntero de función?,La dirección de la ubicación en la memoria donde reside el código de función.,Variables de puntero que apuntan a direcciones de funciones.,Co to jest wskaźnik funkcji?,"Adres lokalizacji w pamięci, w której znajduje się kod funkcji.","Zmienne wskaźnikowe, które wskazują adresy funkcji.",Con trỏ hàm là gì?,Địa chỉ của vị trí trong bộ nhớ nơi mã hàm cư trú.,Biến con trỏ trỏ đến địa chỉ hàm.,関数ポインタとは何ですか？,機能コードが存在するメモリ内の場所のアドレス。,関数アドレスを指すポインター変数。,什么是函数指针？,功能代码所在的内存位置的地址。,指向函数地址的指针变量。,ما هو مؤشر الوظيفة؟,عنوان الموقع في الذاكرة حيث يوجد رمز الوظيفة.,متغيرات المؤشر التي تشير إلى عناوين الوظائف.,Що таке покажчик функції?,"Адреса місця в пам&#39;яті, де знаходиться код функції.","Змінні покажчика, які вказують на адреси функцій.",O que é um ponteiro de função?,O endereço do local na memória onde o código de função reside.,Variáveis de ponteiro que apontam para endereços de função.,نشانگر عملکرد چیست؟,آدرس مکانی در حافظه که کد عملکرد در آن قرار دارد.,متغیرهای اشاره گر که به آدرس عملکردها اشاره می کنند.,Què és un punter de funció?,L&#39;adreça de la ubicació a la memòria on resideix el codi de funció.,Variables de punter que apunten a adreces de funcions.,Шта је показивач функције?,Адреса локације у меморији на којој се налази код функције.,Променљиве показивача које упућују на адресе функција.,Apa itu penunjuk fungsi?,Alamat lokasi di memori tempat kode fungsi berada.,Variabel penunjuk yang mengarah ke alamat fungsi.,Hva er en funksjonspeker?,Adressen til stedet i minnet der funksjonskoden ligger.,Pekervariabler som peker på funksjonsadresser.,함수 포인터 란 무엇입니까?,기능 코드가있는 메모리의 위치 주소입니다.,함수 주소를 가리키는 포인터 변수.,Mikä on funktion osoitin?,"Sen muistin sijainnin osoite, jossa toimintokoodi sijaitsee.","Osoitinmuuttujat, jotka osoittavat funktion osoitteisiin.",Mi az a funkciómutató?,"A memória azon helyének címe, ahol a funkciókód található.","Mutatóváltozók, amelyek függvénycímekre mutatnak.",Co je ukazatel funkce?,"Adresa umístění v paměti, kde se nachází funkční kód.","Proměnné ukazatele, které odkazují na adresy funkcí.",Što je pokazivač funkcije?,Adresa lokacije u memoriji na kojoj se nalazi kôd funkcije.,Varijable pokazivača koje upućuju na adrese funkcija.
319,319,75,1.3,Data Abstraction and control... it is possible to isolate elements from other elements a lot easier and prevent tampering of data.,Abstraction and reusability.,What are the main advantages associated with object-oriented programming?,3.5,Abstraktion und Wiederverwendbarkeit.,Was sind die Hauptvorteile der objektorientierten Programmierung?,"Datenabstraktion und -kontrolle ... Es ist viel einfacher, Elemente von anderen Elementen zu isolieren und Manipulationen an Daten zu verhindern.",Unsa ang mga punoan nga bentaha nga adunay kalabotan sa object-oriented nga programa?,Abstraction ug reusability.,Ang Data Abstraction ug control ... posible nga ihimulag ang mga elemento gikan sa ubang mga elemento nga labi ka kadali ug mapugngan ang pag-tamper sa datos.,Vilka är de största fördelarna med objektorienterad programmering?,Abstraktion och återanvändbarhet.,Dataabstraktion och kontroll ... det är möjligt att isolera element från andra element mycket lättare och förhindra manipulering av data.,Quels sont les principaux avantages associés à la programmation orientée objet?,Abstraction et réutilisabilité.,Abstraction et contrôle des données ... il est beaucoup plus facile d&#39;isoler les éléments d&#39;autres éléments et d&#39;éviter la falsification des données.,Wat zijn de belangrijkste voordelen van objectgeoriënteerd programmeren?,Abstractie en herbruikbaarheid.,Gegevensonttrekking en controle ... het is mogelijk om elementen een stuk eenvoudiger te isoleren van andere elementen en manipulatie van gegevens te voorkomen.,Каковы основные преимущества объектно-ориентированного программирования?,Абстракция и возможность повторного использования.,Абстракция и контроль данных ... можно намного проще изолировать элементы от других и предотвратить подделку данных.,Quali sono i principali vantaggi associati alla programmazione orientata agli oggetti?,Astrazione e riusabilità.,Astrazione e controllo dei dati ... è possibile isolare gli elementi da altri elementi molto più facilmente e prevenire la manomissione dei dati.,¿Cuáles son las principales ventajas asociadas con la programación orientada a objetos?,Abstracción y reutilización.,Extracción y control de datos ... es posible aislar elementos de otros elementos mucho más fácilmente y evitar la manipulación de datos.,Jakie są główne zalety programowania zorientowanego obiektowo?,Abstrakcja i możliwość ponownego wykorzystania.,Abstrakcja i kontrola danych ... można znacznie łatwiej oddzielić elementy od innych i zapobiec fałszowaniu danych.,Những ưu điểm chính liên quan đến lập trình hướng đối tượng là gì?,Tính trừu tượng và khả năng tái sử dụng.,Trừu tượng hóa và kiểm soát dữ liệu ... có thể cách ly các phần tử khỏi các phần tử khác dễ dàng hơn rất nhiều và ngăn chặn việc giả mạo dữ liệu.,オブジェクト指向プログラミングに関連する主な利点は何ですか？,抽象化と再利用性。,データの抽象化と制御...要素を他の要素からはるかに簡単に分離し、データの改ざんを防ぐことができます。,面向对象编程的主要优点是什么？,抽象和可重用性。,数据抽象和控制...可以很容易地将元素与其他元素隔离，并防止数据篡改。,ما هي المزايا الرئيسية المرتبطة بالبرمجة الشيئية؟,التجريد وإعادة الاستخدام.,استخراج البيانات والتحكم فيها ... من الممكن عزل العناصر عن العناصر الأخرى بسهولة أكبر ومنع التلاعب بالبيانات.,Які основні переваги пов’язані з об’єктно-орієнтованим програмуванням?,Абстракція та багаторазове використання.,"Абстракція даних та керування ... можливо, набагато простіше ізолювати елементи від інших елементів та запобігти фальсифікації даних.",Quais são as principais vantagens associadas à programação orientada a objetos?,Abstração e reutilização.,Abstração e controle de dados ... é possível isolar elementos de outros elementos com muito mais facilidade e evitar a violação de dados.,مزایای اصلی مرتبط با برنامه نویسی شی گرا چیست؟,انتزاع و استفاده مجدد.,انتزاع و کنترل داده ها ... می توان عناصر را از سایر عناصر بسیار راحت تر جدا کرد و از دستکاری داده ها جلوگیری کرد.,Quins són els principals avantatges associats a la programació orientada a objectes?,Abstracció i reutilització.,Abstracció i control de dades ... és possible aïllar elements d&#39;altres elements molt més fàcilment i evitar la manipulació de dades.,Које су главне предности повезане са објектно оријентисаним програмирањем?,Апстракција и поновна употребљивост.,Апстракција података и контрола ... могуће је много лакше изоловати елементе од других елемената и спречити неовлашћено подметање података.,Apa keuntungan utama yang terkait dengan pemrograman berorientasi objek?,Abstraksi dan dapat digunakan kembali.,Abstraksi dan kontrol Data ... memungkinkan untuk mengisolasi elemen dari elemen lain jauh lebih mudah dan mencegah perusakan data.,Hva er de viktigste fordelene knyttet til objektorientert programmering?,Abstraksjon og gjenbrukbarhet.,Dataabstraksjon og kontroll ... det er mulig å isolere elementer fra andre elementer mye lettere og forhindre manipulering av data.,객체 지향 프로그래밍과 관련된 주요 이점은 무엇입니까?,추상화 및 재사용 성.,데이터 추상화 및 제어 ... 다른 요소로부터 요소를 훨씬 더 쉽게 분리하고 데이터 변조를 방지 할 수 있습니다.,Mitkä ovat olio-ohjelmoinnin tärkeimmät edut?,Abstraktio ja uudelleenkäytettävyys.,Tiedonkeruu ja hallinta ... on mahdollista eristää elementit muista elementeistä paljon helpommin ja estää tietojen manipulointi.,Melyek az objektum-orientált programozás fő előnyei?,Absztrakció és újrafelhasználhatóság.,Adatok absztrakciója és vezérlése ... sokkal könnyebb elkülöníteni az elemeket más elemektől és megakadályozni az adatok manipulálását.,Jaké jsou hlavní výhody spojené s objektově orientovaným programováním?,Abstrakce a opakovaná použitelnost.,Abstrakce a kontrola dat ... je možné izolovat prvky od ostatních prvků mnohem snadněji a zabránit manipulaci s daty.,Koje su glavne prednosti povezane sa objektno orijentisanim programiranjem?,Apstrakcija i ponovna upotrebljivost.,Apstrakcija podataka i kontrola ... moguće je puno lakše izolirati elemente od ostalih elemenata i spriječiti neovlašteno miješanje podataka.
320,320,1011,6.3,The * operator returns the dereferenced pointer variable (ie: it returns the value of whatever variable the pointer is pointing to),An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,What does the star (*) operator return?,5.0,"Ein Alias (Synonym) für den Namen des Objekts, auf das sein Operand im Speicher verweist. Es ist der Dereferenzierungsoperator.",Was gibt der Operator star (*) zurück?,"Der Operator * gibt die dereferenzierte Zeigervariable zurück (dh er gibt den Wert der Variablen zurück, auf die der Zeiger zeigt).",Unsa man ang pagbalik sa bituon (*) nga operator?,Usa ka alyas (managsama) alang sa ngalan sa butang nga gitudlo sa operand niini sa memorya. Kini ang operator sa dereferencing.,Gibalik sa * operator ang gibalewala nga variable sa pointer (ie: gibalik niini ang kantidad sa bisan unsang variable nga gitudlo sa pointer),Vad returnerar stjärnan (*)?,Ett alias (synonym) för namnet på objektet som dess operand pekar på i minnet. Det är operatören för referenser.,Operatören * returnerar den variabla pekervariabeln (dvs. den returnerar värdet för vilken variabel som pekaren pekar på),Que renvoie l&#39;opérateur étoile (*)?,Un alias (synonyme) pour le nom de l&#39;objet vers lequel pointe son opérande en mémoire. C&#39;est l&#39;opérateur de déréférencement.,L&#39;opérateur * renvoie la variable de pointeur déréférencée (c&#39;est-à-dire: il renvoie la valeur de la variable sur laquelle le pointeur pointe),Wat retourneert de operator ster (*)?,Een alias (synoniem) voor de naam van het object waarnaar de operand in het geheugen verwijst. Het is de dereferentie-operator.,De * operator retourneert de pointervariabele zonder verwijzingen (dat wil zeggen: het retourneert de waarde van de variabele waarnaar de pointer verwijst),Что возвращает оператор звездочка (*)?,"Псевдоним (синоним) имени объекта, на который указывает его операнд в памяти. Это оператор разыменования.","Оператор * возвращает указатель разыменованной переменной (то есть: он возвращает значение любой переменной, на которую указывает указатель)",Cosa restituisce l&#39;operatore stella (*)?,Un alias (sinonimo) per il nome dell&#39;oggetto a cui punta in memoria il suo operando. È l&#39;operatore di dereferenziazione.,L&#39;operatore * restituisce la variabile del puntatore senza riferimenti (cioè: restituisce il valore di qualsiasi variabile a cui punta il puntatore),¿Qué devuelve el operador de estrella (*)?,Un alias (sinónimo) para el nombre del objeto al que apunta su operando en la memoria. Es el operador de desreferenciación.,"El operador * devuelve la variable de puntero desreferenciada (es decir, devuelve el valor de cualquier variable a la que apunta el puntero)",Co zwraca operator gwiazdki (*)?,Alias (synonim) nazwy obiektu wskazywanego przez jego operand w pamięci. Jest operatorem wyłuskiwania.,"Operator * zwraca zmienną wskaźnika, do której odwołuje się odwołanie (tj .: zwraca wartość dowolnej zmiennej, na którą wskazuje wskaźnik)",Toán tử dấu sao (*) trả về điều gì?,Một bí danh (từ đồng nghĩa) cho tên của đối tượng mà toán hạng của nó trỏ tới trong bộ nhớ. Nó là nhà điều hành hội nghị truyền hình.,Toán tử * trả về biến con trỏ được tham chiếu (nghĩa là: nó trả về giá trị của bất kỳ biến nào mà con trỏ đang trỏ đến),スター（*）演算子は何を返しますか？,オペランドがメモリ内で指すオブジェクトの名前のエイリアス（同義語）。間接参照演算子です。,*演算子は、逆参照されたポインター変数を返します（つまり、ポインターが指している変数の値を返します）,星号（*）运算符返回什么？,它的操作数指向内存中的对象名称的别名（同义词）。它是解引用运算符。,*运算符返回已取消引用的指针变量（即：它返回指针指向的任何变量的值）,ماذا يعود عامل النجمة (*)؟,اسم مستعار (مرادف) لاسم الكائن الذي يشير إليه المعامل في الذاكرة. إنه عامل إلغاء الإسناد.,يُرجع عامل التشغيل * متغير المؤشر الذي لم يتم الإشارة إليه (أي: يُرجع قيمة أي متغير يشير إليه المؤشر),Що повертає оператор зірка (*)?,"Псевдонім (синонім) назви об’єкта, на який вказує його операнд у пам’яті. Це оператор переспрямування.","Оператор * повертає дереференційну змінну вказівника (тобто: повертає значення будь-якої змінної, на яку вказує вказівник)",O que o operador asterisco (*) retorna?,Um alias (sinônimo) para o nome do objeto para o qual seu operando aponta na memória. É o operador de desreferenciamento.,O operador * retorna a variável de ponteiro não referenciada (ou seja: ele retorna o valor de qualquer variável para a qual o ponteiro está apontando),عملگر ستاره (*) چه چیزی را برمی گرداند؟,نام مستعار (مترادف) برای اسم شی که عملوند آن به حافظه اشاره می کند. این عملگر ارجاع دهی است.,عملگر * متغیر نشانگر ارجاع داده شده را برمی گرداند (یعنی: مقدار هر متغیری را که نشانگر به آن نشان می دهد برمی گرداند),Què retorna l&#39;operador estrella (*)?,Un àlies (sinònim) del nom de l&#39;objecte al qual apunta el seu operant a la memòria. És l’operador de desferenciació.,L&#39;operador * retorna la variable de punter no referenciat (és a dir: retorna el valor de la variable que apunti el punter),Шта враћа оператер звезда (*)?,Алиас (синоним) за име објекта на који његов операнд указује у меморији. То је оператер преусмеравања.,Оператор * враћа дереференцирану променљиву показивача (тј. Враћа вредност било које променљиве на коју показивач показује),Apa yang dikembalikan oleh operator bintang (*)?,Alias (sinonim) untuk nama objek yang ditunjuk operannya dalam memori. Itu adalah operator dereferencing.,Operator * mengembalikan variabel penunjuk yang dirujuk (yaitu: ia mengembalikan nilai variabel apa pun yang diarahkan penunjuk),Hva returnerer stjerneoperatøren (*)?,Et alias (synonym) for navnet på objektet som operanden peker på i minnet. Det er operatøren for dereferanse.,* -Operatøren returnerer den derferiserte pekervariabelen (dvs. den returnerer verdien av hvilken variabel pekeren peker på),별표 (*) 연산자는 무엇을 반환합니까?,피연산자가 메모리에서 가리키는 개체 이름의 별칭 (동의어)입니다. 역 참조 연산자입니다.,* 연산자는 역 참조 된 포인터 변수를 반환합니다 (예 : 포인터가 가리키는 변수의 값을 반환합니다).,Mitä tähti (*) -operaattori palauttaa?,"Alias (synonyymi) objektille, jonka operandi osoittaa muistiin. Se on dereferencing-operaattori.","* -Operaattori palauttaa viitatun osoittimen muuttujan (eli palauttaa minkä tahansa muuttujan arvon, johon osoitin osoittaa)",Mit ad vissza a csillag (*) operátor?,"Álnév (szinonima) annak az objektumnak a nevére, amelyre operandus mutat a memóriában. Ez a dereferencia operátor.","A * operátor visszaadja a hivatkozott mutató változót (azaz visszaadja annak a változónak az értékét, amelyre a mutató mutat)",Co vrací operátor hvězdy (*)?,"Alias (synonymum) pro název objektu, na který jeho operand odkazuje v paměti. Je to operátor dereferencování.","Operátor * vrací dereferencovanou proměnnou ukazatele (tj. Vrací hodnotu jakékoli proměnné, na kterou ukazatel ukazuje)",Šta vraća operater zvijezda (*)?,Alias (sinonim) za ime objekta na koji njegov operand ukazuje u memoriji. To je operater preusmjeravanja.,Operator * vraća dereferenciranu varijablu pokazivača (tj. Vraća vrijednost bilo koje varijable na koju pokazuje pokazivač)
321,321,130,1.5,"A variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.",A location in memory that can store a value.,What is a variable?,5.0,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,"Eine Variable ist die Speicheradresse für einen bestimmten Typ gespeicherter Daten oder aus mathematischer Sicht ein Symbol, das eine feste Definition mit sich ändernden Werten darstellt.",Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,"Ang usa ka variable mao ang address sa memorya alang sa usa ka piho nga klase nga gitipig nga datos, o gikan sa usa ka panan-aw sa matematika, usa ka simbolo nga nagrepresentar sa usa ka pirmi nga kahulugan nga adunay nagbag-o nga mga kantidad.",Vad är en variabel?,En plats i minnet som kan lagra ett värde.,"En variabel är minnesadressen för en specifik typ av lagrad data, eller ur ett matematiskt perspektiv, en symbol som representerar en fast definition med förändrade värden.",Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,"Une variable est l&#39;adresse mémoire d&#39;un type spécifique de données stockées ou, d&#39;un point de vue mathématique, un symbole représentant une définition fixe avec des valeurs changeantes.",Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,"Een variabele is het geheugenadres voor een bepaald type opgeslagen gegevens, of, vanuit wiskundig perspectief, een symbool dat een vaste definitie vertegenwoordigt met veranderende waarden.",Что такое переменная?,"Место в памяти, в котором может храниться значение.","Переменная - это адрес памяти для определенного типа хранимых данных или, с математической точки зрения, символ, представляющий фиксированное определение с изменяющимися значениями.",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,"Una variabile è l&#39;indirizzo di memoria per un tipo specifico di dati memorizzati o, da una prospettiva matematica, un simbolo che rappresenta una definizione fissa con valori variabili.",¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,"Una variable es la dirección de memoria para un tipo específico de datos almacenados, o desde una perspectiva matemática, un símbolo que representa una definición fija con valores cambiantes.",Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.",Zmienna to adres pamięci dla określonego typu przechowywanych danych lub z matematycznego punktu widzenia symbol reprezentujący ustaloną definicję ze zmieniającymi się wartościami.,Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,"Một biến là địa chỉ bộ nhớ cho một loại dữ liệu được lưu trữ cụ thể, hoặc từ góc độ toán học, một ký hiệu đại diện cho một định nghĩa cố định với các giá trị thay đổi.",変数とは何ですか？,値を格納できるメモリ内の場所。,変数は、特定のタイプの保存データのメモリアドレス、または数学的な観点からは、値が変化する固定定義を表すシンボルです。,什么是变量？,内存中可以存储值的位置。,变量是特定类型的已存储数据的存储器地址，或者从数学角度来看，是表示具有变化值的固定定义的符号。,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,المتغير هو عنوان الذاكرة لنوع معين من البيانات المخزنة ، أو من منظور رياضي ، رمز يمثل تعريفًا ثابتًا بقيم متغيرة.,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","Змінна - це адреса пам’яті для певного типу збережених даних або, з математичної точки зору, символ, що представляє фіксовану роздільну здатність зі змінними значеннями.",O que é uma variável?,Um local na memória que pode armazenar um valor.,"Uma variável é o endereço da memória para um tipo específico de dados armazenados ou, de uma perspectiva matemática, um símbolo que representa uma definição fixa com valores variáveis.",متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,یک متغیر آدرس حافظه برای نوع خاصی از داده های ذخیره شده یا از منظر ریاضی است ، نمادی که یک تعریف ثابت را با تغییر مقادیر نشان می دهد.,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,"Una variable és l&#39;adreça de memòria d&#39;un tipus específic de dades emmagatzemades o, des d&#39;una perspectiva matemàtica, un símbol que representa una definició fixa amb valors canviants.",Шта је променљива?,Локација у меморији која може да ускладишти вредност.,"Променљива је адреса меморије за одређену врсту ускладиштених података, или из математичке перспективе, симбол који представља фиксну дефиницију са променљивим вредностима.",Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,"Variabel adalah alamat memori untuk jenis data tersimpan tertentu, atau dari perspektif matematika, simbol yang mewakili definisi tetap dengan nilai yang berubah.",Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,"En variabel er minneadressen for en bestemt type lagrede data, eller fra et matematisk perspektiv, et symbol som representerer en fast definisjon med endrede verdier.",변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,변수는 저장된 데이터의 특정 유형에 대한 메모리 주소이거나 수학적 관점에서 값이 변경되는 고정 정의를 나타내는 기호입니다.,Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.","Muuttuja on tietyn tyyppisen tallennetun datan muistiosoite tai matemaattisesta näkökulmasta symboli, joka edustaa kiinteää määritelmää muuttuvilla arvoilla.",Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.","A változó az adott típusú tárolt adatok memóriacíme, vagy matematikai szempontból egy szimbólum, amely rögzített definíciót képvisel változó értékekkel.",Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.",Proměnná je adresa paměti pro konkrétní typ uložených dat nebo z matematického hlediska symbol představující pevnou definici se měnícími se hodnotami.,Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,"Varijabla je adresa memorije za određenu vrstu pohranjenih podataka, ili iz matematičke perspektive, simbol koji predstavlja fiksnu definiciju sa promjenjivim vrijednostima."
322,322,1761,10.3,an element in a tree that has no children,A node that has no children.,What is a leaf?,5.0,Ein Knoten ohne Kinder.,Was ist ein Blatt?,"Ein Element in einem Baum, das keine Kinder hat",Unsa ang dahon?,Usa ka node nga wala’y mga anak.,usa ka elemento sa usa ka punoan nga wala’y anak,Vad är ett blad?,En nod som inte har några barn.,ett element i ett träd som inte har några barn,Qu&#39;est-ce qu&#39;une feuille?,Un nœud qui n&#39;a pas d&#39;enfants.,un élément dans un arbre qui n&#39;a pas d&#39;enfants,Wat is een blad?,Een knooppunt dat geen kinderen heeft.,een element in een boom die geen kinderen heeft,Что такое лист?,"Узел, у которого нет детей.","элемент в дереве, у которого нет дочерних элементов",Cos&#39;è una foglia?,Un nodo che non ha figli.,un elemento in un albero che non ha figli,¿Qué es una hoja?,Un nodo que no tiene hijos.,un elemento en un árbol que no tiene hijos,Co to jest liść?,"Węzeł, który nie ma dzieci.","element w drzewie, który nie ma dzieci",Lá là gì?,Một nút không có nút con.,một phần tử trong cây không có con,葉とは何ですか？,子を持たないノード。,子を持たないツリー内の要素,什么是叶子？,没有子节点的节点。,树中没有子元素的元素,ما هي الورقة؟,عقدة ليس لها أبناء.,عنصر في شجرة ليس له أطفال,Що таке лист?,"Вузол, у якого немає дітей.","елемент у дереві, у якого немає дітей",O que é uma folha?,Um nó que não tem filhos.,um elemento em uma árvore que não tem filhos,برگ چیست؟,گره ای که فرزندی ندارد.,عنصری در درخت که فرزندی ندارد,Què és una fulla?,Un node que no té fills.,un element en un arbre que no té fills,Шта је лист?,Чвор који нема деце.,елемент на дрвету који нема деце,Apakah daun itu?,Node yang tidak memiliki anak.,elemen di pohon yang tidak memiliki anak,Hva er et blad?,En node som ikke har barn.,et element i et tre som ikke har barn,잎은 무엇입니까?,자식이없는 노드.,자식이없는 트리의 요소,Mikä on lehti?,"Solmu, jolla ei ole lapsia.","puun elementti, jolla ei ole lapsia",Mi a levél?,"Olyan csomópont, amelynek nincs gyermeke.","egy elem egy fában, amelynek nincs gyermeke",Co je to list?,"Uzel, který nemá žádné děti.","prvek na stromě, který nemá žádné děti",Šta je list?,Čvor koji nema djece.,element na drvetu koji nema djece
323,323,1367,8.2,pop and push,push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?",Pop und Push,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,pop ug pagduso,Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,knäpp och tryck,Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,pop et pousser,Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,knallen en duwen,Какие две основные функции определяет стек?,толкать и хлопать,хлопать и толкать,Quali sono le due funzioni principali definite da uno stack?,spingere e pop,pop e spingere,¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,pop y empujar,Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,pop i pchaj,Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,bật và đẩy,スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,ポップアンドプッシュ,堆栈定义的两个主要功能是什么？,推和弹出,弹出并推动,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,فرقع وادفع,Які дві основні функції визначає стек?,натискання та поп,поп і штовхнути,Quais são as duas funções principais definidas por uma pilha?,empurre e estale,pop e empurre,دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,پاپ و فشار,Quines són les dues funcions principals definides per una pila?,empenta i esclata,pop i empenta,Које су две главне функције дефинисане стеком?,гурај и пуцај,поп и гурај,Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,pop dan dorong,Hva er de to hovedfunksjonene definert av en stabel?,push og pop,pop og trykk,스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,팝 앤 푸시,Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,pop ja työnnä,Mi a verem által definiált két fő funkció?,nyomja és pattog,pattog és nyomja,Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,pop a tlačit,Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,pop i guraj
324,324,1997,11.5,"A recursive function is a function that breaks down a large problem into two or more smaller problems and calls itself to solve those smaller problems until a base case or terminating point is reached.  At the base case, a definite answer is called and the function no longer recurses, but unwinds itself back through function calls to determine the answer to the original large problem.",A function that calls itself.,What is a recursive function?,4.5,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine rekursive Funktion ist eine Funktion, die ein großes Problem in zwei oder mehr kleinere Probleme zerlegt und sich selbst aufruft, um diese kleineren Probleme zu lösen, bis ein Basisfall oder ein Endpunkt erreicht ist. Im Basisfall wird eine eindeutige Antwort aufgerufen und die Funktion wird nicht mehr wiederholt, sondern durch Funktionsaufrufe zurückgespult, um die Antwort auf das ursprüngliche große Problem zu ermitteln.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,"Ang usa ka recursive function usa ka function nga nagbungkag sa daghang problema sa duha o labi pa nga gagmay nga mga problema ug tawagan ang kaugalingon niini aron masulbad ang mas gamay nga mga problema hangtod maabut ang usa ka base case o terminasyon nga punto. Sa punoan nga kaso, gitawag ang usa ka tino nga tubag ug ang pag-andar dili na magbalikbalik, apan gipahawa ang kaugalingon pinaagi sa mga tawag sa pag-andar aron mahibal-an ang tubag sa orihinal nga daghang problema.",Vad är en rekursiv funktion?,En funktion som kallar sig själv.,En rekursiv funktion är en funktion som bryter ner ett stort problem i två eller flera mindre problem och kallar sig för att lösa de mindre problemen tills ett basfall eller avslutningspunkt uppnås. I basfallet kallas ett bestämt svar och funktionen återkommer inte längre utan avlindar sig själv igenom funktionssamtal för att bestämma svaret på det ursprungliga stora problemet.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,"Une fonction récursive est une fonction qui décompose un gros problème en deux problèmes plus petits ou plus et qui s&#39;appelle elle-même pour résoudre ces problèmes plus petits jusqu&#39;à ce qu&#39;un cas de base ou un point final soit atteint. Au cas de base, une réponse définitive est appelée et la fonction ne se répète plus, mais se déroule en arrière par des appels de fonction pour déterminer la réponse au problème d&#39;origine.",Wat is een recursieve functie?,Een functie die zichzelf aanroept.,"Een recursieve functie is een functie die een groot probleem opsplitst in twee of meer kleinere problemen en zichzelf oproept om die kleinere problemen op te lossen totdat een basisscenario of eindpunt is bereikt. Bij het basisscenario wordt een definitief antwoord aangeroepen en de functie komt niet meer terug, maar windt zichzelf terug door middel van functieaanroepen om het antwoord op het oorspronkelijke grote probleem te bepalen.",Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","Рекурсивная функция - это функция, которая разбивает большую проблему на две или более меньшие проблемы и вызывает себя для решения этих более мелких проблем до тех пор, пока не будет достигнут базовый вариант или конечная точка. В базовом случае вызывается определенный ответ, и функция больше не рекурсивно повторяется, а раскручивается через вызовы функций, чтобы определить ответ на исходную большую проблему.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,"Una funzione ricorsiva è una funzione che scompone un problema di grandi dimensioni in due o più problemi più piccoli e chiama se stessa per risolvere quei problemi più piccoli fino a quando non viene raggiunto un caso base o un punto finale. Nel caso base, viene chiamata una risposta definita e la funzione non ricorre più, ma si rilassa attraverso le chiamate di funzione per determinare la risposta al grande problema originale.",¿Qué es una función recursiva?,Una función que se llama a sí misma.,"Una función recursiva es una función que divide un problema grande en dos o más problemas más pequeños y se llama a sí misma para resolver esos problemas más pequeños hasta que se alcanza un caso base o un punto de terminación. En el caso base, se llama a una respuesta definida y la función ya no se repite, sino que se desenrolla a sí misma mediante llamadas de función para determinar la respuesta al gran problema original.",Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","Funkcja rekurencyjna to funkcja, która dzieli duży problem na dwa lub więcej mniejszych problemów i wywołuje samą siebie w celu rozwiązania tych mniejszych problemów, aż do osiągnięcia przypadku podstawowego lub punktu końcowego. W przypadku podstawowym wywoływana jest określona odpowiedź, a funkcja już się nie powtarza, ale powraca do wywołań funkcji, aby określić odpowiedź na pierwotny duży problem.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,"Hàm đệ quy là một hàm chia một bài toán lớn thành hai hoặc nhiều bài toán nhỏ hơn và tự gọi nó để giải các bài toán nhỏ hơn đó cho đến khi đạt được trường hợp cơ sở hoặc điểm kết thúc. Ở trường hợp cơ sở, một câu trả lời xác định được gọi và hàm không còn tái diễn nữa, nhưng tự mở ngược trở lại thông qua các lời gọi hàm để xác định câu trả lời cho bài toán lớn ban đầu.",再帰関数とは何ですか？,自分自身を呼び出す関数。,再帰関数は、大きな問題を2つ以上の小さな問題に分解し、ベースケースまたは終了点に到達するまで、それらの小さな問題を解決するために自身を呼び出す関数です。基本ケースでは、明確な回答が呼び出され、関数は再帰しなくなりますが、関数呼び出しを介して元に戻り、元の大きな問題に対する回答を決定します。,什么是递归函数？,调用自身的函数。,递归函数是将一个大问题分解为两个或更多个小问题并调用自身以解决那些小问题直到达到基本情况或终止点的函数。在基本情况下，将调用确定的答案，并且该函数不再递归，而是通过函数调用退回自身以确定原始大问题的答案。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,الوظيفة العودية هي وظيفة تقسم مشكلة كبيرة إلى مشكلتين أو أكثر أصغر وتدعو نفسها لحل تلك المشاكل الأصغر حتى يتم الوصول إلى الحالة الأساسية أو نقطة النهاية. في الحالة الأساسية ، يتم استدعاء إجابة محددة ولم تعد الوظيفة تتكرر ، ولكنها تفتح نفسها مرة أخرى من خلال استدعاءات الوظائف لتحديد الإجابة على المشكلة الأصلية الكبيرة.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","Рекурсивна функція - це функція, яка розбиває велику проблему на дві або більше менших задач і закликає вирішувати ці менші проблеми доти, доки не буде досягнуто базовий випадок або кінцева точка. У базовому випадку викликається певна відповідь, і функція більше не повторюється, а відмотується назад через виклики функції, щоб визначити відповідь на вихідну велику проблему.",O que é uma função recursiva?,Uma função que chama a si mesma.,"Uma função recursiva é uma função que divide um grande problema em dois ou mais problemas menores e chama a si mesma para resolver esses problemas menores até que um caso base ou ponto final seja alcançado. No caso base, uma resposta definida é chamada e a função não mais se repete, mas se desenrola por meio de chamadas de função para determinar a resposta ao grande problema original.",تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,یک تابع بازگشتی تابعی است که یک مسئله بزرگ را به دو یا چند مسئله کوچکتر تقسیم می کند و خود را فرا می خواند تا آن مشکلات کوچکتر را حل کند تا زمانی که به یک حالت پایه یا نقطه پایان برسد. در حالت پایه ، یک جواب مشخص فراخوانی می شود و عملکرد دیگر بازگشت نمی یابد ، اما خود را از طریق فراخوانی عملکرد باز می کند تا جواب مسئله بزرگ اصلی را تعیین کند.,Què és una funció recursiva?,Una funció que s’autodenomina.,"Una funció recursiva és una funció que divideix un gran problema en dos o més problemes més petits i que es diu resoldre aquests problemes més petits fins que s’arriba a un cas base o punt final. En el cas bàsic, es diu una resposta definida i la funció ja no es repeteix, sinó que es desenrotlla a través de trucades de funció per determinar la resposta al gran problema original.",Шта је рекурзивна функција?,Функција која себе позива.,"Рекурзивна функција је функција која велики проблем рашчлањује на два или више мањих проблема и позива се да те мање проблеме реши док се не постигне основни случај или крајња тачка. У основном случају, позива се дефинитиван одговор и функција се више не понавља, већ се сама опушта кроз позиве функција да би одредила одговор на првобитни велики проблем.",Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,"Fungsi rekursif adalah fungsi yang memecah masalah besar menjadi dua atau lebih masalah yang lebih kecil dan memanggil dirinya sendiri untuk menyelesaikan masalah yang lebih kecil tersebut hingga kasus dasar atau titik akhir tercapai. Pada kasus dasar, jawaban pasti dipanggil dan fungsinya tidak lagi berulang, tetapi melepaskan dirinya kembali melalui pemanggilan fungsi untuk menentukan jawaban atas masalah besar asli.",Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,"En rekursiv funksjon er en funksjon som bryter ned et stort problem i to eller flere mindre problemer og kaller seg for å løse de mindre problemene til et basissak eller avslutningspunkt er nådd. I basesaken kalles et bestemt svar, og funksjonen gjentas ikke lenger, men vikler seg tilbake gjennom funksjonsanrop for å bestemme svaret på det opprinnelige store problemet.",재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,재귀 함수는 큰 문제를 두 개 이상의 작은 문제로 나누고 기본 케이스 또는 종료 지점에 도달 할 때까지 이러한 작은 문제를 해결하기 위해 자신을 호출하는 함수입니다. 기본 사례에서 명확한 대답이 호출되고 함수는 더 이상 반복되지 않지만 원래의 큰 문제에 대한 대답을 결정하기 위해 함수 호출을 통해 다시 풀립니다.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","Rekursiivinen toiminto on toiminto, joka jakaa suuren ongelman kahteen tai useampaan pienempään ongelmaan ja kutsuu itsensä ratkaisemaan nämä pienemmät ongelmat, kunnes peruskohta tai loppupiste on saavutettu. Perustapauksessa kutsutaan varma vastaus, eikä funktio enää toistu, vaan purkaa itsensä takaisin toimintokutsujen avulla vastauksen määrittämiseksi alkuperäiseen suureen ongelmaan.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","A rekurzív függvény egy olyan funkció, amely egy nagy problémát két vagy több kisebb problémára bont, és felszólítja magát, hogy oldja meg ezeket a kisebb problémákat, amíg el nem éri az alapesetet vagy a végpontot. Az alapesetben egy határozott választ hívnak meg, és a függvény már nem ismétlődik, hanem visszahúzza magát a függvényhívásokon keresztül, hogy meghatározza a választ az eredeti nagy problémára.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","Rekurzivní funkce je funkce, která rozděluje velký problém na dva nebo více menších problémů a volá se k řešení těchto menších problémů, dokud není dosaženo základního případu nebo koncového bodu. V základním případě je volána definitivní odpověď a funkce se již neopakuje, ale odvíjí se zpět prostřednictvím volání funkcí, aby určila odpověď na původní velký problém.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,"Rekurzivna funkcija je funkcija koja veliki problem raščlanjuje na dva ili više manjih problema i poziva se da rješava te manje probleme dok se ne postigne osnovni slučaj ili završna točka. U osnovnom slučaju poziva se definitivan odgovor i funkcija se više ne ponavlja, već se opušta natrag kroz pozive funkcija kako bi odredila odgovor na izvorni veliki problem."
325,325,1020,6.3,the value of the variable the pointer points to.,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,What does the star (*) operator return?,4.0,"Ein Alias (Synonym) für den Namen des Objekts, auf das sein Operand im Speicher verweist. Es ist der Dereferenzierungsoperator.",Was gibt der Operator star (*) zurück?,"Der Wert der Variablen, auf die der Zeiger zeigt.",Unsa man ang pagbalik sa bituon (*) nga operator?,Usa ka alyas (managsama) alang sa ngalan sa butang nga gitudlo sa operand niini sa memorya. Kini ang operator sa dereferencing.,ang kantidad sa baryable nga gitudlo sa pointer.,Vad returnerar stjärnan (*)?,Ett alias (synonym) för namnet på objektet som dess operand pekar på i minnet. Det är operatören för referenser.,värdet på variabeln som pekaren pekar på.,Que renvoie l&#39;opérateur étoile (*)?,Un alias (synonyme) pour le nom de l&#39;objet vers lequel pointe son opérande en mémoire. C&#39;est l&#39;opérateur de déréférencement.,la valeur de la variable vers laquelle pointe le pointeur.,Wat retourneert de operator ster (*)?,Een alias (synoniem) voor de naam van het object waarnaar de operand in het geheugen verwijst. Het is de dereferentie-operator.,de waarde van de variabele waarnaar de aanwijzer verwijst.,Что возвращает оператор звездочка (*)?,"Псевдоним (синоним) имени объекта, на который указывает его операнд в памяти. Это оператор разыменования.","значение переменной, на которую указывает указатель.",Cosa restituisce l&#39;operatore stella (*)?,Un alias (sinonimo) per il nome dell&#39;oggetto a cui punta in memoria il suo operando. È l&#39;operatore di dereferenziazione.,il valore della variabile a cui punta il puntatore.,¿Qué devuelve el operador de estrella (*)?,Un alias (sinónimo) para el nombre del objeto al que apunta su operando en la memoria. Es el operador de desreferenciación.,el valor de la variable a la que apunta el puntero.,Co zwraca operator gwiazdki (*)?,Alias (synonim) nazwy obiektu wskazywanego przez jego operand w pamięci. Jest operatorem wyłuskiwania.,"wartość zmiennej, na którą wskazuje wskaźnik.",Toán tử dấu sao (*) trả về điều gì?,Một bí danh (từ đồng nghĩa) cho tên của đối tượng mà toán hạng của nó trỏ tới trong bộ nhớ. Nó là nhà điều hành hội nghị truyền hình.,giá trị của biến mà con trỏ trỏ tới.,スター（*）演算子は何を返しますか？,オペランドがメモリ内で指すオブジェクトの名前のエイリアス（同義語）。間接参照演算子です。,ポインターが指す変数の値。,星号（*）运算符返回什么？,它的操作数指向内存中的对象名称的别名（同义词）。它是解引用运算符。,指针指向的变量的值。,ماذا يعود عامل النجمة (*)؟,اسم مستعار (مرادف) لاسم الكائن الذي يشير إليه المعامل في الذاكرة. إنه عامل إلغاء الإسناد.,قيمة المتغير الذي يشير إليه المؤشر.,Що повертає оператор зірка (*)?,"Псевдонім (синонім) назви об’єкта, на який вказує його операнд у пам’яті. Це оператор переспрямування.","значення змінної, на яку вказує вказівник.",O que o operador asterisco (*) retorna?,Um alias (sinônimo) para o nome do objeto para o qual seu operando aponta na memória. É o operador de desreferenciamento.,o valor da variável para a qual o ponteiro aponta.,عملگر ستاره (*) چه چیزی را برمی گرداند؟,نام مستعار (مترادف) برای اسم شی که عملوند آن به حافظه اشاره می کند. این عملگر ارجاع دهی است.,مقدار متغیری که نشانگر به آن اشاره می کند.,Què retorna l&#39;operador estrella (*)?,Un àlies (sinònim) del nom de l&#39;objecte al qual apunta el seu operant a la memòria. És l’operador de desferenciació.,el valor de la variable a què apunta el punter.,Шта враћа оператер звезда (*)?,Алиас (синоним) за име објекта на који његов операнд указује у меморији. То је оператер преусмеравања.,вредност променљиве на коју показује показивач.,Apa yang dikembalikan oleh operator bintang (*)?,Alias (sinonim) untuk nama objek yang ditunjuk operannya dalam memori. Itu adalah operator dereferencing.,nilai variabel yang ditunjuk penunjuk.,Hva returnerer stjerneoperatøren (*)?,Et alias (synonym) for navnet på objektet som operanden peker på i minnet. Det er operatøren for dereferanse.,verdien av variabelen pekeren peker på.,별표 (*) 연산자는 무엇을 반환합니까?,피연산자가 메모리에서 가리키는 개체 이름의 별칭 (동의어)입니다. 역 참조 연산자입니다.,포인터가 가리키는 변수의 값.,Mitä tähti (*) -operaattori palauttaa?,"Alias (synonyymi) objektille, jonka operandi osoittaa muistiin. Se on dereferencing-operaattori.","muuttujan arvo, johon osoitin osoittaa.",Mit ad vissza a csillag (*) operátor?,"Álnév (szinonima) annak az objektumnak a nevére, amelyre operandus mutat a memóriában. Ez a dereferencia operátor.","annak a változónak az értéke, amelyre a mutató mutat.",Co vrací operátor hvězdy (*)?,"Alias (synonymum) pro název objektu, na který jeho operand odkazuje v paměti. Je to operátor dereferencování.","hodnota proměnné, na kterou ukazatel ukazuje.",Šta vraća operater zvijezda (*)?,Alias (sinonim) za ime objekta na koji njegov operand ukazuje u memoriji. To je operater preusmjeravanja.,vrijednost varijable na koju pokazuje pokazivač.
326,326,2040,11.6,iteration,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?",Wiederholung,Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,pagsubli,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,iteration,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,itération,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,iteratie,"Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,итерация,Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,iterazione,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,iteración,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,iteracja,Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,sự lặp lại,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,反復,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,迭代,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,تكرار,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,ітерація,Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,iteração,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,تکرار,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,iteració,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,итерација,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,pengulangan,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,iterasjon,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,되풀이,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,iterointi,Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,ismétlés,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,opakování,Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,iteracija
327,327,93,1.4,main method,At the main function.,Where do C++ programs begin to execute?,5.0,Bei der Hauptfunktion.,Wo beginnen C ++ - Programme mit der Ausführung?,Hauptmethode,Asa magsugod ang pagpatuman sa mga programa sa C ++?,Sa punoan nga kalihokan.,punoan nga pamaagi,Var börjar C ++ - program att köras?,Vid huvudfunktionen.,huvudmetod,Où les programmes C ++ commencent-ils à s&#39;exécuter?,À la fonction principale.,méthode principale,Waar beginnen C ++ -programma&#39;s te worden uitgevoerd?,Bij de belangrijkste functie.,belangrijkste methode,Где начинают выполняться программы на C ++?,В основной функции.,основной метод,Dove iniziano a essere eseguiti i programmi C ++?,Alla funzione principale.,metodo principale,¿Dónde comienzan a ejecutarse los programas C ++?,En la función principal.,método principal,Gdzie programy C ++ zaczynają się wykonywać?,W głównej funkcji.,główna metoda,Các chương trình C ++ bắt đầu thực thi ở đâu?,Tại chức năng chính.,phương pháp chính,C ++プログラムはどこから実行を開始しますか？,主な機能で。,主な方法,C ++程序在哪里开始执行？,在主要功能上。,主要方法,من أين تبدأ برامج C ++ في التنفيذ؟,في الوظيفة الرئيسية.,الطريقة الرئيسية,Де програми С ++ починають виконуватися?,На головній функції.,основний метод,Onde os programas C ++ começam a ser executados?,Na função principal.,método principal,برنامه های C ++ از کجا شروع به اجرا می کنند؟,در عملکرد اصلی.,روش اصلی,On comencen a executar-se els programes C ++?,A la funció principal.,mètode principal,Где почињу да се извршавају програми Ц ++?,На главној функцији.,главна метода,Di mana program C ++ mulai dijalankan?,Di fungsi utama.,metode utama,Hvor begynner C ++ -programmer å kjøres?,Ved hovedfunksjonen.,hovedmetode,C ++ 프로그램은 어디에서 실행되기 시작합니까?,주요 기능에서.,주요 방법,Missä C ++ -ohjelmat alkavat suorittaa?,Päätoiminnossa.,päämenetelmä,Hol kezdődnek a C ++ programok futtatása?,A fő funkciónál.,fő módszer,Kde se programy C ++ začínají spouštět?,Na hlavní funkci.,hlavní metoda,Gdje se počinju izvršavati programi C ++?,Na glavnoj funkciji.,glavna metoda
328,328,569,3.6,badly designed algorithyms. using recursion for a non recursive problem.,"If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",2.5,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,schlecht gestaltete Algorithmen. Verwenden der Rekursion für ein nicht rekursives Problem.,"Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.",dili maayo nga gilaraw nga mga algorithm. paggamit recursion alang sa usa ka dili recursive problema.,Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,dåligt utformade algoritmer. använder rekursion för ett icke-rekursivt problem.,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,algorithmes mal conçus. en utilisant la récursivité pour un problème non récursif.,Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,slecht ontworpen algoritmen. recursie gebruiken voor een niet-recursief probleem.,Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.",плохо разработанные алгоритмы. использование рекурсии для нерекурсивной задачи.,"Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,algoritmi mal progettati. usando la ricorsione per un problema non ricorsivo.,"Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,algoritmos mal diseñados. usando la recursividad para un problema no recursivo.,Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,źle zaprojektowane algorytmy. używanie rekurencji do nierekurencyjnego problemu.,"Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",các thuật toán được thiết kế tồi. sử dụng đệ quy cho một bài toán không đệ quy.,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,ひどく設計されたアルゴリズム。非再帰的な問題に再帰を使用する。,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,设计错误的算法。使用递归解决非递归问题。,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,خوارزميات سيئة التصميم. باستخدام العودية لمشكلة غير متكررة.,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.",погано розроблені алгоритми. використання рекурсії для нерекурсивної задачі.,"Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,algoritmos mal projetados. usando recursão para um problema não recursivo.,هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,الگوریتم های بد طراحی شده استفاده از بازگشت برای یک مشکل غیر بازگشتی.,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,algoritmes mal dissenyats. utilitzant la recursió per a un problema no recursiu.,"При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,лоше дизајнирани алгоритми. коришћење рекурзије за нерекурзивни проблем.,"Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.",algoritme yang dirancang dengan buruk. menggunakan rekursi untuk masalah non rekursif.,Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.",dårlig utformede algoritmer. ved hjelp av rekursjon for et ikke-rekursivt problem.,재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,잘못 설계된 알고리즘. 비 재귀 문제에 재귀를 사용합니다.,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,huonosti suunnitellut algoritmit. käyttämällä rekursiota ei-rekursiiviseen ongelmaan.,A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.",rosszul megtervezett algoritmusok. rekurzió használata nem rekurzív problémára.,Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.",špatně navržené algoritmy. pomocí rekurze pro nerekurzivní problém.,"Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,loše dizajnirani algoritmi. koristeći rekurziju za nerekurzivni problem.
329,329,255,2.2,a local variable in a member function has to be static. a data member can change its value freely.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,What is the difference between a data member and a local variable inside a member function?,2.0,"Auf Datenelemente kann von allen Elementfunktionen innerhalb der Klassendefinition zugegriffen werden. Auf lokale Variablen kann nur innerhalb der Elementfunktion zugegriffen werden, die sie definiert.",Was ist der Unterschied zwischen einem Datenelement und einer lokalen Variablen innerhalb einer Elementfunktion?,Eine lokale Variable in einer Mitgliedsfunktion muss statisch sein. Ein Datenelement kann seinen Wert frei ändern.,Unsa ang kalainan tali sa usa ka myembro sa datos ug usa ka lokal nga pagbag-o sa sulud sa kalihokan sa usa ka miyembro?,Ang mga myembro sa datos mahimo’g ma-access gikan sa bisan unsang gimbuhaton sa miyembro sa sulud sa defintion sa klase. Ang mga lokal nga pagbag-o mahimo ra nga ma-access sa sulud sa pagpaandar sa miyembro nga naghubit kanila.,ang usa ka lokal nga pagbag-o sa usa ka katungdanan sa myembro kinahanglan nga static. ang usa ka myembro sa datos mahimong magbag-o sa bili niini nga libre.,Vad är skillnaden mellan en datamedlem och en lokal variabel i en medlemsfunktion?,Datamedlemmar kan nås från alla medlemsfunktioner i klassdefinitionen. Lokala variabler kan endast nås i medlemsfunktionen som definierar dem.,en lokal variabel i en medlemsfunktion måste vara statisk. en datamedlem kan ändra sitt värde fritt.,Quelle est la différence entre un membre de données et une variable locale dans une fonction membre?,Les membres de données sont accessibles à partir de toutes les fonctions membres de la définition de classe. Les variables locales ne sont accessibles qu&#39;à l&#39;intérieur de la fonction membre qui les définit.,une variable locale dans une fonction membre doit être statique. un membre de données peut changer sa valeur librement.,Wat is het verschil tussen een gegevenslid en een lokale variabele binnen een lidfunctie?,Gegevensleden zijn toegankelijk vanuit alle lidfuncties binnen de klassedefinitie. Lokale variabelen zijn alleen toegankelijk binnen de lidfunctie die ze definieert.,een lokale variabele in een lidfunctie moet statisch zijn. een gegevenslid kan zijn waarde vrij wijzigen.,В чем разница между элементом данных и локальной переменной внутри функции-члена?,"Доступ к элементам данных можно получить из любых функций-членов внутри определения класса. Доступ к локальным переменным можно получить только внутри функции-члена, которая их определяет.",локальная переменная в функции-члене должна быть статической. член данных может свободно изменять свое значение.,Qual è la differenza tra un membro dati e una variabile locale all&#39;interno di una funzione membro?,È possibile accedere ai membri dati da qualsiasi funzione membro all&#39;interno della definizione della classe. È possibile accedere alle variabili locali solo all&#39;interno della funzione membro che le definisce.,una variabile locale in una funzione membro deve essere statica. un membro dei dati può modificare il proprio valore liberamente.,¿Cuál es la diferencia entre un miembro de datos y una variable local dentro de una función miembro?,Se puede acceder a los miembros de datos desde cualquier función miembro dentro de la definición de clase. Solo se puede acceder a las variables locales dentro de la función miembro que las define.,una variable local en una función miembro tiene que ser estática. un miembro de datos puede cambiar su valor libremente.,Jaka jest różnica między składową danych a zmienną lokalną wewnątrz funkcji składowej?,"Dostęp do członków danych można uzyskać z dowolnej funkcji składowej wewnątrz definicji klasy. Dostęp do zmiennych lokalnych można uzyskać tylko wewnątrz funkcji składowej, która je definiuje.",zmienna lokalna w funkcji składowej musi być statyczna. członek danych może dowolnie zmieniać swoją wartość.,Sự khác biệt giữa một thành viên dữ liệu và một biến cục bộ bên trong một hàm thành viên là gì?,Các thành viên dữ liệu có thể được truy cập từ bất kỳ hàm thành viên nào bên trong định nghĩa lớp. Các biến cục bộ chỉ có thể được truy cập bên trong hàm thành viên định nghĩa chúng.,biến cục bộ trong một hàm thành viên phải tĩnh. một thành viên dữ liệu có thể thay đổi giá trị của nó một cách tự do.,データメンバーとメンバー関数内のローカル変数の違いは何ですか？,データメンバーには、クラス定義内の任意のメンバー関数からアクセスできます。ローカル変数には、それらを定義するメンバー関数内でのみアクセスできます。,メンバー関数のローカル変数は静的である必要があります。データメンバーはその値を自由に変更できます。,数据成员与成员函数内部的局部变量有什么区别？,可以从类定义内的任何成员函数访问数据成员。局部变量只能在定义它们的成员函数中访问。,成员函数中的局部变量必须是静态的。数据成员可以自由更改其值。,ما هو الفرق بين عضو البيانات والمتغير المحلي داخل وظيفة العضو؟,يمكن الوصول إلى أعضاء البيانات من أي وظائف عضو داخل تعريف الفئة. لا يمكن الوصول إلى المتغيرات المحلية إلا داخل دالة العضو التي تحددها.,يجب أن يكون المتغير المحلي في دالة العضو ثابتًا. يمكن لعضو البيانات تغيير قيمته بحرية.,Яка різниця між елементом даних та локальною змінною всередині функції-члена?,"Доступ до членів даних можна отримати з будь-яких функцій-членів усередині визначення класу. Локальні змінні можуть бути доступні лише всередині функції-члена, яка їх визначає.",локальна змінна у функції-члена повинна бути статичною. член даних може вільно змінювати своє значення.,Qual é a diferença entre um membro de dados e uma variável local dentro de uma função de membro?,Os membros de dados podem ser acessados a partir de quaisquer funções de membro dentro da definição de classe. Variáveis locais só podem ser acessadas dentro da função membro que as define.,uma variável local em uma função de membro deve ser estática. um membro de dados pode alterar seu valor livremente.,تفاوت بین یک عضو داده و یک متغیر محلی در داخل یک تابع عضو چیست؟,اعضای عضو داده را می توان از طریق توابع عضوی که در تعریف کلاس وجود دارد ، جستجو کرد. متغیرهای محلی فقط در داخل تابع عضوی که آنها را تعریف می کند قابل دسترسی هستند.,یک متغیر محلی در یک تابع عضو باید ثابت باشد. یک عضو داده می تواند مقدار آن را آزادانه تغییر دهد.,Quina diferència hi ha entre un membre de dades i una variable local dins d’una funció de membre?,Es pot accedir als membres de les dades des de qualsevol de les funcions dels membres dins de la definició de classe. Les variables locals només es poden accedir a la funció membre que les defineix.,una variable local en una funció membre ha de ser estàtica. un membre de dades pot canviar el seu valor lliurement.,Која је разлика између члана података и локалне променљиве унутар функције члана?,Члановима података може се приступити из било које функције члана унутар дефиниције класе. Локалним променљивим се може приступити само унутар функције члана која их дефинише.,локална променљива у функцији члана мора бити статична. члан података може слободно променити своју вредност.,Apa perbedaan antara anggota data dan variabel lokal di dalam fungsi anggota?,Anggota data dapat diakses dari fungsi anggota mana pun di dalam definisi kelas. Variabel lokal hanya dapat diakses di dalam fungsi anggota yang mendefinisikannya.,variabel lokal dalam fungsi anggota harus statis. anggota data dapat mengubah nilainya dengan bebas.,Hva er forskjellen mellom et datamedlem og en lokal variabel i en medlemsfunksjon?,Datamedlemmer er tilgjengelige fra alle medlemsfunksjoner i klassedefinisjonen. Lokale variabler er bare tilgjengelige i medlemsfunksjonen som definerer dem.,en lokal variabel i en medlemsfunksjon må være statisk. et datamedlem kan endre verdien fritt.,멤버 함수 내에서 데이터 멤버와 지역 변수의 차이점은 무엇입니까?,데이터 멤버는 클래스 정의 내의 모든 멤버 함수에서 액세스 할 수 있습니다. 지역 변수는이를 정의하는 멤버 함수 내에서만 액세스 할 수 있습니다.,멤버 함수의 지역 변수는 정적이어야합니다. 데이터 멤버는 값을 자유롭게 변경할 수 있습니다.,Mitä eroa on datajäsenellä ja jäsenfunktion sisällä olevalla paikallisella muuttujalla?,Tietojäseniin pääsee mistä tahansa jäsentoiminnosta luokan määritelmän sisällä. Paikallisiin muuttujiin pääsee vain niitä määrittelevässä jäsenfunktiossa.,jäsenfunktion paikallisen muuttujan on oltava staattinen. datajäsen voi muuttaa arvoa vapaasti.,Mi a különbség az adattag és a tagfüggvényen belüli helyi változó között?,Az adattagok az osztálymeghatározáson belül bármely tagfunkcióból elérhetők. A helyi változók csak az őket meghatározó tagfüggvényen belül érhetők el.,egy tagfüggvény helyi változójának statikusnak kell lennie. egy adattag szabadon megváltoztathatja az értékét.,Jaký je rozdíl mezi datovým členem a lokální proměnnou uvnitř členské funkce?,"K datovým členům lze přistupovat z jakékoli členské funkce uvnitř definice třídy. K lokálním proměnným lze přistupovat pouze uvnitř členské funkce, která je definuje.",místní proměnná ve členské funkci musí být statická. datový člen může libovolně měnit jeho hodnotu.,Koja je razlika između člana podataka i lokalne varijable unutar funkcije člana?,Članovima podataka može se pristupiti iz bilo koje funkcije člana unutar definicije klase. Lokalnim varijablama može se pristupiti samo unutar funkcije člana koja ih definira.,lokalna varijabla u funkciji člana mora biti statična. član podataka može slobodno mijenjati svoju vrijednost.
330,330,2096,11.8,"In arrays strings are stored as a characters (char[]), each character of string will be stored in each memory location of the array, while string of characters is only one memory location.",The char[] will automatically add a null \0 character at the end of the string.,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,2.0,Das Zeichen [] fügt am Ende der Zeichenfolge automatisch ein Nullzeichen \ 0 hinzu.,"Was ist der Hauptunterschied zwischen einer Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, und einer Variablen vom Typ char []?","In Arrays werden Zeichenfolgen als Zeichen gespeichert (char []). Jedes Zeichen der Zeichenfolge wird an jedem Speicherort des Arrays gespeichert, während die Zeichenfolge nur ein Speicherort ist.",Unsa ang punoan nga kalainan tali sa usa ka hilo sa mga karakter nga mabasa sa usa ka variable sa type string kumpara sa variable sa type char []?,Ang char [] awtomatikong magdugang usa ka null \ 0 nga karakter sa katapusan sa pisi.,"Sa mga arrays string gitago ingon usa ka karakter (char []), ang matag karakter sa string gitago sa matag lokasyon sa memorya sa array, samtang ang string of character usa ra ka lokasyon sa memorya.",Vad är den största skillnaden mellan en teckensträng som läses in i en variabel av typsträng kontra en variabel av typen char []?,Tecknet [] lägger automatiskt till ett null \ 0-tecken i slutet av strängen.,"I arrays lagras strängar som tecken (char []), varje tecken i sträng lagras på varje minnesplats i matrisen, medan teckensträng bara är en minnesplats.",Quelle est la principale différence entre une chaîne de caractères lue dans une variable de type string et une variable de type char []?,Le char [] ajoutera automatiquement un caractère nul \ 0 à la fin de la chaîne.,"Dans les tableaux, les chaînes sont stockées sous forme de caractères (char []), chaque caractère de chaîne sera stocké dans chaque emplacement mémoire du tableau, tandis que la chaîne de caractères n&#39;est qu&#39;un seul emplacement mémoire.",Wat is het belangrijkste verschil tussen een reeks tekens die wordt ingelezen in een variabele van het type string versus een variabele van het type char []?,Het teken [] voegt automatisch een nul \ 0 teken toe aan het einde van de string.,"In arrays worden strings opgeslagen als een teken (char []), elk teken van een string wordt opgeslagen op elke geheugenlocatie van de array, terwijl de tekenreeks slechts één geheugenlocatie is.","В чем основное отличие между строкой символов, считываемой в переменную типа string, и переменной типа char []?",Char [] автоматически добавит нулевой символ \ 0 в конец строки.,"В массивах строки хранятся как символы (char []), каждый символ строки будет храниться в каждой ячейке памяти массива, а строка символов - это только одна ячейка памяти.",Qual è la principale differenza tra una stringa di caratteri che viene letta in una variabile di tipo stringa e una variabile di tipo char []?,Il carattere [] aggiungerà automaticamente un carattere null \ 0 alla fine della stringa.,"Negli array le stringhe vengono memorizzate come caratteri (char []), ogni carattere della stringa verrà memorizzato in ciascuna posizione di memoria dell&#39;array, mentre la stringa di caratteri è solo una posizione di memoria.",¿Cuál es la principal diferencia entre una cadena de caracteres que se lee en una variable de tipo cadena y una variable de tipo char []?,El char [] agregará automáticamente un carácter nulo \ 0 al final de la cadena.,"En las matrices, las cadenas se almacenan como caracteres (char []), cada carácter de la cadena se almacenará en cada ubicación de memoria de la matriz, mientras que la cadena de caracteres es solo una ubicación de memoria.","Jaka jest główna różnica między ciągiem znaków, który jest wczytywany do zmiennej typu string, a zmienną typu char []?",Znak [] automatycznie doda znak null \ 0 na końcu ciągu.,"W tablicach łańcuchy są przechowywane jako znaki (char []), każdy znak ciągu będzie przechowywany w każdej lokalizacji pamięci tablicy, podczas gdy ciąg znaków jest tylko jednym miejscem w pamięci.",Sự khác biệt chính giữa một chuỗi ký tự được đọc thành một biến kiểu chuỗi so với một biến kiểu char [] là gì?,Char [] sẽ tự động thêm ký tự null \ 0 vào cuối chuỗi.,"Trong mảng, chuỗi ký tự được lưu trữ dưới dạng ký tự (char []), mỗi ký tự của chuỗi sẽ được lưu trong mỗi vị trí bộ nhớ của mảng, trong khi chuỗi ký tự chỉ là một vị trí bộ nhớ.",string型の変数とchar []型の変数に読み込まれる文字列の主な違いは何ですか？,char []は、文字列の最後にnull \ 0文字を自動的に追加します。,配列では、文字列は文字（char []）として格納され、文字列の各文字は配列の各メモリ位置に格納されますが、文字列は1つのメモリ位置にすぎません。,读入string类型的变量与char []类型的变量的字符串之间的主要区别是什么？,char []将在字符串的末尾自动添加一个空\ 0字符。,在数组中，字符串存储为字符（char []），字符串的每个字符将存储在数组的每个存储位置中，而字符串仅是一个存储位置。,ما هو الفرق الرئيسي بين سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة مقابل متغير من النوع char []؟,سيضيف الحرف [] تلقائيًا حرفًا فارغًا \ 0 في نهاية السلسلة.,في المصفوفات يتم تخزين سلاسل الأحرف كأحرف (char []) ، سيتم تخزين كل حرف من سلسلة في كل موقع ذاكرة من المصفوفة ، بينما سلسلة الأحرف هي موقع ذاكرة واحد فقط.,"Яка основна різниця між рядком символів, який зчитується у змінну типу string від змінної типу char []?",Char [] автоматично додасть нульовий символ \ 0 в кінці рядка.,"У масивах рядки зберігаються як символи (char []), кожен символ рядка буде зберігатися в кожному розташуванні масиву в пам&#39;яті, тоді як рядок символів - це лише одне місце в пам&#39;яті.",Qual é a principal diferença entre uma string de caracteres que é lida em uma variável do tipo string e uma variável do tipo char []?,O char [] adicionará automaticamente um caractere nulo \ 0 no final da string.,"Em arrays, as strings são armazenadas como caracteres (char []), cada caractere da string será armazenado em cada local de memória da matriz, enquanto a string de caracteres é apenas um local da memória.",تفاوت اصلی یک رشته از کاراکترها در یک متغیر از نوع نوع در مقابل یک متغیر از نوع char [] چیست؟,char [] به طور خودکار در انتهای رشته یک کاراکتر null \ 0 اضافه می کند.,در آرایه ها رشته ها به صورت یک کاراکتر ذخیره می شوند (char []) ، هر نویسه رشته در هر مکان حافظه آرایه ذخیره می شود ، در حالی که رشته کاراکترها فقط یک مکان حافظه است.,Quina és la diferència principal entre una cadena de caràcters que es llegeix en una variable de tipus cadena versus una variable de tipus char []?,El caràcter [] afegirà automàticament un caràcter \ 0 nul al final de la cadena.,"A les matrius, les cadenes s&#39;emmagatzemen com a caràcters (char []), cada caràcter de la cadena s&#39;emmagatzemarà a cada ubicació de memòria de la matriu, mentre que la cadena de caràcters només és una ubicació de memòria.",Која је главна разлика између низа знакова који се читају у променљиву типа стринг у односу на променљиву типа цхар []?,Цхар [] ће аутоматски додати нулл \ 0 знак на крају низа.,"У низовима се низови чувају као знакови (цхар []), сваки знак низа чува се на свакој меморијској локацији низа, док је низ знакова само једна меморијска локација.",Apa perbedaan utama antara string karakter yang dibaca menjadi variabel tipe string versus variabel tipe char []?,Karakter [] secara otomatis akan menambahkan karakter null \ 0 di akhir string.,"Dalam array string disimpan sebagai karakter (char []), setiap karakter string akan disimpan di setiap lokasi memori array, sedangkan string karakter hanya satu lokasi memori.",Hva er hovedforskjellen mellom en streng med tegn som leses inn i en variabel av typen streng versus en variabel av typen char []?,Char [] vil automatisk legge til et null \ 0 tegn på slutten av strengen.,"I matriser lagres strengene som tegn (tegn []), vil hvert tegn i strengen bli lagret på hvert minneplassering i matrisen, mens tegnstrengen bare er ett minneplassering.",문자열 유형의 변수와 char [] 유형의 변수로 읽어들이는 문자열의 주요 차이점은 무엇입니까?,char []는 문자열 끝에 null \ 0 문자를 자동으로 추가합니다.,배열에서 문자열은 문자 (char [])로 저장되며 문자열의 각 문자는 배열의 각 메모리 위치에 저장되는 반면 문자열은 하나의 메모리 위치에 불과합니다.,"Mikä on tärkein ero merkkijonossa, joka luetaan merkkijonon muuttujaksi tyypin char [] muuttujaan?",Char [] lisää merkkijonon loppuun tyhjän merkin 0.,"Taulukoissa merkkijonot tallennetaan merkkeinä (char []), jokainen merkkijono tallennetaan ryhmän jokaiseen muistipaikkaan, kun taas merkkijono on vain yksi muistipaikka.","Mi a fő különbség a karakterláncok között, amelyeket string típusú változóba olvasnak, és a char [] típusú változókba?",A char [] automatikusan hozzáad egy null \ 0 karaktert a karakterlánc végéhez.,"A tömbökben a karakterláncokat karakterként tárolják (char []), a karakterláncok minden karakterét a tömb minden memóriahelyén tárolják, míg a karakterlánc csak egy memóriahely.","Jaký je hlavní rozdíl mezi řetězcem znaků, který je načten do proměnné typu řetězec oproti proměnné typu char []?",Znak [] automaticky přidá znak null \ 0 na konec řetězce.,"V polích jsou řetězce uloženy jako znaky (char []), každý znak řetězce bude uložen v každém paměťovém umístění pole, zatímco řetězec znaků je pouze jedno paměťové místo.",Koja je glavna razlika između niza znakova koji se čitaju u varijablu tipa string u odnosu na varijablu tipa char []?,Char [] automatski će dodati null \ 0 znak na kraju niza.,"U nizovima se nizovi pohranjuju kao znakovi (char []), svaki znak niza pohranit će se na svakoj memorijskoj lokaciji niza, dok je niz znakova samo jedna memorijska lokacija."
331,331,1081,6.5,"it yields the size in bytes of the operand, which can be an expression or the parenthesized name of a type",The size in bytes of its operand.,What does the sizeof operator return?,4.0,Die Größe des Operanden in Byte.,Was gibt die Größe des Operators zurück?,"Es gibt die Größe des Operanden in Byte an, der ein Ausdruck oder der in Klammern gesetzte Name eines Typs sein kann",Unsa man ang pagbalik sa sizeof operator?,Ang kadako sa mga byte sa operand niini.,"nagahatag kini kadako sa mga byte sa operand, nga mahimo usa ka ekspresyon o usa ka parentesisize nga ngalan sa usa ka lahi",Vad returnerar operatörens storlek?,Storleken i byte för dess operand.,"det ger storleken i byte i operand, som kan vara ett uttryck eller ett typ av parentes",Que renvoie l&#39;opérateur sizeof?,La taille en octets de son opérande.,"il donne la taille en octets de l&#39;opérande, qui peut être une expression ou le nom entre parenthèses d&#39;un type",Wat levert de grootte van de operator op?,De grootte in bytes van de operand.,"het levert de grootte in bytes van de operand op, die een uitdrukking of de naam tussen haakjes van een type kan zijn",Что возвращает оператор sizeof?,Размер в байтах его операнда.,"он дает размер в байтах операнда, который может быть выражением или заключенным в скобки именем типа",Cosa restituisce la dimensione dell&#39;operatore?,La dimensione in byte del suo operando.,"restituisce la dimensione in byte dell&#39;operando, che può essere un&#39;espressione o il nome tra parentesi di un tipo",¿Qué devuelve el tamaño del operador?,El tamaño en bytes de su operando.,"da el tamaño en bytes del operando, que puede ser una expresión o el nombre entre paréntesis de un tipo",Jaki jest zwracany operator sizeof?,Rozmiar argumentu w bajtach.,"zwraca rozmiar w bajtach operandu, który może być wyrażeniem lub nazwą typu w nawiasach",Toán tử sizeof trả về gì?,Kích thước tính bằng byte của toán hạng của nó.,"nó mang lại kích thước tính bằng byte của toán hạng, có thể là một biểu thức hoặc tên trong ngoặc đơn của một kiểu",sizeof演算子は何を返しますか？,オペランドのバイト単位のサイズ。,オペランドのサイズをバイト単位で生成します。これは、式または型の括弧で囲まれた名前にすることができます。,sizeof运算符返回什么？,其操作数的大小（以字节为单位）。,它产生操作数的大小（以字节为单位），可以是表达式或类型的括号名称,ماذا يعود حجم المشغل؟,الحجم بالبايت لمعاملها.,ينتج الحجم بالبايت للمعامل ، والذي يمكن أن يكون تعبيرًا أو اسمًا بين قوسين لنوع,Що повертає оператор sizeof?,Розмір операнда в байтах.,"це дає розмір в байтах операнда, який може бути виразом або назвою типу в дужках",O que o operador sizeof retorna?,O tamanho em bytes de seu operando.,"produz o tamanho em bytes do operando, que pode ser uma expressão ou o nome entre parênteses de um tipo",عملگر sizeof چه چیزی برمی گرداند؟,اندازه در بایت عملوند آن.,اندازه را به بایت عملوند می دهد ، که می تواند یک عبارت یا نام پرانتز یک نوع باشد,Què retorna l’operador sizeof?,La mida en bytes del seu operand.,"dóna la mida en bytes de l&#39;operand, que pot ser una expressió o el nom entre parèntesi d&#39;un tipus",Шта враћа величина оператора?,Величина операнда у бајтовима.,"даје величину у бајтовима операнда, што може бити израз или име типа у заградама",Berapa ukuran yang dikembalikan operator?,Ukuran dalam byte dari operannya.,"itu menghasilkan ukuran dalam byte dari operan, yang dapat berupa ekspresi atau nama tipe dalam tanda kurung",Hva returnerer operatørens størrelse?,Størrelsen i byte av operanden.,"den gir størrelsen i byte til operanden, som kan være et uttrykk eller et parentesnavn av en type",sizeof 연산자는 무엇을 반환합니까?,피연산자의 크기 (바이트)입니다.,표현식 또는 유형의 괄호로 묶인 이름이 될 수있는 피연산자의 크기 (바이트)를 산출합니다.,Mitä operaattorin koko palauttaa?,Operandin koko tavuina.,"se antaa operandin koon tavuina, joka voi olla lauseke tai tyypin sulkeissa oleva nimi",Mit ad vissza az operátor mérete?,Operandusának mérete bájtokban.,"megkapja az operandus méretét bájtokban, amely lehet kifejezés vagy egy típus zárójeles neve",Co vrátí operátor sizeof?,Velikost jeho operandu v bajtech.,"poskytuje velikost v bajtech operandu, což může být výraz nebo název v závorkách typu",Šta vraća veličina operatora?,Veličina operanda u bajtovima.,"daje veličinu u bajtovima operanda, što može biti izraz ili ime tipa u zagradama"
332,332,1496,8.7,"createStack, push, isEmpty, pop, and a boolean return value.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",What operations would you need to perform to find a given element on a stack?,3.0,"Pop alle Elemente und speichern Sie sie auf einem anderen Stapel, bis das Element gefunden wird, dann schieben Sie alle Elemente auf dem ursprünglichen Stapel zurück.","Welche Operationen müssten Sie ausführen, um ein bestimmtes Element auf einem Stapel zu finden?","createStack, push, isEmpty, pop und ein boolescher Rückgabewert.",Unsang mga operasyon ang kinahanglan nimo aron buhaton aron makapangita usa ka gihatag nga elemento sa usa ka stack?,"I-pop ang tanan nga mga elemento ug ibutang kini sa usa pa nga stack hangtod makit-an ang elemento, pagkahuman itulod ang tanan nga mga elemento sa orihinal nga stack.","createStack, push, isEmpty, pop, ug usa ka kantidad sa pagbalik sa boolean.",Vilka operationer skulle du behöva utföra för att hitta ett visst element på en stack?,Popa alla element och lagra dem på en annan stack tills elementet hittas och tryck sedan tillbaka alla element i originalstacken.,"createStack, push, isEmpty, pop och ett booleskt returvärde.",Quelles opérations auriez-vous besoin d&#39;effectuer pour trouver un élément donné sur une pile?,"Pop tous les éléments et les stocker sur une autre pile jusqu&#39;à ce que l&#39;élément soit trouvé, puis repousser tous les éléments sur la pile d&#39;origine.","createStack, push, isEmpty, pop et une valeur de retour booléenne.",Welke bewerkingen zou u moeten uitvoeren om een bepaald element op een stapel te vinden?,"Pop alle elementen en bewaar ze op een andere stapel totdat het element gevonden is, en duw vervolgens alle elementen terug op de originele stapel.","createStack, push, isEmpty, pop en een booleaanse retourwaarde.","Какие операции вам нужно будет выполнить, чтобы найти данный элемент в стеке?","Удалите все элементы и сохраните их в другом стеке, пока элемент не будет найден, затем верните все элементы в исходный стек.","createStack, push, isEmpty, pop и логическое возвращаемое значение.",Quali operazioni dovresti eseguire per trovare un dato elemento in uno stack?,"Fai scoppiare tutti gli elementi e memorizzali su un&#39;altra pila finché l&#39;elemento non viene trovato, quindi rimuovi tutti gli elementi sulla pila originale.","createStack, push, isEmpty, pop e un valore di ritorno booleano.",¿Qué operaciones necesitarías realizar para encontrar un elemento dado en una pila?,"Pop todos los elementos y guárdelos en otra pila hasta que se encuentre el elemento, luego empuje hacia atrás todos los elementos en la pila original.","createStack, push, isEmpty, pop y un valor de retorno booleano.","Jakie operacje musiałbyś wykonać, aby znaleźć dany element na stosie?","Zdejmij wszystkie elementy i przechowuj je na innym stosie, aż element zostanie znaleziony, a następnie wsuń wszystkie elementy z oryginalnego stosu.","createStack, push, isEmpty, pop i wartość logiczna zwracana.",Bạn cần thực hiện những thao tác nào để tìm một phần tử đã cho trên một ngăn xếp?,"Bật tất cả các phần tử và lưu trữ chúng trên một ngăn xếp khác cho đến khi tìm thấy phần tử, sau đó đẩy lại tất cả các phần tử trên ngăn xếp ban đầu.","createStack, push, isEmpty, pop và một giá trị trả về boolean.",スタック上の特定の要素を見つけるには、どのような操作を実行する必要がありますか？,すべての要素をポップし、要素が見つかるまで別のスタックに保存してから、元のスタックのすべての要素をプッシュバックします。,createStack、push、isEmpty、pop、およびブール値の戻り値。,您需要执行哪些操作才能在堆栈上找到给定的元素？,弹出所有元素，并将它们存储在另一个堆栈中，直到找到该元素，然后将所有元素推回原始堆栈中。,createStack，push，isEmpty，pop和一个布尔返回值。,ما العمليات التي ستحتاج إلى تنفيذها للعثور على عنصر معين في مكدس؟,انبثق كل العناصر وقم بتخزينها في مكدس آخر حتى يتم العثور على العنصر ، ثم ادفع كل العناصر في المجموعة الأصلية للخلف.,createStack، push، isEmpty، pop، and boolean return value.,"Які операції вам потрібно було б виконати, щоб знайти даний елемент у стеку?","Вставте всі елементи та зберігайте їх в іншому стеку, поки елемент не буде знайдений, а потім відсуньте всі елементи у вихідному стеку.","createStack, push, isEmpty, pop та логічне значення, що повертається.",Que operações você precisa realizar para encontrar um determinado elemento em uma pilha?,"Pop todos os elementos e armazene-os em outra pilha até que o elemento seja encontrado, então empurre de volta todos os elementos na pilha original.","createStack, push, isEmpty, pop e um valor de retorno booleano.",برای یافتن یک عنصر مشخص روی پشته چه عملیاتی را باید انجام دهید؟,همه عناصر را پاپ کرده و آنها را روی پشته دیگری ذخیره کنید تا زمانی که عنصر پیدا شود ، سپس همه عناصر روی پشته اصلی را به عقب برانید.,مقدار بازگشتی ایجادStack ، push ، isEmpty ، pop و boolean.,Quines operacions hauríeu de realitzar per trobar un determinat element en una pila?,"Feu saltar tots els elements i deseu-los en una altra pila fins que es trobi l’element i, a continuació, empènyer tots els elements de la pila original.","createStack, push, isEmpty, pop i un valor de retorn booleà.",Које операције бисте требали извршити да бисте пронашли дати елемент на стеку?,"Откачите све елементе и сачувајте их на другом стеку док се елемент не пронађе, а затим гурните све елементе на оригиналном стеку.","цреатеСтацк, пусх, исЕмпти, поп и логичка повратна вредност.",Operasi apa yang perlu Anda lakukan untuk menemukan elemen tertentu di tumpukan?,"Pecahkan semua elemen dan simpan di tumpukan lain hingga elemen ditemukan, lalu dorong kembali semua elemen di tumpukan asli.","createStack, push, isEmpty, pop, dan nilai kembalian boolean.",Hvilke operasjoner må du utføre for å finne et gitt element på en bunke?,"Popp alle elementene og lagre dem på en annen bunke til elementet er funnet, og skyv deretter tilbake alle elementene på den originale bunken.","createStack, push, isEmpty, pop og en boolsk returverdi.",스택에서 주어진 요소를 찾으려면 어떤 작업을 수행해야합니까?,모든 요소를 팝하고 요소를 찾을 때까지 다른 스택에 저장 한 다음 원래 스택의 모든 요소를 다시 밀어 넣습니다.,"createStack, push, isEmpty, pop 및 부울 반환 값.",Mitä toimintoja sinun tulisi suorittaa löytääksesi elementin pinosta?,"Pistä kaikki elementit ja säilytä niitä toisella pinolla, kunnes elementti löytyy, ja työnnä sitten kaikki alkuperäisen pinon elementit takaisin.","createStack, push, isEmpty, pop ja looginen palautusarvo.","Milyen műveleteket kell végrehajtania ahhoz, hogy megtalálja az adott elemet a veremben?","Helyezze be az összes elemet, és tárolja őket egy másik veremben, amíg az elem megtalálható, majd nyomja vissza az összes elemet az eredeti veremben.","createStack, push, isEmpty, pop és logikai visszatérési érték.","Jaké operace byste museli provést, abyste našli daný prvek v zásobníku?","Vysuňte všechny prvky a uložte je do jiného zásobníku, dokud se prvek nenajde, a poté zatlačte zpět všechny prvky v původním zásobníku.","createStack, push, isEmpty, pop a logická návratová hodnota.",Koje operacije biste trebali izvršiti da biste pronašli zadani element na stogu?,"Iskočite sve elemente i pohranite ih u drugu hrpu dok se element ne pronađe, a zatim gurnite sve elemente u originalnu hrpu.","createStack, push, isEmpty, pop i logička povratna vrijednost."
333,333,2387,12.9,"Traverse the tree and find the node, if the node has no children, simply delete it; otherwise set the node's data equal to the data of one of its children then set the pointer for that child to NULL.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,3.5,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,"Durchlaufen Sie den Baum und suchen Sie den Knoten. Wenn der Knoten keine untergeordneten Knoten hat, löschen Sie ihn einfach. Andernfalls setzen Sie die Daten des Knotens gleich den Daten eines seiner untergeordneten Knoten und setzen Sie dann den Zeiger für dieses untergeordnete Element auf NULL.",Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).","Pag-agi sa kahoy ug pangitaa ang node, kung ang node wala’y mga anak, yano nga tangtanga kini; kung dili man itakda ang datos sa node nga katumbas sa datos sa usa sa mga anak niini pagkahuman itakda ang pointer alang sa bata sa NULL.",Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,"Korsa trädet och hitta noden, om noden inte har några barn, raderar du den bara; sätt annars nodens data lika med data för ett av dess barn och ställ sedan pekaren för det barnet till NULL.",Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).","Traversez l&#39;arbre et trouvez le nœud, si le nœud n&#39;a pas d&#39;enfants, supprimez-le simplement; sinon, définissez les données du nœud égales aux données de l&#39;un de ses enfants, puis définissez le pointeur de cet enfant sur NULL.",Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,"Doorkruis de boom en vind het knooppunt, als het knooppunt geen kinderen heeft, verwijder het dan; stel anders de gegevens van het knooppunt gelijk aan de gegevens van een van zijn kinderen en stel de aanwijzer voor dat kind in op NULL.",Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","Пройдите по дереву и найдите узел, если узел не имеет потомков, просто удалите его; в противном случае установите данные узла равными данным одного из его дочерних элементов, а затем установите указатель для этого дочернего элемента в NULL.",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).","Attraversa l&#39;albero e trova il nodo, se il nodo non ha figli, cancellalo semplicemente; altrimenti imposta i dati del nodo uguali ai dati di uno dei suoi figli, quindi imposta il puntatore per quel figlio su NULL.",¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).","Atraviese el árbol y encuentre el nodo, si el nodo no tiene hijos, simplemente elimínelo; de lo contrario, establezca los datos del nodo igual a los datos de uno de sus hijos y luego establezca el puntero para ese hijo en NULL.",Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).","Przejdź przez drzewo i znajdź węzeł, jeśli węzeł nie ma dzieci, po prostu go usuń; w przeciwnym razie ustaw dane węzła równe danym jednego z jego dzieci, a następnie ustaw wskaźnik dla tego dziecka na NULL.",Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).","Đi ngang cây và tìm nút, nếu nút không có con nào, chỉ cần xóa nó; nếu không thì đặt dữ liệu của nút bằng dữ liệu của một trong các nút con của nó rồi đặt con trỏ cho nút con đó thành NULL.",二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,ツリーをトラバースしてノードを見つけます。ノードに子がない場合は、単に削除します。それ以外の場合は、ノードのデータをその子の1つのデータと等しく設定してから、その子のポインターをNULLに設定します。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,遍历树并找到该节点，如果该节点没有子节点，则将其删除；否则，将节点的数据设置为其子节点之一的数据，然后将该节点的指针设置为NULL。,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,اجتياز الشجرة وابحث عن العقدة ، إذا لم يكن للعقدة توابع ، فقم ببساطة بحذفها ؛ بخلاف ذلك ، عيّن بيانات العقدة مساوية لبيانات أحد أبنائها ثم عيّن المؤشر لهذا الطفل على NULL.,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).","Проведіть дерево і знайдіть вузол, якщо у вузла немає дочірніх елементів, просто видаліть його; в іншому випадку встановіть дані вузла рівними даним одного з його дочірніх елементів, а потім встановіть покажчик для цієї дочірньої системи на NULL.",Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,"Percorra a árvore e encontre o nó, se o nó não tiver filhos, simplesmente exclua-o; caso contrário, defina os dados do nó iguais aos dados de um de seus filhos e, em seguida, defina o ponteiro desse filho como NULL.",چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,درخت را رد کنید و گره را پیدا کنید ، اگر گره فرزندی ندارد ، به سادگی آن را حذف کنید. در غیر این صورت داده های گره را برابر با داده های یکی از فرزندان خود قرار دهید سپس نشانگر آن کودک را روی NULL تنظیم کنید.,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).","Travesseu l&#39;arbre i busqueu el node, si el node no té fills, simplement suprimiu-lo; en cas contrari, configureu les dades del node iguals a les dades d&#39;un dels seus fills i, a continuació, configureu el punter d&#39;aquest nen a NULL.",Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).","Пређите дрво и пронађите чвор, ако чвор нема деце, једноставно га избришите; у супротном поставите податке чвора једнаким подацима једног од његових подређених, а затим поставите показивач за то дете на НУЛЛ.",Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).","Lintasi pohon dan temukan node, jika node tidak memiliki anak, hapus saja; jika tidak, set data node sama dengan data salah satu turunannya, lalu setel pointer untuk turunan tersebut ke NULL.",Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).","Kryss treet og finn noden, hvis noden ikke har barn, slett det bare. sett ellers nodens data lik dataene til et av barna, og sett deretter pekeren for det barnet til NULL.",이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,트리를 가로 질러 노드를 찾으십시오. 노드에 자식이 없으면 삭제하기 만하면됩니다. 그렇지 않으면 노드의 데이터를 자식 중 하나의 데이터와 동일하게 설정 한 다음 해당 자식에 대한 포인터를 NULL로 설정합니다.,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,"Kulje puun läpi ja etsi solmu, jos solmulla ei ole lapsia, poista se; muuten aseta solmun tiedot yhtä suureksi kuin yhden sen lapsista, aseta sitten kyseisen lapsen osoittimeksi NULL.",Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","Keresse meg a fát, és keresse meg a csomópontot, ha a csomópontnak nincs gyermeke, egyszerűen törölje; egyébként állítsa be a csomópont adatait az egyik gyermekének adatával, majd állítsa a mutatót NULL értékre.",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,"Projděte strom a najděte uzel, pokud uzel nemá žádné potomky, jednoduše ho smažte; jinak nastavte data uzlu na stejnou hodnotu jako data jednoho z jeho podřízených prvků a poté nastavte ukazatel pro toto dítě na NULL.",Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).","Pređite drvo i pronađite čvor, ako čvor nema djece, jednostavno ga izbrišite; inače postavite podatke čvora jednake podacima jednog od njegovih podređenih, a zatim postavite pokazivač za to dijete na NULL."
334,334,638,4.1,Explicitly int array[10]; or by variable const int size = 10; int array[size];,"In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,4.0,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?",Explizit int array [10]; oder durch Variable const int size = 10; int array [size];,Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.",Klaro nga int array [10]; o pinaagi sa variable const int size = 10; int array [gidak-on];,Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,Explicitly int array [10]; eller med variabel const int storlek = 10; int array [storlek];,Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,Tableau explicitement int [10]; ou par variable const int size = 10; tableau int [taille];,Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.",Expliciet int array [10]; of door variabele const int size = 10; int array [grootte];,Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,Явно int array [10]; или переменной const int size = 10; int array [размер];,Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,Esplicitamente int array [10]; o dalla variabile const int size = 10; int array [dimensione];,¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.",Explícitamente int array [10]; o por la variable const int size = 10; int array [tamaño];,Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,Jawnie int tablica [10]; lub przez zmienną const int size = 10; int tablica [rozmiar];,Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,Tường minh int array [10]; hoặc bởi biến const int size = 10; int mảng [kích thước];,配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,明示的にint配列[10];または変数constint size = 10; int array [size];,指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,显式int数组[10];或通过变量const int size = 10; int array [size];,ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,صراحة مجموعة int [10] ؛ أو بواسطة حجم متغير const int = 10 ؛ مجموعة int [الحجم] ؛,Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,Явно int масив [10]; або за змінною const int size = 10; масив int [розмір];,Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,Explicitamente int array [10]; ou por variável const int size = 10; matriz interna [tamanho];,دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,آرایه صریحاً int [10]؛ یا توسط متغیر const int size = 10؛ آرایه int [size]؛,Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,Explicitament int array [10]; o per variable const int size = 10; int array [mida];,Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,Експлицитно инт низ [10]; или променљивом цонст инт сизе = 10; инт низ [величина];,Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.",Secara eksplisit int array [10]; atau dengan variabel const int size = 10; int array [ukuran];,Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.",Eksplisitt int array [10]; eller ved variabel const int størrelse = 10; int array [størrelse];,배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,명시 적으로 int array [10]; 또는 가변 const int 크기 = 10; int 배열 [크기];,Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,Nimenomaisesti int-taulukko [10]; tai muuttujan const int koon mukaan = 10; int-taulukko [koko];,Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.",Kifejezetten int tömb [10]; vagy változó const int méret = 10; int tömb [méret];,Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,Explicitně int pole [10]; nebo proměnnou const int size = 10; int pole [velikost];,Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,Eksplicitno int niz [10]; ili promenljivom const int size = 10; int niz [veličina];
335,335,514,3.4,It elimitates the need to copy large amonts of data,It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,5.0,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?","Es entfällt die Notwendigkeit, große Datenmengen zu kopieren",Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,Gikuha niini ang panginahanglan nga pagkopya sa daghang mga data sa datos,Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,Det eliminerar behovet av att kopiera stora mängder data,Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,Il élimine le besoin de copier de grandes quantités de données,Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,Het elimineert de noodzaak om grote hoeveelheden gegevens te kopiëren,"Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,Устраняет необходимость копировать большие объемы данных.,Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,Elimina la necessità di copiare grandi quantità di dati,¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,Elimina la necesidad de copiar grandes cantidades de datos.,"Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,Eliminuje potrzebę kopiowania dużych ilości danych,Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,Nó làm giảm nhu cầu sao chép dữ liệu lớn,参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,大量のデータをコピーする必要性を排除します,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,它减少了复制大量数据的需求,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,إنه يلغي الحاجة إلى نسخ كميات كبيرة من البيانات,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,Це позбавляє від необхідності копіювати великі обсяги даних,Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,Ele elimina a necessidade de copiar grandes fontes de dados,مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,این امر نیاز به کپی کردن داده های بزرگ را از بین می برد,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,Elimina la necessitat de copiar grans quantitats de dades,Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,Елиминише потребу за копирањем великих количина података,Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,Ini menghilangkan kebutuhan untuk menyalin data dalam jumlah besar,Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,Det eliminerer behovet for å kopiere store amonter med data,참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,많은 양의 데이터를 복사해야 할 필요성을 줄입니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,Se poistaa tarpeen kopioida suuria tietomääriä,Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,Ez kiküszöböli a nagy adatminták másolásának szükségességét,"Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,To eliminuje potřebu kopírovat velké množství dat,Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,Eliminira potrebu za kopiranjem velikih količina podataka
336,336,2360,12.8,Where you visit the in order according to its data value.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,3.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,Wo Sie das in der Reihenfolge nach seinem Datenwert besuchen.,Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.",Kung diin nimo bisitahan ang aron sa pagkasunud sa kantidad sa datos niini.,Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.",Där du besöker ordningen enligt dess datavärde.,Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.",Où vous visitez le dans l&#39;ordre en fonction de sa valeur de données.,Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.",Waar u het bezoekt op basis van de gegevenswaarde.,Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","Где вы посещаете, в соответствии с его значением данных.",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.",Dove visiti in ordine in base al valore dei dati.,¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.",Dónde visita el en orden según su valor de datos.,Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.",Gdzie odwiedzasz w kolejności według wartości danych.,Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.",Nơi bạn truy cập theo thứ tự theo giá trị dữ liệu của nó.,木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,データ値に従って順番にアクセスする場所。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,您可以根据其数据值在其中访问。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,حيث تقوم بزياره بالترتيب حسب قيمه البيانات.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.",Де ви відвідуєте замовлення відповідно до його значення даних.,O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.",Onde você visita a ordem de acordo com seu valor de dados.,پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,جایی که به ترتیب با توجه به مقدار داده آن بازدید می کنید.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.",On visiteu l&#39;ordre segons el seu valor de dades.,Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.",Где посетите редослед према вредности података.,Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.",Tempat Anda mengunjungi agar sesuai dengan nilai datanya.,Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.",Hvor du besøker i rekkefølgen i henhold til dataværdien.,나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.",데이터 값에 따라 순서대로 방문하는 위치입니다.,Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.",Missä vierailet järjestyksessä sen data-arvon mukaan.,Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.",Ahol meglátogatja a rendet annak adatértéke szerint.,Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.",Kam navštívíte v pořadí podle jeho datové hodnoty.,Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.",Gdje posjetite redoslijed prema vrijednosti podataka.
337,337,756,4.5,All of the dimensions must be specified.,"All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,3.5,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?",Alle Abmessungen müssen angegeben werden.,Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.",Ang tanan nga mga sukat kinahanglan nga ipiho.,Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",Alla mått måste anges.,Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.",Toutes les dimensions doivent être spécifiées.,Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.",Alle afmetingen moeten worden gespecificeerd.,Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.",Необходимо указать все размеры.,Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.",Tutte le dimensioni devono essere specificate.,¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.",Deben especificarse todas las dimensiones.,Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.",Należy określić wszystkie wymiary.,Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.",Tất cả các kích thước phải được chỉ định.,多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,すべての寸法を指定する必要があります。,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,必须指定所有尺寸。,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,يجب تحديد جميع الأبعاد.,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.",Потрібно вказати всі розміри.,Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.",Todas as dimensões devem ser especificadas.,هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,تمام ابعاد باید مشخص شود.,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.",Cal especificar totes les dimensions.,Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.",Све димензије морају бити наведене.,Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.",Semua dimensi harus ditentukan.,Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.",Alle dimensjoner må spesifiseres.,다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,모든 치수를 지정해야합니다.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.",Kaikki mitat on määritettävä.,"Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.",Minden méretet meg kell adni.,Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.",Musí být specifikovány všechny rozměry.,Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.",Sve dimenzije moraju biti navedene.
338,338,1026,6.3,a reference to a = variable,An alias (synonym) for the name of the object that its operand points to in memory. It is the dereferencing operator.,What does the star (*) operator return?,2.0,"Ein Alias (Synonym) für den Namen des Objekts, auf das sein Operand im Speicher verweist. Es ist der Dereferenzierungsoperator.",Was gibt der Operator star (*) zurück?,ein Verweis auf eine = Variable,Unsa man ang pagbalik sa bituon (*) nga operator?,Usa ka alyas (managsama) alang sa ngalan sa butang nga gitudlo sa operand niini sa memorya. Kini ang operator sa dereferencing.,usa ka pakisayran sa us aka = variable,Vad returnerar stjärnan (*)?,Ett alias (synonym) för namnet på objektet som dess operand pekar på i minnet. Det är operatören för referenser.,en hänvisning till a = variabel,Que renvoie l&#39;opérateur étoile (*)?,Un alias (synonyme) pour le nom de l&#39;objet vers lequel pointe son opérande en mémoire. C&#39;est l&#39;opérateur de déréférencement.,une référence à une variable =,Wat retourneert de operator ster (*)?,Een alias (synoniem) voor de naam van het object waarnaar de operand in het geheugen verwijst. Het is de dereferentie-operator.,een verwijzing naar a = variabele,Что возвращает оператор звездочка (*)?,"Псевдоним (синоним) имени объекта, на который указывает его операнд в памяти. Это оператор разыменования.",ссылка на переменную a =,Cosa restituisce l&#39;operatore stella (*)?,Un alias (sinonimo) per il nome dell&#39;oggetto a cui punta in memoria il suo operando. È l&#39;operatore di dereferenziazione.,un riferimento a una variabile =,¿Qué devuelve el operador de estrella (*)?,Un alias (sinónimo) para el nombre del objeto al que apunta su operando en la memoria. Es el operador de desreferenciación.,una referencia a una = variable,Co zwraca operator gwiazdki (*)?,Alias (synonim) nazwy obiektu wskazywanego przez jego operand w pamięci. Jest operatorem wyłuskiwania.,odniesienie do zmiennej a =,Toán tử dấu sao (*) trả về điều gì?,Một bí danh (từ đồng nghĩa) cho tên của đối tượng mà toán hạng của nó trỏ tới trong bộ nhớ. Nó là nhà điều hành hội nghị truyền hình.,một tham chiếu đến biến =,スター（*）演算子は何を返しますか？,オペランドがメモリ内で指すオブジェクトの名前のエイリアス（同義語）。間接参照演算子です。,a =変数への参照,星号（*）运算符返回什么？,它的操作数指向内存中的对象名称的别名（同义词）。它是解引用运算符。,对a =变量的引用,ماذا يعود عامل النجمة (*)؟,اسم مستعار (مرادف) لاسم الكائن الذي يشير إليه المعامل في الذاكرة. إنه عامل إلغاء الإسناد.,إشارة إلى المتغير =,Що повертає оператор зірка (*)?,"Псевдонім (синонім) назви об’єкта, на який вказує його операнд у пам’яті. Це оператор переспрямування.",посилання на змінну a =,O que o operador asterisco (*) retorna?,Um alias (sinônimo) para o nome do objeto para o qual seu operando aponta na memória. É o operador de desreferenciamento.,uma referência a uma variável =,عملگر ستاره (*) چه چیزی را برمی گرداند؟,نام مستعار (مترادف) برای اسم شی که عملوند آن به حافظه اشاره می کند. این عملگر ارجاع دهی است.,اشاره به یک متغیر =,Què retorna l&#39;operador estrella (*)?,Un àlies (sinònim) del nom de l&#39;objecte al qual apunta el seu operant a la memòria. És l’operador de desferenciació.,una referència a a = variable,Шта враћа оператер звезда (*)?,Алиас (синоним) за име објекта на који његов операнд указује у меморији. То је оператер преусмеравања.,референца на променљиву =,Apa yang dikembalikan oleh operator bintang (*)?,Alias (sinonim) untuk nama objek yang ditunjuk operannya dalam memori. Itu adalah operator dereferencing.,referensi ke a = variabel,Hva returnerer stjerneoperatøren (*)?,Et alias (synonym) for navnet på objektet som operanden peker på i minnet. Det er operatøren for dereferanse.,en referanse til a = variabel,별표 (*) 연산자는 무엇을 반환합니까?,피연산자가 메모리에서 가리키는 개체 이름의 별칭 (동의어)입니다. 역 참조 연산자입니다.,= 변수에 대한 참조,Mitä tähti (*) -operaattori palauttaa?,"Alias (synonyymi) objektille, jonka operandi osoittaa muistiin. Se on dereferencing-operaattori.",viittaus a = muuttujaan,Mit ad vissza a csillag (*) operátor?,"Álnév (szinonima) annak az objektumnak a nevére, amelyre operandus mutat a memóriában. Ez a dereferencia operátor.",a = változóra való hivatkozás,Co vrací operátor hvězdy (*)?,"Alias (synonymum) pro název objektu, na který jeho operand odkazuje v paměti. Je to operátor dereferencování.",odkaz na proměnnou a =,Šta vraća operater zvijezda (*)?,Alias (sinonim) za ime objekta na koji njegov operand ukazuje u memoriji. To je operater preusmjeravanja.,referenca na varijablu =
339,339,1833,10.6,left middle right,"Traverse the left subtree, then the root, then the right subtree.",What is the inorder traversal of a binary tree?,5.0,"Durchqueren Sie den linken Teilbaum, dann die Wurzel und dann den rechten Teilbaum.",Was ist die Inorder Traversal eines Binärbaums?,links Mitte rechts,Unsa man ang inorder traversal sa usa ka binary nga kahoy?,"Pagtabok sa wala nga subtree, pagkahuman sa gamot, pagkahuman sa tuo nga subtree.",wala sa tuo nga tuo,Vad är inorder traversal av ett binärt träd?,"Korsa vänster subtree, sedan roten, sedan höger subtree.",vänster mitten höger,Quelle est la traversée en ordre d&#39;un arbre binaire?,"Traversez le sous-arbre gauche, puis la racine, puis le sous-arbre droit.",gauche milieu droit,Wat is de volgorde waarin een binaire boom wordt doorlopen?,"Beweeg de linker substructuur, dan de wortel en dan de rechter substructuur.",links midden rechts,Что такое обход двоичного дерева в порядке?,"Пройдите по левому поддереву, затем по корню, затем по правому поддереву.",левый средний правый,Qual è l&#39;attraversamento in ordine di un albero binario?,"Attraversa la sottostruttura sinistra, quindi la radice, quindi la sottostruttura destra.",sinistra centrale destra,¿Cuál es el recorrido en orden de un árbol binario?,"Atraviesa el subárbol izquierdo, luego la raíz y luego el subárbol derecho.",izquierda medio derecha,Jakie jest wewnętrzne przejście drzewa binarnego?,"Przejdź przez lewe poddrzewo, następnie korzeń, a następnie prawe poddrzewo.",lewy środkowy prawy,Đường truyền ngang dòng của cây nhị phân là gì?,"Duyệt qua cây con bên trái, rồi đến gốc, rồi đến cây con bên phải.",trái giữa phải,二分木の順序のない横断とは何ですか？,左側のサブツリー、ルート、右側のサブツリーの順にトラバースします。,左中右,二叉树的有序遍历是什么？,遍历左子树，然后遍历根，然后遍历右子树。,左中右,ما هو الاجتياز الداخلي للشجرة الثنائية؟,اجتياز الشجرة الفرعية اليسرى ، ثم الجذر ، ثم الشجرة الفرعية اليمنى.,اليسار الأوسط اليمين,Що таке обхід бінарного дерева?,"Проведіть ліве піддерево, потім корінь, потім праве піддерево.",ліва середня права,Qual é a travessia em ordem de uma árvore binária?,"Percorra a subárvore esquerda, depois a raiz e a subárvore direita.",esquerda meio direita,پیمایش غیرمعمول یک درخت باینری چیست؟,زیر درخت چپ ، سپس ریشه و سپس زیر درخت راست را رد کنید.,چپ وسط راست,Quin és el recorregut inorder d&#39;un arbre binari?,"Travesseu el subarbre esquerre, després l&#39;arrel i després el subarbre dret.",esquerra mig dreta,Шта је унутрашња преокрет бинарног стабла?,"Пређите преко левог подстабла, затим корена, па десног подстабла.",лево средина десно,Apa yang dimaksud dengan inorder traversal dari pohon biner?,"Lintasi subtree kiri, lalu akar, lalu subtree kanan.",kiri tengah kanan,Hva er inorder traversal av et binært tre?,"Kryss venstre undertre, deretter roten, deretter høyre undertre.",venstre midt til høyre,이진 트리의 inorder traversal은 무엇입니까?,"왼쪽 하위 트리, 루트, 오른쪽 하위 트리 순으로 이동합니다.",왼쪽 가운데 오른쪽,Mikä on binäärisen puun sisäinen kulku?,"Liikuta vasenta osapuuta, sitten juurta, sitten oikeaa osapuuta.",vasen keskimmäinen oikea,Mi a bináris fa belső bejárása?,"Keresse meg a bal alfát, majd a gyökeret, majd a jobb alfát.",bal középső jobb,Co je to inorder traversal binárního stromu?,"Procházejte levým podstromem, poté kořenem a poté pravým podstromem.",vlevo uprostřed vpravo,Koja je pogreška u binarnom stablu?,"Pređite lijevo podstablo, zatim korijen, pa desno podstablo.",lijevo sredina desno
340,340,644,4.1,manually inside the brackets or automatically via an initializer list,"In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,5.0,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?",manuell in den Klammern oder automatisch über eine Initialisierungsliste,Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.",mano-mano sa sulud sa mga braket o awtomatiko pinaagi sa usa ka lista sa inisyal,Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,manuellt i parenteserna eller automatiskt via en initialiseringslista,Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,manuellement entre crochets ou automatiquement via une liste d&#39;initialiseurs,Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.",handmatig tussen haakjes of automatisch via een initialisatie-lijst,Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,вручную внутри скобок или автоматически через список инициализаторов,Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,manualmente all&#39;interno delle parentesi o automaticamente tramite un elenco di inizializzatori,¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.",manualmente dentro de los corchetes o automáticamente a través de una lista de inicializadores,Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,ręcznie w nawiasach lub automatycznie za pomocą listy inicjalizacyjnej,Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,thủ công bên trong dấu ngoặc hoặc tự động thông qua danh sách trình khởi tạo,配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,角かっこ内で手動で、または初期化子リストを介して自動的に,指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,手动在括号内或通过初始化列表自动,ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,يدويًا داخل الأقواس أو تلقائيًا عبر قائمة التهيئة,Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,вручну в дужках або автоматично за допомогою списку ініціалізаторів,Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,manualmente dentro dos colchetes ou automaticamente por meio de uma lista de inicializadores,دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,به صورت دستی درون براکت ها یا به صورت خودکار از طریق لیست اولیه سازها وارد شوید,Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,manualment dins dels claudàtors o automàticament mitjançant una llista d&#39;inicialitzadors,Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,ручно у заградама или аутоматски путем листе иницијализатора,Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.",secara manual di dalam tanda kurung atau secara otomatis melalui daftar penginisialisasi,Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.",manuelt i parentesene eller automatisk via en initialiseringsliste,배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,대괄호 안에 수동으로 또는 이니셜 라이저 목록을 통해 자동으로,Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,manuaalisesti suluissa tai automaattisesti alustusluettelon kautta,Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.","manuálisan a zárójelben, vagy automatikusan egy inicializáló listán keresztül",Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,ručně uvnitř závorek nebo automaticky prostřednictvím seznamu inicializátorů,Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,ručno u zagradama ili automatski putem liste inicijalizatora
341,341,368,2.6,"A function prototype is just a declaration of the function existing, and cant be used as an actual function. A function has to be created with a definition within to tell the compiler what the function does.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",What is the difference between a function prototype and a function definition?,3.5,"Ein Funktionsprototyp enthält die Funktionssignatur, dh den Namen der Funktion, den Rückgabetyp und den Parametertyp. Die Funktionsdefinition enthält den tatsächlichen Hauptteil der Funktion.",Was ist der Unterschied zwischen einem Funktionsprototyp und einer Funktionsdefinition?,"Ein Funktionsprototyp ist nur eine Deklaration der vorhandenen Funktion und kann nicht als tatsächliche Funktion verwendet werden. Es muss eine Funktion mit einer Definition erstellt werden, um dem Compiler mitzuteilen, was die Funktion tut.",Unsa ang kalainan tali sa usa ka function prototype ug usa ka kahulugan nga pagpaandar?,"Ang usa ka function prototype adunay upod nga pirma sa pagpaandar, ie, ang ngalan sa pagpaandar, ang tipo sa pagbalik, ug ang tipo sa mga parameter. Ang kahulugan sa pagpaandar kauban ang tinuud nga lawas sa kalihokan.","Ang usa ka function prototype usa ra ka pagdeklara sa pagpaandar nga naa sa function, ug dili mahimo gamiton ingon usa ka tinuud nga paglihok. Ang usa ka pagpaandar kinahanglan himuon nga adunay usa ka kahulugan sa sulod aron isulti sa tagtipon kung unsa ang gihimo sa pagpaandar.",Vad är skillnaden mellan en funktionsprototyp och en funktionsdefinition?,"En funktionsprototyp inkluderar funktionssignaturen, dvs namnet på funktionen, returtypen och parametertypen. Funktionsdefinitionen inkluderar funktionens faktiska kropp.",En funktionsprototyp är bara en deklaration av den befintliga funktionen och kan inte användas som en faktisk funktion. En funktion måste skapas med en definition inom för att berätta kompilatorn vad funktionen gör.,Quelle est la différence entre un prototype de fonction et une définition de fonction?,"Un prototype de fonction comprend la signature de la fonction, c&#39;est-à-dire le nom de la fonction, le type de retour et le type des paramètres. La définition de fonction inclut le corps réel de la fonction.",Un prototype de fonction n&#39;est qu&#39;une déclaration de la fonction existante et ne peut pas être utilisé comme une fonction réelle. Une fonction doit être créée avec une définition à l&#39;intérieur pour indiquer au compilateur ce que fait la fonction.,Wat is het verschil tussen een functie-prototype en een functiedefinitie?,"Een functieprototype bevat de functiehandtekening, dwz de naam van de functie, het retourtype en het type parameter. De functiedefinitie omvat de feitelijke inhoud van de functie.",Een functie-prototype is slechts een verklaring van de bestaande functie en kan niet als een daadwerkelijke functie worden gebruikt. Er moet een functie worden gemaakt met een definitie erin om de compiler te vertellen wat de functie doet.,В чем разница между прототипом функции и определением функции?,"Прототип функции включает сигнатуру функции, т. Е. Имя функции, тип возвращаемого значения и тип параметров. Определение функции включает фактическое тело функции.","Прототип функции - это просто объявление существующей функции, и его нельзя использовать как фактическую функцию. Функция должна быть создана с определением внутри, чтобы сообщить компилятору, что функция делает.",Qual è la differenza tra un prototipo di funzione e una definizione di funzione?,"Un prototipo di funzione include la firma della funzione, cioè il nome della funzione, il tipo restituito e il tipo dei parametri. La definizione della funzione include il corpo effettivo della funzione.",Un prototipo di funzione è solo una dichiarazione della funzione esistente e non può essere utilizzato come una funzione effettiva. Una funzione deve essere creata con una definizione all&#39;interno per dire al compilatore cosa fa la funzione.,¿Cuál es la diferencia entre un prototipo de función y una definición de función?,"Un prototipo de función incluye la firma de la función, es decir, el nombre de la función, el tipo de retorno y el tipo de los parámetros. La definición de función incluye el cuerpo real de la función.",Un prototipo de función es solo una declaración de la función existente y no se puede utilizar como una función real. Se debe crear una función con una definición dentro para decirle al compilador qué hace la función.,Jaka jest różnica między prototypem funkcji a definicją funkcji?,"Prototyp funkcji zawiera sygnaturę funkcji, tj. Nazwę funkcji, typ zwracanej wartości i typ parametrów. Definicja funkcji zawiera rzeczywistą treść funkcji.","Prototyp funkcji to po prostu deklaracja istniejącej funkcji i nie można jej używać jako rzeczywistej funkcji. Należy utworzyć funkcję z definicją w środku, aby przekazać kompilatorowi, co robi funkcja.",Sự khác biệt giữa nguyên mẫu hàm và định nghĩa hàm là gì?,"Một nguyên mẫu hàm bao gồm chữ ký hàm, tức là tên của hàm, kiểu trả về và kiểu của tham số. Định nghĩa hàm bao gồm phần thân thực sự của hàm.",Một nguyên mẫu hàm chỉ là một khai báo của hàm hiện có và không thể được sử dụng như một hàm thực. Một hàm phải được tạo với một định nghĩa bên trong để cho trình biên dịch biết chức năng đó làm gì.,関数プロトタイプと関数定義の違いは何ですか？,関数プロトタイプには、関数のシグネチャ、つまり関数の名前、戻り値の型、およびパラメータの型が含まれています。関数定義には、関数の実際の本体が含まれます。,関数プロトタイプは、既存の関数の単なる宣言であり、実際の関数として使用することはできません。関数は、関数が何をするかをコンパイラーに伝えるために、内の定義を使用して作成する必要があります。,函数原型和函数定义有什么区别？,函数原型包括函数签名，即函数名称，返回类型和参数类型。函数定义包括函数的实际主体。,函数原型只是对现有函数的声明，不能用作实际函数。必须创建一个带有定义的函数，以告诉编译器该函数做什么。,ما هو الفرق بين النموذج الأولي للدالة وتعريف الوظيفة؟,يتضمن النموذج الأولي للوظيفة توقيع الوظيفة ، أي اسم الوظيفة ونوع الإرجاع ونوع المعلمات. يتضمن تعريف الوظيفة الجسم الفعلي للوظيفة.,النموذج الأولي للدالة هو مجرد إعلان عن الوظيفة الموجودة ، ولا يمكن استخدامه كدالة فعلية. يجب إنشاء وظيفة مع تعريف داخلها لإخبار المترجم بما تفعله الوظيفة.,У чому різниця між прототипом функції та визначенням функції?,"Прототип функції включає підпис функції, тобто ім&#39;я функції, тип повернення та тип параметрів. Визначення функції включає фактичне тіло функції.","Прототип функції - це лише декларація про існуючу функцію і не може використовуватися як фактична функція. Потрібно створити функцію з визначенням всередині, щоб повідомити компілятору, що ця функція робить.",Qual é a diferença entre um protótipo de função e uma definição de função?,"Um protótipo de função inclui a assinatura da função, ou seja, o nome da função, o tipo de retorno e o tipo dos parâmetros. A definição da função inclui o corpo real da função.",Um protótipo de função é apenas uma declaração da função existente e não pode ser usado como uma função real. Uma função deve ser criada com uma definição interna para dizer ao compilador o que a função faz.,تفاوت بین نمونه اولیه عملکرد و تعریف عملکرد چیست؟,نمونه اولیه تابع شامل امضای تابع است ، به عنوان مثال ، نام عملکرد ، نوع بازگشت و نوع پارامترها. تعریف عملکرد شامل بدنه واقعی عملکرد است.,نمونه اولیه عملکرد فقط اعلان عملکرد موجود است و نمی تواند به عنوان یک عملکرد واقعی مورد استفاده قرار گیرد. یک تابع باید با تعریفی در داخل ایجاد شود تا به کامپایلر بگوید عملکرد چه کاری انجام می دهد.,Quina diferència hi ha entre un prototip de funció i una definició de funció?,"Un prototip de funció inclou la signatura de la funció, és a dir, el nom de la funció, el tipus de retorn i el tipus dels paràmetres. La definició de funció inclou el cos real de la funció.",Un prototip de funció és només una declaració de la funció existent i no es pot utilitzar com a funció real. S&#39;ha de crear una funció amb una definició dins per dir al compilador què fa la funció.,Која је разлика између прототипа функције и дефиниције функције?,"Прототип функције укључује потпис функције, тј. Име функције, тип повратка и тип параметара. Дефиниција функције укључује стварно тело функције.",Прототип функције је само декларација постојеће функције и не може се користити као стварна функција. Функција мора бити креирана са дефиницијом унутар како би компајлеру рекла шта функција ради.,Apa perbedaan antara prototipe fungsi dan definisi fungsi?,"Prototipe fungsi mencakup tanda tangan fungsi, yaitu nama fungsi, jenis kembalian, dan jenis parameter. Definisi fungsi mencakup tubuh sebenarnya dari fungsi tersebut.","Prototipe fungsi hanyalah deklarasi dari fungsi yang ada, dan tidak dapat digunakan sebagai fungsi sebenarnya. Sebuah fungsi harus dibuat dengan definisi di dalamnya untuk memberi tahu kompilator apa fungsi tersebut.",Hva er forskjellen mellom en funksjonsprototype og en funksjonsdefinisjon?,"En funksjonsprototype inkluderer funksjonssignaturen, dvs. navnet på funksjonen, returtypen og parametertypen. Funksjonsdefinisjonen inkluderer funksjonens faktiske kropp.","En funksjonsprototype er bare en erklæring om den eksisterende funksjonen, og kan ikke brukes som en faktisk funksjon. En funksjon må opprettes med en definisjon i for å fortelle kompilatoren hva funksjonen gjør.",함수 프로토 타입과 함수 정의의 차이점은 무엇입니까?,"함수 프로토 타입에는 함수 시그니처, 즉 함수 이름, 반환 유형 및 매개 변수 유형이 포함됩니다. 함수 정의에는 함수의 실제 본문이 포함됩니다.",함수 프로토 타입은 기존 함수의 선언 일 뿐이며 실제 함수로 사용할 수 없습니다. 함수가 수행하는 작업을 컴파일러에 알리려면 내부에 정의가있는 함수를 만들어야합니다.,Mitä eroa on funktion prototyypin ja funktion määritelmän välillä?,"Funktion prototyyppi sisältää funktion allekirjoituksen, eli funktion nimen, palautustyypin ja parametrien tyypin. Funktion määritelmä sisältää funktion todellisen rungon.","Funktion prototyyppi on vain ilmoitus olemassa olevasta toiminnosta, eikä sitä voida käyttää todellisena funktiona. Toiminto on luotava määritelmällä, jotta kerrotaan kääntäjälle, mitä toiminto tekee.",Mi a különbség a függvény prototípusa és a függvény definíciója között?,"A függvény prototípusa tartalmazza a függvény aláírását, azaz a függvény nevét, a visszatérés típusát és a paraméterek típusát. A függvénydefiníció magában foglalja a függvény tényleges törzsét.","A függvény prototípus csak a létező függvény deklarációja, és tényleges függvényként nem használható. Létre kell hozni egy függvényt egy definícióval, hogy megmondja a fordítónak, hogy mit csinál a függvény.",Jaký je rozdíl mezi prototypem funkce a definicí funkce?,"Prototyp funkce zahrnuje podpis funkce, tj. Název funkce, návratový typ a typ parametrů. Definice funkce zahrnuje skutečné tělo funkce.","Prototyp funkce je pouze deklarací existující funkce a nelze ji použít jako skutečnou funkci. Funkce musí být vytvořena s definicí uvnitř, aby řekla kompilátoru, co funkce dělá.",Koja je razlika između prototipa funkcije i definicije funkcije?,"Prototip funkcije uključuje potpis funkcije, tj. Ime funkcije, tip povratka i tip parametara. Definicija funkcije uključuje stvarno tijelo funkcije.",Prototip funkcije je samo deklaracija postojeće funkcije i ne može se koristiti kao stvarna funkcija. Funkcija mora biti kreirana s definicijom unutar kako bi kompajleru rekla što funkcija radi.
342,342,2137,11.1,divides the line in half coninuously until you get to only a single value then recombine the values to form a sorted line.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",Briefly describe in one sentence how does merge sort work?,5.0,"Es teilt das ursprüngliche Array in zwei Teile, sortiert jede der beiden Hälften und führt dann die sortierten Arrays zusammen.","Beschreiben Sie in einem Satz kurz, wie das Zusammenführen von Sortierungen funktioniert.","teilt die Linie fortlaufend in zwei Hälften, bis Sie nur noch einen einzigen Wert erhalten, und kombiniert dann die Werte neu, um eine sortierte Linie zu bilden.",Sa mubu nga paghulagway sa usa ka tudling-pulong kung giunsa molihok ang paghiusa?,"Gibahin niini ang orihinal nga laray sa duha, gisagol ang matag usa sa duha ka bahin, ug pagkahuman gisagol ang mga gihan-ay nga mga array.",gibahinbahin ang linya sa katunga nga nagpadayon hangtod moabut sa usa ra ka kantidad dayon paghiusa ang mga kantidad aron maporma ang usa ka gihan-ay nga linya.,Beskriv kortfattat i en mening hur fungerar merge sort?,"Den delar upp den ursprungliga matrisen i två, sorterar var och en av de två halvorna och slår sedan ihop de sorterade matriserna.",delar raden i hälften kontinuerligt tills du bara kommer till ett enda värde och sedan kombinerar värdena för att bilda en sorterad linje.,Décrivez brièvement en une phrase comment fonctionne le tri par fusion?,"Il divise le tableau d&#39;origine en deux, trie chacune des deux moitiés, puis fusionne les tableaux triés.","divise la ligne en deux de façon continue jusqu&#39;à ce que vous n&#39;obteniez qu&#39;une seule valeur, puis recombinez les valeurs pour former une ligne triée.",Beschrijf kort in één zin hoe werkt samenvoegsortering?,"Het splitst de oorspronkelijke array in tweeën, sorteert elk van de twee helften en voegt vervolgens de gesorteerde arrays samen.","verdeelt de lijn doorlopend in tweeën totdat u slechts één waarde krijgt, en hercombineert de waarden om een gesorteerde lijn te vormen.","Кратко опишите одним предложением, как работает сортировка слиянием?","Он разбивает исходный массив на две части, сортирует каждую из двух половин, а затем объединяет отсортированные массивы.","постоянно делит строку пополам, пока вы не дойдете до единственного значения, а затем повторно объедините значения, чтобы сформировать отсортированную строку.",Descrivi brevemente in una frase come funziona il merge sort?,"Divide l&#39;array originale in due, ordina ciascuna delle due metà e quindi unisce gli array ordinati.","divide la linea a metà in modo continuo fino ad arrivare a un solo valore, quindi ricombina i valori per formare una linea ordinata.",Describe brevemente en una oración cómo funciona la ordenación por combinación.,"Divide la matriz original en dos, ordena cada una de las dos mitades y luego fusiona las matrices ordenadas.",divide la línea por la mitad continuamente hasta llegar a un solo valor y luego vuelve a combinar los valores para formar una línea ordenada.,"Krótko opisz w jednym zdaniu, jak działa sortowanie przez scalanie?","Dzieli oryginalną tablicę na dwie części, sortuje każdą z dwóch połówek, a następnie łączy posortowane tablice.","dzieli linię w sposób ciągły na pół, aż uzyskasz tylko jedną wartość, a następnie ponownie połącz wartości, aby utworzyć posortowaną linię.",Mô tả ngắn gọn trong một câu cách sắp xếp hợp nhất hoạt động như thế nào?,"Nó chia mảng ban đầu thành hai, sắp xếp từng mảng trong số hai nửa, sau đó hợp nhất các mảng đã sắp xếp.","chia đôi dòng đồng nghĩa cho đến khi bạn chỉ nhận được một giá trị duy nhất, sau đó kết hợp lại các giá trị để tạo thành một dòng được sắp xếp.",マージソートはどのように機能するのかを一文で簡単に説明してください。,元の配列を2つに分割し、2つの半分のそれぞれを並べ替えてから、並べ替えられた配列をマージします。,単一の値に到達するまで行を半分に連続して分割し、値を再結合してソートされた行を形成します。,用一句话简单描述合并排序是如何工作的？,它将原始数组分为两部分，对两个半部分分别进行排序，然后合并排序后的数组。,连续将行分成两半，直到只有一个值，然后重新组合这些值以形成排序的行。,صف بإيجاز في جملة واحدة كيف يعمل دمج الفرز؟,يقسم المصفوفة الأصلية إلى قسمين ، يفرز كل من النصفين ، ثم يدمج المصفوفات التي تم فرزها.,يقسم السطر إلى نصفين بشكل متصل حتى تحصل على قيمة واحدة فقط ، ثم أعد تجميع القيم لتشكيل سطر تم فرزه.,"Коротко опишіть одним реченням, як працює сортування злиттям?","Він розбиває вихідний масив на дві частини, сортує кожну з двох половин, а потім об&#39;єднує відсортовані масиви.","ділить рядок навпіл постійно, поки не дійдете до одного значення, а потім рекомбінуйте значення, утворивши відсортований рядок.",Descreva resumidamente em uma frase como funciona a classificação por mesclagem?,"Ele divide o array original em dois, classifica cada uma das duas metades e, em seguida, mescla os arrays classificados.","divide a linha ao meio continuamente até que você obtenha apenas um único valor e, em seguida, recombina os valores para formar uma linha classificada.",به طور خلاصه در یک جمله توضیح دهید که چگونه ادغام مرتب سازی کار می کند؟,آرایه اصلی را به دو قسمت تقسیم می کند ، هر دو نیمه را مرتب می کند و سپس آرایه های مرتب شده را ادغام می کند.,خط را به طور همزمان به نصف تقسیم می کند تا زمانی که فقط به یک مقدار واحد برسید و سپس مقادیر را دوباره ترکیب کنید و یک خط مرتب شده تشکیل دهید.,Descriviu breument en una frase com funciona la classificació per fusió?,"Divideix la matriu original en dos, ordena cadascuna de les dues meitats i després fusiona les matrius ordenades.","divideix la línia per la meitat de forma contínua fins que només arribeu a un valor únic i, a continuació, torneu a combinar-los per formar una línia ordenada.",Укратко опишите у једној реченици како функционише сортирање спајањем?,"Првобитни низ дели на две, сортира сваку од две половине, а затим обједињује сортиране низове.","дели линију на пола континуирано док не дођете до само једне вредности, а затим рекомбинујте вредности да бисте формирали сортирану линију.",Jelaskan secara singkat dalam satu kalimat bagaimana cara kerja merge sort?,"Ini membagi larik asli menjadi dua, mengurutkan masing-masing dari dua bagian, lalu menggabungkan larik yang diurutkan.",membagi garis menjadi dua secara terus menerus sampai Anda mendapatkan hanya satu nilai kemudian menggabungkan kembali nilai-nilai tersebut untuk membentuk garis yang diurutkan.,Beskriv kort i en setning hvordan fungerer sammenslåing?,"Den deler den originale matrisen i to, sorterer hver av de to halvdelene, og fletter deretter de sorterte matriser.","deler linjen i to kontinuerlig til du kommer til bare en enkelt verdi, og kombiner deretter verdiene for å danne en sortert linje.",병합 정렬이 어떻게 작동하는지 한 문장으로 간단히 설명해주세요.,원래 배열을 두 개로 분할하고 두 반쪽을 각각 정렬 한 다음 정렬 된 배열을 병합합니다.,단일 값에 도달 할 때까지 줄을 연속적으로 반으로 나눈 다음 값을 다시 결합하여 정렬 된 줄을 형성합니다.,"Kuvaile lyhyesti yhdessä lauseessa, kuinka lajittelu toimii?","Se jakaa alkuperäisen taulukon kahteen osaan, lajittelee molemmat puoliskot ja yhdistää sitten lajitellut taulukot.","jakaa rivin kahtia peräkkäin, kunnes pääset vain yhteen arvoon, yhdistä arvot uudelleen lajitellun viivan muodostamiseksi.","Röviden írja le egy mondatban, hogyan működik az egyesítés rendezése?","Az eredeti tömböt kettéválasztja, a két felet rendezi, majd egyesíti a rendezett tömböket.","felosztja a sort félbevágóan, folytonosan, amíg csak egyetlen értékre nem jut, majd az értékeket egyesítse újra rendezett vonallá.","Stručně popište jednou větou, jak funguje sloučení?","Rozdělí původní pole na dvě, roztřídí každou ze dvou polovin a poté sloučí seřazená pole.","rozděluje řádek na polovinu souvisle, dokud se nedostanete pouze k jedné hodnotě, a potom hodnoty znovu zkombinujte a vytvořte seřazený řádek.",Ukratko u jednoj rečenici opišite kako funkcionira sortiranje spajanja?,"Izvorni niz dijeli na dvije, sortira svaku od dvije polovice, a zatim spaja sortirane nizove.","dijeli liniju na pola kontinuirano dok ne dođete do samo jedne vrijednosti, a zatim rekombinirajte vrijednosti da biste formirali razvrstanu liniju."
343,343,846,5.1,insertion sort is were after k iterations the first k items in the array are sorted it take the k+1 item and inserts it into the correct position in the already sorted k elements.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","In one sentence, what is the main idea implemented by insertion sort?",4.5,"Wenn Sie jeweils ein Array-Element von links nach rechts nehmen, wird es an der rechten Position unter den bereits sortierten Elementen auf der linken Seite eingefügt.","Was ist in einem Satz die Hauptidee, die durch Einfügesortierung umgesetzt wird?","Die Einfügesortierung erfolgt, nachdem nach k Iterationen die ersten k Elemente im Array sortiert wurden. Es wird das k + 1-Element genommen und an der richtigen Position in die bereits sortierten k Elemente eingefügt.","Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman pinaagi sa pagsulud?","Pagkuha usa ka elemento sa pag-ayo sa matag higayon, gikan sa wala ngadto sa tuo, gisukip kini sa tama nga posisyon taliwala sa mga naayos na nga elemento sa wala niini.",ang pagsulud nga klase mao ang pagkahuman sa mga k iterasyon nga ang una nga k mga butang sa paghan-ay gihan-ay kini gikuha ang k + 1 nga butang ug gisal-ot kini sa husto nga posisyon sa mga nahanay nga mga elemento sa k.,"I en mening, vad är huvudidén som implementeras genom insättningssortering?","Tar ett matriselement åt gången, från vänster till höger, infogar det i rätt position bland de redan sorterade elementen till vänster.","insättningssortering är var efter k iterationer de första k-objekten i matrisen sorteras, det tar k + 1-objektet och infogar det i rätt position i de redan sorterade k-elementen.","En une phrase, quelle est l&#39;idée principale implémentée par le tri par insertion?","Prenant un élément du tableau à la fois, de gauche à droite, il l&#39;insère à la bonne position parmi les éléments déjà triés à sa gauche.","le tri par insertion est où après k itérations les k premiers éléments du tableau sont triés, il prend l&#39;élément k + 1 et l&#39;insère à la bonne position dans les k éléments déjà triés.",Wat is in één zin het hoofdidee geïmplementeerd door invoegsortering?,"Het neemt één array-element tegelijk, van links naar rechts, en voegt het in de juiste positie tussen de reeds gesorteerde elementen aan de linkerkant.",invoegsortering is waar na k iteraties de eerste k items in de array worden gesorteerd. Het neemt het k + 1 item en voegt het in op de juiste positie in de reeds gesorteerde k elementen.,"Одним предложением, какова основная идея сортировки вставкой?","Принимая по одному элементу массива слева направо, он вставляет его в правильную позицию среди уже отсортированных элементов слева.","Сортировка вставки: после k итераций первые k элементов в массиве сортируются, он берет k + 1 элемент и вставляет его в правильную позицию в уже отсортированных k элементах.","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento per inserzione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, lo inserisce nella posizione giusta tra gli elementi già ordinati alla sua sinistra.","l&#39;ordinamento per inserzione è dove dopo k iterazioni vengono ordinati i primi k elementi nell&#39;array, prende l&#39;elemento k + 1 e lo inserisce nella posizione corretta nei k elementi già ordinati.","En una oración, ¿cuál es la idea principal implementada por ordenación por inserción?","Tomando un elemento de matriz a la vez, de izquierda a derecha, lo inserta en la posición correcta entre los elementos ya ordenados a su izquierda.","La ordenación por inserción es donde después de k iteraciones se ordenan los primeros k elementos en la matriz, toma el elemento k + 1 y lo inserta en la posición correcta en los k elementos ya ordenados.","Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wstawianie?","Biorąc jeden element tablicy na raz, od lewej do prawej, wstawia go we właściwej pozycji wśród już posortowanych elementów po jego lewej stronie.","sortowanie przez wstawianie jest wykonywane po k iteracjach, gdy pierwsze k elementów w tablicy są sortowane, przyjmuje element k + 1 i wstawia go we właściwe miejsce w już posortowanych k elementach.","Trong một câu, ý chính được triển khai bằng cách sắp xếp chèn là gì?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó sẽ chèn nó vào vị trí bên phải trong số các phần tử đã được sắp xếp ở bên trái của nó.","Sắp xếp chèn là sau k lần lặp, k mục đầu tiên trong mảng được sắp xếp, nó lấy k + 1 mục và chèn nó vào đúng vị trí trong k phần tử đã được sắp xếp.",一言で言えば、挿入ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、左側の既に並べ替えられた要素の中で正しい位置に挿入します。,挿入ソートは、k回の反復後、配列の最初のk個のアイテムがソートされ、k + 1個のアイテムを取得して、すでにソートされているk個の要素の正しい位置に挿入します。,一句话，插入排序实现的主要思想是什么？,一次从左到右取一个数组元素，将其插入到左边已排序元素中的右边位置。,插入排序是在k次迭代之后对数组中的前k个项目进行排序，它采用k + 1个项目并将其插入到已排序的k个元素中的正确位置。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الإدراج؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يدرجه في الموضع الصحيح بين العناصر التي تم فرزها بالفعل على يساره.,تم فرز الفرز بعد تكرارات k ، حيث يتم فرز عناصر k الأولى في المصفوفة ، حيث تأخذ عنصر k + 1 وتدرجه في الموضع الصحيح في عناصر k التي تم فرزها بالفعل.,"В одному реченні, яка основна ідея реалізується шляхом вставки сортування?","Беручи по одному елементу масиву, зліва направо, він вставляє його в потрібне положення серед уже відсортованих елементів зліва.","сортування вставки відбувається після того, як після k ітерацій сортуються перші k елементів у масиві, він бере елемент k + 1 і вставляє його у правильне положення у вже відсортованих k елементах.","Em uma frase, qual é a ideia principal implementada pelo tipo de inserção?","Pegando um elemento do array por vez, da esquerda para a direita, ele o insere na posição certa entre os elementos já classificados à sua esquerda.","a ordenação por inserção é onde, após k iterações, os primeiros k itens do array são ordenados, ele pega o item k + 1 e o insere na posição correta nos k elementos já ordenados.",در یک جمله ، ایده اصلی که با درج مرتب سازی پیاده سازی شده است چیست؟,هر بار با گرفتن یک عنصر آرایه ، از چپ به راست ، آن را در موقعیت مناسب در میان عناصر مرتب شده در سمت چپ خود قرار می دهد.,مرتب سازی درج شده پس از تکرار k است ، اولین k مورد در آرایه مرتب می شود ، آن مورد k + 1 را می گیرد و در موقعیت صحیح عناصر k قرار می گیرد.,"En una frase, quina és la idea principal implementada per la inserció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, l’insereix en la posició correcta entre els elements ja ordenats de la seva esquerra.","la classificació per inserció és que després de k iteracions s’ordenen els primers k ítems de la matriu, agafa l’element k + 1 i l’insereix a la posició correcta en els k elements ja ordenats.","У једној реченици, која је главна идеја спроведена сортирањем уметања?","Узимајући по један елемент низа, слева надесно, убацује га у прави положај међу већ сортиране елементе лево.","сортирање уметања је након к итерација сортирано првих к ставки у низу, узима к + 1 ставку и убацује се у тачан положај у већ сортираним к елементима.","Dalam satu kalimat, apa ide utama yang diimplementasikan oleh insertion sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, itu menyisipkannya di posisi kanan di antara elemen yang sudah diurutkan di sebelah kirinya.","penyisipan sort adalah setelah k iterasi, k item pertama dalam larik diurutkan, ambil k + 1 item dan sisipkan ke posisi yang benar dalam elemen k yang sudah diurutkan.","I en setning, hva er hovedideen implementert ved innsettingssortering?","Tar ett matriseelement om gangen, fra venstre til høyre, setter det inn i riktig posisjon blant de allerede sorterte elementene til venstre.","innsettingssorter er var etter k iterasjoner de første k-elementene i matrisen er sortert, det tar k + 1-elementet og setter det inn i riktig posisjon i de allerede sorterte k-elementene.",한 문장에서 삽입 정렬로 구현 된 주요 아이디어는 무엇입니까?,한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 왼쪽에 이미 정렬 된 요소 중 오른쪽 위치에 삽입합니다.,삽입 정렬은 k 반복 후에 배열의 첫 번째 k 항목이 정렬되며 k + 1 항목을 가져와 이미 정렬 된 k 요소의 올바른 위치에 삽입합니다.,Mikä on lisäyslajittelun pääidea yhdessä lauseessa?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se lisää sen oikeaan kohtaan jo järjestettyjen elementtien joukossa vasemmalla.","lisäyslajittelu on, kun k iteroinnin jälkeen taulukon ensimmäiset k kohdetta lajitellaan, se vie k + 1 kohteen ja lisää sen oikeaan kohtaan jo lajiteltuihin k elementteihin.","Egy mondatban mi a fő gondolat, amelyet a beszúrásos rendezéssel hajtanak végre?","Egyszerre egy tömb elemet vesz fel balról jobbra, és a bal oldali már rendezett elemek közé illeszti a jobb helyzetbe.","a beszúrási sorrend k ismétlések után az első k elem a sorrendben rendeződik, a k + 1 elemet veszi fel, és a már rendezett k elemek helyes pozíciójába illeszti.","V jedné větě, jaká je hlavní myšlenka implementovaná třídou vložení?","Vezmeme-li po jednom prvku pole zleva doprava, vloží jej na správnou pozici mezi již seřazené prvky nalevo.","třídění vkládání bylo po k iteracích první k položky v poli jsou seřazeny, vezme položku k + 1 a vloží ji do správné polohy v již seřazených k prvcích.","U jednoj rečenici, koja je glavna ideja implementirana sortiranjem umetanja?","Uzimajući po jedan element niza, slijeva udesno, ubacuje ga u pravi položaj među već sortirane elemente s lijeve strane.","sortiranje umetanja je nakon k iteracija sortirano prvih k predmeta u nizu, uzima k + 1 stavku i ubacuje se u ispravan položaj u već sortiranim k elementima."
344,344,579,3.6,"Lack of defining a base case, or writing the recursion step incorrectly so that it does not converge on the base case","If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",5.0,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,"Fehlende Definition eines Basisfalls oder falsches Schreiben des Rekursionsschritts, damit er nicht im Basisfall konvergiert","Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.","Kakulang sa pagtuki sa us aka base case, o pagsulat nga sayup nga lakang sa recursion aron dili kini magtapok sa base nga kaso",Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,Brist på att definiera ett basfall eller skriva fel rekursionssteg så att det inte konvergerar i basfallet,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,"Manque de définition d&#39;un cas de base, ou écriture incorrecte de l&#39;étape de récursivité pour qu&#39;elle ne converge pas vers le cas de base",Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,Gebrek aan het definiëren van een basisscenario of het verkeerd schrijven van de recursiestap zodat deze niet convergeert naar het basisscenario,Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.","Отсутствие определения базового случая или неправильная запись шага рекурсии, поэтому он не сходится с базовым случаем","Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,Mancata definizione di un caso base o scrittura errata del passaggio di ricorsione in modo che non converga sul caso base,"Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,Falta de definir un caso base o escribir el paso de recursividad incorrectamente para que no converja en el caso base,Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,"Brak zdefiniowania przypadku bazowego lub niepoprawne zapisanie kroku rekurencji, aby nie zbiegał się w przypadku bazowym","Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",Thiếu xác định trường hợp cơ sở hoặc viết sai bước đệ quy để nó không hội tụ trên trường hợp cơ sở,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,ベースケースを定義していない、または再帰ステップを誤って記述してベースケースに収束しない,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,缺少定义基本案例，或错误地编写了递归步骤，以致于它不能收敛于基本案例,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,عدم تحديد الحالة الأساسية ، أو كتابة خطوة العودية بشكل غير صحيح بحيث لا تتقارب مع الحالة الأساسية,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.","Відсутність визначення базового випадку або неправильне написання кроку рекурсії, щоб він не сходився до базового випадку","Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,"Falta de definir um caso base, ou escrever a etapa de recursão incorretamente para que não convirja no caso base",هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,عدم تعریف مورد پایه یا نادرست نوشتن مرحله بازگشت به منظور عدم همگرایی با پرونده اصلی,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,Manca de definir un cas base o escriure el pas de recursió incorrectament perquè no convergeixi en el cas base,"При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,Недостатак дефинисања основног случаја или погрешно писање корака рекурзије тако да се не конвергира на основном случају,"Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.","Kurangnya pendefinisian kasus dasar, atau kesalahan penulisan langkah rekursi sehingga tidak menyatu pada kasus dasar",Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.",Mangel på å definere en basissak eller å skrive rekursjonstrinnet feil slik at det ikke konvergerer i basissaken,재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,기본 사례를 정의하지 않거나 기본 사례에 수렴하지 않도록 재귀 단계를 잘못 작성,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,"Perustapauksen määrittelemisen puuttuminen tai rekursiovaiheen kirjoittaminen väärin, jotta se ei yhtyisi perustapaukseen",A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.","Az alapeset definiálása, vagy a rekurziós lépés helytelen megírása, hogy ne konvergáljon az alap eseten",Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.","Nedostatek definování základního případu nebo nesprávného zápisu kroku rekurze, aby se nekonvergoval v základním případě","Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,"Nedostatak definiranja osnovnog slučaja ili pogrešno pisanje koraka rekurzije, tako da se ne konvergira na osnovni slučaj"
345,345,2353,12.7,pop and push to remove an element and to insert an element,push and pop,What are the main operations associated with a stack?,5.0,Push and Pop,"Was sind die Hauptoperationen, die mit einem Stapel verbunden sind?","Pop und Push, um ein Element zu entfernen und ein Element einzufügen",Unsa ang mga punoan nga operasyon nga kauban sa usa ka stack?,iduso ug pop,pop ug iduso aron makuha ang usa ka elemento ug aron magsulud usa ka elemento,Vilka är de viktigaste operationerna i samband med en stack?,tryck och knäpp,tryck och tryck för att ta bort ett element och infoga ett element,Quelles sont les principales opérations associées à une pile?,pousser et pop,pop et pousser pour supprimer un élément et insérer un élément,Wat zijn de belangrijkste bewerkingen die aan een stapel zijn gekoppeld?,duwen en knallen,pop en duw om een element te verwijderen en een element in te voegen,Какие основные операции связаны со стеком?,толкать и хлопать,"pop и push, чтобы удалить элемент и вставить элемент",Quali sono le principali operazioni associate a uno stack?,spingere e pop,premere e premere per rimuovere un elemento e per inserire un elemento,¿Cuáles son las principales operaciones asociadas con una pila?,empujar y hacer estallar,hacer estallar y presionar para eliminar un elemento e insertar un elemento,Jakie są główne operacje związane ze stosem?,push i pop,"pop i naciśnij, aby usunąć element i wstawić element",Các hoạt động chính được liên kết với một ngăn xếp là gì?,đẩy và bật,bật và đẩy để xóa một phần tử và để chèn một phần tử,スタックに関連する主な操作は何ですか？,プッシュアンドポップ,ポップアンドプッシュして要素を削除し、要素を挿入します,与堆栈相关的主要操作是什么？,推和弹出,弹出并推动以删除元素并插入元素,ما هي العمليات الرئيسية المرتبطة بمكدس؟,ادفع وبوب,انبثق وادفع لإزالة عنصر وإدخال عنصر,Які основні операції пов’язані зі стеком?,натискання та поп,"натисніть і натисніть, щоб видалити елемент і вставити елемент",Quais são as principais operações associadas a uma pilha?,empurre e estale,pop e empurre para remover um elemento e para inserir um elemento,اصلی ترین عملیات مرتبط با پشته چیست؟,فشار و پاپ,برای حذف یک عنصر و قرار دادن یک عنصر ، فشار دهید و فشار دهید,Quines són les principals operacions associades a una pila?,empenta i esclata,premeu i premeu per eliminar un element i inserir-ne un,Које су главне операције повезане са стеком?,гурај и пуцај,притисните и притисните да бисте уклонили елемент и уметнули елемент,Apa operasi utama yang terkait dengan tumpukan?,push dan pop,pop dan dorong untuk menghapus elemen dan memasukkan elemen,Hva er de viktigste operasjonene knyttet til en stabel?,push og pop,trykk og trykk for å fjerne et element og sette inn et element,스택과 관련된 주요 작업은 무엇입니까?,밀고 팝,팝 앤 푸시로 요소 제거 및 삽입,Mitkä ovat pinoon liittyvät päätoiminnot?,työnnä ja pop,pop ja paina poistaa elementti ja lisätä elementin,Melyek a veremhez kapcsolódó főbb műveletek?,nyomja és pattog,kattints és nyomj egy elem eltávolításához és egy elem beillesztéséhez,Jaké jsou hlavní operace spojené se zásobníkem?,push a pop,pop a push pro odebrání prvku a pro vložení prvku,Koje su glavne operacije povezane sa stogom?,guraj i pucaj,pritisnite i pritisnite da biste uklonili element i umetnuli element
346,346,335,2.5,as many as you need,Unlimited number.,How many constructors can be created for a class?,5.0,Unbegrenzte Anzahl.,Wie viele Konstruktoren können für eine Klasse erstellt werden?,so viele wie du brauchst,Pila ka mga magtutukod ang mahimo alang sa usa ka klase?,Unlimited numero.,kutob sa imong kinahanglan,Hur många konstruktörer kan skapas för en klass?,Obegränsat antal.,så många du behöver,Combien de constructeurs peuvent être créés pour une classe?,Nombre illimité.,autant que vous en avez besoin,Hoeveel constructeurs kunnen er voor een klasse worden gemaakt?,Onbeperkt aantal.,zoveel als je nodig hebt,Сколько конструкторов можно создать для класса?,Неограниченное количество.,"столько, сколько вам нужно",Quanti costruttori possono essere creati per una classe?,Numero illimitato.,quanti ne hai bisogno,¿Cuántos constructores se pueden crear para una clase?,Número ilimitado.,tantos como necesites,Ile konstruktorów można utworzyć dla klasy?,Nieograniczona liczba.,"tyle, ile potrzebujesz",Có bao nhiêu hàm tạo có thể được tạo cho một lớp?,Số lượng không giới hạn.,bao nhiêu bạn cần,クラスに対していくつのコンストラクターを作成できますか？,無制限の数。,必要なだけ,一个类可以创建多少个构造函数？,无限数量。,根据需要,كم عدد المنشئين الذي يمكن إنشاؤه للفصل؟,عدد غير محدود.,بقدر ما تحتاج,Скільки конструкторів можна створити для класу?,Необмежена кількість.,скільки вам потрібно,Quantos construtores podem ser criados para uma classe?,Número ilimitado.,quantos você precisar,چند سازنده می تواند برای یک کلاس ایجاد شود؟,تعداد نامحدود,به هر تعداد که نیاز دارید,Quants constructors es poden crear per a una classe?,Nombre il·limitat.,tantes com necessiteu,Колико конструктора може да се креира за класу?,Неограничен број.,колико вам треба,Berapa banyak konstruktor yang dapat dibuat untuk sebuah kelas?,Jumlah tidak terbatas.,sebanyak yang Anda butuhkan,Hvor mange konstruktører kan opprettes for en klasse?,Ubegrenset antall.,så mange du trenger,클래스에 생성 할 수있는 생성자는 몇 개입니까?,무제한 수.,필요한만큼,Kuinka monta rakennuttajaa luokalle voidaan luoda?,Rajoittamaton määrä.,niin monta kuin tarvitset,Hány konstruktort lehet létrehozni egy osztályhoz?,Korlátlan számú.,ahányra szükséged van,Kolik konstruktorů lze pro třídu vytvořit?,Neomezený počet.,"tolik, kolik potřebujete",Koliko konstruktora može biti stvoreno za klasu?,Neograničen broj.,onoliko koliko vam treba
347,347,2176,12.1,its a data type with a memory address and a value,The address of a location in memory.,What is a pointer?,3.5,Die Adresse eines Speicherorts.,Was ist ein Zeiger?,Es ist ein Datentyp mit einer Speicheradresse und einem Wert,Unsa ang usa ka pointer?,Ang adres sa usa ka lokasyon sa memorya.,kini usa ka tipo sa datos nga adunay usa ka memorya nga adres ug usa ka kantidad,Vad är en pekare?,Adressen till en plats i minnet.,det är en datatyp med en minnesadress och ett värde,Qu&#39;est-ce qu&#39;un pointeur?,L&#39;adresse d&#39;un emplacement en mémoire.,c&#39;est un type de données avec une adresse mémoire et une valeur,Wat is een aanwijzer?,Het adres van een locatie in het geheugen.,het is een gegevenstype met een geheugenadres en een waarde,Что такое указатель?,Адрес места в памяти.,это тип данных с адресом памяти и значением,Cos&#39;è un puntatore?,L&#39;indirizzo di una posizione in memoria.,è un tipo di dati con un indirizzo di memoria e un valore,¿Qué es un puntero?,La dirección de una ubicación en la memoria.,es un tipo de datos con una dirección de memoria y un valor,Co to jest wskaźnik?,Adres lokalizacji w pamięci.,jest to typ danych z adresem pamięci i wartością,Con trỏ là gì?,Địa chỉ của một vị trí trong bộ nhớ.,nó là kiểu dữ liệu có địa chỉ bộ nhớ và giá trị,ポインタとは何ですか？,メモリ内の場所のアドレス。,メモリアドレスと値を持つデータ型,什么是指针？,内存中位置的地址。,它是带有内存地址和值的数据类型,ما هو المؤشر؟,عنوان موقع في الذاكرة.,إنه نوع بيانات مع عنوان ذاكرة وقيمة,Що таке вказівник?,Адреса місця в пам&#39;яті.,це тип даних із адресою пам&#39;яті та значенням,O que é um ponteiro?,O endereço de um local na memória.,é um tipo de dado com um endereço de memória e um valor,اشاره گر چیست؟,آدرس مکانی در حافظه.,این یک نوع داده با آدرس حافظه و مقدار است,Què és un punter?,L&#39;adreça d&#39;una ubicació a la memòria.,és un tipus de dades amb una adreça de memòria i un valor,Шта је показивач?,Адреса локације у меморији.,то је тип података са меморијском адресом и вредношћу,Apa itu penunjuk?,Alamat lokasi di memori.,itu adalah tipe data dengan alamat memori dan nilai,Hva er en peker?,Adressen til en plassering i minnet.,det er en datatype med en minneadresse og en verdi,포인터 란 무엇입니까?,메모리에있는 위치의 주소.,메모리 주소와 값이있는 데이터 유형,Mikä on osoitin?,Muistissa olevan sijainnin osoite.,"sen tietotyyppi, jossa on muistiosoite ja arvo",Mi az a mutató?,A memóriában lévő hely címe.,ez egy adattípus memória címmel és értékkel,Co je to ukazatel?,Adresa umístění v paměti.,je to datový typ s adresou paměti a hodnotou,Šta je pokazivač?,Adresa lokacije u memoriji.,to je tip podataka s memorijskom adresom i vrijednošću
348,348,2066,11.7,by defining static array it doese not lose scope in locala function. static array makes programm more scalable. non static array lose scope inside the local function.,The static arrays are intialized only once when the function is called.,What is the difference between an array that is declared as static and one that is not?,4.5,Die statischen Arrays werden beim Aufruf der Funktion nur einmal initialisiert.,"Was ist der Unterschied zwischen einem Array, das als statisch deklariert ist, und einem Array, das nicht als statisch deklariert ist?",Durch die Definition eines statischen Arrays geht der Bereich in der locala-Funktion nicht verloren. Das statische Array macht das Programm skalierbarer. Nicht statische Arrays verlieren den Gültigkeitsbereich innerhalb der lokalen Funktion.,Unsa ang kalainan tali sa usa ka laray nga gideklara nga static ug usa nga dili?,Ang mga static arrays intialized kausa ra kung gitawag ang function.,pinaagi sa paghubit sa static array dili kini mawad-an sa sakup sa pagpaandar sa locala. Ang static array naghimo sa programm nga labi ka sukod. dili static nga array mawad-an sa kasangkaran sa sulud sa lokal nga function.,Vad är skillnaden mellan en array som deklareras som statisk och en som inte är det?,De statiska matriserna intialiseras bara en gång när funktionen anropas.,genom att definiera statisk matris förlorar den inte omfattningen i lokalfunktionen. statisk matris gör programmet mer skalbart. icke-statisk matris tappar utrymme inom den lokala funktionen.,Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,Les tableaux statiques ne sont initialisés qu&#39;une seule fois lorsque la fonction est appelée.,"en définissant un tableau statique, il ne perd pas sa portée dans la fonction locala. Le tableau statique rend le programme plus évolutif. le tableau non statique perd sa portée à l&#39;intérieur de la fonction locale.",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,De statische arrays worden slechts één keer geïnitialiseerd wanneer de functie wordt aangeroepen.,"door een statische array te definiëren, verliest het geen bereik in de locala-functie. statische array maakt het programma schaalbaarder. niet-statische array verliest bereik binnen de lokale functie.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?",Статические массивы инициализируются только один раз при вызове функции.,"определяя статический массив, он не теряет область видимости в функции locala. статический массив делает программу более масштабируемой. нестатический массив теряет область видимости внутри локальной функции.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,Gli array statici vengono inizializzati solo una volta quando viene chiamata la funzione.,definendo un array statico non perde l&#39;ambito nella funzione locala. l&#39;array statico rende il programma più scalabile. l&#39;array non statico perde l&#39;ambito all&#39;interno della funzione locale.,¿Cuál es la diferencia entre una matriz que se declara como estática y una que no lo es?,Las matrices estáticas se inicializan solo una vez cuando se llama a la función.,"al definir una matriz estática, no pierde alcance en la función locala. La matriz estática hace que el programa sea más escalable. La matriz no estática pierde alcance dentro de la función local.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice statyczne są inicjowane tylko raz, gdy wywoływana jest funkcja.","definiując tablicę statyczną, nie traci zasięgu w funkcji locala. tablica statyczna sprawia, że program jest bardziej skalowalny. tablica niestatyczna traci zasięg wewnątrz funkcji lokalnej.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng tĩnh chỉ được intialize một lần khi hàm được gọi.,"bằng cách xác định mảng tĩnh, nó không làm mất phạm vi trong hàm locala. mảng tĩnh giúp chương trình có thể mở rộng hơn. mảng không tĩnh mất phạm vi bên trong hàm cục bộ.",静的として宣言されている配列とそうでない配列の違いは何ですか？,静的配列は、関数が呼び出されたときに1回だけ初期化されます。,静的配列を定義することにより、locala関数のスコープを失うことはありません。静的配列はプログラムをよりスケーラブルにします。非静的配列は、ローカル関数内のスコープを失います。,声明为静态的数组与未声明为静态的数组有什么区别？,调用函数时，静态数组仅初始化一次。,通过定义静态数组，它不会失去locala函数的作用域。静态数组使程序更具可伸缩性。非静态数组会失去局部函数的作用域。,ما الفرق بين المصفوفة التي تم التصريح بأنها ثابتة والمصفوفة التي لا يتم التصريح عنها؟,يتم تهيئة المصفوفات الثابتة مرة واحدة فقط عند استدعاء الوظيفة.,من خلال تحديد مجموعة ثابتة لا تفقد النطاق في دالة locala. مجموعة ثابتة تجعل البرمجة أكثر قابلية للتوسع. تفقد المصفوفة غير الثابتة نطاقها داخل الوظيفة المحلية.,"У чому різниця між масивом, який оголошено статичним, і масивом, який не є?",Статичні масиви ініціалізуються лише один раз при виклику функції.,"визначаючи статичний масив, він не втрачає обсяг у функції локалі. статичний масив робить програму більш масштабованою. нестатичний масив втрачає область дії всередині локальної функції.",Qual é a diferença entre uma matriz que é declarada como estática e outra que não é?,"Os arrays estáticos são inicializados apenas uma vez, quando a função é chamada.","ao definir um array estático, ele não perde o escopo na função locala. array estático torna o programa mais escalonável. array não estático perde escopo dentro da função local.",چه تفاوتی بین آرایه ای که به صورت استاتیک اعلام می شود و دیگری که نیست ، چیست؟,وقتی فراخوانی تابع می شود ، آرایه های ساکن فقط یک بار intialize می شوند.,با تعریف آرایه استاتیک دامنه عملکرد تابع locala را از دست نمی دهد. آرایه ایستا برنامه را مقیاس پذیرتر می کند. آرایه غیر استاتیک دامنه عملکرد داخلی را از دست می دهد.,Quina diferència hi ha entre una matriu que es declara estàtica i una que no ho és?,Les matrius estàtiques només s’inicialitzen una vegada quan es crida la funció.,"en definir una matriu estàtica, no es perd l&#39;abast de la funció local. la matriu estàtica fa que el programa sigui més escalable. la matriu no estàtica perd l&#39;abast dins de la funció local.",Која је разлика између низа који је декларисан као статичан и низа који није?,Статички низови инцијализују се само једном када се функција позове.,дефинисањем статичког низа неће изгубити опсег у функцији локализације. статички низ чини програм више скалабилним. нестатички низ губи опсег унутар локалне функције.,Apa perbedaan antara array yang dideklarasikan sebagai statis dan yang tidak?,Array statis diinisialisasi hanya sekali ketika fungsi dipanggil.,"dengan mendefinisikan array statis, ia tidak kehilangan ruang lingkup dalam fungsi locala. array statis membuat program lebih terukur. array non-statis kehilangan ruang lingkup di dalam fungsi lokal.",Hva er forskjellen mellom en matrise som er erklært som statisk og en som ikke er det?,De statiske matriser intialiseres bare en gang når funksjonen kalles.,"ved å definere statisk matrise, mister det ikke omfanget i lokalfunksjonen. statisk matrise gjør programmet mer skalerbart. ikke-statisk matrise mister omfanget i den lokale funksjonen.",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,함수가 호출 될 때 정적 배열은 한 번만 초기화됩니다.,정적 배열을 정의하면 locala 함수에서 범위를 잃지 않습니다. 정적 배열은 프로그램의 확장 성을 높입니다. 비 정적 배열은 로컬 함수 내에서 범위를 잃습니다.,Mitä eroa on staattiseksi ilmoitetun taulukon ja ei-taulukon välillä?,"Staattiset taulukot intialisoidaan vain kerran, kun funktio kutsutaan.",määrittämällä staattinen taulukko se ei menetä laajuutta locala-toiminnossa. staattinen taulukko tekee ohjelmasta skaalattavamman. ei-staattinen taulukko menettää laajuuden paikallisen toiminnon sisällä.,Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikus tömböket csak egyszer intializálják, amikor a függvény meghívásra kerül.",a statikus tömb definiálásával nem veszíti el a lokálafüggvény hatókörét. a statikus tömb a programot skálázhatóbbá teszi. a nem statikus tömb elveszíti hatókörét a helyi függvényen belül.,"Jaký je rozdíl mezi polem, které je deklarováno jako statické a tím, které není?","Statická pole jsou inicializována pouze jednou, když je funkce volána.",definováním statického pole neztratí rozsah ve funkci locala. statické pole činí program škálovatelnějším. nestatické pole ztratí rozsah uvnitř místní funkce.,Koja je razlika između niza koji je deklariran kao statičan i niza koji nije?,Statički nizovi incijaliziraju se samo jednom kada se funkcija pozove.,definiranjem statičkog niza neće izgubiti opseg u funkciji locala. statički niz čini program skalabilnijim. nestatički niz gubi opseg unutar lokalne funkcije.
349,349,1374,8.3,Use a pointer that always points to the end of the array list for push/pop modifications.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.5,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Verwenden Sie für Push / Pop-Änderungen einen Zeiger, der immer auf das Ende der Array-Liste zeigt.",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.",Paggamit usa ka pointer nga kanunay nagpunting sa katapusan sa lista sa array alang sa mga pagbag-o sa pagduso / pop.,Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.",Använd en pekare som alltid pekar mot slutet av arraylistan för push / pop-modifieringar.,Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.",Utilisez un pointeur qui pointe toujours vers la fin de la liste des tableaux pour les modifications push / pop.,Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.",Gebruik een aanwijzer die altijd naar het einde van de arraylijst wijst voor push / pop-aanpassingen.,Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","Используйте указатель, который всегда указывает на конец списка массивов для изменений push / pop.",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.",Utilizzare un puntatore che punti sempre alla fine dell&#39;elenco di array per modifiche push / pop.,¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.",Utilice un puntero que siempre apunte al final de la lista de matrices para modificaciones push / pop.,Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","Użyj wskaźnika, który zawsze wskazuje koniec listy tablic w przypadku modyfikacji typu push / pop.",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.",Sử dụng một con trỏ luôn trỏ đến cuối danh sách mảng để sửa đổi push / pop.,配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,プッシュ/ポップの変更には、常に配列リストの最後を指すポインターを使用します。,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,使用始终指向数组列表末尾的指针进行推送/弹出修改。,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,استخدم مؤشرًا يشير دائمًا إلى نهاية قائمة المصفوفة لتعديلات الدفع / البوب.,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","Використовуйте вказівник, який завжди вказує на кінець списку масивів для модифікацій push / pop.",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.",Use um ponteiro que sempre aponta para o final da lista de vetores para modificações push / pop.,چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,برای تغییرات push / pop از اشاره گر استفاده کنید که همیشه به انتهای لیست آرایه اشاره دارد.,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.",Utilitzeu un punter que sempre apunti al final de la llista de matrius per a modificacions push / pop.,Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.",Користите показивач који увек показује на крај листе низа за пусх / поп модификације.,Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.",Gunakan penunjuk yang selalu mengarah ke akhir daftar larik untuk modifikasi push / pop.,Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.",Bruk en peker som alltid peker mot slutten av matriselisten for push / pop-modifikasjoner.,어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,푸시 / 팝 수정을 위해 항상 배열 목록의 끝을 가리키는 포인터를 사용하십시오.,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","Käytä osoitinta, joka osoittaa aina taulukkoluettelon loppuun push / pop-muokkauksia varten.",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.","Használjon olyan mutatót, amely mindig a tömblista végére mutat a push / pop módosításokhoz.",Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","Ukazatel, který vždy směřuje na konec seznamu polí, umožňuje úpravy push / pop.",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.",Upotrijebite pokazivač koji uvijek pokazuje na kraj niza za push / pop modifikacije.
350,350,231,2.1,"class variables, function definitions for the class",Data members (attributes) and member functions.,What is typically included in a class definition?,5.0,Datenelemente (Attribute) und Elementfunktionen.,Was ist normalerweise in einer Klassendefinition enthalten?,"Klassenvariablen, Funktionsdefinitionen für die Klasse",Unsa ang kasagarang giapil sa usa ka kahulugan sa klase?,Mga myembro sa datos (mga hiyas) ug mga kalihokan sa miyembro.,"mga variable sa klase, kahulugan sa pagpaandar sa klase",Vad ingår vanligtvis i en klassdefinition?,Datamedlemmar (attribut) och medlemsfunktioner.,"klassvariabler, funktionsdefinitioner för klassen",Qu&#39;est-ce qui est généralement inclus dans une définition de classe?,Membres de données (attributs) et fonctions membres.,"variables de classe, définitions de fonction pour la classe",Wat is er typisch opgenomen in een klassendefinitie?,Gegevensleden (attributen) en lidfuncties.,"klassevariabelen, functiedefinities voor de klasse",Что обычно включается в определение класса?,Члены данных (атрибуты) и функции-члены.,"переменные класса, определения функций для класса",Cosa è tipicamente incluso nella definizione di una classe?,Membri dei dati (attributi) e funzioni dei membri.,"variabili di classe, definizioni di funzioni per la classe",¿Qué se incluye normalmente en una definición de clase?,Miembros de datos (atributos) y funciones de los miembros.,"variables de clase, definiciones de funciones para la clase",Co zwykle zawiera definicja klasy?,Członkowie danych (atrybuty) i funkcje składowe.,"zmienne klasowe, definicje funkcji dla klasy",Những gì thường được bao gồm trong một định nghĩa lớp?,Thành viên dữ liệu (thuộc tính) và chức năng thành viên.,"biến lớp, định nghĩa hàm cho lớp",通常、クラス定義には何が含まれていますか？,データメンバー（属性）とメンバー関数。,クラス変数、クラスの関数定義,类定义中通常包含什么？,数据成员（属性）和成员函数。,类变量，该类的函数定义,ما الذي يتم تضمينه عادة في تعريف الفئة؟,أعضاء البيانات (السمات) ووظائف الأعضاء.,متغيرات الفئة ، تعريفات الوظائف للفئة,Що зазвичай входить у визначення класу?,Члени даних (атрибути) та функції членів.,"змінні класу, визначення функцій класу",O que normalmente está incluído em uma definição de classe?,Membros de dados (atributos) e funções de membro.,"variáveis de classe, definições de função para a classe",چه چیزی معمولاً در تعریف کلاس گنجانده می شود؟,اعضای داده (ویژگی ها) و توابع عضو.,متغیرهای کلاس ، تعریف عملکرد برای کلاس,Què s&#39;inclou normalment en una definició de classe?,Membres de dades (atributs) i funcions de membre.,"variables de classe, definicions de funcions per a la classe",Шта је обично укључено у дефиницију класе?,Чланови података (атрибути) и функције чланова.,"променљиве класе, дефиниције функција за класу",Apa yang biasanya termasuk dalam definisi kelas?,Data anggota (atribut) dan fungsi anggota.,"variabel kelas, definisi fungsi untuk kelas",Hva er vanligvis inkludert i en klassedefinisjon?,Datamedlemmer (attributter) og medlemsfunksjoner.,"klassevariabler, funksjonsdefinisjoner for klassen",일반적으로 클래스 정의에는 무엇이 포함됩니까?,데이터 멤버 (속성) 및 멤버 함수.,"클래스 변수, 클래스에 대한 함수 정의",Mitä tyypillisesti sisältyy luokan määritelmään?,Tietojäsenet (attribuutit) ja jäsenfunktiot.,"luokan muuttujat, luokan funktion määritelmät",Mi jellemzően szerepel az osztály definíciójában?,Adattagok (attribútumok) és tagfunkciók.,"osztályváltozók, az osztály függvénydefiníciói",Co je obvykle zahrnuto v definici třídy?,Datové členy (atributy) a členské funkce.,"proměnné třídy, definice funkcí pro třídu",Šta je obično uključeno u definiciju klase?,Članovi podataka (atributi) i funkcije članova.,"varijable klase, definicije funkcija za klasu"
351,351,1509,9.1,An ADT whose first inserted item is the first item removed. This uses the FIFO idea where items enter a queue at its back and leave at its front.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",What is a queue?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element das letzte ist, das entfernt wird (oder das First-In-First-Out).",Was ist eine Warteschlange?,"Ein ADT, dessen erstes eingefügtes Element das erste entfernte Element ist. Hierbei wird die FIFO-Idee verwendet, bei der Elemente hinten in eine Warteschlange eintreten und vorne verlassen.",Unsa ang pila?,"Ang usa ka istraktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang ulahi nga tangtangon (o una-sa-una-nga-out)",Ang usa ka ADT nga ang una nga gisulud nga butang mao ang una nga gitangtang nga butang. Gigamit niini ang ideya nga FIFO diin ang mga butang mosulod sa pila sa likud niini ug biyaan sa atubangan niini.,Vad är en kö?,"En datastruktur som kan lagra element, som har den egenskapen att det senast tillagda objektet är det sista som tas bort (eller först-in-först-ut).",En ADT vars första infogade objekt är det första objektet som har tagits bort. Detta använder FIFO-idén där objekt går in i en kö på baksidan och lämnar längst fram.,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le dernier à être supprimé (ou premier entré, premier sorti).",Un ADT dont le premier élément inséré est le premier élément supprimé. Cela utilise l&#39;idée FIFO où les éléments entrent dans une file d&#39;attente à l&#39;arrière et la quittent à l&#39;avant.,Wat is een wachtrij?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item het laatste is dat wordt verwijderd (of first-in-first-out).",Een ADT waarvan het eerste ingevoegde item het eerste verwijderde item is. Dit maakt gebruik van het FIFO-idee waarbij items achteraan in een wachtrij komen en vooraan vertrekken.,Что такое очередь?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален последним (или первым пришел - первым ушел).","ADT, первый вставленный элемент которого является первым удаленным элементом. Здесь используется идея FIFO, когда элементы попадают в очередь сзади и уходят спереди.",Cos&#39;è una coda?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà l&#39;ultimo a essere rimosso (o first-in-first-out).",Un ADT il cui primo elemento inserito è il primo elemento rimosso. Questo utilizza l&#39;idea FIFO in cui gli elementi entrano in una coda sul retro e lasciano davanti.,¿Qué es una cola?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el último en ser eliminado (o el primero en entrar, primero en salir).",Un ADT cuyo primer elemento insertado es el primer elemento eliminado. Esto usa la idea FIFO donde los elementos ingresan a una cola en su parte posterior y salen en su frente.,Co to jest kolejka?,"Struktura danych, która może przechowywać elementy, która ma tę właściwość, że ostatni dodany element będzie ostatnim do usunięcia (lub pierwszy na wejściu, pierwszy na wyjściu).","ADT, którego pierwszym wstawionym elementem jest pierwszy usunięty. Wykorzystuje to koncepcję FIFO, w której elementy wchodzą do kolejki z tyłu i wychodzą z przodu.",Hàng đợi là gì?,"Một cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử cuối cùng bị xóa (hoặc nhập trước xuất trước).",ADT có mục được chèn đầu tiên là mục đầu tiên bị xóa. Điều này sử dụng ý tưởng FIFO trong đó các mục nhập vào hàng đợi ở phía sau và rời khỏi hàng trước của nó.,キューとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最後に削除される（または先入れ先出し）というプロパティがあります。,最初に挿入されたアイテムが最初に削除されたアイテムであるADT。これは、アイテムが後ろからキューに入り、前から出るというFIFOの考え方を使用しています。,什么是队列？,可以存储元素的数据结构，其属性为最后添加的项将是最后要删除的（或先进先出）。,一个ADT，其第一个插入的项目是第一个被删除的项目。这使用了FIFO思想，即项目在队列的后面进入队列，在队列的前面离开。,ما هو الطابور؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون آخر عنصر تتم إزالته (أو ما يرد أولاً يخرج أولاً).,أداة ADT التي يكون العنصر الأول الذي تم إدراجه هو العنصر الأول الذي تمت إزالته. يستخدم هذا فكرة FIFO حيث تدخل العناصر في قائمة انتظار في ظهرها وتترك في مقدمتها.,Що таке черга?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде останнім, який буде видалено (або перший-у-першому-вихід).","ADT, першим вкладеним елементом є перший видалений елемент. Тут використовується ідея FIFO, де елементи потрапляють в чергу ззаду, а виходять спереду.",O que é uma fila?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o último a ser removido (ou primeiro a entrar, primeiro a sair).","Um ADT cujo primeiro item inserido é o primeiro item removido. Isso usa a ideia FIFO, em que os itens entram em uma fila por trás e saem pela frente.",صف چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده آخرین موردی است که حذف می شود (یا اولین بار در اولین بار).,ADT که اولین مورد درج شده اولین مورد حذف شده است. این از ایده FIFO استفاده می کند که در آن اقلام در پشت آن صف می گیرند و از جلوی آن خارج می شوند.,Què és una cua?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà l’últim que s’eliminarà (o el primer entrant-primer sortint).",Un ADT el primer element inserit del qual és el primer. S’utilitza la idea FIFO on els elements entren en una cua per la part posterior i surten per la part davantera.,Шта је ред?,"Структура података која може да складишти елементе, а која има својство да ће последња додата ставка бити последња која ће бити уклоњена (или прва у првом).","АДТ чија је прва уметнута ставка прва уклоњена ставка. Ово користи ФИФО идеју где предмети улазе у ред са задње стране, а одлазе с предње стране.",Apa itu antrian?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang item terakhir ditambahkan akan menjadi yang terakhir dihapus (atau pertama masuk pertama keluar).",ADT yang item pertama yang disisipkan adalah item pertama yang dihapus. Ini menggunakan ide FIFO di mana item memasuki antrian di belakangnya dan meninggalkannya di depannya.,Hva er kø?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det siste som blir fjernet (eller først-inn-først-ut).",En ADT hvis første innsatte element er det første elementet fjernet. Dette bruker FIFO-ideen der gjenstander går inn i en kø bak og forlater foran.,대기열이란 무엇입니까?,마지막으로 추가 된 항목이 제거 될 마지막 항목 (또는 선입 선출)이라는 속성을 가진 요소를 저장할 수있는 데이터 구조입니다.,첫 번째로 삽입 된 항목이 제거 된 첫 번째 항목 인 ADT입니다. 이것은 항목이 뒤쪽에서 대기열에 들어가고 앞으로 나가는 FIFO 아이디어를 사용합니다.,Mikä on jono?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan viimeisenä (tai ensin sisään-sisään-ulos-lähtöön).","ADT, jonka ensimmäinen lisätty kohde on ensimmäinen poistettu kohde. Tässä käytetään FIFO-ideaa, jossa kohteet tulevat jonoon takaosaansa ja lähtevät etupuolelta.",Mi a sor?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az utolsó, amelyet eltávolítanak (vagy az első az elsőben ki-be).","Egy ADT, amelynek első beillesztett tétele az első eltávolított elem. Ez a FIFO ötletet használja, ahol az elemek a hátsó sorba kerülnek, és az elején hagyják.",Co je to fronta?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude poslední, která bude odebrána (nebo první-první-první-ven).","ADT, jehož první vložená položka je první odstraněnou položkou. Toto využívá myšlenku FIFO, kdy položky vstupují do fronty vzadu a odcházejí zepředu.",Šta je red?,"Struktura podataka koja može pohraniti elemente, koja ima svojstvo da će zadnja dodana stavka biti posljednja koja će se ukloniti (ili prva u prvom pojavljivanju).","ADT čija je prva umetnuta stavka prva uklonjena stavka. Ovdje se koristi FIFO ideja gdje stavke ulaze u red s leđa, a odlaze s prednje strane."
352,352,804,4.6,not answered,Run-time error.,Using an index outside the bounds of the array generates an error. Is this a compilation error or a run-time error?,0.0,Laufzeit Fehler.,Die Verwendung eines Index außerhalb der Grenzen des Arrays erzeugt einen Fehler. Ist dies ein Kompilierungsfehler oder ein Laufzeitfehler?,nicht beantwortet,Ang paggamit sa usa ka indeks sa gawas sa utlanan sa han-ay naghatag usa ka sayup. Kini ba usa ka sayup nga panagsama o usa ba nga sayup sa pagdagan?,Sayup sa oras sa pagdagan.,wala gitubag,Att använda ett index utanför gruppens gränser genererar ett fel. Är detta ett kompileringsfel eller ett körtidsfel?,Körtidsfel.,inte besvarad,L&#39;utilisation d&#39;un index en dehors des limites du tableau génère une erreur. S&#39;agit-il d&#39;une erreur de compilation ou d&#39;une erreur d&#39;exécution?,Erreur d&#39;exécution.,non répondu,Het gebruik van een index buiten de grenzen van de array genereert een fout. Is dit een compilatiefout of een runtime-fout?,Runtime-fout.,niet geantwoord,Использование индекса за пределами массива вызывает ошибку. Это ошибка компиляции или ошибка времени выполнения?,Ошибка выполнения.,не отвечено,L&#39;utilizzo di un indice al di fuori dei limiti dell&#39;array genera un errore. È un errore di compilazione o un errore di runtime?,Errore di run-time.,non risposto,El uso de un índice fuera de los límites de la matriz genera un error. ¿Es esto un error de compilación o un error de tiempo de ejecución?,Error de tiempo de ejecución.,no respondido,Użycie indeksu poza granicami tablicy generuje błąd. Czy to błąd kompilacji czy błąd czasu wykonywania?,Błąd wykonania.,bez odpowiedzi,Sử dụng chỉ mục bên ngoài giới hạn của mảng sẽ tạo ra lỗi. Đây là lỗi biên dịch hay lỗi thời gian chạy?,Lỗi runtime.,không có câu trả lời,配列の境界外のインデックスを使用すると、エラーが発生します。これはコンパイルエラーですか、それとも実行時エラーですか？,ランタイムエラー。,答えなかった,在数组范围之外使用索引会产生错误。这是编译错误还是运行时错误？,运行时错误。,无解答,يؤدي استخدام فهرس خارج حدود المصفوفة إلى حدوث خطأ. هل هذا خطأ تجميع أم خطأ وقت التشغيل؟,خطا وقت التشغيل.,بلا جواب,Використання індексу поза межами масиву генерує помилку. Це помилка компіляції чи помилка виконання?,Помилка під час виконання.,не відповів,Usar um índice fora dos limites da matriz gera um erro. Este é um erro de compilação ou um erro de tempo de execução?,Erro em tempo de execução.,não respondido,استفاده از فهرست خارج از آرایه خطایی ایجاد می کند. آیا این یک خطای تلفیقی است یا یک خطای زمان اجرا است؟,خطای زمان اجرا.,جواب نداد,L’ús d’un índex fora dels límits de la matriu genera un error. Es tracta d&#39;un error de compilació o d&#39;un temps d&#39;execució?,Error d&#39;execució.,no contestat,Коришћење индекса изван граница поља генерише грешку. Да ли је ово грешка у компилацији или грешка током извршавања?,Грешка у раду.,неодговорено,Menggunakan indeks di luar batas-batas larik menghasilkan kesalahan. Apakah ini kesalahan kompilasi atau kesalahan run-time?,Kesalahan run-time.,tidak dijawab,Å bruke en indeks utenfor områdets grenser genererer en feil. Er dette en kompileringsfeil eller en kjøretidsfeil?,Kjøretidsfeil.,ikke besvart,배열 경계를 벗어난 인덱스를 사용하면 오류가 발생합니다. 컴파일 오류입니까 아니면 런타임 오류입니까?,런타임 오류.,대답하지 않았다,Hakemiston käyttö taulukon rajojen ulkopuolella tuottaa virheen. Onko tämä käännösvirhe vai ajonaikainen virhe?,Suorituksenaikainen virhe.,ei vastattu,A tömb határain kívüli index használata hibát eredményez. Összeállítási hiba vagy futásidejű hiba?,Futtatási hiba.,nem válaszolt,Použití indexu mimo hranice pole generuje chybu. Je to chyba kompilace nebo chyba běhu?,Chyba za běhu.,nezodpovězeno,Korištenje indeksa izvan granica polja generira grešku. Je li ovo greška u kompilaciji ili pogreška u toku izvođenja?,Greška u vremenu izvođenja.,nije odgovorio
353,353,636,4.1,"1. Declare the length of the array (int array[10];) 2. Initialize the array (int array[] = {0, 1, 2, 3}; //compiler will assume size of 4)","In the array declaration, or by using an initializer list.",What are the two different ways of specifying the length of an array?,5.0,In der Array-Deklaration oder mithilfe einer Initialisierungsliste.,"Welche zwei verschiedenen Möglichkeiten gibt es, die Länge eines Arrays anzugeben?","1. Deklarieren Sie die Länge des Arrays (int array [10];) 2. Initialisieren Sie das Array (int array [] = {0, 1, 2, 3}; // Der Compiler nimmt die Größe 4 an.)",Unsa ang duha ka lainlaing paagi sa pagtino sa gitas-on sa usa ka laray?,"Sa deklarasyon sa laray, o pinaagi sa paggamit sa usa ka lista sa inisyal.","1. Ipahayag ang gitas-on sa laray (int array [10];) 2. Ipasugod ang laraw (int array [] = {0, 1, 2, 3}; // ang tigsama maghunahuna nga gidak-on sa 4)",Vilka är de två olika sätten att specificera längden på en matris?,I arraydeklarationen eller med en initialiseringslista.,"1. Förklara längden på arrayen (int array [10];) 2. Initiera arrayen (int array [] = {0, 1, 2, 3}; // kompilatorn antar storlek 4)",Quelles sont les deux manières différentes de spécifier la longueur d&#39;un tableau?,Dans la déclaration du tableau ou en utilisant une liste d&#39;initialiseurs.,"1. Déclarez la longueur du tableau (int array [10];) 2. Initialisez le tableau (int array [] = {0, 1, 2, 3}; // le compilateur prendra une taille de 4)",Wat zijn de twee verschillende manieren om de lengte van een array te specificeren?,"In de array-declaratie, of door een initialisatie-lijst te gebruiken.","1. Declareer de lengte van de array (int array [10];) 2. Initialiseer de array (int array [] = {0, 1, 2, 3}; // compiler neemt grootte aan van 4)",Каковы два разных способа указания длины массива?,В объявлении массива или с помощью списка инициализаторов.,"1. Объявите длину массива (int array [10];) 2. Инициализируйте массив (int array [] = {0, 1, 2, 3}; // компилятор примет размер 4)",Quali sono i due diversi modi per specificare la lunghezza di un array?,Nella dichiarazione di matrice o utilizzando un elenco di inizializzatori.,"1. Dichiara la lunghezza dell&#39;array (int array [10];) 2. Inizializza l&#39;array (int array [] = {0, 1, 2, 3}; // il compilatore assumerà la dimensione di 4)",¿Cuáles son las dos formas diferentes de especificar la longitud de una matriz?,"En la declaración de la matriz, o usando una lista de inicializadores.","1. Declare la longitud de la matriz (int matriz [10];) 2. Inicialice la matriz (int matriz [] = {0, 1, 2, 3}; // el compilador asumirá un tamaño de 4)",Jakie są dwa różne sposoby określania długości tablicy?,W deklaracji tablicy lub przy użyciu listy inicjatorów.,"1. Zadeklaruj długość tablicy (int array [10];) 2. Zainicjalizuj tablicę (int array [] = {0, 1, 2, 3}; // kompilator przyjmie rozmiar 4)",Hai cách khác nhau để chỉ định độ dài của một mảng là gì?,Trong khai báo mảng hoặc bằng cách sử dụng danh sách bộ khởi tạo.,"1. Khai báo độ dài của mảng (int array [10];) 2. Khởi tạo mảng (int array [] = {0, 1, 2, 3}; // compiler sẽ giả sử kích thước là 4)",配列の長さを指定する2つの異なる方法は何ですか？,配列宣言で、または初期化子リストを使用して。,1.配列の長さを宣言します（int array [10];）2。配列を初期化します（int array [] = {0、1、2、3}; //コンパイラは4のサイズを想定します）,指定数组长度的两种不同方式是什么？,在数组声明中，或通过使用初始化程序列表。,1.声明数组的长度（int array [10];）2.初始化数组（int array [] = {0，1，2，3}; //编译器将假定大小为4）,ما الطريقتان المختلفتان لتحديد طول المصفوفة؟,في إعلان الصفيف ، أو باستخدام قائمة مُهيئ.,1. قم بتعريف طول المصفوفة (مصفوفة int [10] ؛) 2. تهيئة المصفوفة (مصفوفة int [] = {0، 1، 2، 3}؛ // سوف يفترض المترجم الحجم 4),Які два різні способи задання довжини масиву?,В оголошенні масиву або за допомогою списку ініціалізаторів.,"1. Заявити довжину масиву (масив int [10];) 2. Ініціалізувати масив (масив int [] = {0, 1, 2, 3}; // компілятор прийме розмір 4)",Quais são as duas maneiras diferentes de especificar o comprimento de uma matriz?,Na declaração da matriz ou usando uma lista de inicializadores.,"1. Declare o comprimento da matriz (int array [10];) 2. Inicialize a matriz (int array [] = {0, 1, 2, 3}; // o compilador assumirá o tamanho 4)",دو روش مختلف برای تعیین طول یک آرایه چیست؟,در اعلان آرایه یا با استفاده از لیست اولیه ساز.,1. اعلام طول آرایه (آرایه int [10]؛) 2. آرایه را مقداردهی اولیه کنید (آرایه int [] = {0 ، 1 ، 2 ، 3} ؛ // کامپایلر اندازه 4 را در نظر می گیرد),Quines són les dues maneres diferents d&#39;especificar la longitud d&#39;una matriu?,A la declaració de matriu o mitjançant una llista d&#39;inicialitzadors.,"1. Declareu la longitud de la matriu (int array [10];) 2. Inicialitzeu la matriu (int array [] = {0, 1, 2, 3}; // el compilador assumirà la mida de 4)",Која су два различита начина одређивања дужине низа?,У декларацији низа или помоћу листе иницијализатора.,"1. Декларишите дужину низа (инт низ [10];) 2. Иницијализујте низ (инт низ [] = {0, 1, 2, 3}; // преводилац ће претпоставити величину 4)",Apa dua cara berbeda untuk menentukan panjang sebuah array?,"Dalam deklarasi array, atau dengan menggunakan daftar penginisialisasi.","1. Deklarasikan panjang array (int array [10];) 2. Inisialisasi array (int array [] = {0, 1, 2, 3}; // compiler akan menganggap ukuran 4)",Hva er de to forskjellige måtene å spesifisere lengden på en matrise?,"I matrixerklæringen, eller ved å bruke en initialiseringsliste.","1. Deklarer lengden på arrayet (int array [10];) 2. Initialiser arrayet (int array [] = {0, 1, 2, 3}; // kompilatoren antar størrelse 4)",배열의 길이를 지정하는 두 가지 다른 방법은 무엇입니까?,배열 선언에서 또는 이니셜 라이저 목록을 사용합니다.,"1. 배열의 길이 선언 (int array [10];) 2. 배열 초기화 (int array [] = {0, 1, 2, 3}; // 컴파일러는 크기를 4로 가정)",Mitkä ovat kaksi erilaista tapaa määrittää matriisin pituus?,Taulukkoilmoituksessa tai käyttämällä alustusluetteloa.,"1. Ilmoita taulukon pituus (int-taulukko [10];) 2. Alusta taulukko (int-taulukko [] = {0, 1, 2, 3}; // kääntäjä olettaa koon 4)",Mi a két különböző módszer a tömb hosszának megadására?,"A tömb deklarációban, vagy inicializáló lista használatával.","1. Adja meg a tömb hosszát (int tömb [10];) 2. Inicializálja a tömböt (int tömb [] = {0, 1, 2, 3}; // a fordító 4-es méretet feltételez)",Jaké jsou dva různé způsoby určení délky pole?,V deklaraci pole nebo pomocí seznamu inicializátorů.,"1. Deklarujte délku pole (int pole [10];) 2. Inicializujte pole (int pole [] = {0, 1, 2, 3}; // kompilátor předpokládá velikost 4)",Koja su dva različita načina određivanja dužine niza?,U deklaraciji niza ili pomoću liste inicijalizatora.,"1. Deklarirajte dužinu niza (int niz [10];) 2. Inicijalizirajte niz (int niz [] = {0, 1, 2, 3}; // kompajler će pretpostaviti veličinu 4)"
354,354,623,3.7,"Both are based on a control statement; both gradually approach termination ending with a termination test; both involve repetition, and can both repeat infinitely if their  termination requirements are not met.",They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,5.0,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,"Beide basieren auf einer Steueranweisung; beide nähern sich allmählich der Beendigung und enden mit einem Beendigungstest; Beide beinhalten Wiederholungen und können beide unendlich oft wiederholen, wenn ihre Beendigungsanforderungen nicht erfüllt sind.",Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,"Ang duha gibase sa usa ka pahayag sa pagpugong; parehas nga anam-anam nga moduol sa pagtapos nga natapos sa usa ka pagsulay sa pagtapos; parehas nga naglambigit sa pagsubli, ug mahimong parehas nga magbalikbalik kung ang ilang mga kinahanglanon sa pagtapos dili matuman.",Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,Båda är baserade på ett kontrolluttalande; båda närmar sig gradvis avslutning som slutar med ett avslutningstest; båda involverar upprepning och kan båda upprepas oändligt om deras uppsägningskrav inte uppfylls.,Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,Les deux sont basés sur une déclaration de contrôle; tous deux se rapprochent progressivement de la terminaison se terminant par un test de terminaison; les deux impliquent une répétition et peuvent tous deux se répéter indéfiniment si leurs conditions de terminaison ne sont pas satisfaites.,Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,Beide zijn gebaseerd op een controleverklaring; beiden naderen de beëindiging geleidelijk en eindigen met een beëindigingstest; beide brengen herhaling met zich mee en kunnen beide oneindig herhalen als niet aan hun beëindigingsvereisten wordt voldaan.,В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"Оба основаны на управляющем утверждении; оба постепенно приближаются к завершению, заканчивая тестом на завершение; оба предполагают повторение, и оба могут повторяться бесконечно, если их требования завершения не выполняются.",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,Entrambi sono basati su un&#39;istruzione di controllo; entrambi si avvicinano gradualmente alla risoluzione terminando con un test di conclusione; entrambi comportano la ripetizione e possono entrambi ripetersi all&#39;infinito se i loro requisiti di terminazione non sono soddisfatti.,¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,Ambos se basan en una declaración de control; ambos se acercan gradualmente a la terminación que termina con una prueba de terminación; ambos implican repetición y ambos pueden repetirse infinitamente si no se cumplen sus requisitos de terminación.,Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,"Obie opierają się na instrukcji kontrolnej; oba stopniowo zbliżają się do zakończenia kończącego się testem terminacji; oba wymagają powtórzeń i mogą powtarzać się w nieskończoność, jeśli ich wymagania dotyczące zakończenia nie są spełnione.",Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,Cả hai đều dựa trên một tuyên bố kiểm soát; cả hai dần dần tiếp cận việc chấm dứt kết thúc bằng một thử nghiệm chấm dứt; cả hai đều liên quan đến sự lặp lại và cả hai đều có thể lặp lại vô hạn nếu các yêu cầu chấm dứt của chúng không được đáp ứng.,反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,どちらも制御ステートメントに基づいています。どちらも徐々に終了に近づき、終了テストで終了します。どちらも繰り返しを伴い、終了要件が満たされない場合は両方とも無限に繰り返すことができます。,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,两者都基于控制声明；两者都逐渐接近终止，并以终止测试结束；两者都涉及重复，并且如果不满足其终止要求，则都可以无限重复。,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,كلاهما يستند إلى بيان السيطرة ؛ كلاهما يقترب تدريجيًا من الإنهاء الذي ينتهي باختبار إنهاء ؛ كلاهما ينطوي على التكرار ، ويمكن أن يتكرر كلاهما بلا حدود إذا لم يتم استيفاء متطلبات الإنهاء.,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"Обидва засновані на контрольній заяві; обидва поступово наближаються до закінчення, що закінчується тестом на припинення; обидва передбачають повторення, і обидва можуть повторюватись нескінченно, якщо їх вимоги щодо припинення не виконуються.",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,Ambos são baseados em uma instrução de controle; ambos se aproximam gradualmente do término com um teste de término; ambos envolvem repetição e podem se repetir infinitamente se seus requisitos de encerramento não forem atendidos.,شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,هر دو مبتنی بر یک عبارت کنترل هستند. هر دو به تدریج به خاتمه نزدیک می شوند و با یک آزمایش خاتمه پایان می یابند. هر دو شامل تکرار است ، و هر دو می توانند بی نهایت تکرار شوند اگر الزامات خاتمه آنها برآورده نشود.,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,Tots dos es basen en una declaració de control; tots dos s’acosten gradualment a la terminació que acaba amb una prova de terminació; tots dos impliquen repetició i poden repetir-se infinitament si no es compleixen els requisits de terminació.,Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,Оба се заснивају на контролној изјави; обојица се постепено приближавају прекиду који се завршава тестом прекида; оба укључују понављање и могу оба понављати бесконачно ако њихови захтеви за прекид нису испуњени.,Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,"Keduanya didasarkan pada pernyataan kontrol; keduanya secara bertahap mendekati penghentian yang diakhiri dengan tes penghentian; keduanya melibatkan pengulangan, dan keduanya dapat diulang tanpa batas jika persyaratan penghentiannya tidak terpenuhi.",Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,"Begge er basert på en kontrollerklæring; begge nærmer seg gradvis avslutning som ender med en avslutningstest; begge involverer repetisjon, og kan begge gjentas i det uendelige hvis kravene til oppsigelse ikke blir oppfylt.",반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,둘 다 제어문을 기반으로합니다. 둘 다 점차적으로 종료 테스트로 끝나는 종료에 접근합니다. 둘 다 반복을 포함하며 종료 요구 사항이 충족되지 않으면 둘 다 무한 반복 할 수 있습니다.,Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,"Molemmat perustuvat kontrollilausuntoon; molemmat lähestyvät asteittain lopettamista päättymiskokeeseen; molemmat sisältävät toistoa, ja molemmat voivat toistaa loputtomasti, jos niiden lopettamisvaatimukset eivät täyty.",Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"Mindkettő ellenőrzési nyilatkozaton alapul; mindkettő fokozatosan közeledik a felmondáshoz, és a felmondási teszttel zárul; mindkettő ismétléssel jár, és mindkettő végtelenül megismételheti, ha a felmondási követelményeik nem teljesülnek.",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,"Oba jsou založeny na kontrolním prohlášení; oba se postupně blíží ukončení končící testem ukončení; oba zahrnují opakování a mohou oba opakovat nekonečně, pokud nejsou splněny jejich požadavky na ukončení.",Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,Oba se temelje na kontrolnoj izjavi; oboje se postepeno približavaju završetku završetkom testom završetka; oba uključuju ponavljanje i mogu oba ponavljati beskonačno ako njihovi uvjeti prekida nisu ispunjeni.
355,355,1645,9.6,push = enqueue pop = dequeue,push,What is the stack operation corresponding to the enqueue operation in queues?,4.5,drücken,"Was ist die Stapeloperation, die der Warteschlangenoperation in Warteschlangen entspricht?",push = enqueue pop = dequeue,Unsa ang operasyon sa stack nga katumbas sa enqueue nga operasyon sa mga pila?,iduso,iduso = enqueue pop = dequeue,Vad motsvarar stackoperationen enqueue-operationen i köer?,tryck,tryck = enqueue pop = dequeue,Quelle est l&#39;opération de pile correspondant à l&#39;opération de mise en file d&#39;attente dans les files d&#39;attente?,poussez,push = mettre en file d&#39;attente pop = retirer la file d&#39;attente,Wat is de stapelbewerking die overeenkomt met de bewerking in wachtrij plaatsen?,Duwen,push = in wachtrij plaatsen pop = in wachtrij plaatsen,Какая операция стека соответствует операции постановки в очередь в очередях?,От себя,push = enqueue pop = dequeue,Qual è l&#39;operazione di stack corrispondente all&#39;operazione di accodamento nelle code?,spingere,push = accodamento pop = dequeue,¿Cuál es la operación de pila correspondiente a la operación de puesta en cola en colas?,empujar,push = poner en cola pop = sacar de la cola,Jaka jest operacja na stosie odpowiadająca operacji umieszczania w kolejce w kolejkach?,Pchać,push = enqueue pop = dequeue,Hoạt động ngăn xếp tương ứng với hoạt động xếp hàng trong hàng đợi là gì?,đẩy,push = enqueue pop = dequeue,キュー内のエンキュー操作に対応するスタック操作とは何ですか？,押す,push = enqueue pop = dequeue,与队列中的入队操作相对应的堆栈操作是什么？,推,推送=入队弹出=出队,ما هي عملية المكدس المقابلة لعملية قائمة الانتظار في قوائم الانتظار؟,إدفع,push = enqueue pop = dequeue,"Що таке операція стеку, що відповідає операції черги в чергах?",штовхати,push = enqueue pop = dequeue,Qual é a operação de pilha correspondente à operação de enfileiramento nas filas?,empurrar,push = enqueue pop = dequeue,عملیات پشته متناسب با عملیات enqueue در صف چیست؟,فشار دادن,فشار = enqueue pop = dequeue,Quina és l&#39;operació de pila corresponent a l&#39;operació de cola a les cues?,empènyer,push = enqueue pop = dequeue,Која је операција стека која одговара операцији чекања у редовима?,гурати,пусх = енкуеуе поп = декуеуе,Apa operasi stack yang sesuai dengan operasi enqueue dalam antrian?,Dorong,push = enqueue pop = dequeue,Hva tilsvarer stackoperasjonen enqueue-operasjonen i køer?,trykk,push = enqueue pop = dequeue,대기열에 넣는 작업에 해당하는 스택 작업은 무엇입니까?,푸시,푸시 = 대기열에 넣기 팝 = 대기열에서 빼기,Mikä pinooperaatio vastaa jonojen enqueue-operaatiota?,työntää,työnnä = kiinnitä pop = purkaa,"Mi a verem művelet, amely megfelel a sorok enqueue műveletének?",nyom,push = enqueue pop = dequeue,Co je operace zásobníku odpovídající operaci zařazení do fronty?,tlačit,push = enqueue pop = dequeue,Koja je operacija slaganja koja odgovara operaciji čekanja u redovima?,gurnuti,push = enqueue pop = dequeue
356,356,685,4.2,"an array of characters has one element a string doesnt have. it is the termination element, or ""null""",The strings declared using an array of characters have a null element added at the end of the array.,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,5.0,Bei den mit einem Zeichenarray deklarierten Zeichenfolgen wird am Ende des Arrays ein Nullelement hinzugefügt.,"Was ist der Hauptunterschied zwischen Zeichenfolgen, die mit dem Typ string deklariert wurden, und Zeichenfolgen, die mit einem Array von Zeichen deklariert wurden?","Ein Array von Zeichen hat ein Element, das eine Zeichenfolge nicht hat. es ist das Beendigungselement oder &quot;null&quot;",Unsa ang punoan nga kalainan tali sa mga lubid nga gideklara nga gigamit ang type string kumpara sa mga string nga gideklara gamit ang usa ka han-ay nga mga karakter?,Ang mga kuwerdas nga gideklara gamit ang usa ka han-ay sa mga karakter adunay usa ka null nga elemento nga gidugang sa katapusan sa laray.,"ang usa ka han-ay sa mga karakter adunay usa ka elemento nga wala sa usa ka pisi. kini ang elemento sa pagtapos, o &quot;null&quot;",Vad är den största skillnaden mellan strängar som deklareras med hjälp av typsträngen kontra strängar som deklareras med en rad tecken?,Strängarna som deklareras med en rad tecken har ett nollelement som läggs till i slutet av matrisen.,"en rad tecken har ett element som en sträng inte har. det är termineringselementet, eller &quot;null&quot;",Quelle est la principale différence entre les chaînes déclarées à l&#39;aide de la chaîne de type et les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères?,Les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères ont un élément nul ajouté à la fin du tableau.,"un tableau de caractères a un élément qu&#39;une chaîne n&#39;a pas. c&#39;est l&#39;élément de terminaison, ou &quot;nul&quot;",Wat is het belangrijkste verschil tussen strings die zijn gedeclareerd met behulp van het type string versus strings die zijn gedeclareerd met een reeks tekens?,"De strings die zijn gedeclareerd met behulp van een reeks tekens, hebben een null-element toegevoegd aan het einde van de reeks.","een reeks karakters heeft één element dat een string niet heeft. het is het terminatie-element, of &quot;null&quot;","В чем основное различие между строками, объявленными с использованием строки типа, и строками, объявленными с использованием массива символов?","Строки, объявленные с использованием массива символов, имеют нулевой элемент, добавленный в конец массива.","массив символов имеет один элемент, которого нет в строке. это завершающий элемент или &quot;ноль&quot;",Qual è la principale differenza tra le stringhe dichiarate utilizzando il tipo stringa e le stringhe dichiarate utilizzando un array di caratteri?,Le stringhe dichiarate utilizzando un array di caratteri hanno un elemento nullo aggiunto alla fine dell&#39;array.,"un array di caratteri ha un elemento che una stringa non ha. è l&#39;elemento di terminazione, o &quot;null&quot;",¿Cuál es la principal diferencia entre las cadenas declaradas con el tipo cadena y las cadenas declaradas con una matriz de caracteres?,Las cadenas declaradas usando una matriz de caracteres tienen un elemento nulo agregado al final de la matriz.,"una matriz de caracteres tiene un elemento que una cadena no tiene. es el elemento de terminación, o &quot;nulo&quot;",Jaka jest główna różnica między ciągami zadeklarowanymi przy użyciu typu string a ciągami zadeklarowanymi przy użyciu tablicy znaków?,Ciągi zadeklarowane przy użyciu tablicy znaków mają na końcu dodany element o wartości null.,"tablica znaków ma jeden element, którego nie ma w łańcuchu. jest to element końcowy lub „null”",Sự khác biệt chính giữa các chuỗi được khai báo bằng cách sử dụng chuỗi kiểu so với các chuỗi được khai báo bằng cách sử dụng một mảng ký tự là gì?,Các chuỗi được khai báo bằng cách sử dụng một mảng ký tự có một phần tử rỗng được thêm vào cuối mảng.,"một mảng các ký tự có một phần tử mà một chuỗi không có. nó là phần tử kết thúc, hoặc &quot;null&quot;",文字列型を使用して宣言された文字列と文字の配列を使用して宣言された文字列の主な違いは何ですか？,文字の配列を使用して宣言された文字列には、配列の最後にnull要素が追加されています。,文字の配列には、文字列にはない要素が1つあります。それは終了要素、または「null」です,使用字符串类型声明的字符串与使用字符数组声明的字符串之间的主要区别是什么？,使用字符数组声明的字符串在数组末尾添加了一个null元素。,字符数组具有字符串没有的一个元素。它是终止元素，或为“ null”,ما هو الفرق الرئيسي بين الجمل المعلنة باستخدام سلسلة النوع مقابل الجمل المعلنة باستخدام مصفوفة من الأحرف؟,السلاسل المعلنة باستخدام مصفوفة من الأحرف لها عنصر فارغ يضاف في نهاية المصفوفة.,تحتوي مجموعة من الأحرف على عنصر واحد لا تحتويه سلسلة أحرف. إنه عنصر الإنهاء ، أو &quot;فارغ&quot;,"Яка основна різниця між рядками, оголошеними за допомогою типу string, від рядків, оголошених за допомогою масиву символів?","Рядки, оголошені за допомогою масиву символів, мають нульовий елемент, доданий в кінці масиву.","масив символів має один елемент, якого рядок не має. це елемент закінчення, або &quot;нуль&quot;",Qual é a principal diferença entre strings declaradas usando o tipo string e strings declaradas usando uma matriz de caracteres?,As strings declaradas usando uma matriz de caracteres têm um elemento nulo adicionado ao final da matriz.,"uma matriz de caracteres possui um elemento que uma string não possui. é o elemento de terminação, ou &quot;nulo&quot;",تفاوت اصلی رشته های اعلام شده با استفاده از نوع رشته در مقابل رشته های اعلام شده با استفاده از آرایه ای از کاراکترها چیست؟,رشته هایی که با استفاده از یک آرایه از کاراکترها اعلان می شوند ، یک عنصر تهی در انتهای آرایه اضافه می کنند.,یک آرایه از کاراکترها دارای یک عنصر هستند که یک رشته ندارد. این عنصر پایان است ، یا &quot;پوچ&quot;,Quina és la diferència principal entre les cadenes declarades mitjançant el tipus de cadena i les cadenes declarades mitjançant una matriu de caràcters?,Les cadenes declarades mitjançant una matriu de caràcters tenen un element nul afegit al final de la matriu.,una matriu de caràcters té un element que no té una cadena. és l&#39;element de terminació o &quot;nul&quot;,Која је главна разлика између низова декларисаних помоћу типа стринг у односу на низове декларисаних помоћу низа знакова?,Низови декларисани помоћу низа знакова имају нулти елемент додан на крају низа.,"низ знакова има један елемент који низ нема. то је завршни елемент, или &quot;нулл&quot;",Apa perbedaan utama antara string yang dideklarasikan menggunakan tipe string versus string yang dideklarasikan menggunakan array karakter?,String yang dideklarasikan menggunakan array karakter memiliki elemen null yang ditambahkan di akhir array.,"array karakter memiliki satu elemen yang tidak dimiliki string. itu adalah elemen penghentian, atau &quot;null&quot;",Hva er hovedforskjellen mellom strenger deklarert ved hjelp av typestrengen versus strenger deklarert ved hjelp av en rekke tegn?,Strengene deklarert ved hjelp av en rekke tegn har et nullelement lagt til på slutten av matrisen.,"en rekke tegn har ett element en streng ikke har. det er avslutningselementet, eller &quot;null&quot;",문자열 유형을 사용하여 선언 된 문자열과 문자 배열을 사용하여 선언 된 문자열의 주요 차이점은 무엇입니까?,문자 배열을 사용하여 선언 된 문자열에는 배열 끝에 null 요소가 추가됩니다.,문자 배열에는 문자열에없는 요소가 하나 있습니다. 종료 요소 또는 &quot;null&quot;입니다.,Mikä on tärkein ero merkkijonolla ilmoitettujen merkkijonojen ja merkkijonoa käyttäen ilmoitettujen merkkijonojen välillä?,Merkkijonoa käyttäen ilmoitetuissa merkkijonoissa taulukon loppuun lisätään nollaelementti.,"merkistöryhmässä on yksi elementti, jota merkkijonossa ei ole. se on lopetuselementti tai &quot;null&quot;",Mi a fő különbség a karakterlánc használatával deklarált karakterláncok és a tömb karakterrel deklarált karakterláncok között?,A karaktertömb felhasználásával deklarált karakterláncok null elemet adnak a tömb végén.,"egy karaktertömb egy elemet tartalmaz, amelyet a karakterlánc nem tartalmaz. ez a lezáró elem, vagy &quot;null&quot;",Jaký je hlavní rozdíl mezi řetězci deklarovanými pomocí řetězce typu oproti řetězcům deklarovaným pomocí pole znaků?,Řetězce deklarované pomocí pole znaků mají na konci pole přidán nulový prvek.,"pole znaků má jeden prvek, který řetězec nemá. je to ukončovací prvek nebo „null“",Koja je glavna razlika između nizova deklarisanih pomoću tipa string naspram nizova deklarisanih pomoću niza znakova?,Nizovi deklarirani pomoću niza znakova imaju nulti element dodan na kraju niza.,"niz znakova ima jedan element koji niz nema. to je završni element, ili &quot;null&quot;"
357,357,745,4.4,Only constants can be used to declare the size of automatic and static arrays Exists for the duration of the program Is initialized when its declaration is first encountered All elements are initialized to zero if not explicitly initialized,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","What is the difference between an array declared as static, and one that is not?",5.0,"Die als statisch deklarierten Arrays leben während der gesamten Laufzeit des Programms. Das heißt, sie werden nur einmal initialisiert, wenn die Funktion, die das Array deklariert, zum ersten Mal aufgerufen wird.",Was ist der Unterschied zwischen einem als statisch deklarierten und einem nicht statischen Array?,"Es können nur Konstanten verwendet werden, um die Größe von automatischen und statischen Arrays zu deklarieren. Besteht für die Dauer des Programms. Wird initialisiert, wenn die Deklaration zum ersten Mal auftritt. Alle Elemente werden auf Null initialisiert, wenn sie nicht explizit initialisiert werden","Unsa ang kalainan tali sa usa ka laray nga gideklara nga static, ug usa nga dili?","Ang mga array gideklara nga static live sa tibuuk nga kinabuhi sa programa; kana mao, gisugdan ra sila kausa, kung ang pagpaandar nga nagpahayag sa pag-ayo una kini gitawag.",Ang mga Constant ra ang mahimong magamit aron madeklarar ang kadako sa awtomatiko ug static nga mga arrays Adunay alang sa gidugayon sa programa Gipalihok sa una nga nahibal-an ang deklarasyon nga kini Ang tanan nga mga elemento gisugdan sa zero kung dili tin-aw nga gisugdan.,Vad är skillnaden mellan en matris som deklareras som statisk och en som inte är det?,"Arraysna som deklareras som statiska lever hela programmets livstid; det vill säga de initialiseras bara en gång, när den funktion som deklarerar matrisen kallas den först.",Endast konstanter kan användas för att deklarera storleken på automatiska och statiska matriser. Finns under programmets varaktighet Initialiseras när dess deklaration först påträffas. Alla element initialiseras till noll om de inte initialt uttryckligen,Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,"Les tableaux déclarés statiques vivent tout au long de la vie du programme; c&#39;est-à-dire qu&#39;ils ne sont initialisés qu&#39;une seule fois, lorsque la fonction qui déclare le tableau est appelée pour la première fois.",Seules les constantes peuvent être utilisées pour déclarer la taille des tableaux automatiques et statiques Existe pendant la durée du programme Est initialisée à la première rencontre de sa déclaration Tous les éléments sont initialisés à zéro s&#39;ils ne sont pas explicitement initialisés,Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,"De arrays die als statisch zijn gedeclareerd, leven gedurende de levensduur van het programma; dat wil zeggen, ze worden slechts één keer geïnitialiseerd, wanneer de functie die de array declareert voor het eerst wordt aangeroepen.",Alleen constanten kunnen worden gebruikt om de grootte van automatische en statische arrays aan te geven Bestaat voor de duur van het programma Wordt geïnitialiseerd wanneer de declaratie voor het eerst wordt aangetroffen Alle elementen worden op nul geïnitialiseerd als ze niet expliciet worden geïnitialiseerd,"В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?","Массивы, объявленные как статические, живут в течение всего времени работы программы; то есть они инициализируются только один раз при первом вызове функции, объявляющей массив.","Для объявления размера автоматических и статических массивов можно использовать только константы. Существует на протяжении всей программы. Инициализируется при первом обнаружении объявления. Все элементы инициализируются нулевым значением, если не инициализированы явно.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,"Gli array dichiarati come statici sono attivi per tutta la durata del programma; cioè, vengono inizializzati solo una volta, quando la funzione che dichiara l&#39;array viene chiamata per la prima volta.",Solo le costanti possono essere utilizzate per dichiarare la dimensione degli array automatici e statici Esiste per la durata del programma Viene inizializzato quando si incontra per la prima volta la sua dichiarazione Tutti gli elementi vengono inizializzati a zero se non esplicitamente inizializzati,¿Cuál es la diferencia entre una matriz declarada como estática y una que no lo es?,"Las matrices declaradas como estáticas viven durante toda la vida del programa; es decir, se inicializan solo una vez, cuando se llama por primera vez a la función que declara la matriz.",Solo se pueden usar constantes para declarar el tamaño de matrices automáticas y estáticas Existe durante la duración del programa Se inicializa cuando se encuentra su declaración por primera vez Todos los elementos se inicializan a cero si no se inicializan explícitamente,"Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice zadeklarowane jako statyczne na żywo przez cały czas trwania programu; to znaczy, są inicjowane tylko raz, kiedy funkcja deklarująca tablicę jest wywoływana jako pierwsza.","Do zadeklarowania rozmiaru tablic automatycznych i statycznych można używać tylko stałych Istnieje na czas trwania programu Jest inicjowany przy pierwszym napotkaniu jego deklaracji Wszystkie elementy są inicjowane na zero, jeśli nie są jawnie inicjowane",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng được khai báo là sống tĩnh trong suốt vòng đời của chương trình; nghĩa là chúng chỉ được khởi tạo một lần khi hàm khai báo mảng mà nó được gọi lần đầu tiên.,Chỉ các hằng số có thể được sử dụng để khai báo kích thước của mảng tự động và tĩnh Tồn tại trong suốt thời gian của chương trình Được khởi tạo khi lần đầu tiên gặp khai báo Tất cả các phần tử được khởi tạo bằng 0 nếu không được khởi tạo rõ ràng,静的として宣言された配列とそうでない配列の違いは何ですか？,静的として宣言された配列は、プログラムの存続期間を通じて有効です。つまり、配列を宣言する関数が最初に呼び出されたときに、一度だけ初期化されます。,自動配列と静的配列のサイズを宣言するために使用できるのは定数のみですプログラムの期間中存在します宣言が最初に検出されたときに初期化されます明示的に初期化されていない場合、すべての要素はゼロに初期化されます,声明为静态的数组与未声明为静态的数组有什么区别？,声明为静态的数组在程序的整个生命周期内都有效；也就是说，当第一次调用声明数组的函数时，它们仅初始化一次。,仅常量可用于声明自动和静态数组的大小在程序持续时间内存在。在首次遇到其声明时进行初始化。如果未显式初始化，则将所有元素初始化为零。,ما الفرق بين المصفوفة المعلنة على أنها ثابتة والمصفوفة التي لا يتم الإعلان عنها؟,تعيش المصفوفات المعلنة على أنها ثابتة طوال عمر البرنامج ؛ أي ، يتم تهيئتها مرة واحدة فقط ، عندما يتم استدعاء الوظيفة التي تعلن عن المصفوفة لأول مرة.,يمكن استخدام الثوابت فقط للإعلان عن وجود حجم المصفوفات التلقائية والثابتة طوال مدة البرنامج. تتم تهيئة عند مواجهة إعلانه لأول مرة. تتم تهيئة جميع العناصر إلى الصفر إذا لم يتم تهيئتها بشكل صريح,"У чому різниця між масивом, оголошеним як статичний, і масивом, який не є?","Масиви, оголошені як статичні живі протягом усього терміну служби програми; тобто вони ініціалізуються лише один раз, коли функція, яка оголошує масив, вона викликається вперше.","Тільки константи можуть використовуватися для оголошення розміру автоматичних та статичних масивів Існує протягом усього терміну дії програми Ініціалізується, коли її оголошення зустрічається вперше Всі елементи ініціалізуються до нуля, якщо не явно ініціалізовані",Qual é a diferença entre uma matriz declarada como estática e outra que não é?,"Os arrays declarados como estáticos vivem durante toda a vida do programa; ou seja, eles são inicializados apenas uma vez, quando a função que declara o array é chamada pela primeira vez.",Só podem ser usadas constantes para declarar o tamanho dos arrays automáticos e estáticos Existe durante a duração do programa É inicializado quando a sua declaração é encontrada pela primeira vez Todos os elementos são inicializados com zero se não forem explicitamente inicializados,چه تفاوتی بین آرایه ای که بصورت استاتیک اعلام می شود و دیگری نیست؟,آرایه هایی که به عنوان ایستا در طول زندگی برنامه اعلام می شوند. یعنی فقط یک بار مقداردهی اولیه می شود ، وقتی تابعی که آرایه را برای اولین بار فراخوانی می کند.,برای ثابت کردن اندازه آرایه های استاتیک و ثابت می توان فقط از ثابت ها استفاده کرد. برای مدت زمان برنامه ، هنگامی که اظهارات آن برای اولین بار روبرو می شود ، مقداردهی اولیه می شود.,Quina diferència hi ha entre una matriu declarada com estàtica i una que no ho és?,"Les matrius declarades estàtiques en directe durant tota la vida del programa; és a dir, només s’inicialitzen una vegada, quan s’anomena per primera vegada la funció que declara la matriu.",Només es poden utilitzar constants per declarar la mida de les matrius estàtiques i automàtiques. Existeix durant la durada del programa. S&#39;inicialitza quan es troba la declaració. Tots els elements s&#39;inicialitzen a zero si no s&#39;inicialitzen explícitament.,Која је разлика између низа који је проглашен статичким и оног који није?,"Низови декларисани као статични уживо током целог животног века програма; то јест, иницијализују се само једном, када се функција која декларише низ прво позове.",Само константе се могу користити за декларацију величине аутоматских и статичких низова Постоји за време трајања програма Иницијализује се када се његова декларација први пут сретне Сви елементи су иницијализовани на нулу ако нису експлицитно иницијализовани,"Apa perbedaan antara array yang dideklarasikan sebagai statis, dan yang tidak?","Array dideklarasikan sebagai live statis selama program berjalan; artinya, mereka diinisialisasi hanya sekali, ketika fungsi yang mendeklarasikan array yang dipanggil pertama kali.",Hanya konstanta yang dapat digunakan untuk mendeklarasikan ukuran array otomatis dan statis Ada selama durasi program Diinisialisasi saat deklarasinya pertama kali ditemukan Semua elemen diinisialisasi ke nol jika tidak diinisialisasi secara eksplisit,"Hva er forskjellen mellom en matrise erklært som statisk, og en som ikke er det?","Arrangementene erklært som statisk lever gjennom hele programmets levetid; det vil si at de initialiseres bare en gang, når funksjonen som erklærer matrisen den først ble kalt.",Bare konstanter kan brukes til å erklære størrelsen på automatiske og statiske matriser. Eksisterer for programmets varighet. Initialiseres når erklæringen først oppstår. Alle elementer initialiseres til null hvis ikke eksplisitt initialisert,정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,"정적으로 선언 된 배열은 프로그램의 수명 내내 살아 있습니다. 즉, 배열을 선언하는 함수가 처음 호출 될 때 한 번만 초기화됩니다.",자동 및 정적 배열의 크기를 선언하는 데 상수 만 사용할 수 있습니다. 프로그램 기간 동안 존재 함 선언이 처음 발견 될 때 초기화 됨 명시 적으로 초기화되지 않은 경우 모든 요소가 0으로 초기화 됨,"Mitä eroa on staattiseksi ilmoitetun taulukon ja sellaisen välillä, joka ei ole staattinen?","Staattisiksi ilmoitetut taulukot elävät ohjelman koko elinkaaren ajan; eli ne alustetaan vain kerran, kun ensin kutsutaan funktio, joka ilmoittaa matriisin.","Automaattisten ja staattisten taulukoiden koon ilmoittamiseen voidaan käyttää vain vakioita. Olemassa koko ohjelman ajan. Se alustetaan, kun sen ilmoitus havaitaan ensimmäisen kerran. Kaikki elementit alustetaan nollaan, ellei niitä nimenomaisesti alusteta.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikusnak nyilvánított tömbök a program teljes élettartama alatt élnek; vagyis csak egyszer inicializálódnak, amikor először meghívják azt a függvényt, amely deklarálja a tömböt.","Csak konstansok használhatók az automatikus és a statikus tömbök méretének deklarálására. A program időtartama alatt inicializálódik, amikor a deklaráció először találkozik. Minden elem nullára inicializálódik, ha nincs kifejezetten inicializálva","Jaký je rozdíl mezi polem deklarovaným jako statické a tím, které není?","Pole deklarovaná jako statická živá po celou dobu životnosti programu; to znamená, že jsou inicializovány pouze jednou, když je funkce, která deklaruje pole, které je nejprve voláno.","K deklaraci velikosti automatických a statických polí lze použít pouze konstanty Existuje po dobu trvání programu Inicializuje se při prvním zjištění jeho deklarace Všechny prvky jsou inicializovány na nulu, pokud nejsou explicitně inicializovány",Koja je razlika između niza koji je deklariran kao statičan i onog koji nije?,"Nizovi deklarirani kao statični uživo tijekom cijelog životnog vijeka programa; to jest, inicijaliziraju se samo jednom, kada se funkcija koja deklarira niz prvi put pozove.",Samo se konstante mogu koristiti za deklariranje veličine automatskih i statičkih nizova Postoji za vrijeme trajanja programa Inicijalizira se kada se njegova deklaracija prvi put sretne Svi elementi su inicijalizirani na nulu ako nisu eksplicitno inicijalizirani
358,358,2058,11.7,"one declared as static is one that is already defined. The program knows the length and the array from the start, whereas non-static arrays are declared or assigned later.",The static arrays are intialized only once when the function is called.,What is the difference between an array that is declared as static and one that is not?,3.0,Die statischen Arrays werden beim Aufruf der Funktion nur einmal initialisiert.,"Was ist der Unterschied zwischen einem Array, das als statisch deklariert ist, und einem Array, das nicht als statisch deklariert ist?","Eine als statisch deklarierte ist bereits definiert. Das Programm kennt die Länge und das Array von Anfang an, während nicht statische Arrays später deklariert oder zugewiesen werden.",Unsa ang kalainan tali sa usa ka laray nga gideklara nga static ug usa nga dili?,Ang mga static arrays intialized kausa ra kung gitawag ang function.,"ang usa nga gideklara ingon static mao na ang gipiho na. Nahibal-an sa programa ang gitas-on ug ang han-ay gikan sa pagsugod, samtang ang mga dili static nga array gideklara o naatudlo sa ulahi.",Vad är skillnaden mellan en array som deklareras som statisk och en som inte är det?,De statiska matriserna intialiseras bara en gång när funktionen anropas.,"en som förklaras som statisk är en som redan är definierad. Programmet känner till längden och matrisen från början, medan icke-statiska matriser deklareras eller tilldelas senare.",Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,Les tableaux statiques ne sont initialisés qu&#39;une seule fois lorsque la fonction est appelée.,"celui déclaré comme statique est celui qui est déjà défini. Le programme connaît la longueur et le tableau depuis le début, tandis que les tableaux non statiques sont déclarés ou affectés plus tard.",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,De statische arrays worden slechts één keer geïnitialiseerd wanneer de functie wordt aangeroepen.,"een die als statisch is gedeclareerd, is er een die al is gedefinieerd. Het programma kent de lengte en de array vanaf het begin, terwijl niet-statische arrays later worden gedeclareerd of toegewezen.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?",Статические массивы инициализируются только один раз при вызове функции.,"один, объявленный как статический, является уже определенным. Программа знает длину и массив с самого начала, тогда как нестатические массивы объявляются или назначаются позже.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,Gli array statici vengono inizializzati solo una volta quando viene chiamata la funzione.,"uno dichiarato come statico è uno già definito. Il programma conosce la lunghezza e l&#39;array dall&#39;inizio, mentre gli array non statici vengono dichiarati o assegnati successivamente.",¿Cuál es la diferencia entre una matriz que se declara como estática y una que no lo es?,Las matrices estáticas se inicializan solo una vez cuando se llama a la función.,"uno declarado como estático es uno que ya está definido. El programa conoce la longitud y la matriz desde el principio, mientras que las matrices no estáticas se declaran o asignan más tarde.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice statyczne są inicjowane tylko raz, gdy wywoływana jest funkcja.","jeden zadeklarowany jako statyczny to taki, który jest już zdefiniowany. Program zna długość i tablicę od początku, natomiast tablice niestatyczne są deklarowane lub przypisywane później.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng tĩnh chỉ được intialize một lần khi hàm được gọi.,"một được khai báo là tĩnh là một trong những đã được xác định. Chương trình biết độ dài và mảng ngay từ đầu, trong khi các mảng không tĩnh được khai báo hoặc gán sau đó.",静的として宣言されている配列とそうでない配列の違いは何ですか？,静的配列は、関数が呼び出されたときに1回だけ初期化されます。,静的として宣言されたものは、すでに定義されているものです。プログラムは最初から長さと配列を知っていますが、非静的配列は後で宣言または割り当てられます。,声明为静态的数组与未声明为静态的数组有什么区别？,调用函数时，静态数组仅初始化一次。,声明为静态的是已定义的一种。程序从一开始就知道长度和数组，而非静态数组则在以后声明或分配。,ما الفرق بين المصفوفة التي تم التصريح بأنها ثابتة والمصفوفة التي لا يتم التصريح عنها؟,يتم تهيئة المصفوفات الثابتة مرة واحدة فقط عند استدعاء الوظيفة.,واحد تم إعلانه على أنه ثابت هو الذي تم تعريفه بالفعل. يعرف البرنامج الطول والمصفوفة من البداية ، بينما يتم التصريح عن المصفوفات غير الثابتة أو تعيينها لاحقًا.,"У чому різниця між масивом, який оголошено статичним, і масивом, який не є?",Статичні масиви ініціалізуються лише один раз при виклику функції.,"оголошений як статичний - це вже визначений. Програма знає довжину та масив з самого початку, тоді як нестатичні масиви оголошуються або призначаються пізніше.",Qual é a diferença entre uma matriz que é declarada como estática e outra que não é?,"Os arrays estáticos são inicializados apenas uma vez, quando a função é chamada.","um declarado como estático é aquele que já está definido. O programa conhece o comprimento e o array desde o início, enquanto os arrays não estáticos são declarados ou atribuídos posteriormente.",چه تفاوتی بین آرایه ای که به صورت استاتیک اعلام می شود و دیگری که نیست ، چیست؟,وقتی فراخوانی تابع می شود ، آرایه های ساکن فقط یک بار intialize می شوند.,یک اعلام شده به عنوان استاتیک یکی است که قبلاً تعریف شده است. این برنامه از ابتدا طول و آرایه را می داند ، در حالی که آرایه های غیر استاتیک بعداً اعلام یا تعیین می شوند.,Quina diferència hi ha entre una matriu que es declara estàtica i una que no ho és?,Les matrius estàtiques només s’inicialitzen una vegada quan es crida la funció.,"un declarat com estàtic és un que ja està definit. El programa coneix la longitud i la matriu des del principi, mentre que les matrius no estàtiques es declaren o s’assignen més endavant.",Која је разлика између низа који је декларисан као статичан и низа који није?,Статички низови инцијализују се само једном када се функција позове.,"онај који је проглашен статичким је онај који је већ дефинисан. Дужина и низ програма знају од самог почетка, док се нестатички низови декларишу или додељују касније.",Apa perbedaan antara array yang dideklarasikan sebagai statis dan yang tidak?,Array statis diinisialisasi hanya sekali ketika fungsi dipanggil.,"satu yang dinyatakan sebagai statis adalah yang sudah ditentukan. Program mengetahui panjang dan array dari awal, sedangkan array non-statis dideklarasikan atau ditetapkan kemudian.",Hva er forskjellen mellom en matrise som er erklært som statisk og en som ikke er det?,De statiske matriser intialiseres bare en gang når funksjonen kalles.,"en erklært som statisk er en som allerede er definert. Programmet kjenner lengden og matrisen fra starten, mens ikke-statiske matriser blir deklarert eller tildelt senere.",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,함수가 호출 될 때 정적 배열은 한 번만 초기화됩니다.,"static으로 선언 된 것은 이미 정의 된 것입니다. 프로그램은 처음부터 길이와 배열을 알고있는 반면, 비 정적 배열은 나중에 선언되거나 할당됩니다.",Mitä eroa on staattiseksi ilmoitetun taulukon ja ei-taulukon välillä?,"Staattiset taulukot intialisoidaan vain kerran, kun funktio kutsutaan.","yksi staattiseksi ilmoitettu on jo määritelty. Ohjelma tietää pituuden ja matriisin alusta alkaen, kun taas ei-staattiset taulukot ilmoitetaan tai määritetään myöhemmin.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikus tömböket csak egyszer intializálják, amikor a függvény meghívásra kerül.","egy statikusnak nyilvánított egy már definiált. A program kezdettől fogva tudja a hosszt és a tömböt, míg a nem statikus tömböket később deklarálják vagy hozzárendelik.","Jaký je rozdíl mezi polem, které je deklarováno jako statické a tím, které není?","Statická pole jsou inicializována pouze jednou, když je funkce volána.","jeden deklarovaný jako statický je ten, který je již definován. Program zná délku a pole od začátku, zatímco statická pole jsou deklarována nebo přiřazena později.",Koja je razlika između niza koji je deklariran kao statičan i niza koji nije?,Statički nizovi incijaliziraju se samo jednom kada se funkcija pozove.,"onaj koji je proglašen statičkim je onaj koji je već definiran. Program zna duljinu i niz od samog početka, dok se nestatički nizovi deklariraju ili dodijeljuju kasnije."
359,359,1769,10.4,"A set of zero or more nodes, partitioned into a root node and two possibly empty sets that are binary trees. Thus, each node in a binary tree has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.,What is a binary tree?,5.0,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Eine Menge von null oder mehr Knoten, aufgeteilt in einen Wurzelknoten und zwei möglicherweise leere Mengen, die Binärbäume sind. Somit hat jeder Knoten in einem Binärbaum höchstens zwei Kinder, das linke Kind und das rechte Kind.",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,"Usa ka hugpong nga zero o labaw pa nga mga node, nga gibahin sa usa ka root node ug duha nga posible nga wala’y sulod nga mga set nga mga binary nga kahoy. Sa ingon, ang matag node sa usa ka binary nga kahoy adunay labing duha ka mga anak, ang wala nga bata ug ang tama nga bata.",Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,"En uppsättning med noll eller fler noder, uppdelad i en rotnod och två möjligen tomma uppsättningar som är binära träd. Således har varje nod i ett binärt träd högst två barn, det vänstra barnet och det högra barnet.",Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,"Un ensemble de zéro ou plusieurs nœuds, partitionné en un nœud racine et deux ensembles éventuellement vides qui sont des arbres binaires. Ainsi, chaque nœud d&#39;un arbre binaire a au plus deux enfants, l&#39;enfant gauche et l&#39;enfant droit.",Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,"Een set van nul of meer knooppunten, onderverdeeld in een rootknooppunt en twee mogelijk lege sets die binaire bomen zijn. Elke knoop in een binaire boom heeft dus maximaal twee kinderen, het linkerkind en het rechterkind.",Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","Набор из нуля или более узлов, разделенных на корневой узел и два, возможно, пустых набора, которые являются двоичными деревьями. Таким образом, каждый узел в двоичном дереве имеет не более двух дочерних элементов: левый и правый.",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,"Un insieme di zero o più nodi, partizionato in un nodo radice e due possibilmente vuoti che sono alberi binari. Pertanto, ogni nodo in un albero binario ha al massimo due figli, il figlio sinistro e il figlio destro.",¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,"Un conjunto de cero o más nodos, particionado en un nodo raíz y dos conjuntos posiblemente vacíos que son árboles binarios. Por tanto, cada nodo de un árbol binario tiene como máximo dos hijos, el hijo izquierdo y el hijo derecho.",Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","Zbiór zero lub więcej węzłów podzielonych na węzeł główny i dwa prawdopodobnie puste zestawy, które są drzewami binarnymi. Zatem każdy węzeł w drzewie binarnym ma co najwyżej dwoje dzieci, lewe dziecko i prawe dziecko.",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,"Một tập hợp không hoặc nhiều nút, được phân chia thành một nút gốc và hai tập hợp rỗng có thể là cây nhị phân. Như vậy, mỗi nút trong cây nhị phân có nhiều nhất là hai nút con, nút con bên trái và nút con bên phải.",二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,ルートノードと、バイナリツリーである可能性のある2つの空のセットに分割された0個以上のノードのセット。したがって、二分木の各ノードには、最大で2つの子、左の子と右の子があります。,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,一组零个或多个节点，分为一个根节点和两个可能为空的二进制树集。因此，二叉树中的每个节点最多具有两个子节点，即左子节点和右子节点。,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,مجموعة من العقد الصفرية أو أكثر ، مقسمة إلى عقدة جذر ومجموعتين فارغتين ربما تكونان أشجار ثنائية. وهكذا ، فإن كل عقدة في الشجرة الثنائية لديها طفلان على الأكثر ، الطفل الأيسر والطفل الأيمن.,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","Набір з нуля або більше вузлів, розділений на кореневий вузол і два, можливо, порожні набори, які є двійковими деревами. Таким чином, кожен вузол у бінарному дереві має щонайбільше двох дітей - ліву дитину та праву дитину.",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,"Um conjunto de zero ou mais nós, particionado em um nó raiz e dois conjuntos possivelmente vazios que são árvores binárias. Assim, cada nó em uma árvore binária tem no máximo dois filhos, o filho esquerdo e o filho direito.",درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,مجموعه ای از گره های صفر یا بیشتر ، به یک گره ریشه و دو مجموعه احتمالاً خالی که درختان دودویی هستند تقسیم شده است. بنابراین ، هر گره در یک درخت باینری حداکثر دارای دو فرزند است ، کودک چپ و کودک راست.,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,"Un conjunt de zero o més nodes, particionats en un node arrel i dos conjunts possiblement buits que són arbres binaris. Per tant, cada node d’un arbre binari té, com a màxim, dos fills, el fill esquerre i el dret.",Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,"Скуп нула или више чворова, подељених у коријенски чвор и два можда празна скупа која су бинарна стабла. Дакле, сваки чвор у бинарном стаблу има највише двоје деце, лево дете и десно дете.",Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,"Satu set nol atau lebih node, dipartisi menjadi node root dan dua set yang mungkin kosong yang merupakan pohon biner. Jadi, setiap simpul dalam pohon biner memiliki paling banyak dua anak, anak kiri dan anak kanan.",Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,"Et sett med null eller flere noder, delt inn i en rotnode og to muligens tomme sett som er binære trær. Dermed har hver node i et binært tre høyst to barn, det venstre barnet og det høyre barnet.",이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,루트 노드로 분할 된 0 개 이상의 노드 집합과 이진 트리 인 두 개의 빈 집합입니다. 따라서 이진 트리의 각 노드에는 최대 두 개의 자식 (왼쪽 자식과 오른쪽 자식)이 있습니다.,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","Joukko nollia tai useampia solmuja, osioitu juurisolmuun ja kaksi mahdollisesti tyhjää sarjaa, jotka ovat binaarisia puita. Siten jokaisessa binäärisen puun solmussa on korkeintaan kaksi lasta, vasen lapsi ja oikea lapsi.",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","Nulla vagy több csomópont halmaza, particionálva egy gyökércsomópontba, és két esetleg üres készlet, amelyek bináris fák. Így egy bináris fa minden csomópontjában legfeljebb két gyermek van, a bal és a jobb gyermek.",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","Sada nulových nebo více uzlů rozdělená na kořenový uzel a dvě případně prázdné sady, které jsou binárními stromy. Každý uzel v binárním stromu má tedy nejvýše dvě děti, levé dítě a pravé dítě.",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,"Skup nula ili više čvorova, podijeljen u korijenski čvor i dva moguće prazna skupa koja su binarna stabla. Dakle, svaki čvor u binarnom stablu ima najviše dvoje djece, lijevo i desno dijete."
360,360,540,3.5,"Overloaded functions are distinguished by their signatures, Name mangling or name decoration, and type-safe linkage ensures that proper overloaded functions is called and types of the arguments conform to tpes to the parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,5.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,"Überladene Funktionen unterscheiden sich durch ihre Signaturen, die Namensverknüpfung oder die Namensdekoration. Die typsichere Verknüpfung stellt sicher, dass ordnungsgemäß überladene Funktionen aufgerufen werden und die Argumenttypen den Parametern entsprechen.",Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.","Ang sobra nga mga pag-andar mailhan pinaagi sa ilang mga pirma, Ngalan mangling o pangadorno sa ngalan, ug ang pag-link nga dili maayo sa tipo ang nagsiguro nga ang husto nga overloaded nga mga gimbuhaton gitawag ug mga lahi sa mga lantugi nga nahiuyon sa tpes sa mga sukdanan.",Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,"Överbelastade funktioner kännetecknas av deras signaturer, namnmangling eller namndekoration, och typsäker koppling säkerställer att korrekt överbelastade funktioner anropas och typer av argument överensstämmer med tpes till parametrarna.",Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.","Les fonctions surchargées se distinguent par leurs signatures, la modification des noms ou la décoration des noms, et la liaison de type sécurisé garantit que les fonctions surchargées appropriées sont appelées et que les types d&#39;arguments sont conformes aux paramètres.",Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.","Overbelaste functies onderscheiden zich door hun handtekeningen, naamvervorming of naamversiering, en typeveilige koppeling zorgt ervoor dat de juiste overbelaste functies worden aangeroepen en de typen argumenten voldoen aan de parameters.",Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.","Перегруженные функции различаются по сигнатурам, изменению имени или украшению имени, а типобезопасное связывание гарантирует, что вызываются правильные перегруженные функции, а типы аргументов соответствуют типам параметров.",Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.","Le funzioni sovraccaricate si distinguono per le loro firme, la modifica del nome o la decorazione del nome e il collegamento indipendente dai tipi garantisce che le funzioni sovraccaricate appropriate vengano chiamate e i tipi degli argomenti siano conformi a tpes ai parametri.",¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.","Las funciones sobrecargadas se distinguen por sus firmas, alteración de nombres o decoración de nombres, y la vinculación segura de tipos garantiza que se invoquen las funciones sobrecargadas adecuadas y que los tipos de argumentos se ajusten a los parámetros.",W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.","Przeciążone funkcje są rozróżniane przez ich podpisy, zniekształcanie nazw lub dekorację nazw, a bezpieczne połączenie zapewnia wywołanie odpowiednich przeciążonych funkcji i typy argumentów zgodne z tpes z parametrami.",Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.","Các hàm bị quá tải được phân biệt bằng chữ ký của chúng, Tên mangling hoặc trang trí tên và liên kết an toàn kiểu đảm bảo rằng các hàm được nạp chồng thích hợp được gọi và các loại đối số tuân theo các kiểu tham số.",オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,オーバーロードされた関数は、そのシグネチャ、名前マングリングまたは名前装飾によって区別され、タイプセーフリンケージにより、適切なオーバーロードされた関数が呼び出され、引数のタイプがパラメータに準拠することが保証されます。,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,重载函数的特征在于其签名，名称修饰或名称修饰，并且类型安全链接可确保调用适当的重载函数，并且参数的类型符合参数的类型。,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,يتم تمييز الوظائف ذات التحميل الزائد من خلال التوقيعات الخاصة بها ، وتشويه الاسم أو زخرفة الاسم ، ويضمن الارتباط الآمن من النوع استدعاء الوظائف المثقلة بالأحمال المناسبة وأنواع الوسائط تتوافق مع tpes للمعلمات.,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.","Перевантажені функції відрізняються своїми підписами, перекручуванням імен або прикрасою імен, а безпечне зв’язування типу гарантує, що викликаються належні перевантажені функції, а типи аргументів відповідають параметрам tpes.",Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.","As funções sobrecarregadas são diferenciadas por suas assinaturas, alteração de nome ou decoração de nome, e a vinculação de tipo seguro garante que as funções sobrecarregadas apropriadas sejam chamadas e os tipos de argumentos estejam em conformidade com os parâmetros.",توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,توابع بیش از حد با امضاهای خود ، نامگذاری یا تزئین نام ، متمایز می شوند ، و پیوند نوع بی خطر تضمین می کند که توابع بارگذاری شده مناسب فراخوانی می شود و انواع آرگومان ها با انواع پارامترها مطابقت دارند.,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.","Les funcions sobrecarregades es distingeixen per la seva signatura, la manipulació de noms o la decoració de noms, i el vincle de tipus segur garanteix que es criden funcions adequades de sobrecàrrega i que els tipus d’arguments s’ajusten a tpes dels paràmetres.",Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.","Преоптерећене функције разликују се по својим потписима, руковању именима или украшавању имена, а веза сигурна за тип осигурава да се позивају одговарајуће преоптерећене функције и да типови аргумената одговарају параметрима тпес.",Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.","Fungsi kelebihan beban dibedakan berdasarkan tanda tangannya, Nama mangling atau dekorasi nama, dan hubungan tipe-aman memastikan bahwa fungsi kelebihan beban yang tepat dipanggil dan jenis argumen sesuai dengan parameter.",Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.","Overbelastede funksjoner kjennetegnes av signaturer, navnemangling eller navnedekorasjon, og typesikker kobling sørger for at riktige overbelastede funksjoner blir kalt og typene av argumenter samsvarer med tpes til parametrene.",오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,"오버로드 된 함수는 시그니처, 이름 맹 글링 또는 이름 장식으로 구분되며, 유형 안전 연결은 적절한 오버로드 된 함수가 호출되고 인수 유형이 매개 변수에 대한 tpes를 준수하도록합니다.",Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.","Ylikuormitetut toiminnot erotetaan niiden allekirjoitusten, nimien hallinnan tai nimien koristelun avulla, ja tyyppiturvallinen linkitys varmistaa, että asianmukaiset ylikuormitetut toiminnot kutsutaan ja argumenttityypit vastaavat tyyppejä parametreihin.",Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.","A túlterhelt függvényeket megkülönböztetik az aláírásuk, a névkezelés vagy a névdekoráció, és a típusbiztonsági összekapcsolás biztosítja a megfelelő túlterhelt függvények meghívását, és az argumentumtípusok megfelelnek a tpes paramétereknek.",Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.","Přetížené funkce se vyznačují svými podpisy, změnou názvu nebo dekorací názvu a typově bezpečné propojení zajišťuje volání správných přetížených funkcí a typy argumentů odpovídají tpes parametrům.",Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.","Preopterećene funkcije razlikuju se po svojim potpisima, rukovanju imenima ili ukrašavanju imena, a veza sigurna za tip osigurava pozivanje ispravnih preopterećenih funkcija i tipove argumenata koji odgovaraju parametrima tpes."
361,361,1573,9.3,"create a fixed array size, with with 2 integers to point to the beginning and the end of the que, and special cases to know when the que is empty or full.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",How can you implement a queue with an array?,4.0,Verwenden Sie ein kreisförmiges Array. Halten Sie die Rückseite der Warteschlange zum Ende des Arrays und die Vorderseite zum Anfang und lassen Sie den hinteren Zeiger umlaufen.,Wie können Sie eine Warteschlange mit einem Array implementieren?,"Erstellen Sie eine feste Arraygröße mit 2 Ganzzahlen, die auf den Anfang und das Ende der Warteschlange verweisen, und Sonderfällen, um festzustellen, wann die Warteschlange leer oder voll ist.",Giunsa nimo ipatuman ang usa ka pila nga adunay usa ka laray?,"Paggamit usa ka lingin nga han-ay. Ipadayon ang likud sa pila sa katapusan sa laray, ug ang atubangan sa pagsugod, ug tugoti ang likud nga pointer nga palibuton.","paghimo usa ka gihan-ay nga gidak-on sa pag-ayos, nga adunay 2 nga integer aron itudlo ang pagsugod ug katapusan sa pila, ug mga espesyal nga kaso aron mahibal-an kung wala o puno ang que.",Hur kan du implementera en kö med en matris?,Använd en cirkulär grupp. Håll köens bakre del mot slutet av matrisen och framsidan mot början och låt den bakre pekaren vika runt.,"skapa en fast matrisstorlek, med två heltal som pekar på början och slutet av kön, och speciella fall för att veta när kön är tom eller full.",Comment pouvez-vous implémenter une file d&#39;attente avec un tableau?,Utilisez un réseau circulaire. Gardez l&#39;arrière de la file d&#39;attente vers la fin de la matrice et l&#39;avant vers le début et laissez le pointeur arrière s&#39;enrouler.,"créer une taille de tableau fixe, avec 2 entiers pour pointer vers le début et la fin de la que, et des cas spéciaux pour savoir quand la que est vide ou pleine.",Hoe implementeer je een wachtrij met een array?,"Gebruik een cirkelvormige matrix. Houd de achterkant van de wachtrij aan het einde van de array en de voorkant aan het begin, en laat de achterste aanwijzer ronddraaien.","creëer een vaste array-grootte, met 2 gehele getallen die naar het begin en het einde van de wachtrij wijzen, en speciale gevallen om te weten wanneer de wachtrij leeg of vol is.",Как можно реализовать очередь с массивом?,"Используйте круговой массив. Держите заднюю часть очереди к концу массива, а переднюю - к началу, и позвольте заднему указателю перемещаться вокруг.","создать массив фиксированного размера, с двумя целыми числами, указывающими на начало и конец очереди, и в особых случаях, чтобы знать, когда очередь пуста или заполнена.",Come puoi implementare una coda con un array?,Usa una matrice circolare. Mantenere la parte posteriore della coda verso la fine dell&#39;array e la parte anteriore verso l&#39;inizio e consentire al puntatore posteriore di spostarsi.,"creare una dimensione di array fissa, con 2 numeri interi che puntano all&#39;inizio e alla fine della coda e casi speciali per sapere quando la coda è vuota o piena.",¿Cómo se puede implementar una cola con una matriz?,"Utilice una matriz circular. Mantenga la parte posterior de la cola hacia el final de la matriz y la parte frontal hacia el principio, y permita que el puntero posterior se enrolle.","cree un tamaño de matriz fijo, con 2 enteros para señalar el principio y el final de la cola, y casos especiales para saber cuándo la cola está vacía o llena.",Jak zaimplementować kolejkę z tablicą?,"Użyj szyku kołowego. Trzymaj tylną część kolejki w kierunku końca macierzy, a przód w kierunku początku i pozwól, aby tylny wskaźnik zawijał się.","utwórz tablicę o stałym rozmiarze, z 2 liczbami całkowitymi wskazującymi początek i koniec kolejki oraz specjalnymi przypadkami, aby wiedzieć, kiedy kolejka jest pusta lub pełna.",Làm thế nào bạn có thể triển khai một hàng đợi với một mảng?,Sử dụng một mảng tròn. Giữ phần sau của hàng đợi về phía cuối mảng và phía trước về phía đầu và cho phép con trỏ phía sau quấn quanh.,"tạo kích thước mảng cố định, với 2 số nguyên để trỏ đến đầu và cuối hàng, và các trường hợp đặc biệt để biết khi nào hàng trống hoặc đầy.",配列を使用してキューを実装するにはどうすればよいですか？,循環配列を使用します。キューの後部を配列の最後に向け、前部を最初に向けて、後部ポインターが折り返されるようにします。,固定配列サイズを作成します。2つの整数でキューの開始と終了を指し、特殊なケースでキューが空または満杯になるかを確認します。,如何实现带有数组的队列？,使用圆形数组。将队列的后部保持在数组的末尾，将队列的后部保持在开头，并让后部指针回绕。,创建一个固定的数组大小，其中2个整数指向que的开始和结尾，特殊情况下要知道que是空还是满。,كيف يمكنك تنفيذ قائمة انتظار مع مصفوفة؟,استخدم مصفوفة دائرية. احتفظ بمؤخرة قائمة الانتظار باتجاه نهاية المصفوفة ، والأمام نحو البداية ، واسمح للمؤشر الخلفي بالالتفاف حوله.,إنشاء حجم مصفوفة ثابت ، مع عدد 2 صحيح للإشارة إلى بداية ونهاية قائمة الانتظار ، وحالات خاصة لمعرفة متى تكون قائمة الانتظار فارغة أو ممتلئة.,Як можна реалізувати чергу з масивом?,"Використовуйте круговий масив. Тримайте задню частину черги до кінця масиву, а передню - до початку, і дозвольте задньому вказівнику обернутися.","створити фіксований розмір масиву, з 2 цілими числами, які вказують на початок і кінець que, а також в особливих випадках, щоб знати, коли que порожній або повний.",Como você pode implementar uma fila com um array?,"Use uma matriz circular. Mantenha a parte traseira da fila voltada para o final da matriz e a frente voltada para o início, e deixe o ponteiro traseiro envolver.","crie um tamanho de array fixo, com 2 inteiros para apontar para o início e o fim do que, e casos especiais para saber quando o que está vazio ou cheio.",چگونه می توان صف را با آرایه پیاده کرد؟,از یک آرایه دایره ای استفاده کنید. قسمت عقب صف را به سمت انتهای آرایه و قسمت جلویی را به سمت ابتدای آن نگه دارید و به نشانگر عقب اجازه دهید تا دور آن جمع شود.,یک اندازه آرایه ثابت ایجاد کنید ، با 2 عدد صحیح برای شروع و انتهای que ، و موارد خاص برای خالی یا پر بودن que.,Com es pot implementar una cua amb una matriu?,Utilitzeu una matriu circular. Mantingueu la part posterior de la cua cap al final de la matriu i la part frontal cap al principi i deixeu que el punter posterior s’envolti.,"creeu una mida de matriu fixa, amb 2 enters per apuntar al principi i al final de la que, i casos especials per saber quan la que està buida o plena.",Како можете имплементирати ред с низом?,"Користите кружни низ. Задњи део реда задржите према крају низа, а предњи према почетку и дозволите да се задњи показивач омота.","створите фиксну величину низа, са 2 целобројне вредности које упућују на почетак и крај куе-а, и посебним случајевима да бисте знали када је куе празан или пун.",Bagaimana Anda bisa mengimplementasikan antrian dengan array?,"Gunakan larik melingkar. Pertahankan bagian belakang antrian mendekati akhir larik, dan bagian depan mengarah ke awal, dan biarkan penunjuk belakang membungkusnya.","buat ukuran array tetap, dengan 2 bilangan bulat untuk menunjuk ke awal dan akhir antrian, dan kasus khusus untuk mengetahui kapan antrian kosong atau penuh.",Hvordan kan du implementere en kø med en matrise?,"Bruk en sirkulær matrise. Hold baksiden av køen mot slutten av matrisen, og fronten mot begynnelsen, og la den bakre pekeren vikle seg rundt.","lag en fast matrisestørrelse, med med 2 heltall for å peke til begynnelsen og slutten av køen, og spesielle tilfeller for å vite når køen er tom eller full.",배열로 큐를 어떻게 구현할 수 있습니까?,"원형 배열을 사용하십시오. 대기열의 뒤쪽은 어레이의 끝쪽으로, 앞쪽은 시작쪽으로 유지하고 뒤쪽 포인터가 감길 수 있도록합니다.",que의 시작과 끝을 가리키는 2 개의 정수와 que가 비어 있거나 꽉 찼을 때를 알 수있는 특별한 경우를 사용하여 고정 배열 크기를 만듭니다.,Kuinka jono voidaan toteuttaa taulukon avulla?,Käytä pyöreää taulukkoa. Pidä jonon takaosaa matriisin loppua kohden ja etuosaa alkuun päin ja anna takaosoittimen kiertyä.,"luo kiinteä taulukon koko, jossa on 2 kokonaislukua osoittamaan jonon alkuun ja loppuun, ja erityistapaukset, jotta tiedät, kun jono on tyhjä tai täynnä.",Hogyan valósíthat meg egy sort tömböt használva?,"Használjon kör alakú tömböt. Tartsa a sor hátulját a tömb vége felé, az elejét pedig az eleje felé, és hagyja, hogy a hátsó mutató körbefutjon.","hozzon létre egy rögzített tömbméretet, 2 egész számmal, amelyek a sor elejére és végére mutatnak, valamint különleges esetekkel, ha tudni szeretné, hogy a sor üres vagy tele van-e.",Jak můžete implementovat frontu s polem?,Použijte kruhové pole. Držte zadní část fronty směrem ke konci pole a přední směrem k začátku a nechte zadní ukazatel ohýbat.,"vytvořte pevnou velikost pole se 2 celými čísly, která ukazují na začátek a konec fronty, a speciální případy, kdy je třeba vědět, kdy je fronta prázdná nebo plná.",Kako možete implementirati red s nizom?,"Koristite kružni niz. Zadnji dio reda držite prema kraju niza, a prednji prema početku i dopustite da se stražnji pokazivač omota.","stvorite fiksnu veličinu niza, s 2 cjelobrojne vrijednosti koje upućuju na početak i kraj que-a, i posebnim slučajevima da se zna kada je que prazan ili pun."
362,362,880,5.2,Find the lowest value and place it in the front of the list and swap it with that value. Continue moving right.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","In one sentence, what is the main idea implemented by selection sort?",5.0,"Wenn jeweils ein Array-Element von links nach rechts verwendet wird, wird das Minimum der verbleibenden Elemente ermittelt und mit dem aktuellen Element ausgetauscht.","Was ist in einem Satz die Hauptidee, die durch Auswahlsortierung umgesetzt wird?","Suchen Sie den niedrigsten Wert, platzieren Sie ihn vorne in der Liste und tauschen Sie ihn mit diesem Wert aus. Bewegen Sie sich weiter nach rechts.","Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman sa pagpili?","Pagkuha usa ka elemento sa pag-ayos sa matag higayon, gikan sa wala ngadto sa tuo, maila niini ang minimum gikan sa nahabilin nga mga elemento ug gibaylo kini sa karon nga elemento.",Pangitaa ang labing ubus nga kantidad ug ibutang kini sa atubangan sa lista ug ibaylo kini sa kana nga kantidad. Padayon sa paglihok sa tuo.,"I en mening, vad är huvudidén implementerad av urvalsortering?","Tar ett matriselement åt gången, från vänster till höger, identifierar det minsta från de återstående elementen och byter det med det aktuella elementet.",Hitta det lägsta värdet och placera det framför listan och byt ut det med det värdet. Fortsätt flytta åt höger.,"En une phrase, quelle est l&#39;idée principale mise en œuvre par le tri sélectif?","Prenant un élément de tableau à la fois, de gauche à droite, il identifie le minimum parmi les éléments restants et le remplace par l&#39;élément courant.",Trouvez la valeur la plus basse et placez-la au début de la liste et échangez-la avec cette valeur. Continuez à vous déplacer à droite.,"In één zin, wat is het hoofdidee geïmplementeerd door middel van selectiesortering?","Door één array-element tegelijk te nemen, van links naar rechts, identificeert het het minimum van de resterende elementen en verwisselt het met het huidige element.",Zoek de laagste waarde en plaats deze vooraan in de lijst en wissel deze met die waarde om. Ga verder naar rechts.,"Одним предложением, какова основная идея сортировки по выбору?","Принимая по одному элементу массива слева направо, он определяет минимум из оставшихся элементов и меняет его местами с текущим элементом.",Найдите наименьшее значение и поместите его в начало списка и замените его этим значением. Продолжайте движение вправо.,"In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento di selezione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, identifica il minimo dagli elementi rimanenti e lo scambia con l&#39;elemento corrente.",Trova il valore più basso e posizionalo all&#39;inizio dell&#39;elenco e scambialo con quel valore. Continua a muoverti a destra.,"En una oración, ¿cuál es la idea principal implementada por tipo de selección?","Tomando un elemento de matriz a la vez, de izquierda a derecha, identifica el mínimo de los elementos restantes y lo intercambia con el elemento actual.",Encuentre el valor más bajo y colóquelo al principio de la lista y cámbielo por ese valor. Continúe moviéndose a la derecha.,"Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wybieranie?","Biorąc jeden element tablicy na raz, od lewej do prawej, identyfikuje minimum z pozostałych elementów i zamienia je na bieżący element.",Znajdź najniższą wartość i umieść ją na początku listy i zamień ją na tę wartość. Idź dalej w prawo.,"Trong một câu, ý chính được triển khai bằng cách sắp xếp lựa chọn nào?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó xác định giá trị tối thiểu từ các phần tử còn lại và hoán đổi nó với phần tử hiện tại.",Tìm giá trị thấp nhất và đặt nó ở phía trước danh sách và hoán đổi nó với giá trị đó. Tiếp tục di chuyển sang phải.,一言で言えば、選択ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、残りの要素から最小値を識別して、現在の要素と交換します。,最も低い値を見つけてリストの先頭に配置し、その値と交換します。右に移動し続けます。,一句话，选择排序实现的主要思想是什么？,一次从左到右获取一个数组元素，它从其余元素中识别出最小值，并将其与当前元素交换。,找到最低的值并将其放在列表的最前面，然后将其替换为该值。继续向右移动。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الاختيار؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يحدد الحد الأدنى من العناصر المتبقية ويتبادلها مع العنصر الحالي.,ابحث عن أقل قيمة وضعها في مقدمة القائمة واستبدلها بتلك القيمة. استمر في التحرك لليمين.,"В одному реченні, яка головна ідея реалізується шляхом сортування виділення?","Беручи по одному елементу масиву, зліва направо, він визначає мінімум з решти елементів і міняє його місцями з поточним елементом.",Знайдіть найнижче значення та розмістіть його в передній частині списку і поміняйте його цим значенням. Продовжуйте рухатися праворуч.,"Em uma frase, qual é a ideia principal implementada pela ordenação por seleção?","Pegando um elemento da matriz por vez, da esquerda para a direita, ele identifica o mínimo dos elementos restantes e o troca com o elemento atual.","Encontre o valor mais baixo, coloque-o na frente da lista e troque-o por esse valor. Continue movendo para a direita.",در یک جمله ، ایده اصلی که براساس مرتب سازی انتخاب اجرا می شود چیست؟,با یک بار گرفتن یک عنصر آرایه ، از چپ به راست ، حداقل عناصر باقی مانده را شناسایی کرده و با عنصر فعلی عوض می کند.,کمترین مقدار را پیدا کنید و آن را در جلوی لیست قرار دهید و آنرا با آن مقدار عوض کنید. حرکت را به درستی ادامه دهید.,"En una frase, quina és la idea principal implementada pel tipus de selecció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, identifica el mínim dels elements restants i el canvia amb l’element actual.",Cerqueu el valor més baix i col·loqueu-lo a la part frontal de la llista i canvieu-lo amb aquest valor. Continueu movent-vos cap a la dreta.,"У једној реченици, која је главна идеја спроведена сортирањем избора?","Узимајући по један елемент низа, с лева на десно, идентификује минимум од преосталих елемената и замењује га са тренутним елементом.",Пронађите најнижу вредност и ставите је на почетак листе и замените је са том вредношћу. Наставите да се крећете десно.,"Dalam satu kalimat, apa gagasan utama yang diimplementasikan oleh selection sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, ini mengidentifikasi elemen minimum dari elemen yang tersisa dan menukarnya dengan elemen saat ini.",Temukan nilai terendah dan letakkan di depan daftar dan tukar dengan nilai itu. Terus bergerak ke kanan.,"I en setning, hva er hovedideen implementert ved sortering av utvalg?","Tar ett matriseelement om gangen, fra venstre til høyre, identifiserer det minimumet fra de gjenværende elementene og bytter det med det nåværende elementet.","Finn den laveste verdien og plasser den foran listen, og bytt den med den verdien. Fortsett å flytte til høyre.","한 문장으로, 선택 정렬에 의해 구현 된 주요 아이디어는 무엇입니까?",한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 나머지 요소에서 최소값을 식별하고 현재 요소와 교환합니다.,가장 낮은 값을 찾아 목록 앞에 놓고 해당 값으로 바꿉니다. 계속 오른쪽으로 이동합니다.,Mikä päävalinta toteutetaan valintalajittelulla?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se tunnistaa vähimmäisarvon jäljellä olevista elementeistä ja vaihtaa sen nykyiseen elementtiin.",Etsi pienin arvo ja aseta se luettelon eteen ja vaihda se kyseisen arvon kanssa. Jatka oikealle.,Egy mondatban mi a kiválasztott rendezéssel megvalósított fő gondolat?,"Egyszerre egy tömb elemet vesz fel balról jobbra, a többi elem alapján azonosítja a minimumot, és felcseréli az aktuális elemmel.","Keresse meg a legalacsonyabb értéket, és helyezze a lista elejére, és cserélje le ezzel az értékkel. Haladjon tovább jobbra.","Jednou větou, jaká je hlavní myšlenka implementovaná výběrem?","Vezmeme-li po jednom prvku pole, zleva doprava, identifikuje minimum ze zbývajících prvků a zamění jej za aktuální prvek.",Najděte nejnižší hodnotu a umístěte ji na přední část seznamu a vyměňte ji s touto hodnotou. Pokračujte v pohybu doprava.,"U jednoj rečenici, koja je glavna ideja implementirana selekcijskim sortiranjem?","Uzimajući po jedan element niza, slijeva udesno, identificira minimum iz preostalih elemenata i zamjenjuje ga s trenutnim elementom.",Pronađite najnižu vrijednost i stavite je na početak liste i zamijenite je tom vrijednošću. Nastavite se kretati desno.
363,363,955,6.1,Pointers are variables that contain as their values memory addresses of other variables.,A variable that contains the address in memory of another variable.,What is a pointer?,5.0,"Eine Variable, die die Adresse im Speicher einer anderen Variablen enthält.",Was ist ein Zeiger?,"Zeiger sind Variablen, die als Werte Speicheradressen anderer Variablen enthalten.",Unsa ang usa ka pointer?,Usa ka variable nga adunay sulud nga panumduman sa uban pa nga variable.,Ang mga panudlo mga variable nga adunay sulud nga ilang mga kantidad nga mga adres sa panumduman sa uban pang mga variable.,Vad är en pekare?,En variabel som innehåller adressen i minnet för en annan variabel.,Pekare är variabler som innehåller som värden minnesadresser för andra variabler.,Qu&#39;est-ce qu&#39;un pointeur?,Une variable qui contient l&#39;adresse en mémoire d&#39;une autre variable.,Les pointeurs sont des variables qui contiennent comme valeurs les adresses mémoire d&#39;autres variables.,Wat is een aanwijzer?,Een variabele die het adres in het geheugen van een andere variabele bevat.,Pointers zijn variabelen die als waarden geheugenadressen van andere variabelen bevatten.,Что такое указатель?,"Переменная, содержащая адрес в памяти другой переменной.","Указатели - это переменные, которые содержат в качестве значений адреса памяти других переменных.",Cos&#39;è un puntatore?,Una variabile che contiene l&#39;indirizzo in memoria di un&#39;altra variabile.,I puntatori sono variabili che contengono come valori indirizzi di memoria di altre variabili.,¿Qué es un puntero?,Una variable que contiene la dirección en memoria de otra variable.,Los punteros son variables que contienen como valores direcciones de memoria de otras variables.,Co to jest wskaźnik?,"Zmienna, która zawiera adres w pamięci innej zmiennej.","Wskaźniki to zmienne, które jako wartości zawierają adresy pamięci innych zmiennych.",Con trỏ là gì?,Một biến chứa địa chỉ trong bộ nhớ của một biến khác.,Con trỏ là các biến chứa giá trị của chúng như địa chỉ bộ nhớ của các biến khác.,ポインタとは何ですか？,別の変数のメモリ内のアドレスを含む変数。,ポインタは、他の変数のメモリアドレスを値として含む変数です。,什么是指针？,一个变量，包含另一个变量在内存中的地址。,指针是包含其他变量的内存地址作为其值的变量。,ما هو المؤشر؟,متغير يحتوي على العنوان في ذاكرة متغير آخر.,المؤشرات هي متغيرات تحتوي على قيمها عناوين ذاكرة لمتغيرات أخرى.,Що таке вказівник?,"Змінна, що містить адресу в пам&#39;яті іншої змінної.","Покажчики - це змінні, які містять як свої значення адреси пам&#39;яті інших змінних.",O que é um ponteiro?,Uma variável que contém o endereço na memória de outra variável.,Ponteiros são variáveis que contêm como seus valores endereços de memória de outras variáveis.,اشاره گر چیست؟,متغیری که حاوی آدرس در حافظه متغیر دیگر است.,اشاره گرها متغیرهایی هستند که به عنوان مقادیر خود آدرس حافظه متغیرهای دیگر را دارند.,Què és un punter?,Una variable que conté l&#39;adreça en memòria d&#39;una altra variable.,Els indicadors són variables que contenen com a valors adreces de memòria d&#39;altres variables.,Шта је показивач?,Променљива која садржи адресу у меморији друге променљиве.,Показивачи су променљиве које као своје вредности садрже меморијске адресе других променљивих.,Apa itu penunjuk?,Variabel yang berisi alamat dalam memori variabel lain.,Pointer adalah variabel yang berisi sebagai alamat memori nilai variabel lain.,Hva er en peker?,En variabel som inneholder adressen i minnet til en annen variabel.,Pekere er variabler som inneholder verdier minneadresser til andre variabler.,포인터 란 무엇입니까?,다른 변수의 메모리에 주소를 포함하는 변수입니다.,포인터는 값으로 다른 변수의 메모리 주소를 포함하는 변수입니다.,Mikä on osoitin?,"Muuttuja, joka sisältää osoitteen toisen muuttujan muistissa.","Osoittimet ovat muuttujia, jotka sisältävät arvoina muiden muuttujien muistiosoitteet.",Mi az a mutató?,"Olyan változó, amely egy másik változó memóriájában tartalmazza a címet.","A mutatók olyan változók, amelyek értékként más változók memóriacímét tartalmazzák.",Co je to ukazatel?,"Proměnná, která obsahuje adresu v paměti jiné proměnné.","Ukazatele jsou proměnné, které obsahují jako své hodnoty adresy paměti jiných proměnných.",Šta je pokazivač?,Varijabla koja sadrži adresu u memoriji druge varijable.,Pokazivači su varijable koje kao svoje vrijednosti sadrže memorijske adrese drugih varijabli.
364,364,2381,12.8,to traverse going down to the left then go to the right of last children and back to the top.. kind of like going around the tree,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,5.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"Um nach links zu gehen, dann nach rechts von den letzten Kindern und zurück nach oben. Ein bisschen wie um den Baum herum",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.",sa pagtadlas sa pag-adto sa wala ug pag-adto sa tuo sa mga ulahi nga mga bata ug pagbalik sa taas .. sama sa paglibot sa kahoy,Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.",att korsa gå ner till vänster och sedan gå till höger om de sista barnen och tillbaka till toppen .. ungefär som att gå runt trädet,Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.",traverser en descendant à gauche puis aller à droite des derniers enfants et revenir en haut .. un peu comme faire le tour de l&#39;arbre,Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.","naar beneden gaan, naar links gaan, dan naar rechts van de laatste kinderen en terug naar boven .. een beetje zoals rond de boom gaan",Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","пройти вниз влево, затем перейти вправо от последних дочерних элементов и вернуться наверх ... как будто обойти дерево",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.",traversare scendendo a sinistra poi andare a destra degli ultimi bambini e tornare in cima .. un po &#39;come girare intorno all&#39;albero,¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.","para atravesar bajando a la izquierda, luego ir a la derecha de los últimos hijos y volver a la cima ... algo así como dar la vuelta al árbol",Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","aby przejść w dół w lewo, a następnie przejść na prawo od ostatnich dzieci i wrócić na górę .. trochę jak chodzenie po drzewie",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.",đi ngang đi xuống bên trái sau đó đi bên phải của trẻ em cuối cùng và trở lại trên cùng .. kiểu như đi vòng quanh cái cây,木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,左に下がってトラバースし、最後の子の右に移動して上に戻ります。木の周りを回るようなものです。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,往下走，然后走到最后一个孩子的右边，再回到顶部。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,لاجتياز النزول إلى اليسار ثم الانتقال إلى يمين آخر الأطفال والعودة إلى الأعلى .. نوع من الالتفاف حول الشجرة,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","щоб об&#39;їхати вниз, ліворуч, а потім праворуч від останніх дітей і назад на вершину .. щось на зразок обходу дерева",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.",atravessar descendo para a esquerda e então ir para a direita dos últimos filhos e voltar para o topo .. meio que contornando a árvore,پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,عبور از پایین به چپ و سپس رفتن به سمت راست آخرین فرزندان و بازگشت به بالا .. نوعی از رفتن به اطراف درخت,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.",travessar baixant cap a l&#39;esquerra i després cap a la dreta dels darrers fills i tornant cap a la part superior .. és com anar al voltant de l&#39;arbre,Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","да пређете силазећи улево, а затим идите удесно од последње деце и назад на врх .. некако као да обилазите дрво",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.",untuk melintasi turun ke kiri lalu pergi ke kanan anak-anak terakhir dan kembali ke atas .. seperti berkeliling pohon,Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.",å krysse går ned til venstre og deretter til høyre for de siste barna og tilbake til toppen .. som å gå rundt treet,나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.",왼쪽으로 내려 가서 마지막 아이들의 오른쪽으로 가서 맨 위로 돌아갑니다. 마치 나무를 돌아 다니는 것과 같습니다.,Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.",kulkea vasemmalle alaspäin menemällä sitten viimeisten lasten oikealle puolelle ja takaisin huipulle.,Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.","hogy balra lefelé haladjon, majd menjen az utolsó gyerekek jobbjától és térjen vissza a tetejére .. olyan, mint a fa körül",Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.",traverz jít dolů doleva pak jít napravo od posledních dětí a zpět nahoru ... něco jako obejít strom,Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.",da pređete spuštajući se lijevo pa idite desno od posljednje djece i natrag na vrh .. nekako kao da obilazite drvo
365,365,367,2.6,"A function definition is the code that defines the function placed in the {} brackets that determines that function's operation.  A function prototype shows the function's public interface without exposing implementation.  It shows name, return type and type of paramaters.","A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function.",What is the difference between a function prototype and a function definition?,5.0,"Ein Funktionsprototyp enthält die Funktionssignatur, dh den Namen der Funktion, den Rückgabetyp und den Parametertyp. Die Funktionsdefinition enthält den tatsächlichen Hauptteil der Funktion.",Was ist der Unterschied zwischen einem Funktionsprototyp und einer Funktionsdefinition?,"Eine Funktionsdefinition ist der Code, der die Funktion in den Klammern {} definiert, die den Betrieb dieser Funktion bestimmt. Ein Funktionsprototyp zeigt die öffentliche Schnittstelle der Funktion, ohne die Implementierung offen zu legen. Es zeigt Name, Rückgabetyp und Typ der Parameter.",Unsa ang kalainan tali sa usa ka function prototype ug usa ka kahulugan nga pagpaandar?,"Ang usa ka function prototype adunay upod nga pirma sa pagpaandar, ie, ang ngalan sa pagpaandar, ang tipo sa pagbalik, ug ang tipo sa mga parameter. Ang kahulugan sa pagpaandar kauban ang tinuud nga lawas sa kalihokan.","Ang kahulugan sa pagpaandar usa ka code nga nagpasabut sa pagpaandar nga gibutang sa mga {} bracket nga nagtino sa operasyon sa kana nga pag-andar. Gipakita sa usa ka prototype nga function ang pang-publiko nga interface sa function nga dili gibutyag ang pagpatuman. Gipakita niini ang ngalan, tipo sa pagbalik ug klase sa paramaters.",Vad är skillnaden mellan en funktionsprototyp och en funktionsdefinition?,"En funktionsprototyp inkluderar funktionssignaturen, dvs namnet på funktionen, returtypen och parametertypen. Funktionsdefinitionen inkluderar funktionens faktiska kropp.","En funktionsdefinition är koden som definierar den funktion som placeras i {} parenteserna som bestämmer funktionens funktion. En funktionsprototyp visar funktionens offentliga gränssnitt utan att implementeringen exponeras. Den visar namn, returtyp och typ av parametrar.",Quelle est la différence entre un prototype de fonction et une définition de fonction?,"Un prototype de fonction comprend la signature de la fonction, c&#39;est-à-dire le nom de la fonction, le type de retour et le type des paramètres. La définition de fonction inclut le corps réel de la fonction.","Une définition de fonction est le code qui définit la fonction placée entre les crochets {} qui détermine le fonctionnement de cette fonction. Un prototype de fonction montre l&#39;interface publique de la fonction sans exposer l&#39;implémentation. Il montre le nom, le type de retour et le type de paramètres.",Wat is het verschil tussen een functie-prototype en een functiedefinitie?,"Een functieprototype bevat de functiehandtekening, dwz de naam van de functie, het retourtype en het type parameter. De functiedefinitie omvat de feitelijke inhoud van de functie.","Een functiedefinitie is de code die de functie definieert die tussen de {} haakjes is geplaatst en die de werking van die functie bepaalt. Een functie-prototype toont de openbare interface van de functie zonder de implementatie bloot te leggen. Het toont de naam, het retourtype en het type paramaters.",В чем разница между прототипом функции и определением функции?,"Прототип функции включает сигнатуру функции, т. Е. Имя функции, тип возвращаемого значения и тип параметров. Определение функции включает фактическое тело функции.","Определение функции - это код, который определяет функцию, заключенную в квадратные скобки {}, которая определяет операцию этой функции. Прототип функции показывает открытый интерфейс функции без раскрытия реализации. Он показывает имя, тип возвращаемого значения и тип параметров.",Qual è la differenza tra un prototipo di funzione e una definizione di funzione?,"Un prototipo di funzione include la firma della funzione, cioè il nome della funzione, il tipo restituito e il tipo dei parametri. La definizione della funzione include il corpo effettivo della funzione.","Una definizione di funzione è il codice che definisce la funzione posta tra le parentesi {} che determina l&#39;operazione di quella funzione. Un prototipo di funzione mostra l&#39;interfaccia pubblica della funzione senza esporre l&#39;implementazione. Mostra il nome, il tipo di ritorno e il tipo di parametri.",¿Cuál es la diferencia entre un prototipo de función y una definición de función?,"Un prototipo de función incluye la firma de la función, es decir, el nombre de la función, el tipo de retorno y el tipo de los parámetros. La definición de función incluye el cuerpo real de la función.","Una definición de función es el código que define la función colocada entre corchetes {} que determina la operación de esa función. Un prototipo de función muestra la interfaz pública de la función sin exponer la implementación. Muestra nombre, tipo de retorno y tipo de parámetros.",Jaka jest różnica między prototypem funkcji a definicją funkcji?,"Prototyp funkcji zawiera sygnaturę funkcji, tj. Nazwę funkcji, typ zwracanej wartości i typ parametrów. Definicja funkcji zawiera rzeczywistą treść funkcji.","Definicja funkcji to kod definiujący funkcję umieszczoną w nawiasach {}, które określają działanie tej funkcji. Prototyp funkcji pokazuje jej publiczny interfejs bez ujawniania implementacji. Pokazuje nazwę, zwracany typ i typ parametrów.",Sự khác biệt giữa nguyên mẫu hàm và định nghĩa hàm là gì?,"Một nguyên mẫu hàm bao gồm chữ ký hàm, tức là tên của hàm, kiểu trả về và kiểu của tham số. Định nghĩa hàm bao gồm phần thân thực sự của hàm.","Định nghĩa hàm là mã xác định hàm được đặt trong dấu ngoặc {} xác định hoạt động của hàm đó. Một nguyên mẫu chức năng hiển thị giao diện công khai của chức năng mà không tiết lộ việc triển khai. Nó hiển thị tên, loại trả về và loại paramaters.",関数プロトタイプと関数定義の違いは何ですか？,関数プロトタイプには、関数のシグネチャ、つまり関数の名前、戻り値の型、およびパラメータの型が含まれています。関数定義には、関数の実際の本体が含まれます。,関数定義は、その関数の操作を決定する{}括弧内に配置された関数を定義するコードです。関数プロトタイプは、実装を公開せずに関数のパブリックインターフェイスを表示します。名前、戻り値の型、パラメーターの型が表示されます。,函数原型和函数定义有什么区别？,函数原型包括函数签名，即函数名称，返回类型和参数类型。函数定义包括函数的实际主体。,函数定义是定义位于{}括号中的函数的代码，该函数确定该函数的操作。函数原型在不公开实现的情况下显示了函数的公共接口。它显示名称，返回类型和参数类型。,ما هو الفرق بين النموذج الأولي للدالة وتعريف الوظيفة؟,يتضمن النموذج الأولي للوظيفة توقيع الوظيفة ، أي اسم الوظيفة ونوع الإرجاع ونوع المعلمات. يتضمن تعريف الوظيفة الجسم الفعلي للوظيفة.,تعريف الدالة هو الكود الذي يعرّف الوظيفة الموضوعة بين قوسين {} الذي يحدد عملية هذه الوظيفة. يُظهر النموذج الأولي للوظيفة الواجهة العامة للوظيفة دون الكشف عن التنفيذ. يظهر الاسم ونوع الإرجاع ونوع المعلمات.,У чому різниця між прототипом функції та визначенням функції?,"Прототип функції включає підпис функції, тобто ім&#39;я функції, тип повернення та тип параметрів. Визначення функції включає фактичне тіло функції.","Визначення функції - це код, який визначає функцію, розміщену в дужках {}, що визначає роботу цієї функції. Прототип функції показує загальнодоступний інтерфейс функції, не піддаючи реалізації. Він показує ім&#39;я, тип повернення та тип параметрів.",Qual é a diferença entre um protótipo de função e uma definição de função?,"Um protótipo de função inclui a assinatura da função, ou seja, o nome da função, o tipo de retorno e o tipo dos parâmetros. A definição da função inclui o corpo real da função.","Uma definição de função é o código que define a função colocada entre {} colchetes que determina a operação dessa função. Um protótipo de função mostra a interface pública da função sem expor a implementação. Mostra o nome, o tipo de retorno e o tipo de parâmetros.",تفاوت بین نمونه اولیه عملکرد و تعریف عملکرد چیست؟,نمونه اولیه تابع شامل امضای تابع است ، به عنوان مثال ، نام عملکرد ، نوع بازگشت و نوع پارامترها. تعریف عملکرد شامل بدنه واقعی عملکرد است.,تعریف تابع کدی است که عملکردی را که در براکت های {} تعیین می کند عملکرد آن عملکرد را تعیین می کند. یک نمونه اولیه از عملکرد ، رابط عمومی عملکرد را بدون افشای اجرای آن نشان می دهد. این نام ، نوع بازگشت و نوع پارامترها را نشان می دهد.,Quina diferència hi ha entre un prototip de funció i una definició de funció?,"Un prototip de funció inclou la signatura de la funció, és a dir, el nom de la funció, el tipus de retorn i el tipus dels paràmetres. La definició de funció inclou el cos real de la funció.","Una definició de funció és el codi que defineix la funció situada entre els claudàtors {} que determina el funcionament d&#39;aquesta funció. Un prototip de funció mostra la interfície pública de la funció sense exposar la implementació. Mostra el nom, el tipus de retorn i el tipus de paràmetres.",Која је разлика између прототипа функције и дефиниције функције?,"Прототип функције укључује потпис функције, тј. Име функције, тип повратка и тип параметара. Дефиниција функције укључује стварно тело функције.","Дефиниција функције је код који дефинише функцију смештену у заграде {} која одређује рад те функције. Прототип функције приказује јавни интерфејс функције без излагања примени. Приказује име, тип повратка и тип параметара.",Apa perbedaan antara prototipe fungsi dan definisi fungsi?,"Prototipe fungsi mencakup tanda tangan fungsi, yaitu nama fungsi, jenis kembalian, dan jenis parameter. Definisi fungsi mencakup tubuh sebenarnya dari fungsi tersebut.","Definisi fungsi adalah kode yang mendefinisikan fungsi yang ditempatkan dalam {} tanda kurung yang menentukan operasi fungsi itu. Prototipe fungsi menunjukkan antarmuka publik fungsi tanpa mengekspos implementasi. Ini menunjukkan nama, jenis kembali dan jenis paramaters.",Hva er forskjellen mellom en funksjonsprototype og en funksjonsdefinisjon?,"En funksjonsprototype inkluderer funksjonssignaturen, dvs. navnet på funksjonen, returtypen og parametertypen. Funksjonsdefinisjonen inkluderer funksjonens faktiske kropp.","En funksjonsdefinisjon er koden som definerer funksjonen plassert i {} parentesene som bestemmer funksjonen til funksjonen. En funksjonsprototype viser funksjonens offentlige grensesnitt uten å utsette implementering. Den viser navn, returtype og type paramatere.",함수 프로토 타입과 함수 정의의 차이점은 무엇입니까?,"함수 프로토 타입에는 함수 시그니처, 즉 함수 이름, 반환 유형 및 매개 변수 유형이 포함됩니다. 함수 정의에는 함수의 실제 본문이 포함됩니다.","함수 정의는 해당 함수의 작업을 결정하는 {} 대괄호 안에있는 함수를 정의하는 코드입니다. 함수 프로토 타입은 구현을 노출하지 않고 함수의 공용 인터페이스를 보여줍니다. 이름, 반환 유형 및 매개 변수 유형을 보여줍니다.",Mitä eroa on funktion prototyypin ja funktion määritelmän välillä?,"Funktion prototyyppi sisältää funktion allekirjoituksen, eli funktion nimen, palautustyypin ja parametrien tyypin. Funktion määritelmä sisältää funktion todellisen rungon.","Funktion määritelmä on koodi, joka määrittelee sulkeisiin sijoitetun toiminnon, joka määrittää kyseisen toiminnon toiminnan. Funktion prototyyppi näyttää toiminnon julkisen käyttöliittymän paljastamatta toteutusta. Se näyttää nimen, palautustyypin ja parametrien tyypin.",Mi a különbség a függvény prototípusa és a függvény definíciója között?,"A függvény prototípusa tartalmazza a függvény aláírását, azaz a függvény nevét, a visszatérés típusát és a paraméterek típusát. A függvénydefiníció magában foglalja a függvény tényleges törzsét.","A függvénydefiníció az a kód, amely meghatározza a {} zárójelbe helyezett funkciót, amely meghatározza a függvény működését. A függvény prototípusa megmutatja a függvény nyilvános felületét anélkül, hogy kitenné a megvalósítást. Megmutatja a nevet, a visszatérés típusát és a paraméterek típusát.",Jaký je rozdíl mezi prototypem funkce a definicí funkce?,"Prototyp funkce zahrnuje podpis funkce, tj. Název funkce, návratový typ a typ parametrů. Definice funkce zahrnuje skutečné tělo funkce.","Definice funkce je kód, který definuje funkci umístěnou v závorkách {}, která určuje fungování této funkce. Prototyp funkce zobrazuje veřejné rozhraní funkce bez odhalení implementace. Zobrazuje jméno, návratový typ a typ paramaterů.",Koja je razlika između prototipa funkcije i definicije funkcije?,"Prototip funkcije uključuje potpis funkcije, tj. Ime funkcije, tip povratka i tip parametara. Definicija funkcije uključuje stvarno tijelo funkcije.","Definicija funkcije je kod koji definira funkciju smještenu u zagrade {} koja određuje rad te funkcije. Prototip funkcije prikazuje javni interfejs funkcije bez izlaganja implementaciji. Prikazuje ime, tip povratka i vrstu parametara."
366,366,2440,12.1,"it takes at most h steps, where h is the height of the tree.",The height of the tree.,How many steps does it take to search a node in a binary search tree?,5.0,Die Höhe des Baumes.,"Wie viele Schritte sind erforderlich, um einen Knoten in einem binären Suchbaum zu durchsuchen?","Es dauert höchstens h Schritte, wobei h die Höhe des Baumes ist.",Pila ka mga lakang ang gikinahanglan aron makapangita usa ka node sa usa ka binary search tree?,Ang kataas sa kahoy.,"nagkinahanglan kini labing kadaghan nga mga lakang, diin ang kataas sa kahoy.",Hur många steg tar det för att söka efter en nod i ett binärt sökträd?,Trädets höjd.,"det tar högst h steg, där h är trädets höjd.",Combien d&#39;étapes faut-il pour rechercher un nœud dans une arborescence de recherche binaire?,La hauteur de l&#39;arbre.,"il prend au plus h pas, où h est la hauteur de l&#39;arbre.",Hoeveel stappen zijn er nodig om een knooppunt in een binaire zoekboom te zoeken?,De hoogte van de boom.,"er zijn maximaal h stappen nodig, waarbij h de hoogte van de boom is.",Сколько шагов нужно для поиска узла в двоичном дереве поиска?,Высота дерева.,"он занимает не более h шагов, где h - высота дерева.",Quanti passaggi sono necessari per cercare un nodo in un albero di ricerca binario?,L&#39;altezza dell&#39;albero.,"ci vogliono al massimo h passi, dove h è l&#39;altezza dell&#39;albero.",¿Cuántos pasos se necesitan para buscar un nodo en un árbol de búsqueda binaria?,La altura del árbol.,"toma como máximo h pasos, donde h es la altura del árbol.",Ile kroków wymaga przeszukanie węzła w drzewie wyszukiwania binarnego?,Wysokość drzewa.,"zajmuje co najwyżej h kroków, gdzie h to wysokość drzewa.",Có bao nhiêu bước để tìm kiếm một nút trong cây tìm kiếm nhị phân?,Chiều cao của cây.,"nó mất nhiều nhất h bước, trong đó h là chiều cao của cây.",二分探索木でノードを検索するのに何ステップかかりますか？,木の高さ。,最大でhステップかかります。ここで、hは木の高さです。,在二叉搜索树中搜索节点需要多少步骤？,树的高度。,它最多需要h步，其中h是树的高度。,كم عدد الخطوات التي يستغرقها البحث عن عقدة في شجرة بحث ثنائية؟,ارتفاع الشجرة.,يأخذ h على الأكثر خطوات ، حيث h هو ارتفاع الشجرة.,Скільки кроків потрібно для пошуку вузла в двійковому дереві пошуку?,Висота дерева.,"вона займає не більше h кроків, де h - висота дерева.",Quantas etapas são necessárias para pesquisar um nó em uma árvore de pesquisa binária?,A altura da árvore.,"leva no máximo h passos, onde h é a altura da árvore.",چند مرحله برای جستجوی گره در یک درخت جستجوی باینری انجام می شود؟,ارتفاع درخت.,حداکثر h پله طول می کشد ، جایی که h ارتفاع درخت است.,Quants passos cal fer per cercar un node en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre.,"fa com a màxim h passos, on h és l’altura de l’arbre.",Колико корака је потребно за претрагу чвора у бинарном стаблу претраживања?,Висина стабла.,"потребно је највише х корака, где је х висина стабла.",Berapa banyak langkah yang diperlukan untuk mencari node di pohon pencarian biner?,Ketinggian pohon.,"yang dibutuhkan paling banyak h langkah, di mana h adalah tinggi pohon.",Hvor mange trinn tar det å søke i en node i et binært søketre?,Høyden på treet.,"det tar maksimalt h trinn, hvor h er høyden på treet.",이진 검색 트리에서 노드를 검색하려면 몇 단계가 필요합니까?,나무의 높이.,최대 h 단계가 필요합니다. 여기서 h는 나무의 높이입니다.,Kuinka monta vaihetta tarvitaan etsimään solmua binäärihakupuussa?,Puun korkeus.,"se vie korkeintaan h askelta, missä h on puun korkeus.",Hány lépés szükséges egy csomópont kereséséhez egy bináris keresési fában?,A fa magassága.,"legfeljebb h lépést tesz meg, ahol h a fa magassága.",Kolik kroků je potřeba k vyhledání uzlu v binárním vyhledávacím stromu?,Výška stromu.,"trvá maximálně h kroků, kde h je výška stromu.",Koliko je koraka potrebno za pretraživanje čvora u binarnom stablu pretraživanja?,Visina stabla.,"potrebno je najviše h koraka, gdje je h visina stabla."
367,367,749,4.4,"if they are declared fixed or static that means they can't change size once their storage has been allocated, however one that is not or dynamic arrarys can be resized.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","What is the difference between an array declared as static, and one that is not?",3.0,"Die als statisch deklarierten Arrays leben während der gesamten Laufzeit des Programms. Das heißt, sie werden nur einmal initialisiert, wenn die Funktion, die das Array deklariert, zum ersten Mal aufgerufen wird.",Was ist der Unterschied zwischen einem als statisch deklarierten und einem nicht statischen Array?,"Wenn sie als fest oder statisch deklariert sind, bedeutet dies, dass sie die Größe nicht ändern können, nachdem ihr Speicher zugewiesen wurde. Die Größe eines Speichers kann jedoch geändert werden.","Unsa ang kalainan tali sa usa ka laray nga gideklara nga static, ug usa nga dili?","Ang mga array gideklara nga static live sa tibuuk nga kinabuhi sa programa; kana mao, gisugdan ra sila kausa, kung ang pagpaandar nga nagpahayag sa pag-ayo una kini gitawag.","kung sila gideklara nga naayo o static nga nagpasabut nga dili nila mabag-o ang kadako sa higayon nga ang ilang pagtipig igahin, bisan pa ang usa nga dili o ang dinamiko nga mga pag-arrito mahimo’g usab kadaghan.",Vad är skillnaden mellan en matris som deklareras som statisk och en som inte är det?,"Arraysna som deklareras som statiska lever hela programmets livstid; det vill säga de initialiseras bara en gång, när den funktion som deklarerar matrisen kallas den först.","om de förklaras som fasta eller statiska betyder det att de inte kan ändra storlek när deras lagring har tilldelats, men en som inte är eller dynamiska arranger kan ändras.",Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,"Les tableaux déclarés statiques vivent tout au long de la vie du programme; c&#39;est-à-dire qu&#39;ils ne sont initialisés qu&#39;une seule fois, lorsque la fonction qui déclare le tableau est appelée pour la première fois.","s&#39;ils sont déclarés fixes ou statiques, cela signifie qu&#39;ils ne peuvent pas changer de taille une fois que leur stockage a été alloué, mais celui qui ne l&#39;est pas ou les ararys dynamiques peuvent être redimensionnés.",Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,"De arrays die als statisch zijn gedeclareerd, leven gedurende de levensduur van het programma; dat wil zeggen, ze worden slechts één keer geïnitialiseerd, wanneer de functie die de array declareert voor het eerst wordt aangeroepen.","als ze vast of statisch worden verklaard, betekent dit dat ze de grootte niet kunnen wijzigen nadat hun opslag is toegewezen, maar een opslag die dat niet is of dynamische ararys kan worden aangepast.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?","Массивы, объявленные как статические, живут в течение всего времени работы программы; то есть они инициализируются только один раз при первом вызове функции, объявляющей массив.","если они объявлены фиксированными или статическими, это означает, что они не могут изменить размер после того, как их хранилище было выделено, однако размер того, который не является, или динамических массивов, можно изменить.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,"Gli array dichiarati come statici sono attivi per tutta la durata del programma; cioè, vengono inizializzati solo una volta, quando la funzione che dichiara l&#39;array viene chiamata per la prima volta.","se sono dichiarati fissi o statici significa che non possono cambiare dimensione una volta che la loro memoria è stata allocata, tuttavia è possibile ridimensionare uno che non lo è o gli elementi dinamici.",¿Cuál es la diferencia entre una matriz declarada como estática y una que no lo es?,"Las matrices declaradas como estáticas viven durante toda la vida del programa; es decir, se inicializan solo una vez, cuando se llama por primera vez a la función que declara la matriz.","si se declaran fijos o estáticos, eso significa que no pueden cambiar el tamaño una vez que se ha asignado su almacenamiento, sin embargo, se puede cambiar el tamaño de uno que no lo sea o de los arreglos dinámicos.","Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice zadeklarowane jako statyczne na żywo przez cały czas trwania programu; to znaczy, są inicjowane tylko raz, kiedy funkcja deklarująca tablicę jest wywoływana jako pierwsza.","jeśli zostaną zadeklarowane jako stałe lub statyczne, oznacza to, że nie mogą zmienić rozmiaru po przydzieleniu ich pamięci, jednak można zmienić rozmiar tego, który nie jest, lub dynamicznych plików ARARY.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng được khai báo là sống tĩnh trong suốt vòng đời của chương trình; nghĩa là chúng chỉ được khởi tạo một lần khi hàm khai báo mảng mà nó được gọi lần đầu tiên.,"nếu chúng được khai báo là cố định hoặc tĩnh có nghĩa là chúng không thể thay đổi kích thước sau khi bộ nhớ của chúng đã được cấp phát, tuy nhiên, một vùng không phải hoặc mảng động có thể được thay đổi kích thước.",静的として宣言された配列とそうでない配列の違いは何ですか？,静的として宣言された配列は、プログラムの存続期間を通じて有効です。つまり、配列を宣言する関数が最初に呼び出されたときに、一度だけ初期化されます。,固定または静的と宣言されている場合、つまり、ストレージが割り当てられるとサイズを変更できませんが、そうでないストレージまたは動的なarraryのサイズは変更できます。,声明为静态的数组与未声明为静态的数组有什么区别？,声明为静态的数组在程序的整个生命周期内都有效；也就是说，当第一次调用声明数组的函数时，它们仅初始化一次。,如果将它们声明为固定或静态，则意味着一旦分配了存储空间便无法更改大小，但是可以调整大小或不调整大小。,ما الفرق بين المصفوفة المعلنة على أنها ثابتة والمصفوفة التي لا يتم الإعلان عنها؟,تعيش المصفوفات المعلنة على أنها ثابتة طوال عمر البرنامج ؛ أي ، يتم تهيئتها مرة واحدة فقط ، عندما يتم استدعاء الوظيفة التي تعلن عن المصفوفة لأول مرة.,إذا تم الإعلان عن أنها ثابتة أو ثابتة ، فهذا يعني أنه لا يمكنهم تغيير الحجم بمجرد تخصيص مساحة التخزين الخاصة بهم ، ولكن يمكن تغيير حجم التخزين غير الصحيح أو يمكن تغيير حجم التخزين الديناميكي.,"У чому різниця між масивом, оголошеним як статичний, і масивом, який не є?","Масиви, оголошені як статичні живі протягом усього терміну служби програми; тобто вони ініціалізуються лише один раз, коли функція, яка оголошує масив, вона викликається вперше.","якщо вони оголошені фіксованими або статичними, це означає, що вони не можуть змінити розмір після того, як їх пам&#39;ять буде виділено, проте той, який не є, або динамічні аргументи можна змінити.",Qual é a diferença entre uma matriz declarada como estática e outra que não é?,"Os arrays declarados como estáticos vivem durante toda a vida do programa; ou seja, eles são inicializados apenas uma vez, quando a função que declara o array é chamada pela primeira vez.","se forem declarados fixos ou estáticos, isso significa que não podem mudar de tamanho uma vez que seu armazenamento tenha sido alocado; no entanto, um que não seja ou arrarys dinâmicos pode ser redimensionado.",چه تفاوتی بین آرایه ای که بصورت استاتیک اعلام می شود و دیگری نیست؟,آرایه هایی که به عنوان ایستا در طول زندگی برنامه اعلام می شوند. یعنی فقط یک بار مقداردهی اولیه می شود ، وقتی تابعی که آرایه را برای اولین بار فراخوانی می کند.,اگر ثابت یا ساکن اعلام شوند ، به این معنی است که پس از اختصاص فضای ذخیره سازی ، نمی توانند اندازه را تغییر دهند ، اما یکی از موارد موجود نیست یا می توان اندازه های دلخواه پویا را تغییر داد.,Quina diferència hi ha entre una matriu declarada com estàtica i una que no ho és?,"Les matrius declarades estàtiques en directe durant tota la vida del programa; és a dir, només s’inicialitzen una vegada, quan s’anomena per primera vegada la funció que declara la matriu.","si es declaren fixes o estàtiques, vol dir que no poden canviar de mida un cop s&#39;hagi assignat el seu emmagatzematge, però es pot canviar la mida d&#39;un que no ho sigui o d&#39;un arrari dinàmic.",Која је разлика између низа који је проглашен статичким и оног који није?,"Низови декларисани као статични уживо током целог животног века програма; то јест, иницијализују се само једном, када се функција која декларише низ прво позове.","ако су проглашени фиксним или статичним, то значи да не могу променити величину након што им је меморија додељена, међутим она која није или динамички аррарс може се променити.","Apa perbedaan antara array yang dideklarasikan sebagai statis, dan yang tidak?","Array dideklarasikan sebagai live statis selama program berjalan; artinya, mereka diinisialisasi hanya sekali, ketika fungsi yang mendeklarasikan array yang dipanggil pertama kali.","jika mereka dideklarasikan tetap atau statis itu berarti mereka tidak dapat mengubah ukuran setelah penyimpanan mereka dialokasikan, namun salah satu yang tidak atau array dinamis dapat diubah ukurannya.","Hva er forskjellen mellom en matrise erklært som statisk, og en som ikke er det?","Arrangementene erklært som statisk lever gjennom hele programmets levetid; det vil si at de initialiseres bare en gang, når funksjonen som erklærer matrisen den først ble kalt.","hvis de blir erklært faste eller statiske, betyr det at de ikke kan endre størrelse når lagringen er tildelt, men en som ikke er eller dynamiske arranger kan endres.",정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,"정적으로 선언 된 배열은 프로그램의 수명 내내 살아 있습니다. 즉, 배열을 선언하는 함수가 처음 호출 될 때 한 번만 초기화됩니다.",고정 또는 정적으로 선언 된 경우 스토리지가 할당 된 후에는 크기를 변경할 수 없지만 그렇지 않거나 동적 지연이 크기를 조정할 수 있습니다.,"Mitä eroa on staattiseksi ilmoitetun taulukon ja sellaisen välillä, joka ei ole staattinen?","Staattisiksi ilmoitetut taulukot elävät ohjelman koko elinkaaren ajan; eli ne alustetaan vain kerran, kun ensin kutsutaan funktio, joka ilmoittaa matriisin.","jos ne ilmoitetaan kiinteiksi tai staattisiksi, se tarkoittaa, että he eivät voi muuttaa kokoa, kun niiden tallennustila on jaettu, mutta sellaisen, jota ei ole, tai dynaamisten ryhmien kokoa voidaan muuttaa.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikusnak nyilvánított tömbök a program teljes élettartama alatt élnek; vagyis csak egyszer inicializálódnak, amikor először meghívják azt a függvényt, amely deklarálja a tömböt.","Ha rögzítettnek vagy statikusnak nyilvánítják őket, az azt jelenti, hogy a tárterület kiosztása után nem tudnak méretet változtatni, azonban a nem vagy a dinamikus tömbök átméretezhetők.","Jaký je rozdíl mezi polem deklarovaným jako statické a tím, které není?","Pole deklarovaná jako statická živá po celou dobu životnosti programu; to znamená, že jsou inicializovány pouze jednou, když je funkce, která deklaruje pole, které je nejprve voláno.","pokud jsou deklarovány jako pevné nebo statické, což znamená, že po přidělení úložiště nemohou změnit velikost, lze však změnit velikost, která není, nebo dynamické přírůstky.",Koja je razlika između niza koji je deklariran kao statičan i onog koji nije?,"Nizovi deklarirani kao statični uživo tijekom cijelog životnog vijeka programa; to jest, inicijaliziraju se samo jednom, kada se funkcija koja deklarira niz prvi put pozove.","ako su proglašeni fiksnim ili statičnim, to znači da ne mogu mijenjati veličinu nakon što im je memorija dodijeljena, međutim ona koja nije ili dinamički arrars može se promijeniti."
368,368,2118,11.9,"It takes a large problem and splits it into two or more easier or faster solutions, and  makes for better readability.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",Briefly describe the divide-and-conquer paradigm.,4.5,"Teilen Sie ein Problem in kleinere Teilprobleme auf, lösen Sie sie rekursiv und kombinieren Sie die Lösungen zu einer Lösung für das ursprüngliche Problem.",Beschreiben Sie kurz das Paradigma der Teilung und Eroberung.,Es nimmt ein großes Problem auf und teilt es in zwei oder mehr einfachere oder schnellere Lösungen auf und sorgt für eine bessere Lesbarkeit.,Ihulagway sa mubu ang panig-ingnan sa pagkabahinbahin ug pagdaug.,"Bahina ang usa ka problema sa gagmay nga mga subproblems, sulbara kini pagbalik, ug pagkahuman isagol ang mga solusyon sa usa ka solusyon alang sa orihinal nga problema.","Gikinahanglan ang usa ka dako nga problema ug gibahin kini sa duha o labi pa nga kadali o labing tulin nga mga solusyon, ug gihimo kini nga labi ka dali mabasa.",Beskriv kort delnings- och erövringsparadigmet.,"Dela upp ett problem i mindre delproblem, lösa dem rekursivt och kombinera sedan lösningarna i en lösning för det ursprungliga problemet.",Det tar ett stort problem och delar upp det i två eller flera enklare eller snabbare lösningar och ger bättre läsbarhet.,Décrivez brièvement le paradigme diviser pour vaincre.,"Divisez un problème en sous-problèmes plus petits, résolvez-les de manière récursive, puis combinez les solutions en une solution pour le problème d&#39;origine.","Il prend un gros problème et le divise en deux ou plusieurs solutions plus faciles ou plus rapides, et permet une meilleure lisibilité.",Geef een korte beschrijving van het verdeel-en-heers-paradigma.,"Verdeel een probleem in kleinere deelproblemen, los ze recursief op en combineer de oplossingen vervolgens tot een oplossing voor het oorspronkelijke probleem.","Het neemt een groot probleem en splitst het op in twee of meer gemakkelijkere of snellere oplossingen, en zorgt voor een betere leesbaarheid.",Кратко опишите парадигму «разделяй и властвуй».,"Разделите проблему на более мелкие подзадачи, решите их рекурсивно, а затем объедините решения в решение исходной проблемы.","Он берет большую проблему и разбивает ее на два или более простых или более быстрых решения, что обеспечивает лучшую читаемость.",Descrivi brevemente il paradigma divide et impera.,"Dividere un problema in sottoproblemi più piccoli, risolverli in modo ricorsivo e quindi combinare le soluzioni in una soluzione per il problema originale.",Prende un grosso problema e lo divide in due o più soluzioni più facili o più veloci e migliora la leggibilità.,Describe brevemente el paradigma de divide y vencerás.,"Divida un problema en subproblemas más pequeños, resuélvalos de forma recursiva y luego combine las soluciones en una solución para el problema original.","Toma un problema grande y lo divide en dos o más soluciones más fáciles o más rápidas, y mejora la legibilidad.",Krótko opisz paradygmat „dziel i rządź”.,"Podziel problem na mniejsze podproblemy, rozwiąż je rekurencyjnie, a następnie połącz rozwiązania w rozwiązanie pierwotnego problemu.",Zajmuje się dużym problemem i dzieli go na dwa lub więcej łatwiejszych lub szybszych rozwiązań i zapewnia lepszą czytelność.,Mô tả ngắn gọn mô hình chia để trị.,"Chia một vấn đề thành các bài toán con nhỏ hơn, giải chúng một cách đệ quy, sau đó kết hợp các giải pháp thành một giải pháp cho vấn đề ban đầu.","Nó đưa ra một vấn đề lớn và chia nó thành hai hoặc nhiều giải pháp dễ dàng hơn hoặc nhanh hơn, đồng thời giúp dễ đọc hơn.",分割統治パラダイムについて簡単に説明します。,問題をより小さなサブ問題に分割し、それらを再帰的に解決してから、解決策を組み合わせて元の問題の解決策にします。,それは大きな問題を取り、それを2つ以上のより簡単またはより速い解決策に分割し、より良い読みやすさを実現します。,简要描述分而治之的范式。,将问题分成较小的子问题，递归地解决它们，然后将解决方案组合为原始问题的解决方案。,它要解决一个大问题，并将其分为两个或更多个更简单或更快速的解决方案，从而提高可读性。,صِف بإيجاز نموذج فرق تسد.,قسّم مشكلة إلى مشاكل فرعية أصغر ، وحلها بشكل متكرر ، ثم ادمج الحلول في حل للمشكلة الأصلية.,يتطلب الأمر مشكلة كبيرة ويقسمها إلى حلين أو أكثر أسهل أو أسرع ، ويؤدي إلى إمكانية قراءة أفضل.,Коротко опишіть парадигму «розділи і переможи».,"Поділіть задачу на менші підзадачі, розв&#39;яжіть їх рекурсивно, а потім об&#39;єднайте розв&#39;язки у рішення вихідної задачі.","Це приймає велику проблему, розбиває її на два або більше простіших або швидших рішень та покращує читабельність.",Descreva resumidamente o paradigma de dividir e conquistar.,"Divida um problema em subproblemas menores, resolva-os recursivamente e, em seguida, combine as soluções em uma solução para o problema original.","Ele pega um grande problema e o divide em duas ou mais soluções mais fáceis ou mais rápidas, o que torna a legibilidade melhor.",الگوی تقسیم و تسخیر را به طور خلاصه توصیف کنید.,یک مسئله را به زیرمشکلات کوچکتر تقسیم کنید ، آنها را به صورت بازگشتی حل کنید و سپس راه حل ها را برای حل مسئله اصلی ترکیب کنید.,این یک مشکل بزرگ را می گیرد و آن را به دو یا چند راه حل آسان تر یا سریعتر تقسیم می کند و باعث خوانایی بهتر می شود.,Descriviu breument el paradigma de dividir i conquerir.,"Dividiu un problema en subproblemes més petits, resoleu-los recursivament i, a continuació, combineu les solucions en una solució per al problema original.",Té un gran problema i el divideix en dues o més solucions més fàcils o més ràpides i facilita la llegibilitat.,Укратко опишите парадигму подели и освоји.,"Поделите проблем на мање потпроблеме, решите их рекурзивно, а затим комбинујте решења у решење за оригинални проблем.",Потребан је велики проблем и дели га на два или више лакших или бржих решења и омогућава бољу читљивост.,Jelaskan secara singkat paradigma bagi-dan-taklukkan.,"Bagilah masalah menjadi beberapa subproblem yang lebih kecil, selesaikan secara rekursif, lalu gabungkan solusi menjadi solusi untuk masalah aslinya.","Dibutuhkan masalah besar dan membaginya menjadi dua atau lebih solusi yang lebih mudah atau lebih cepat, dan membuatnya lebih mudah dibaca.",Beskriv kort splitt-og-erobre paradigmet.,"Del et problem i mindre delproblemer, løse dem rekursivt, og kombiner deretter løsningene til en løsning for det opprinnelige problemet.","Det tar et stort problem og deler det i to eller flere enklere eller raskere løsninger, og gir bedre lesbarhet.",분할 및 정복 패러다임을 간략하게 설명하십시오.,문제를 더 작은 하위 문제로 나누고 재귀 적으로 해결 한 다음 솔루션을 원래 문제에 대한 솔루션으로 결합합니다.,큰 문제가 발생하고 두 개 이상의 더 쉽고 빠른 솔루션으로 분할하여 가독성을 높입니다.,Kuvaile lyhyesti jaa ja valloita -paradigmaa.,"Jaa ongelma pienempiin alaongelmiin, ratkaise ne rekursiivisesti ja yhdistä sitten ratkaisut alkuperäisen ongelman ratkaisuksi.",Se vie suuren ongelman ja jakaa sen kahteen tai useampaan helpompaan tai nopeampaan ratkaisuun ja parantaa luettavuutta.,Röviden írja le a megosztani és meghódítani paradigmát.,"Osszon egy problémát kisebb részproblémákra, oldja meg rekurzívan, majd a megoldásokat egyesítse az eredeti probléma megoldására.","Nagy problémát igényel, és két vagy több könnyebb vagy gyorsabb megoldásra bontja, és jobb olvashatóságot eredményez.",Stručně popište paradigma rozděl a panuj.,"Rozdělte problém na menší dílčí problémy, řešte je rekurzivně a poté zkombinujte řešení do řešení původního problému.",Trvá velký problém a rozděluje jej na dvě nebo více jednodušších nebo rychlejších řešení a zajišťuje lepší čitelnost.,Ukratko opišite paradigmu podijeli i osvoji.,"Podijelite problem na manje potprobleme, riješite ih rekurzivno, a zatim kombinirajte rješenja u rješenje za izvorni problem.",Potreban je veliki problem i dijeli ga na dva ili više lakših ili bržih rješenja i omogućava bolju čitljivost.
369,369,607,3.7,Both are repetative and both have a end test.,They both involve repetition; they both have termination tests; they can both occur infinitely.,What are the similarities between iteration and recursion?,4.5,Sie beinhalten beide Wiederholungen; beide haben Abschlusstests; sie können beide unendlich auftreten.,Was sind die Ähnlichkeiten zwischen Iteration und Rekursion?,Beide wiederholen sich und beide haben einen Endtest.,Unsa ang pagkaparehas tali sa iteration ug recursion?,Parehas sila nga naglambigit sa pagsubli; pareho silang adunay mga pagsulay sa pagtapos; silang duha mahimong mahinabo sa walay katapusan.,Parehas nga nag-usab ug pareho adunay katapusan nga pagsulay.,Vilka är likheterna mellan iteration och rekursion?,De involverar båda upprepning; de har båda avslutningstester; de kan båda inträffa oändligt.,Båda är repetitiva och båda har ett slutprov.,Quelles sont les similitudes entre l&#39;itération et la récursivité?,Ils impliquent tous deux la répétition; ils ont tous deux des tests de terminaison; ils peuvent tous deux se produire à l&#39;infini.,Les deux sont répétitifs et ont tous deux un test final.,Wat zijn de overeenkomsten tussen iteratie en recursie?,Ze houden allebei herhaling in; ze hebben allebei beëindigingstests; ze kunnen beide oneindig voorkomen.,Beide zijn repetitief en hebben beide een eindtest.,В чем сходство итерации и рекурсии?,Оба они включают повторение; у них обоих есть тесты на завершение; они оба могут происходить бесконечно.,"Оба они повторяются, и у обоих есть конечный тест.",Quali sono le somiglianze tra iterazione e ricorsione?,Entrambi implicano la ripetizione; entrambi hanno test di terminazione; possono entrambi verificarsi all&#39;infinito.,Entrambi sono ripetitivi ed entrambi hanno un test finale.,¿Cuáles son las similitudes entre iteración y recursión?,Ambos implican repetición; ambos tienen pruebas de terminación; ambos pueden ocurrir infinitamente.,Ambos son repetitivos y ambos tienen una prueba final.,Jakie są podobieństwa między iteracją a rekurencją?,Oba wymagają powtórzeń; oboje mają testy terminacyjne; oba mogą występować w nieskończoność.,Oba są powtarzalne i oba mają test końcowy.,Điểm giống nhau giữa lặp và đệ quy là gì?,Cả hai đều liên quan đến sự lặp lại; cả hai đều có các bài kiểm tra chấm dứt; cả hai đều có thể xảy ra vô hạn.,Cả hai đều có uy tín và cả hai đều có bài kiểm tra kết thúc.,反復と再帰の類似点は何ですか？,それらは両方とも繰り返しを伴います。どちらにも終了テストがあります。どちらも無限に発生する可能性があります。,どちらも反復的であり、どちらも終了テストがあります。,迭代和递归之间有什么相似之处？,它们都涉及重复。他们都有终止测试；它们都可以无限地发生。,两者都是重复的，并且都具有最终测试。,ما هي أوجه التشابه بين التكرار والعودية؟,كلاهما ينطوي على التكرار ؛ كلاهما لديه اختبارات إنهاء ؛ كلاهما يمكن أن يحدث بلا حدود.,كلاهما متكرر وكلاهما لهما اختبار نهائي.,У чому подібність між ітерацією та рекурсією?,Вони обидва передбачають повторення; вони обидва мають тести на припинення; вони обидва можуть відбуватися нескінченно.,"Обидва повторюються, і обидва мають кінцевий тест.",Quais são as semelhanças entre iteração e recursão?,Ambos envolvem repetição; ambos têm testes de encerramento; ambos podem ocorrer infinitamente.,Ambos são repetitivos e têm um teste final.,شباهت های تکرار و بازگشت چیست؟,هر دو شامل تکرار است. هر دو آزمایش خاتمه دارند. هر دو می توانند بی نهایت رخ دهند.,هر دو تکراری هستند و هر دو تست پایان دارند.,Quines són les similituds entre la iteració i la recursió?,Tots dos impliquen repetició; tots dos tenen proves de terminació; tots dos es poden produir infinitament.,Tots dos són repetitius i tots dos tenen una prova final.,Које су сличности између итерације и рекурзије?,Обоје укључују понављање; обоје имају завршне тестове; могу се оба појавити бескрајно.,Оба се понављају и оба имају завршни тест.,Apa persamaan antara iterasi dan rekursi?,Keduanya melibatkan pengulangan; keduanya memiliki tes terminasi; keduanya bisa terjadi tanpa batas.,Keduanya berulang dan keduanya memiliki tes akhir.,Hva er likhetene mellom iterasjon og rekursjon?,De involverer begge repetisjon; de har begge termineringstester; de kan begge forekomme uendelig.,"Begge er repeterende, og begge har en sluttest.",반복과 재귀의 유사점은 무엇입니까?,둘 다 반복을 포함합니다. 둘 다 종료 테스트가 있습니다. 둘 다 무한히 발생할 수 있습니다.,둘 다 반복적이며 둘 다 최종 테스트가 있습니다.,Mitkä ovat iteraation ja rekursioiden yhtäläisyydet?,Molempiin liittyy toistoa; heillä molemmilla on lopetustestit; niitä molempia voi esiintyä loputtomasti.,Molemmat ovat toistuvia ja molemmilla on lopputesti.,Milyen hasonlóságok vannak az iteráció és a rekurzió között?,Mindkettő magában foglalja az ismétlést; mindkettőjüknek végződési tesztje van; mindkettő végtelenül előfordulhat.,"Mindkettő ismétlődő, és mindkettőnek van egy végvizsgálata.",Jaké jsou podobnosti mezi iterací a rekurzí?,Oba zahrnují opakování; oba mají terminační testy; oba se mohou vyskytovat nekonečně.,Oba se opakují a oba mají závěrečný test.,Koje su sličnosti između iteracije i rekurzije?,Oboje uključuju ponavljanje; oboje imaju završne testove; oboje se mogu pojaviti beskonačno.,Obje se ponavljaju i obje imaju završni test.
370,370,764,4.5,"when passing (in main) a multidimensional array to a function, no dimensions need be specified","All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,2.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?","Wenn Sie ein mehrdimensionales Array (hauptsächlich) an eine Funktion übergeben, müssen keine Dimensionen angegeben werden",Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.","kung ang pagpasa (sa panguna) usa ka multidimensional nga han-ay sa usa ka pag-andar, wala’y kinahanglan nga ipiho nga mga sukat",Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",vid överföring (i huvudsak) av en flerdimensionell matris till en funktion behöver inga dimensioner anges,Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.","lors du passage (en main) d&#39;un tableau multidimensionnel à une fonction, aucune dimension ne doit être spécifiée",Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.","bij het (in hoofdzaak) doorgeven van een multidimensionale array aan een functie, hoeven geen dimensies te worden gespecificeerd",Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.",при передаче (в основном) многомерного массива функции размеры не указываются,Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.","quando si passa (in main) un array multidimensionale a una funzione, non è necessario specificare le dimensioni",¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.","al pasar (en main) una matriz multidimensional a una función, no es necesario especificar dimensiones",Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.",podczas przekazywania (w głównej) tablicy wielowymiarowej do funkcji nie trzeba określać żadnych wymiarów,Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.","khi chuyển (trong main) một mảng nhiều chiều cho một hàm, không cần chỉ định kích thước",多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,多次元配列を（主に）関数に渡す場合、次元を指定する必要はありません,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,将多维数组（主要是）传递给函数时，无需指定维,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,عند تمرير (بشكل رئيسي) مصفوفة متعددة الأبعاد إلى دالة ، لا يلزم تحديد أبعاد,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.",при передачі (в основному) багатовимірного масиву функції не потрібно вказувати розміри,Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.","ao passar (em principal) uma matriz multidimensional para uma função, nenhuma dimensão precisa ser especificada",هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,هنگام عبور (به طور عمده) از یک آرایه چند بعدی به یک تابع ، هیچ ابعادی مشخص نمی شود,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.","en passar (principalment) una matriu multidimensional a una funció, no cal especificar cap dimensió",Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.","при прослеђивању (углавном) вишедимензионалног низа у функцију, не морају бити наведене димензије",Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.","ketika meneruskan (in main) array multidimensi ke suatu fungsi, tidak ada dimensi yang perlu ditentukan",Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.","når du (i hovedsak) overfører et flerdimensjonalt array til en funksjon, trenger ingen dimensjoner spesifiseres",다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,(메인에서) 다차원 배열을 함수에 전달할 때 차원을 지정할 필요가 없습니다.,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.","kun siirretään (pääosin) moniulotteinen taulukko funktiolle, mitoja ei tarvitse määrittää","Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","amikor egy többdimenziós tömböt átadunk egy függvénynek, akkor nem kell dimenziókat megadni",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.",při předávání (v hlavním) vícerozměrnému poli do funkce není třeba zadávat žádné rozměry,Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.","pri prosljeđivanju (uglavnom) višedimenzionalnog niza u funkciju, ne trebaju biti navedene dimenzije"
371,371,1742,10.3,A leaf is a child of a parent node that has no children nodes of its own.,A node that has no children.,What is a leaf?,5.0,Ein Knoten ohne Kinder.,Was ist ein Blatt?,"Ein Blatt ist ein untergeordnetes Element eines übergeordneten Knotens, das keine eigenen untergeordneten Knoten hat.",Unsa ang dahon?,Usa ka node nga wala’y mga anak.,Ang usa ka dahon usa ka anak sa usa ka node sa ginikanan nga wala’y kaugalingon nga mga node sa mga bata.,Vad är ett blad?,En nod som inte har några barn.,Ett blad är ett barn till en föräldernod som inte har några egna barnnoder.,Qu&#39;est-ce qu&#39;une feuille?,Un nœud qui n&#39;a pas d&#39;enfants.,Une feuille est un enfant d&#39;un nœud parent qui n&#39;a pas de nœuds enfants qui lui sont propres.,Wat is een blad?,Een knooppunt dat geen kinderen heeft.,Een blad is een kind van een bovenliggend knooppunt dat geen eigen onderliggende knooppunten heeft.,Что такое лист?,"Узел, у которого нет детей.","Лист - это дочерний элемент родительского узла, у которого нет собственных дочерних узлов.",Cos&#39;è una foglia?,Un nodo che non ha figli.,Una foglia è un elemento figlio di un nodo padre che non ha nodi figlio propri.,¿Qué es una hoja?,Un nodo que no tiene hijos.,Una hoja es un elemento secundario de un nodo padre que no tiene nodos secundarios propios.,Co to jest liść?,"Węzeł, który nie ma dzieci.","Liść jest dzieckiem węzła nadrzędnego, który nie ma własnych węzłów podrzędnych.",Lá là gì?,Một nút không có nút con.,Một lá là con của nút cha không có nút con nào của chính nó.,葉とは何ですか？,子を持たないノード。,リーフは、それ自体の子ノードを持たない親ノードの子です。,什么是叶子？,没有子节点的节点。,叶子是父节点的子节点，而其自身没有子节点。,ما هي الورقة؟,عقدة ليس لها أبناء.,الورقة هي فرع من عقدة أصل ليس لها عقد فرعية خاصة بها.,Що таке лист?,"Вузол, у якого немає дітей.","Листок - це дочірній матеріал батьківського вузла, який не має власних дочірніх вузлів.",O que é uma folha?,Um nó que não tem filhos.,Uma folha é filha de um nó pai que não possui nós filhos próprios.,برگ چیست؟,گره ای که فرزندی ندارد.,یک برگ فرزند گره والدی است که به خودی خود هیچ گره ای ندارد.,Què és una fulla?,Un node que no té fills.,Una fulla és un fill d&#39;un node pare que no té nodes propis.,Шта је лист?,Чвор који нема деце.,Лист је дете родитељског чвора који нема сопствени подређени чвор.,Apakah daun itu?,Node yang tidak memiliki anak.,Daun adalah anak dari simpul induk yang tidak memiliki simpul anak sendiri.,Hva er et blad?,En node som ikke har barn.,Et blad er et barn av en foreldrenode som ikke har egne barnnoder.,잎은 무엇입니까?,자식이없는 노드.,리프는 자체 자식 노드가없는 부모 노드의 자식입니다.,Mikä on lehti?,"Solmu, jolla ei ole lapsia.","Lehti on vanhemman solmun lapsi, jolla ei ole omia lapsisolmuja.",Mi a levél?,"Olyan csomópont, amelynek nincs gyermeke.","A levél egy szülőcsomópont gyermeke, amelynek nincsenek saját gyermekcsomópontjai.",Co je to list?,"Uzel, který nemá žádné děti.","List je potomkem nadřazeného uzlu, který nemá žádné vlastní podřízené uzly.",Šta je list?,Čvor koji nema djece.,List je dijete roditeljskog čvora koji nema vlastiti čvor djece.
372,372,236,2.2,Data member are variables that represent an attribute in a class definition.  Local variables declared in a function body cannot be used outside of that function body.  When a function terminates the values of its local variables are lost.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,What is the difference between a data member and a local variable inside a member function?,4.5,"Auf Datenelemente kann von allen Elementfunktionen innerhalb der Klassendefinition zugegriffen werden. Auf lokale Variablen kann nur innerhalb der Elementfunktion zugegriffen werden, die sie definiert.",Was ist der Unterschied zwischen einem Datenelement und einer lokalen Variablen innerhalb einer Elementfunktion?,"Datenelemente sind Variablen, die ein Attribut in einer Klassendefinition darstellen. In einem Funktionskörper deklarierte lokale Variablen können nicht außerhalb dieses Funktionskörpers verwendet werden. Wenn eine Funktion beendet wird, gehen die Werte ihrer lokalen Variablen verloren.",Unsa ang kalainan tali sa usa ka myembro sa datos ug usa ka lokal nga pagbag-o sa sulud sa kalihokan sa usa ka miyembro?,Ang mga myembro sa datos mahimo’g ma-access gikan sa bisan unsang gimbuhaton sa miyembro sa sulud sa defintion sa klase. Ang mga lokal nga pagbag-o mahimo ra nga ma-access sa sulud sa pagpaandar sa miyembro nga naghubit kanila.,Ang miyembro sa datos mga variable nga nagrepresentar sa usa ka hiyas sa usa ka kahulugan sa klase. Ang mga lokal nga pagbag-o nga gideklara sa usa ka function body dili mahimong gamiton sa gawas sa kanang function body. Kung nahuman na ang usa ka pagpaandar nawala ang mga kantidad sa mga lokal nga variable niini.,Vad är skillnaden mellan en datamedlem och en lokal variabel i en medlemsfunktion?,Datamedlemmar kan nås från alla medlemsfunktioner i klassdefinitionen. Lokala variabler kan endast nås i medlemsfunktionen som definierar dem.,Datamedlem är variabler som representerar ett attribut i en klassdefinition. Lokala variabler som deklareras i en funktionskropp kan inte användas utanför den funktionskroppen. När en funktion avslutas går värdena på dess lokala variabler förlorade.,Quelle est la différence entre un membre de données et une variable locale dans une fonction membre?,Les membres de données sont accessibles à partir de toutes les fonctions membres de la définition de classe. Les variables locales ne sont accessibles qu&#39;à l&#39;intérieur de la fonction membre qui les définit.,"Les membres de données sont des variables qui représentent un attribut dans une définition de classe. Les variables locales déclarées dans un corps de fonction ne peuvent pas être utilisées en dehors de ce corps de fonction. Lorsqu&#39;une fonction se termine, les valeurs de ses variables locales sont perdues.",Wat is het verschil tussen een gegevenslid en een lokale variabele binnen een lidfunctie?,Gegevensleden zijn toegankelijk vanuit alle lidfuncties binnen de klassedefinitie. Lokale variabelen zijn alleen toegankelijk binnen de lidfunctie die ze definieert.,"Gegevenslid zijn variabelen die een kenmerk in een klassendefinitie vertegenwoordigen. Lokale variabelen gedeclareerd in een functie-body kunnen niet buiten die functie-body worden gebruikt. Wanneer een functie wordt beëindigd, gaan de waarden van de lokale variabelen verloren.",В чем разница между элементом данных и локальной переменной внутри функции-члена?,"Доступ к элементам данных можно получить из любых функций-членов внутри определения класса. Доступ к локальным переменным можно получить только внутри функции-члена, которая их определяет.","Члены данных - это переменные, которые представляют атрибут в определении класса. Локальные переменные, объявленные в теле функции, не могут использоваться за пределами этого тела функции. Когда функция завершает работу, значения ее локальных переменных теряются.",Qual è la differenza tra un membro dati e una variabile locale all&#39;interno di una funzione membro?,È possibile accedere ai membri dati da qualsiasi funzione membro all&#39;interno della definizione della classe. È possibile accedere alle variabili locali solo all&#39;interno della funzione membro che le definisce.,"I membri dati sono variabili che rappresentano un attributo in una definizione di classe. Le variabili locali dichiarate in un corpo di funzione non possono essere utilizzate al di fuori di quel corpo di funzione. Quando una funzione termina, i valori delle sue variabili locali vengono persi.",¿Cuál es la diferencia entre un miembro de datos y una variable local dentro de una función miembro?,Se puede acceder a los miembros de datos desde cualquier función miembro dentro de la definición de clase. Solo se puede acceder a las variables locales dentro de la función miembro que las define.,"Los miembros de datos son variables que representan un atributo en una definición de clase. Las variables locales declaradas en el cuerpo de una función no se pueden usar fuera de ese cuerpo de función. Cuando una función termina, los valores de sus variables locales se pierden.",Jaka jest różnica między składową danych a zmienną lokalną wewnątrz funkcji składowej?,"Dostęp do członków danych można uzyskać z dowolnej funkcji składowej wewnątrz definicji klasy. Dostęp do zmiennych lokalnych można uzyskać tylko wewnątrz funkcji składowej, która je definiuje.","Składnik danych to zmienne, które reprezentują atrybut w definicji klasy. Zmiennych lokalnych zadeklarowanych w treści funkcji nie można używać poza treścią tej funkcji. Kiedy funkcja kończy działanie, wartości jej zmiennych lokalnych są tracone.",Sự khác biệt giữa một thành viên dữ liệu và một biến cục bộ bên trong một hàm thành viên là gì?,Các thành viên dữ liệu có thể được truy cập từ bất kỳ hàm thành viên nào bên trong định nghĩa lớp. Các biến cục bộ chỉ có thể được truy cập bên trong hàm thành viên định nghĩa chúng.,"Thành viên dữ liệu là các biến đại diện cho một thuộc tính trong định nghĩa lớp. Không thể sử dụng các biến cục bộ được khai báo trong thân hàm bên ngoài thân hàm đó. Khi một hàm kết thúc, các giá trị của các biến cục bộ của nó sẽ bị mất.",データメンバーとメンバー関数内のローカル変数の違いは何ですか？,データメンバーには、クラス定義内の任意のメンバー関数からアクセスできます。ローカル変数には、それらを定義するメンバー関数内でのみアクセスできます。,データメンバーは、クラス定義の属性を表す変数です。関数本体で宣言されたローカル変数は、その関数本体の外部では使用できません。関数が終了すると、そのローカル変数の値は失われます。,数据成员与成员函数内部的局部变量有什么区别？,可以从类定义内的任何成员函数访问数据成员。局部变量只能在定义它们的成员函数中访问。,数据成员是表示类定义中的属性的变量。在函数体中声明的局部变量不能在该函数体之外使用。当函数终止时，其局部变量的值将丢失。,ما هو الفرق بين عضو البيانات والمتغير المحلي داخل وظيفة العضو؟,يمكن الوصول إلى أعضاء البيانات من أي وظائف عضو داخل تعريف الفئة. لا يمكن الوصول إلى المتغيرات المحلية إلا داخل دالة العضو التي تحددها.,عضو البيانات عبارة عن متغيرات تمثل سمة في تعريف فئة. لا يمكن استخدام المتغيرات المحلية المعلنة في جسم الوظيفة خارج جسم الوظيفة. عندما تنتهي دالة ما ، تضيع قيم متغيراتها المحلية.,Яка різниця між елементом даних та локальною змінною всередині функції-члена?,"Доступ до членів даних можна отримати з будь-яких функцій-членів усередині визначення класу. Локальні змінні можуть бути доступні лише всередині функції-члена, яка їх визначає.","Член даних - це змінні, що представляють атрибут у визначенні класу. Локальні змінні, оголошені у тілі функції, не можуть використовуватися поза цим тілом функції. Коли функція завершує роботу, значення її локальних змінних втрачаються.",Qual é a diferença entre um membro de dados e uma variável local dentro de uma função de membro?,Os membros de dados podem ser acessados a partir de quaisquer funções de membro dentro da definição de classe. Variáveis locais só podem ser acessadas dentro da função membro que as define.,"Membro de dados são variáveis que representam um atributo em uma definição de classe. Variáveis locais declaradas em um corpo de função não podem ser usadas fora desse corpo de função. Quando uma função termina, os valores de suas variáveis locais são perdidos.",تفاوت بین یک عضو داده و یک متغیر محلی در داخل یک تابع عضو چیست؟,اعضای عضو داده را می توان از طریق توابع عضوی که در تعریف کلاس وجود دارد ، جستجو کرد. متغیرهای محلی فقط در داخل تابع عضوی که آنها را تعریف می کند قابل دسترسی هستند.,اعضای داده متغیرهایی هستند که یک ویژگی را در تعریف کلاس نشان می دهند. متغیرهای محلی اعلام شده در یک بدنه عملکردی نمی توانند خارج از آن بدنه عملکردی استفاده شوند. هنگامی که یک تابع پایان می یابد مقادیر متغیرهای محلی آن از بین می روند.,Quina diferència hi ha entre un membre de dades i una variable local dins d’una funció de membre?,Es pot accedir als membres de les dades des de qualsevol de les funcions dels membres dins de la definició de classe. Les variables locals només es poden accedir a la funció membre que les defineix.,"El membre de dades són variables que representen un atribut en una definició de classe. Les variables locals declarades en un cos de funció no es poden utilitzar fora d&#39;aquest cos de funcions. Quan una funció finalitza, es perden els valors de les seves variables locals.",Која је разлика између члана података и локалне променљиве унутар функције члана?,Члановима података може се приступити из било које функције члана унутар дефиниције класе. Локалним променљивим се може приступити само унутар функције члана која их дефинише.,"Члан података су променљиве које представљају атрибут у дефиницији класе. Локалне променљиве декларисане у телу функције не могу се користити изван тог тела функције. Када функција заврши, вредности њених локалних променљивих се губе.",Apa perbedaan antara anggota data dan variabel lokal di dalam fungsi anggota?,Anggota data dapat diakses dari fungsi anggota mana pun di dalam definisi kelas. Variabel lokal hanya dapat diakses di dalam fungsi anggota yang mendefinisikannya.,"Anggota data adalah variabel yang merepresentasikan atribut dalam definisi kelas. Variabel lokal yang dideklarasikan dalam badan fungsi tidak dapat digunakan di luar badan fungsi itu. Ketika suatu fungsi berakhir, nilai variabel lokalnya hilang.",Hva er forskjellen mellom et datamedlem og en lokal variabel i en medlemsfunksjon?,Datamedlemmer er tilgjengelige fra alle medlemsfunksjoner i klassedefinisjonen. Lokale variabler er bare tilgjengelige i medlemsfunksjonen som definerer dem.,"Datamedlem er variabler som representerer et attributt i en klassedefinisjon. Lokale variabler deklarert i en funksjonsdel kan ikke brukes utenfor den funksjonen. Når en funksjon avsluttes, går verdiene til de lokale variablene tapt.",멤버 함수 내에서 데이터 멤버와 지역 변수의 차이점은 무엇입니까?,데이터 멤버는 클래스 정의 내의 모든 멤버 함수에서 액세스 할 수 있습니다. 지역 변수는이를 정의하는 멤버 함수 내에서만 액세스 할 수 있습니다.,데이터 멤버는 클래스 정의에서 특성을 나타내는 변수입니다. 함수 본문에 선언 된 지역 변수는 해당 함수 본문 외부에서 사용할 수 없습니다. 함수가 종료되면 해당 지역 변수의 값이 손실됩니다.,Mitä eroa on datajäsenellä ja jäsenfunktion sisällä olevalla paikallisella muuttujalla?,Tietojäseniin pääsee mistä tahansa jäsentoiminnosta luokan määritelmän sisällä. Paikallisiin muuttujiin pääsee vain niitä määrittelevässä jäsenfunktiossa.,"Tietojäsen on muuttujia, jotka edustavat määritettä luokan määritelmässä. Funktiokappaleessa ilmoitettuja paikallisia muuttujia ei voida käyttää kyseisen funktion rungon ulkopuolella. Kun toiminto päättyy, paikallisten muuttujien arvot menetetään.",Mi a különbség az adattag és a tagfüggvényen belüli helyi változó között?,Az adattagok az osztálymeghatározáson belül bármely tagfunkcióból elérhetők. A helyi változók csak az őket meghatározó tagfüggvényen belül érhetők el.,"Az adattag olyan változók, amelyek az osztálydefinícióban attribútumot képviselnek. A függvénytestben deklarált helyi változók nem használhatók ezen a funkciótesten kívül. Amikor egy függvény leáll, a helyi változók értékei elvesznek.",Jaký je rozdíl mezi datovým členem a lokální proměnnou uvnitř členské funkce?,"K datovým členům lze přistupovat z jakékoli členské funkce uvnitř definice třídy. K lokálním proměnným lze přistupovat pouze uvnitř členské funkce, která je definuje.","Datový člen jsou proměnné, které představují atribut v definici třídy. Místní proměnné deklarované v těle funkce nelze použít mimo toto tělo funkce. Když funkce skončí, dojde ke ztrátě hodnot jejích lokálních proměnných.",Koja je razlika između člana podataka i lokalne varijable unutar funkcije člana?,Članovima podataka može se pristupiti iz bilo koje funkcije člana unutar definicije klase. Lokalnim varijablama može se pristupiti samo unutar funkcije člana koja ih definira.,"Član podataka su varijable koje predstavljaju atribut u definiciji klase. Lokalne varijable deklarirane u tijelu funkcije ne mogu se koristiti izvan tog tijela funkcije. Kad funkcija završi, vrijednosti njenih lokalnih varijabli se gube."
373,373,898,5.3,"The number of operations for insertions sort, under best-case, is  n(n-1)/2. The best case for insertion sort is on a sorted list where it runs is O(n).",N (the length of the array) operations achieved for a sorted array.,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",3.0,"N (die Länge des Arrays) Operationen, die für ein sortiertes Array erzielt wurden.","Wie viele Operationen müssen für die Einfügungssortierung in einem Best-Case-Szenario ausgeführt werden, und in welchem Best-Case-Szenario?","Die Anzahl der Operationen für die Sortierung von Einfügungen beträgt im besten Fall n (n-1) / 2. Der beste Fall für die Einfügesortierung ist in einer sortierten Liste, in der sie ausgeführt wird, O (n).","Unsa ang gidaghanon sa mga operasyon alang sa pagsulud nga sulud sa ilalum sa usa ka labing maayo nga kahimtang nga sitwasyon, ug unsa ang labing maayo nga sitwasyon nga hitabo?",N (ang gitas-on sa laray) nakamit ang mga operasyon alang sa usa ka gihan-ay nga laray.,"Ang ihap sa mga operasyon alang sa pagsulud sa pagsulud, ubos sa labing maayo nga kaso, mao ang n (n-1) / 2. Ang labing kaayo nga kaso alang sa pagsulud sa pagsulud naa sa usa ka gihan-ay nga lista diin kini modagan mao ang O (n).","Vad är antalet operationer för insättningssortering under ett bästa fall, och vad är det bästa fallet?",N (längden på matrisen) som uppnåtts för en sorterad matris.,Antalet operationer för insättningssortering är i bästa fall n (n-1) / 2. Det bästa fallet för insättningssortering finns i en sorterad lista där den körs är O (n).,Quel est le nombre d&#39;opérations pour le tri par insertion dans le meilleur des cas et quel est le meilleur des cas?,N (la longueur du tableau) opérations réalisées pour un tableau trié.,"Le nombre d&#39;opérations pour le tri des insertions, dans le meilleur des cas, est n (n-1) / 2. Le meilleur cas pour le tri par insertion est sur une liste triée où il s&#39;exécute est O (n).","Wat is het aantal bewerkingen voor invoegsortering in het beste geval, en wat is het beste scenario?",N (de lengte van de array) bewerkingen die zijn bereikt voor een gesorteerde array.,"Het aantal bewerkingen voor het sorteren van invoegingen is, in het beste geval, n (n-1) / 2. Het beste geval voor invoegsortering is op een gesorteerde lijst waar deze wordt uitgevoerd, is O (n).",Каково количество операций сортировки вставкой в лучшем случае и в каком сценарии лучше всего?,"N (длина массива) операций, выполненных для отсортированного массива.","Количество операций сортировки вставками в лучшем случае равно n (n-1) / 2. Наилучший случай для сортировки вставкой - в отсортированном списке, где она выполняется - O (n).",Qual è il numero di operazioni per l&#39;ordinamento per inserzione in uno scenario migliore e qual è lo scenario migliore?,N (la lunghezza dell&#39;array) operazioni ottenute per un array ordinato.,"Il numero di operazioni per l&#39;ordinamento degli inserimenti, nel migliore dei casi, è n (n-1) / 2. Il caso migliore per l&#39;ordinamento per inserzione è su un elenco ordinato in cui viene eseguito è O (n).",¿Cuál es la cantidad de operaciones para la ordenación por inserción en el mejor de los casos y cuál es el mejor de los casos?,N (la longitud de la matriz) operaciones logradas para una matriz ordenada.,"El número de operaciones para la ordenación de inserciones, en el mejor de los casos, es n (n-1) / 2. El mejor caso para la ordenación por inserción es en una lista ordenada donde se ejecuta es O (n).",Jaka jest liczba operacji sortowania przez wstawianie w ramach najlepszego scenariusza i jaki jest najlepszy scenariusz?,N (długość tablicy) operacji uzyskanych dla posortowanej tablicy.,"Liczba operacji sortowania przez wstawienia, w najlepszym przypadku, wynosi n (n-1) / 2. Najlepszym przypadkiem sortowania przez wstawianie jest posortowana lista, na której działa O (n).",Số hoạt động để sắp xếp chèn trong trường hợp tốt nhất là bao nhiêu và trường hợp tốt nhất là gì?,N (độ dài của mảng) hoạt động đạt được cho một mảng đã sắp xếp.,"Số hoạt động để sắp xếp chèn, trong trường hợp tốt nhất, là n (n-1) / 2. Trường hợp tốt nhất để sắp xếp chèn là trên danh sách đã sắp xếp mà nó chạy là O (n).",最良のシナリオでの挿入ソートの操作数と、最良のシナリオは何ですか？,ソートされた配列に対して達成されたN（配列の長さ）操作。,最良の場合、挿入ソートの操作数はn（n-1）/ 2です。挿入ソートの最良のケースは、それが実行されるソート済みリストでO（n）です。,在最佳情况下，插入排序的操作数是多少？最佳情况是什么？,已排序的数组完成了N次（数组的长度）操作。,在最佳情况下，用于插入排序的操作数为n（n-1）/ 2。插入排序的最佳情况是在运行的排序列表上为O（n）。,ما هو عدد العمليات لفرز الإدراج ضمن سيناريو أفضل حالة ، وما هو أفضل سيناريو؟,تم تحقيق N (طول المصفوفة) لعمليات مصفوفة مرتبة.,عدد العمليات لفرز عمليات الإدراج ، تحت أفضل حالة ، هو n (n-1) / 2. أفضل حالة لفرز الإدراج في قائمة مرتبة حيث يتم تشغيلها هي O (n).,"Яка кількість операцій для сортування вставки за найкращим сценарієм, і який найкращий варіант?","N (довжина масиву) операції, досягнуті для відсортованого масиву.","Кількість операцій для сортування вкладок у найкращому випадку дорівнює n (n-1) / 2. Найкращий випадок для сортування вставки - це відсортований список, де він виконується, - O (n).",Qual é o número de operações para classificação por inserção em um cenário de melhor caso e qual é o cenário de melhor caso?,N (o comprimento da matriz) operações obtidas para uma matriz classificada.,"O número de operações para classificação de inserções, no melhor caso, é n (n-1) / 2. O melhor caso para classificação por inserção é em uma lista classificada onde é executado é O (n).",تعداد عملیات برای مرتب سازی درج در یک سناریوی بهترین حالت چقدر است و بهترین سناریو کدام است؟,N (طول آرایه) عملیاتی که برای یک آرایه مرتب شده بدست می آید.,تعداد عملیات برای مرتب سازی درج ها ، در بهترین حالت ، n (n-1) / 2 است. بهترین حالت برای مرتب سازی درج ، لیست مرتب شده ای است که در آن اجرا شود O (n) است.,Quin és el nombre d&#39;operacions per ordenar la inserció en un escenari del millor cas i quin és el millor cas?,N (la longitud de la matriu) operacions aconseguides per a una matriu ordenada.,"El nombre d’operacions per ordenar les insercions, en el millor dels casos, és n (n-1) / 2. El millor cas per ordenar la inserció es troba en una llista ordenada on s&#39;executa és O (n).","Који је број операција за сортирање уметања у најбољем случају, а који у најбољем случају?",Н (дужина низа) операција постигнутих за сортирани низ.,"Број операција за сортирање уметања, у најбољем случају, је н (н-1) / 2. Најбољи случај за сортирање уметања је на сортираној листи где се покреће О (н).","Berapa jumlah operasi untuk pengurutan penyisipan dalam skenario kasus terbaik, dan apa skenario kasus terbaik?",Operasi N (panjang array) dicapai untuk array yang diurutkan.,"Jumlah operasi untuk penyisipan sortir, dalam kasus terbaik, adalah n (n-1) / 2. Kasus terbaik untuk sortir penyisipan ada pada daftar yang diurutkan yang dijalankan adalah O (n).","Hva er antall operasjoner for innsettingssortering under et best-case-scenario, og hva er best-case-scenariet?",N (lengden på matrisen) operasjoner oppnådd for en sortert matrise.,"Antall operasjoner for sortering av innsettinger, i beste fall, er n (n-1) / 2. Det beste tilfellet for sortering av innsetting er på en sortert liste der den kjører er O (n).",최상의 시나리오에서 삽입 정렬을위한 작업의 수와 최상의 시나리오는 무엇입니까?,정렬 된 배열에 대해 수행 된 N (배열의 길이) 작업.,삽입 정렬 작업의 수는 최상의 경우 n (n-1) / 2입니다. 삽입 정렬의 가장 좋은 경우는 O (n)이 실행되는 정렬 된 목록에 있습니다.,Mikä on parhaan mahdollisen skenaarion mukaan lisättävien toimintojen määrä ja mikä on paras tapaus?,"N (matriisin pituus) operaatiota, jotka on saatu lajitellulle taulukolle.","Parhaan tapauksen mukaan lisäysten lajittelun operaatioiden määrä on n (n-1) / 2. Paras tapa sijoituslajittelulle on lajiteltu luettelo, jossa se suoritetaan, on O (n).","Mennyi a beillesztési műveletek száma a legjobb forgatókönyv szerint, és mi a legjobb eset?",N (a tömb hossza) rendezett tömbnél elért műveletek.,"A beillesztési műveletek száma a legjobb esetben n (n-1) / 2. A beszúrási rendezés legjobb esete egy rendezett listán, ahol fut (O).",Jaký je počet operací pro třídění vložení v případě nejlepšího scénáře a jaký je nejlepší případ?,N (délka pole) operace dosažené pro tříděné pole.,"Počet operací pro třídění vložení je v nejlepším případě n (n-1) / 2. Nejlepším případem pro třídění vložení je seřazený seznam, kde je spuštěn, je O (n).","Koji je broj operacija za sortiranje umetanja u najboljem scenariju, a koji je najbolji slučaj?",N (dužina niza) operacija postignutih za sortirani niz.,"Broj operacija za sortiranje umetanja, u najboljem slučaju, je n (n-1) / 2. Najbolji slučaj za sortiranje umetanja je na sortiranoj listi gdje se izvodi O (n)."
374,374,1599,9.4,"You create a list of nodes that had a head and a top pointer, and the functions are basically the same substituting pop and push with enqueue and dequeue","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",How can you implement a queue with a list?,3.0,"Lassen Sie die Rückseite der Warteschlange auf das Ende der verknüpften Liste zeigen, sodass die Warteschlangenoperation am Ende der Liste ausgeführt wird, und halten Sie die Vorderseite der Warteschlange auf den Kopf der verknüpften Liste, damit die Warteschlangenoperation ausgeführt wird am Anfang der Liste.",Wie können Sie eine Warteschlange mit einer Liste implementieren?,"Sie erstellen eine Liste von Knoten, die einen Kopf und einen oberen Zeiger hatten, und die Funktionen sind im Grunde die gleichen, die Pop und Push durch Enqueue und Dequeue ersetzen",Giunsa nimo ipatuman ang usa ka pila nga adunay lista?,"Ipadayon ang likud sa pila nga nagpunting sa ikog sa nalambigit nga lista, mao nga ang enqueue nga operasyon gihimo sa katapusan sa lista, ug ipadayon ang atubangan sa pila nga nagtudlo sa ulohan sa na-link nga lista, mao nga nahuman ang operasyon sa dequeue sa pagsugod sa lista.","Naghimo ka usa ka lista sa mga node nga adunay ulo ug usa ka top pointer, ug ang mga gimbuhaton parehas nga parehas nga mopuli sa pop ug iduso sa enqueue ug dequeue",Hur kan du implementera en kö med en lista?,"Håll den bakre delen av kön pekande mot svansen på den länkade listan, så enqueue-operationen görs i slutet av listan och håll den främre delen av kön pekande mot huvudet på den länkade listan, så att dequeue-operationen är klar i början av listan.","Du skapar en lista med noder som hade ett huvud och en topppekare, och funktionerna är i princip samma som ersätter pop och push med enqueue och dequeue",Comment pouvez-vous implémenter une file d&#39;attente avec une liste?,"Gardez l&#39;arrière de la file d&#39;attente pointant vers la fin de la liste liée, de sorte que l&#39;opération de mise en file d&#39;attente soit effectuée à la fin de la liste, et gardez l&#39;avant de la file d&#39;attente pointant vers la tête de la liste liée, de sorte que l&#39;opération de retrait de la file d&#39;attente soit effectuée au début de la liste.","Vous créez une liste de nœuds qui avaient une tête et un pointeur supérieur, et les fonctions sont fondamentalement les mêmes en remplaçant pop et push avec mise en file d&#39;attente et retrait de la file d&#39;attente",Hoe implementeer je een wachtrij met een lijst?,"Houd de achterkant van de wachtrij naar de staart van de gekoppelde lijst, zodat de bewerking voor het in de wachtrij plaatsen aan het einde van de lijst wordt uitgevoerd en laat de voorkant van de wachtrij naar de kop van de gekoppelde lijst wijzen, zodat de bewerking voor het verwijderen van de wachtrij is voltooid aan het begin van de lijst.","U maakt een lijst met knooppunten met een kop en een bovenste aanwijzer, en de functies zijn in feite hetzelfde, waarbij u pop en push vervangt door enqueue en dequeue",Как можно реализовать очередь со списком?,"Задняя часть очереди должна указывать на конец связанного списка, чтобы операция постановки в очередь выполнялась в конце списка, а передняя часть очереди должна указывать на начало связанного списка, поэтому операция удаления из очереди выполняется в начале списка.","Вы создаете список узлов, у которых есть голова и верхний указатель, и функции в основном те же, заменяя pop и push на enqueue и dequeue.",Come puoi implementare una coda con un elenco?,"Mantieni la parte posteriore della coda che punta alla coda della lista collegata, quindi l&#39;operazione di accodamento viene eseguita alla fine della lista e mantieni la parte anteriore della coda puntata all&#39;inizio della lista collegata, quindi l&#39;operazione di rimozione dalla coda è fatta all&#39;inizio della lista.","Crei un elenco di nodi che avevano una testa e un puntatore in alto, e le funzioni sono fondamentalmente le stesse sostituendo pop e push con enqueue e dequeue",¿Cómo se puede implementar una cola con una lista?,"Mantenga la parte posterior de la cola apuntando a la cola de la lista vinculada, de modo que la operación de puesta en cola se realice al final de la lista, y mantenga la parte delantera de la cola apuntando al encabezado de la lista vinculada, para que la operación de eliminación de la cola esté lista al principio de la lista.","Creas una lista de nodos que tenían una cabeza y un puntero superior, y las funciones son básicamente las mismas sustituyendo pop y push con enqueue y dequeue",Jak zaimplementować kolejkę z listą?,"Utrzymuj tył kolejki skierowany na koniec połączonej listy, aby operacja umieszczania w kolejce była wykonywana na końcu listy i utrzymuj przód kolejki skierowany na początek połączonej listy, aby operacja usunięcia z kolejki została zakończona na początku listy.","Tworzysz listę węzłów, które miały nagłówek i górny wskaźnik, a funkcje są w zasadzie takie same, zastępując pop i push z kolejką i dekolejką",Làm thế nào bạn có thể triển khai một hàng đợi với một danh sách?,"Giữ phần phía sau của hàng đợi trỏ đến phần cuối của danh sách được liên kết, do đó, hoạt động xếp hàng được thực hiện ở cuối danh sách và giữ phần phía trước của hàng đợi trỏ đến phần đầu của danh sách được liên kết, do đó hoạt động xếp hàng được thực hiện ở đầu danh sách.",Bạn tạo một danh sách các nút có một đầu và một con trỏ trên cùng và các chức năng về cơ bản giống nhau thay thế pop và push bằng enqueue và dequeue,リストを使用してキューを実装するにはどうすればよいですか？,キューの後ろがリンクリストの末尾を指すようにして、エンキュー操作がリストの最後を指すようにし、キューの前をリンクリストの先頭を指すようにして、デキュー操作が行われるようにします。リストの最初に。,ヘッドポインタとトップポインタを持つノードのリストを作成します。関数は基本的に同じで、ポップとプッシュをエンキューとデキューに置き換えます。,如何实现带有列表的队列？,使队列的尾部指向链接列表的末尾，因此入队操作在列表的末尾进行，使队列的前部指向链接列表的头，因此完成出队操作在列表的开头。,您创建一个具有头和顶部指针的节点列表，其功能基本上是相同的，用pop和push代替enqueue和dequeue,كيف يمكنك تنفيذ قائمة انتظار مع قائمة؟,احتفظ بالجزء الخلفي من قائمة الانتظار يشير إلى ذيل القائمة المرتبطة ، بحيث تتم عملية قائمة الانتظار في نهاية القائمة ، واحتفظ بمقدمة قائمة الانتظار تشير إلى رأس القائمة المرتبطة ، بحيث تتم عملية إنهاء قائمة الانتظار في بداية القائمة.,تقوم بإنشاء قائمة بالعقد التي تحتوي على رأس ومؤشر علوي ، والوظائف هي في الأساس نفس الوظائف التي تستبدل البوب والضغط مع قائمة الانتظار وإلغاء الصف,Як можна реалізувати чергу зі списком?,"Тримайте задню частину черги, спрямовану на хвіст пов’язаного списку, таким чином, операція чергування виконується в кінці списку, а передня частина черги вказує на голову пов’язаного списку, таким чином, операція скидання виконується на початку списку.","Ви створюєте список вузлів, які мали головку та верхній вказівник, і функції в основному однакові, замінюючи pop і push на enqueue і dequeue",Como você pode implementar uma fila com uma lista?,"Mantenha a parte traseira da fila apontando para o final da lista vinculada, para que a operação de enfileiramento seja feita no final da lista, e mantenha a frente da fila apontando para o início da lista vinculada, para que a operação de desenfileiramento seja feita no início da lista.","Você cria uma lista de nós que tinha uma cabeça e um ponteiro superior, e as funções são basicamente as mesmas substituindo pop e push por enfileirar e retirar da fila",چگونه می توان صف را با لیست پیاده سازی کرد؟,قسمت عقب صف را به سمت انتهای لیست پیوندی نگه دارید ، بنابراین عملیات enqueue در انتهای لیست انجام می شود و قسمت جلوی صف را به سمت سر لیست پیوندی نگه دارید ، بنابراین عملیات حذف نتیجه انجام می شود در ابتدای لیست.,شما لیستی از گره ها را ایجاد می کنید که دارای یک سر و یک اشاره گر بالا هستند ، و توابع در واقع همان پاپ جایگزین هستند و با enqueue و dequeue فشار می دهند,Com es pot implementar una cua amb una llista?,"Mantingueu la part posterior de la cua apuntant a la cua de la llista enllaçada, de manera que l&#39;operació de cola es realitzarà al final de la llista i mantingueu la part frontal de la cua apuntant cap al cap de la llista enllaçada, de manera que l&#39;operació de cola es realitzi. al principi de la llista.","Creeu una llista de nodes que tenien un capçal i un punter superior, i les funcions són bàsicament les mateixes substituint pop i push per enqueue i dequeue",Како можете да примените ред са листом?,"Задњи део реда задржите тако да показује на реп повезане листе, тако да се операција чекања обавља на крају листе, а чек ред нека буде усмјерен на главу повезане листе, тако да је операција уклањања редоследа завршена на почетку списка.","Креирате листу чворова који су имали главу и горњи показивач, а функције су у основи исте замењивање поп и пусх са енкуеуе и декуеуе",Bagaimana Anda bisa menerapkan antrian dengan daftar?,"Pertahankan bagian belakang antrian mengarah ke bagian belakang daftar tertaut, sehingga operasi antrean dilakukan di akhir daftar, dan pertahankan bagian depan antrean mengarah ke kepala daftar tertaut, sehingga operasi dequeue selesai di awal daftar.","Anda membuat daftar node yang memiliki kepala dan penunjuk atas, dan fungsinya pada dasarnya sama menggantikan pop dan push dengan enqueue dan dequeue",Hvordan kan du implementere en kø med en liste?,"Hold baksiden av køen pekende mot halen på den koblede listen, slik at enqueue-operasjonen gjøres på slutten av listen, og hold forsiden av køen pekende mot hodet til den koblede listen, slik at dequeue-operasjonen er ferdig i begynnelsen av listen.","Du oppretter en liste over noder som hadde et hode og en topppeker, og funksjonene er i utgangspunktet de samme som erstatter pop og push med enqueue og dequeue",목록이있는 대기열을 어떻게 구현할 수 있습니까?,대기열의 뒤쪽이 연결된 목록의 끝을 가리 키도록 유지하여 대기열에 넣기 작업이 목록의 끝에서 수행되도록하고 대기열의 앞쪽이 연결된 목록의 머리를 가리 키도록 유지하여 대기열에서 빼기 작업이 수행되도록합니다. 목록의 시작 부분에.,"헤드와 상단 포인터가있는 노드 목록을 생성하고, 기능은 기본적으로 팝과 푸시를 대기열에 넣고 빼기로 대체하는 것과 동일합니다.",Kuinka voit toteuttaa jonon luettelon kanssa?,"Pidä jonon takaosaa linkitetyn luettelon hännään päin, jotta enqueue-toiminto tehdään luettelon lopussa, ja pidä jonon etu osoittavan linkitetyn luettelon päähän, joten purkotoiminto on valmis luettelon alussa.","Luodaan luettelo solmuista, joilla oli pää ja yläosoitin, ja toiminnot ovat periaatteessa samat, jotka korvaavat popin ja pushin enqueue ja dequeue",Hogyan lehet megvalósítani a listát tartalmazó várólistát?,"Tartsa a sor hátulját a csatolt lista farka felé mutatva, így az enqueue műveletet a lista végén hajtja végre, és a sor elejét tartsa a linkelt lista fejére mutatva, így a dequeue művelet megtörténik a lista elején.","Létrehozza azoknak a csomópontoknak a listáját, amelyeknek volt feje és felső mutatója, és a funkciók alapvetően megegyeznek azzal, hogy a pop and push-ot az enqueue és a dequeue helyettesítik.",Jak můžete implementovat frontu se seznamem?,"Udržujte zadní část fronty směřující na konec propojeného seznamu, aby se operace zařazení do fronty prováděla na konci seznamu, a udržujte přední část fronty směřující k hlavě propojeného seznamu, aby se operace zrušení fronty prováděla na začátku seznamu.","Vytvoříte seznam uzlů, které mají hlavu a horní ukazatel, a funkce jsou v zásadě stejné, nahrazují pop a push pomocí enqueue a dequeue",Kako možete implementirati red sa popisom?,"Zadnji dio reda neka bude usmjeren na rep povezane liste, tako da se operacija čekanja vrši na kraju popisa, a prednji dio reda mora biti usmjeren na glavu povezane liste, tako da je izvršena operacija uklanjanja reda na početku liste.","Stvorite listu čvorova koji su imali glavu i gornji pokazivač, a funkcije su u osnovi iste zamjene pop i push s enqueue i dequeue"
375,375,1176,7.2,Does not have a fixed size. Linked list is able to grow as needed. The time to access an array bases list takes a contant amount of time where as an linked-base like depends on 'i',The linked lists can be of variable length.,What is the main advantage of linked lists over arrays?,5.0,Die verknüpften Listen können von variabler Länge sein.,Was ist der Hauptvorteil von verknüpften Listen gegenüber Arrays?,"Hat keine feste Größe. Die verknüpfte Liste kann nach Bedarf erweitert werden. Die Zeit für den Zugriff auf eine Array-Basenliste nimmt eine konstante Zeit in Anspruch, wobei eine verknüpfte Basis wie &#39;i&#39; abhängt.",Unsa ang punoan nga bentaha sa mga nalambigit nga lista sa mga pag-array?,Ang gilakip nga mga lista mahimong adunay gitas-on nga variable.,Wala’y takdang gidak-on. Ang lista nga adunay kalabutan makahimo sa pagtubo kung gikinahanglan. Ang oras sa pag-access sa usa ka lista sa bases nga lista nagkinahanglan us aka oras sa us aka oras diin ingon usa ka na-link nga base sama nagsalig sa &#39;i&#39;,Vad är den största fördelen med länkade listor jämfört med matriser?,De länkade listorna kan ha varierande längd.,Har inte en fast storlek. Länkad lista kan växa efter behov. Tiden för att komma åt en lista över arraybaser tar mycket tid där som en länkad bas som beror på &#39;jag&#39;,Quel est le principal avantage des listes chaînées par rapport aux tableaux?,Les listes chaînées peuvent être de longueur variable.,N&#39;a pas de taille fixe. La liste liée peut s&#39;agrandir selon les besoins. Le temps pour accéder à une liste de bases de tableau prend un laps de temps continu alors qu&#39;une base liée comme dépend de &#39;i&#39;,Wat is het belangrijkste voordeel van gekoppelde lijsten ten opzichte van arrays?,De gekoppelde lijsten kunnen een variabele lengte hebben.,"Heeft geen vaste maat. De gekoppelde lijst kan naar behoefte worden uitgebreid. De tijd om toegang te krijgen tot een lijst met array-bases kost een constante hoeveelheid tijd, terwijl een linked-base-like afhankelijk is van &#39;i&#39;",В чем главное преимущество связанных списков перед массивами?,Связанные списки могут быть переменной длины.,"Не имеет фиксированного размера. Связанный список может увеличиваться по мере необходимости. Время для доступа к списку баз массива занимает постоянное количество времени, в то время как связанная база, например, зависит от &#39;i&#39;",Qual è il vantaggio principale degli elenchi collegati rispetto agli array?,Le liste collegate possono essere di lunghezza variabile.,Non ha una dimensione fissa. L&#39;elenco collegato può crescere secondo necessità. Il tempo per accedere a un elenco di basi di array richiede una quantità di tempo costante in cui come una base collegata come dipende da &#39;i&#39;,¿Cuál es la principal ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas pueden tener una longitud variable.,"No tiene un tamaño fijo. La lista vinculada puede crecer según sea necesario. El tiempo para acceder a una lista de bases de matriz toma una cantidad constante de tiempo, mientras que una base vinculada como depende de &#39;i&#39;",Jaka jest główna przewaga połączonych list nad tablicami?,Połączone listy mogą mieć różną długość.,"Nie ma stałego rozmiaru. Lista połączona może rosnąć w razie potrzeby. Czas uzyskania dostępu do listy baz tablic zajmuje stałą ilość czasu, gdy baza połączona, taka jak, zależy od „i”",Ưu điểm chính của danh sách liên kết so với mảng là gì?,Các danh sách được liên kết có thể có độ dài thay đổi.,Không có một kích thước cố định. Danh sách được liên kết có thể phát triển khi cần thiết. Thời gian để truy cập danh sách cơ sở mảng mất một khoảng thời gian liên tục trong đó như một cơ sở được liên kết phụ thuộc vào &#39;i&#39;,配列に対するリンクリストの主な利点は何ですか？,リンクリストは可変長にすることができます。,固定サイズはありません。リンクリストは必要に応じて増やすことができます。配列ベースリストにアクセスする時間は一定の時間がかかりますが、リンクベースのように「i」に依存します,链表相对于数组的主要优点是什么？,链表的长度可以变化。,没有固定大小。链接列表可以根据需要增长。访问数组基列表的时间要花费相当长的时间，其中像链接基一样依赖于“ i”,ما هي الميزة الرئيسية للقوائم المرتبطة على المصفوفات؟,يمكن أن تكون القوائم المرتبطة متغيرة الطول.,ليس لها حجم ثابت. القائمة المرتبطة قادرة على النمو حسب الحاجة. يستغرق وقت الوصول إلى قائمة قواعد المصفوفات قدرًا ثابتًا من الوقت حيث تعتمد القاعدة المرتبطة مثل &quot;i&quot;,Яка головна перевага пов’язаних списків над масивами?,Пов’язані списки можуть мати різну довжину.,"Не має фіксованого розміру. Зв’язаний список може зростати за потреби. Час доступу до списку баз масивів займає постійну кількість часу, коли як пов&#39;язана база, наприклад, залежить від &quot;i&quot;",Qual é a principal vantagem das listas vinculadas em relação às matrizes?,As listas vinculadas podem ter comprimento variável.,"Não tem tamanho fixo. A lista vinculada pode crescer conforme necessário. O tempo para acessar uma lista de bases de matriz leva uma quantidade constante de tempo, enquanto uma base vinculada depende de &#39;i&#39;",مزیت اصلی لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی می توانند از طول متغیر باشند.,اندازه ثابت ندارد لیست پیوندی در صورت لزوم قادر به رشد است. زمان دستیابی به لیست پایگاه های آرایه زمان مشخصی را می طلبد که در آنجا به عنوان یک لینک پیوندی به &quot;i&quot; بستگی دارد,Quin és el principal avantatge de les llistes enllaçades sobre les matrius?,Les llistes enllaçades poden tenir una longitud variable.,"No té una mida fixa. La llista enllaçada pot créixer segons sigui necessari. El temps per accedir a una llista de bases de matrius requereix una quantitat de temps contant en què, com una base enllaçada, depèn de &quot;i&quot;",Која је главна предност повезаних листа над низовима?,Повезане листе могу бити променљиве дужине.,Нема фиксну величину. Повезана листа може да расте по потреби. Време приступа листи база база узима константно време када као повезана база зависи од &#39;и&#39;,Apa keuntungan utama dari daftar tertaut dibandingkan array?,Panjang daftar tertaut bisa bervariasi.,Tidak memiliki ukuran tetap. Daftar tertaut dapat bertambah sesuai kebutuhan. Waktu untuk mengakses daftar basis larik membutuhkan waktu yang tidak sedikit sedangkan basis tertaut bergantung pada &#39;i&#39;,Hva er den største fordelen med koblede lister fremfor matriser?,De lenkede listene kan ha variabel lengde.,Har ikke fast størrelse. Koblet liste er i stand til å vokse etter behov. Tiden for å få tilgang til en liste over matrisebaser tar mye tid der som en koblet base som avhenger av &#39;jeg&#39;,배열에 비해 연결 목록의 주요 이점은 무엇입니까?,연결된 목록은 가변 길이 일 수 있습니다.,고정 된 크기가 없습니다. 연결 목록은 필요에 따라 확장 할 수 있습니다. 배열 기반 목록에 액세스하는 데 걸리는 시간은 연결된 기반이 &#39;i&#39;에 따라 달라지는 일정한 시간이 걸립니다.,Mikä on linkitettyjen luetteloiden tärkein etu matriiseihin nähden?,Linkitetyt luettelot voivat olla vaihtelevia pituisia.,"Ei ole kiinteää kokoa. Linkitetty luettelo pystyy kasvamaan tarpeen mukaan. Aika päästä matriisiperusluetteloon vie Contant aikaa, jolloin linkitettynä tukikohtana riippuu i: stä",Mi a linkelt listák fő előnye a tömbökhöz képest?,A linkelt listák változó hosszúságúak lehetnek.,"Nincs rögzített mérete. A linkelt lista szükség szerint képes növekedni. A tömbalapok listájának eléréséhez szükséges idő egy tartalmi időt vesz igénybe, ahol összekapcsolt bázisként az i-től függ",Jaká je hlavní výhoda propojených seznamů oproti polím?,Propojené seznamy mohou mít různou délku.,"Nemá pevnou velikost. Propojený seznam se může podle potřeby rozšiřovat. Čas přístupu k seznamu základen pole trvá neustále, kde jako propojená základna závisí na &#39;i&#39;",Koja je glavna prednost povezanih lista nad nizovima?,Povezane liste mogu biti promjenljive dužine.,Nema fiksnu veličinu. Povezana lista može se povećavati po potrebi. Vrijeme pristupa listi baza baza uzima konstantno vrijeme kad kao povezana baza ovisi o &#39;i&#39;
376,376,525,3.4,gives function ability to access and modify the caller's argument data directly,It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,3.5,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?","gibt der Funktion die Möglichkeit, direkt auf die Argumentdaten des Aufrufers zuzugreifen und diese zu ändern",Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,naghatag katakus sa pag-andar nga ma-access ug mabag-o nga direkta ang datos sa argumento sa nagtawag,Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,ger funktion möjlighet att få åtkomst till och ändra uppringarens argumentdata direkt,Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,donne à la fonction la possibilité d&#39;accéder et de modifier directement les données d&#39;argument de l&#39;appelant,Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,geeft functie de mogelijkheid om de argumentgegevens van de beller rechtstreeks te openen en te wijzigen,"Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,дает функции возможность доступа и изменения данных аргумента вызывающего абонента напрямую,Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,fornisce alla funzione la capacità di accedere e modificare direttamente i dati degli argomenti del chiamante,¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,le da a la función la capacidad de acceder y modificar los datos del argumento de la persona que llama directamente,"Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,daje funkcji możliwość bezpośredniego dostępu i modyfikowania danych argumentów wywołującego,Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,cung cấp cho chức năng khả năng truy cập và sửa đổi trực tiếp dữ liệu đối số của người gọi,参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,呼び出し元の引数データに直接アクセスして変更する機能を関数に提供します,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,使函数能够直接访问和修改调用者的参数数据,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,يعطي وظيفة القدرة على الوصول إلى بيانات وسيطة المتصل وتعديلها مباشرة,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,надає можливість функції отримувати безпосередній доступ до даних аргументів абонента та змінювати їх,Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,dá capacidade de função para acessar e modificar os dados do argumento do chamador diretamente,مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,به عملکرد امکان دسترسی مستقیم و مستقیم به داده های استدلال کننده تماس گیرنده را می دهد,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,proporciona la funció d&#39;accés i modificació directa de les dades d&#39;arguments de la persona que truca,Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,даје функцији могућност директног приступа и измене података аргумената позиваоца,Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,memberikan kemampuan fungsi untuk mengakses dan mengubah data argumen pemanggil secara langsung,Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,gir funksjon mulighet til å få tilgang til og modifisere innringerens argumentdata direkte,참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,호출자의 인수 데이터에 직접 액세스하고 수정할 수있는 기능을 제공합니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,antaa toiminnolle mahdollisuuden käyttää ja muokata soittajan argumenttitietoja suoraan,Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,funkció lehetővé teszi a hívó argumentumadatainak közvetlen elérését és módosítását,"Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,dává funkci schopnost přímého přístupu a úpravy dat argumentu volajícího,Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,daje funkciji mogućnost direktnog pristupa i izmjene podataka argumenata pozivatelja
377,377,1544,9.2,enqueue and dequeue,enqueue and dequeue,What are the two main functions defined by a queue?,5.0,Enqueue und Dequeue,Was sind die beiden Hauptfunktionen einer Warteschlange?,Enqueue und Dequeue,Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka pila?,enqueue ug dequeue,enqueue ug dequeue,Vilka är de två huvudfunktionerna som definieras av en kö?,enqueue och dequeue,enqueue och dequeue,Quelles sont les deux principales fonctions définies par une file d&#39;attente?,mettre en file d&#39;attente et retirer la file d&#39;attente,mettre en file d&#39;attente et retirer la file d&#39;attente,Wat zijn de twee belangrijkste functies die door een wachtrij worden gedefinieerd?,in de wachtrij plaatsen en uit de wachtrij halen,in de wachtrij plaatsen en uit de wachtrij halen,Какие две основные функции определяет очередь?,поставить в очередь и исключить из очереди,поставить в очередь и исключить из очереди,Quali sono le due funzioni principali definite da una coda?,accodare e rimuovere dalla coda,accodare e rimuovere dalla coda,¿Cuáles son las dos funciones principales definidas por una cola?,poner y quitar de la cola,poner y quitar de la cola,Jakie dwie główne funkcje definiuje kolejka?,enqueue i dequeue,enqueue i dequeue,Hai hàm chính được xác định bởi một hàng đợi là gì?,enqueue và dequeue,enqueue và dequeue,キューによって定義される2つの主な機能は何ですか？,エンキューおよびデキュー,エンキューおよびデキュー,队列定义的两个主要功能是什么？,入队和出队,入队和出队,ما هي الوظيفتان الرئيسيتان اللتان تحددهما قائمة الانتظار؟,قائمة و dequeue,قائمة و dequeue,Які дві основні функції визначаються чергою?,чергу та випуск,чергу та випуск,Quais são as duas funções principais definidas por uma fila?,enfileirar e retirar da fila,enfileirar e retirar da fila,دو عملکرد اصلی که توسط یک صف تعریف شده اند کدامند؟,enqueue و dequeue,enqueue و dequeue,Quines són les dues funcions principals definides per una cua?,cola i cola,cola i cola,Које су две главне функције дефинисане редом?,енкуеуе и декуеуе,енкуеуе и декуеуе,Apa dua fungsi utama yang ditentukan oleh antrian?,enqueue dan dequeue,enqueue dan dequeue,Hva er de to hovedfunksjonene definert av en kø?,enqueue og dequeue,enqueue og dequeue,대기열에서 정의하는 두 가지 주요 기능은 무엇입니까?,대기열에 넣기 및 대기열에서 빼기,대기열에 넣기 및 대기열에서 빼기,Mitkä ovat kaksi jonon määrittelemää päätoimintoa?,enqueue ja dequeue,enqueue ja dequeue,"Mi a két fő funkció, amelyet egy sor határoz meg?",enqueue és dequeue,enqueue és dequeue,Jaké jsou dvě hlavní funkce definované ve frontě?,zařazení do fronty a zařazení do fronty,zařazení do fronty a zařazení do fronty,Koje su dvije glavne funkcije definirane redom?,enqueue i dequeue,enqueue i dequeue
378,378,1379,8.3,"You allocate an pre-defined array, the bottom element is stored at element 0, and the last index is the head.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.0,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Sie ordnen ein vordefiniertes Array zu, das untere Element wird bei Element 0 gespeichert und der letzte Index ist der Kopf.",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.","Gigahin nimo ang usa ka paunang nahibal-an nga laray, ang elemento sa ilawom gitipig sa elemento 0, ug ang katapusang indeks mao ang ulo.",Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.","Du tilldelar en fördefinierad matris, det nedre elementet lagras vid element 0 och det sista indexet är huvudet.",Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.","Vous allouez un tableau prédéfini, l&#39;élément du bas est stocké à l&#39;élément 0 et le dernier index est la tête.",Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.","U wijst een vooraf gedefinieerde array toe, het onderste element wordt opgeslagen op element 0 en de laatste index is de kop.",Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","Вы выделяете заранее определенный массив, нижний элемент сохраняется в элементе 0, а последний индекс - это заголовок.",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.","Si alloca un array predefinito, l&#39;elemento inferiore viene memorizzato nell&#39;elemento 0 e l&#39;ultimo indice è la testa.",¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.","Usted asigna una matriz predefinida, el elemento inferior se almacena en el elemento 0 y el último índice es el encabezado.",Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","Alokujesz predefiniowaną tablicę, dolny element jest przechowywany w elemencie 0, a ostatnim indeksem jest nagłówek.",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.","Bạn phân bổ một mảng được xác định trước, phần tử dưới cùng được lưu trữ ở phần tử 0 và chỉ mục cuối cùng là phần đầu.",配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,事前定義された配列を割り当て、一番下の要素は要素0に格納され、最後のインデックスは先頭です。,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,您分配一个预定义的数组，底部元素存储在元素0中，最后一个索引是head。,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,تقوم بتخصيص مصفوفة محددة مسبقًا ، ويتم تخزين العنصر السفلي في العنصر 0 ، والفهرس الأخير هو الرأس.,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","Ви виділяєте заздалегідь визначений масив, нижній елемент зберігається в елементі 0, а останній індекс - це head.",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.","Você aloca um array predefinido, o elemento inferior é armazenado no elemento 0 e o último índice é o cabeçalho.",چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,شما یک آرایه از پیش تعریف شده را اختصاص می دهید ، عنصر پایین در عنصر 0 ذخیره می شود و آخرین شاخص head است.,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.","Assigneu una matriu predefinida, l&#39;element inferior s&#39;emmagatzema a l&#39;element 0 i l&#39;últim índex és el cap.",Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.","Додељујете унапред дефинисан низ, доњи елемент се чува у елементу 0, а последњи индекс је глава.",Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.","Anda mengalokasikan array yang telah ditentukan sebelumnya, elemen bawah disimpan di elemen 0, dan indeks terakhir adalah head.",Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.","Du tildeler en forhåndsdefinert matrise, det nederste elementet lagres på element 0, og den siste indeksen er hodet.",어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,미리 정의 된 배열을 할당하고 맨 아래 요소는 요소 0에 저장되며 마지막 인덱스는 헤드입니다.,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","Sinä varaat ennalta määritetyn taulukon, alaosa tallennetaan elementtiin 0 ja viimeinen hakemisto on pää.",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.","Kioszt egy előre definiált tömböt, az alsó elemet a 0 elem tárolja, és az utolsó index a fej.",Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","Přidělíte předdefinované pole, spodní prvek je uložen na prvku 0 a poslední index je hlava.",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.","Dodijelite unaprijed definirani niz, donji se element pohranjuje u element 0, a posljednji indeks je glava."
379,379,816,4.7,By rows.,By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",5.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?",Nach Zeilen.,"Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,Pinaagi sa mga laray.,"Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,Efter rader.,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,Par rangées.,"Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,Door rijen.,Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,По рядам.,"Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,Per righe.,"¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,Por filas.,"W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,Rzędy.,"Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,Theo hàng.,2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,行ごと。,二维数组如何按行或按列存储在内存中？,按行。,按行。,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,بالصفوف.,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,По рядах.,"Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,Por linhas.,آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,توسط ردیف ها.,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,Per files.,"Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,По редовима.,"Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,Menurut baris.,"Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,Etter rader.,"2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,행별.,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,Riveittäin.,"Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,Sorok szerint.,"Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,Řádky.,"Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,Po redovima.
380,380,674,4.2,"if by type string, the array contains an additional terminating null character",The strings declared using an array of characters have a null element added at the end of the array.,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,4.0,Bei den mit einem Zeichenarray deklarierten Zeichenfolgen wird am Ende des Arrays ein Nullelement hinzugefügt.,"Was ist der Hauptunterschied zwischen Zeichenfolgen, die mit dem Typ string deklariert wurden, und Zeichenfolgen, die mit einem Array von Zeichen deklariert wurden?","Wenn nach Typ Zeichenfolge, enthält das Array ein zusätzliches abschließendes Nullzeichen",Unsa ang punoan nga kalainan tali sa mga lubid nga gideklara nga gigamit ang type string kumpara sa mga string nga gideklara gamit ang usa ka han-ay nga mga karakter?,Ang mga kuwerdas nga gideklara gamit ang usa ka han-ay sa mga karakter adunay usa ka null nga elemento nga gidugang sa katapusan sa laray.,"kung pinaagi sa type string, ang array adunay sulud nga dugang nga pagtapos sa null nga karakter",Vad är den största skillnaden mellan strängar som deklareras med hjälp av typsträngen kontra strängar som deklareras med en rad tecken?,Strängarna som deklareras med en rad tecken har ett nollelement som läggs till i slutet av matrisen.,om efter typsträng innehåller matrisen ett ytterligare avslutande null-tecken,Quelle est la principale différence entre les chaînes déclarées à l&#39;aide de la chaîne de type et les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères?,Les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères ont un élément nul ajouté à la fin du tableau.,"si par type chaîne, le tableau contient un caractère nul de fin supplémentaire",Wat is het belangrijkste verschil tussen strings die zijn gedeclareerd met behulp van het type string versus strings die zijn gedeclareerd met een reeks tekens?,"De strings die zijn gedeclareerd met behulp van een reeks tekens, hebben een null-element toegevoegd aan het einde van de reeks.","als het type string is, bevat de array een extra afsluitend null-teken","В чем основное различие между строками, объявленными с использованием строки типа, и строками, объявленными с использованием массива символов?","Строки, объявленные с использованием массива символов, имеют нулевой элемент, добавленный в конец массива.","если по типу string, массив содержит дополнительный завершающий нулевой символ",Qual è la principale differenza tra le stringhe dichiarate utilizzando il tipo stringa e le stringhe dichiarate utilizzando un array di caratteri?,Le stringhe dichiarate utilizzando un array di caratteri hanno un elemento nullo aggiunto alla fine dell&#39;array.,"se per tipo stringa, l&#39;array contiene un carattere null di terminazione aggiuntivo",¿Cuál es la principal diferencia entre las cadenas declaradas con el tipo cadena y las cadenas declaradas con una matriz de caracteres?,Las cadenas declaradas usando una matriz de caracteres tienen un elemento nulo agregado al final de la matriz.,"si por tipo de cadena, la matriz contiene un carácter nulo de terminación adicional",Jaka jest główna różnica między ciągami zadeklarowanymi przy użyciu typu string a ciągami zadeklarowanymi przy użyciu tablicy znaków?,Ciągi zadeklarowane przy użyciu tablicy znaków mają na końcu dodany element o wartości null.,"jeśli według typu string, tablica zawiera dodatkowy kończący znak null",Sự khác biệt chính giữa các chuỗi được khai báo bằng cách sử dụng chuỗi kiểu so với các chuỗi được khai báo bằng cách sử dụng một mảng ký tự là gì?,Các chuỗi được khai báo bằng cách sử dụng một mảng ký tự có một phần tử rỗng được thêm vào cuối mảng.,"nếu theo kiểu chuỗi, mảng chứa một ký tự null kết thúc bổ sung",文字列型を使用して宣言された文字列と文字の配列を使用して宣言された文字列の主な違いは何ですか？,文字の配列を使用して宣言された文字列には、配列の最後にnull要素が追加されています。,文字列型の場合、配列には追加の終了ヌル文字が含まれます,使用字符串类型声明的字符串与使用字符数组声明的字符串之间的主要区别是什么？,使用字符数组声明的字符串在数组末尾添加了一个null元素。,如果按字符串类型，则数组包含一个附加的终止空字符,ما هو الفرق الرئيسي بين الجمل المعلنة باستخدام سلسلة النوع مقابل الجمل المعلنة باستخدام مصفوفة من الأحرف؟,السلاسل المعلنة باستخدام مصفوفة من الأحرف لها عنصر فارغ يضاف في نهاية المصفوفة.,إذا كان من خلال سلسلة النوع ، فإن المصفوفة تحتوي على حرف فارغ إضافي إنهاء,"Яка основна різниця між рядками, оголошеними за допомогою типу string, від рядків, оголошених за допомогою масиву символів?","Рядки, оголошені за допомогою масиву символів, мають нульовий елемент, доданий в кінці масиву.","якщо за типом рядок, масив містить додатковий закінчувальний нульовий символ",Qual é a principal diferença entre strings declaradas usando o tipo string e strings declaradas usando uma matriz de caracteres?,As strings declaradas usando uma matriz de caracteres têm um elemento nulo adicionado ao final da matriz.,"se for por tipo de string, a matriz contém um caractere nulo de terminação adicional",تفاوت اصلی رشته های اعلام شده با استفاده از نوع رشته در مقابل رشته های اعلام شده با استفاده از آرایه ای از کاراکترها چیست؟,رشته هایی که با استفاده از یک آرایه از کاراکترها اعلان می شوند ، یک عنصر تهی در انتهای آرایه اضافه می کنند.,اگر بر اساس نوع رشته ، آرایه دارای یک کاراکتر صفر خاتمه دهنده اضافی است,Quina és la diferència principal entre les cadenes declarades mitjançant el tipus de cadena i les cadenes declarades mitjançant una matriu de caràcters?,Les cadenes declarades mitjançant una matriu de caràcters tenen un element nul afegit al final de la matriu.,"si per tipus de cadena, la matriu conté un caràcter nul que finalitza addicional",Која је главна разлика између низова декларисаних помоћу типа стринг у односу на низове декларисаних помоћу низа знакова?,Низови декларисани помоћу низа знакова имају нулти елемент додан на крају низа.,"ако по типу стринг, низ садржи додатни завршни нулл знак",Apa perbedaan utama antara string yang dideklarasikan menggunakan tipe string versus string yang dideklarasikan menggunakan array karakter?,String yang dideklarasikan menggunakan array karakter memiliki elemen null yang ditambahkan di akhir array.,"jika berdasarkan tipe string, array berisi karakter null penghentian tambahan",Hva er hovedforskjellen mellom strenger deklarert ved hjelp av typestrengen versus strenger deklarert ved hjelp av en rekke tegn?,Strengene deklarert ved hjelp av en rekke tegn har et nullelement lagt til på slutten av matrisen.,"hvis etter typestreng, inneholder matrisen et ekstra termineringstegn",문자열 유형을 사용하여 선언 된 문자열과 문자 배열을 사용하여 선언 된 문자열의 주요 차이점은 무엇입니까?,문자 배열을 사용하여 선언 된 문자열에는 배열 끝에 null 요소가 추가됩니다.,유형 문자열에 의해 배열에 추가 종료 널 문자가 포함 된 경우,Mikä on tärkein ero merkkijonolla ilmoitettujen merkkijonojen ja merkkijonoa käyttäen ilmoitettujen merkkijonojen välillä?,Merkkijonoa käyttäen ilmoitetuissa merkkijonoissa taulukon loppuun lisätään nollaelementti.,"jos tyypin merkkijono mukaan, taulukko sisältää ylimääräisen lopettavan nollamerkin",Mi a fő különbség a karakterlánc használatával deklarált karakterláncok és a tömb karakterrel deklarált karakterláncok között?,A karaktertömb felhasználásával deklarált karakterláncok null elemet adnak a tömb végén.,"ha string típusú, akkor a tömb tartalmaz egy további befejező null karaktert",Jaký je hlavní rozdíl mezi řetězci deklarovanými pomocí řetězce typu oproti řetězcům deklarovaným pomocí pole znaků?,Řetězce deklarované pomocí pole znaků mají na konci pole přidán nulový prvek.,"pokud podle typu řetězce, pole obsahuje další ukončovací znak null",Koja je glavna razlika između nizova deklarisanih pomoću tipa string naspram nizova deklarisanih pomoću niza znakova?,Nizovi deklarirani pomoću niza znakova imaju nulti element dodan na kraju niza.,"ako prema tipu string, niz sadrži dodatni završavajući null znak"
381,381,1398,8.4,You implement a list in which the head pointer points to the element most recently pushed onto the list and the pop function changes the head pointer to point to the next to last element in the list and removes the element head pointer previously pointed to.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,5.0,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,"Sie implementieren eine Liste, in der der Kopfzeiger auf das zuletzt auf die Liste übertragene Element zeigt und die Pop-Funktion den Kopfzeiger so ändert, dass er auf das vorletzte Element in der Liste zeigt, und den zuvor gezeigten Elementkopfzeiger entfernt.",Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.",Gipatuman nimo ang usa ka lista diin ang punoan sa punoan nagpunting sa elemento nga labing bag-o nga giduso sa lista ug ang pagpaandar sa pop nagbag-o ang punoan sa ulo aron itudlo sa sunod sa ulahi nga elemento sa lista ug gikuha ang elemento nga punoan sa punoan nga kaniadto gitudlo.,Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,Du implementerar en lista där huvudpekaren pekar på det element som senast tryckts in i listan och popfunktionen ändrar huvudpekaren för att peka på det näst sista elementet i listan och tar bort elementhuvudpekaren som tidigare pekats på.,Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.",Vous implémentez une liste dans laquelle le pointeur de tête pointe vers l&#39;élément le plus récemment poussé dans la liste et la fonction pop change le pointeur de tête pour qu&#39;il pointe vers l&#39;avant-dernier élément de la liste et supprime le pointeur de tête d&#39;élément précédemment pointé.,Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.",U implementeert een lijst waarin de head-pointer naar het element wijst dat het laatst op de lijst is gedrukt en de pop-functie verandert de head-pointer zodat deze naar het voorlaatste element in de lijst wijst en verwijdert de element-head-pointer waarnaar eerder werd verwezen.,Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.","Вы реализуете список, в котором указатель заголовка указывает на элемент, который был добавлен в список последним, а функция pop изменяет указатель заголовка так, чтобы он указывал на предпоследний элемент в списке, и удаляет указатель заголовка элемента, на который ранее указывал.",Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.",Si implementa un elenco in cui il puntatore della testina punta all&#39;elemento inserito più di recente nell&#39;elenco e la funzione pop cambia il puntatore della testina in modo che punti al penultimo elemento nell&#39;elenco e rimuove il puntatore della testina dell&#39;elemento precedentemente puntato.,¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.",Implementa una lista en la que el puntero principal apunta al elemento que se ha introducido más recientemente en la lista y la función emergente cambia el puntero principal para que apunte al penúltimo elemento de la lista y elimina el puntero principal del elemento al que se señaló anteriormente.,Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.","Implementujesz listę, w której wskaźnik head wskazuje element ostatnio umieszczony na liście, a funkcja pop zmienia wskaźnik head, aby wskazywał na przedostatni element na liście i usuwa wskaźnik elementu head, który wcześniej wskazywał.",Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.",Bạn triển khai danh sách trong đó con trỏ đầu trỏ đến phần tử được đẩy gần đây nhất vào danh sách và hàm pop thay đổi con trỏ đầu để trỏ đến phần tử tiếp theo đến phần tử cuối cùng trong danh sách và xóa con trỏ phần đầu đã trỏ tới trước đó.,リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,ヘッドポインタがリストに最後にプッシュされた要素を指し、pop関数がリストの最後から2番目の要素を指すようにヘッドポインタを変更し、以前に指していた要素のヘッドポインタを削除するリストを実装します。,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,您实现一个列表，其中头指针指向最近推入列表的元素，而pop函数将头指针更改为指向列表中倒数第二个元素，并删除先前指向的元素头指针。,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,تقوم بتنفيذ قائمة يشير فيها مؤشر الرأس إلى العنصر الذي تم دفعه مؤخرًا إلى القائمة وتغير وظيفة البوب مؤشر الرأس للإشارة إلى العنصر التالي إلى العنصر الأخير في القائمة وتزيل مؤشر رأس العنصر المشار إليه مسبقًا.,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.","Ви реалізуєте список, у якому вказівник на голову вказує на елемент, який нещодавно був перенесений у список, а функція pop змінює вказівник на голову, щоб вказувати на наступний до останнього елемента у списку, і видаляє вказівник на головку елемента, на який вказували раніше.",Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.",Você implementa uma lista na qual o ponteiro principal aponta para o elemento mais recentemente colocado na lista e a função pop muda o ponteiro principal para apontar para o penúltimo elemento na lista e remove o ponteiro do elemento apontado anteriormente.,چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,شما لیستی را اجرا می کنید که در آن نشانگر هد به عنصری که اخیراً به لیست فشار داده شده است اشاره می کند و عملکرد pop نشانگر هد را تغییر می دهد تا به عنصر بعدی به آخرین مورد در لیست اشاره کند و نشانگر هد عنصری را که قبلاً به آن اشاره شده بود ، از بین می برد.,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.",Implementareu una llista en què el punter del cap apunta a l&#39;element que s&#39;ha introduït més recentment a la llista i la funció pop canvia el punter del cap per apuntar al següent darrer element de la llista i elimina el punter del cap de l&#39;element apuntat anteriorment.,Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.","Имплементирате листу у којој показивач главе показује на елемент који је последњи пут гурнут на листу, а функција поп мења показивач главе тако да показује на следећи последњи елемент на листи и уклања показивач главе елемента на који је претходно указано.",Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.",Anda menerapkan daftar di mana penunjuk kepala menunjuk ke elemen yang paling baru didorong ke daftar dan fungsi pop mengubah penunjuk kepala untuk menunjuk ke berikutnya ke elemen terakhir dalam daftar dan menghapus penunjuk kepala elemen yang sebelumnya ditunjuk.,Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.","Du implementerer en liste der hodepekeren peker på elementet som senest ble presset på listen, og pop-funksjonen endrer hodepekeren til å peke på det neste siste elementet i listen og fjerner elementhodepekeren som tidligere ble pekt på.",목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,헤드 포인터가 목록에 가장 최근에 푸시 된 요소를 가리키는 목록을 구현하고 pop 함수는 목록의 마지막 요소 다음을 가리 키도록 헤드 포인터를 변경하고 이전에 가리키는 요소 헤드 포인터를 제거합니다.,Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.","Toteutat luettelon, jossa pääosoitin osoittaa elementin, joka on viimeksi työnnetty luetteloon, ja pop-toiminto muuttaa pääosoittimen osoittamaan luettelon viimeisen viimeisen elementin kohdalle ja poistaa aiemmin osoittaman elementin pääosoittimen.",Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.","Olyan listát valósít meg, amelyben a fejmutató a listára legutóbb betolt elemre mutat, a pop funkció pedig megváltoztatja a fejmutatót a lista legutolsó utolsó elemére, és eltávolítja a korábban rámutatott elem fejmutatóját.",Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.","Implementujete seznam, ve kterém ukazatel na hlavě ukazuje na prvek, který byl naposledy vložen do seznamu, a popová funkce změní ukazatel na hlavičku tak, aby ukazovala na poslední předcházející prvek v seznamu a odstraní ukazatel na hlavě prvku, na který dříve ukázal.",Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.","Implementirate listu u kojoj pokazivač glave pokazuje na element koji je nedavno gurnut na listu, a pop funkcija mijenja pokazivač glave tako da pokazuje na sljedeći posljednji element na listi i uklanja pokazivač glave elementa na koji je prethodno ukazano."
382,382,894,5.2,"you loop through the entire list, and for each iteration you find the smallest element and move it to the current position.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","In one sentence, what is the main idea implemented by selection sort?",5.0,"Wenn jeweils ein Array-Element von links nach rechts verwendet wird, wird das Minimum der verbleibenden Elemente ermittelt und mit dem aktuellen Element ausgetauscht.","Was ist in einem Satz die Hauptidee, die durch Auswahlsortierung umgesetzt wird?",Sie durchlaufen die gesamte Liste und finden für jede Iteration das kleinste Element und verschieben es an die aktuelle Position.,"Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman sa pagpili?","Pagkuha usa ka elemento sa pag-ayos sa matag higayon, gikan sa wala ngadto sa tuo, maila niini ang minimum gikan sa nahabilin nga mga elemento ug gibaylo kini sa karon nga elemento.","gilibot nimo ang tibuuk nga lista, ug alang sa matag pag-usab nakita nimo ang labing gamay nga elemento ug ibalhin kini sa karon nga posisyon.","I en mening, vad är huvudidén implementerad av urvalsortering?","Tar ett matriselement åt gången, från vänster till höger, identifierar det minsta från de återstående elementen och byter det med det aktuella elementet.",du går igenom hela listan och för varje iteration hittar du det minsta elementet och flyttar det till aktuell position.,"En une phrase, quelle est l&#39;idée principale mise en œuvre par le tri sélectif?","Prenant un élément de tableau à la fois, de gauche à droite, il identifie le minimum parmi les éléments restants et le remplace par l&#39;élément courant.","vous parcourez la liste entière, et pour chaque itération, vous trouvez le plus petit élément et le déplacez vers la position actuelle.","In één zin, wat is het hoofdidee geïmplementeerd door middel van selectiesortering?","Door één array-element tegelijk te nemen, van links naar rechts, identificeert het het minimum van de resterende elementen en verwisselt het met het huidige element.",je doorloopt de hele lijst en voor elke iteratie vind je het kleinste element en verplaats je het naar de huidige positie.,"Одним предложением, какова основная идея сортировки по выбору?","Принимая по одному элементу массива слева направо, он определяет минимум из оставшихся элементов и меняет его местами с текущим элементом.","вы просматриваете весь список, и для каждой итерации вы находите наименьший элемент и перемещаете его в текущую позицию.","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento di selezione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, identifica il minimo dagli elementi rimanenti e lo scambia con l&#39;elemento corrente.",si scorre l&#39;intero elenco e per ogni iterazione si trova l&#39;elemento più piccolo e lo si sposta nella posizione corrente.,"En una oración, ¿cuál es la idea principal implementada por tipo de selección?","Tomando un elemento de matriz a la vez, de izquierda a derecha, identifica el mínimo de los elementos restantes y lo intercambia con el elemento actual.","recorre toda la lista y, para cada iteración, encuentra el elemento más pequeño y lo mueve a la posición actual.","Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wybieranie?","Biorąc jeden element tablicy na raz, od lewej do prawej, identyfikuje minimum z pozostałych elementów i zamienia je na bieżący element.",przechodzisz przez całą listę i dla każdej iteracji znajdujesz najmniejszy element i przenosisz go na bieżącą pozycję.,"Trong một câu, ý chính được triển khai bằng cách sắp xếp lựa chọn nào?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó xác định giá trị tối thiểu từ các phần tử còn lại và hoán đổi nó với phần tử hiện tại.","bạn lặp lại toàn bộ danh sách và với mỗi lần lặp, bạn tìm phần tử nhỏ nhất và di chuyển nó đến vị trí hiện tại.",一言で言えば、選択ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、残りの要素から最小値を識別して、現在の要素と交換します。,リスト全体をループし、反復ごとに最小の要素を見つけて現在の位置に移動します。,一句话，选择排序实现的主要思想是什么？,一次从左到右获取一个数组元素，它从其余元素中识别出最小值，并将其与当前元素交换。,您遍历整个列表，对于每次迭代，您会找到最小的元素并将其移动到当前位置。,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الاختيار؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يحدد الحد الأدنى من العناصر المتبقية ويتبادلها مع العنصر الحالي.,تقوم بالتكرار عبر القائمة بأكملها ، ولكل تكرار تجد أصغر عنصر وتحركه إلى الموضع الحالي.,"В одному реченні, яка головна ідея реалізується шляхом сортування виділення?","Беручи по одному елементу масиву, зліва направо, він визначає мінімум з решти елементів і міняє його місцями з поточним елементом.","ви прокручуєте весь список, і для кожної ітерації ви знаходите найменший елемент і переміщуєте його в поточне положення.","Em uma frase, qual é a ideia principal implementada pela ordenação por seleção?","Pegando um elemento da matriz por vez, da esquerda para a direita, ele identifica o mínimo dos elementos restantes e o troca com o elemento atual.","você percorre toda a lista e, para cada iteração, encontra o menor elemento e o move para a posição atual.",در یک جمله ، ایده اصلی که براساس مرتب سازی انتخاب اجرا می شود چیست؟,با یک بار گرفتن یک عنصر آرایه ، از چپ به راست ، حداقل عناصر باقی مانده را شناسایی کرده و با عنصر فعلی عوض می کند.,شما کل لیست را مرور می کنید ، و برای هر تکرار کوچکترین عنصر را پیدا می کنید و آن را به موقعیت فعلی منتقل می کنید.,"En una frase, quina és la idea principal implementada pel tipus de selecció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, identifica el mínim dels elements restants i el canvia amb l’element actual.","passeu per tota la llista i, per a cada iteració, trobareu l’element més petit i el moveu a la posició actual.","У једној реченици, која је главна идеја спроведена сортирањем избора?","Узимајући по један елемент низа, с лева на десно, идентификује минимум од преосталих елемената и замењује га са тренутним елементом.",провлачите се кроз целу листу и за сваку итерацију проналазите најмањи елемент и премештате га у тренутни положај.,"Dalam satu kalimat, apa gagasan utama yang diimplementasikan oleh selection sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, ini mengidentifikasi elemen minimum dari elemen yang tersisa dan menukarnya dengan elemen saat ini.","Anda mengulang seluruh daftar, dan untuk setiap iterasi Anda menemukan elemen terkecil dan memindahkannya ke posisi saat ini.","I en setning, hva er hovedideen implementert ved sortering av utvalg?","Tar ett matriseelement om gangen, fra venstre til høyre, identifiserer det minimumet fra de gjenværende elementene og bytter det med det nåværende elementet.","du går gjennom hele listen, og for hver iterasjon finner du det minste elementet og flytter det til gjeldende posisjon.","한 문장으로, 선택 정렬에 의해 구현 된 주요 아이디어는 무엇입니까?",한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 나머지 요소에서 최소값을 식별하고 현재 요소와 교환합니다.,전체 목록을 반복하고 각 반복마다 가장 작은 요소를 찾아 현재 위치로 이동합니다.,Mikä päävalinta toteutetaan valintalajittelulla?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se tunnistaa vähimmäisarvon jäljellä olevista elementeistä ja vaihtaa sen nykyiseen elementtiin.",selaat koko luetteloa ja jokaiselle iteraatiolle löydät pienimmän elementin ja siirrät sen nykyiseen sijaintiin.,Egy mondatban mi a kiválasztott rendezéssel megvalósított fő gondolat?,"Egyszerre egy tömb elemet vesz fel balról jobbra, a többi elem alapján azonosítja a minimumot, és felcseréli az aktuális elemmel.","végighúzza a teljes listát, és minden egyes iterációhoz megtalálja a legkisebb elemet, és áthelyezi az aktuális pozícióba.","Jednou větou, jaká je hlavní myšlenka implementovaná výběrem?","Vezmeme-li po jednom prvku pole, zleva doprava, identifikuje minimum ze zbývajících prvků a zamění jej za aktuální prvek.",procházíte celým seznamem a pro každou iteraci najdete nejmenší prvek a přesunete jej na aktuální pozici.,"U jednoj rečenici, koja je glavna ideja implementirana selekcijskim sortiranjem?","Uzimajući po jedan element niza, slijeva udesno, identificira minimum iz preostalih elemenata i zamjenjuje ga s trenutnim elementom.",provlačite se kroz čitavu listu i za svaku iteraciju pronađete najmanji element i premjestite ga na trenutni položaj.
383,383,925,5.4,The base case for a recursive implementation of merge sort is when the sequence being passed to merge sort has less than 2 elements.,When the size of the array to be sorted is 1 (or 2),What is the base case for a recursive implementation of merge sort?,5.0,Wenn die Größe des zu sortierenden Arrays 1 (oder 2) beträgt,Was ist der Basisfall für eine rekursive Implementierung der Zusammenführungssortierung?,"Der Grundfall für eine rekursive Implementierung der Zusammenführungssortierung ist, wenn die Sequenz, die an die Zusammenführungssortierung übergeben wird, weniger als 2 Elemente enthält.",Unsa man ang basehan nga kaso alang sa usa ka recursive nga pagpatuman sa merge sort?,Kung ang gidak-on sa laray nga paghan-ay mao ang 1 (o 2),Ang sukaranan nga kaso alang sa usa ka recursive nga pagpatuman sa merge sort kung kanus-a ang pagkasunud nga gipasa sa pag-merge sort adunay mas gamay sa 2 nga mga elemento.,Vad är grunden för ett rekursivt genomförande av sammanslagningssortering?,När storleken på matrisen som ska sorteras är 1 (eller 2),Grundfallet för en rekursiv implementering av sammanslagningssortering är när sekvensen som skickas till sammanslagningssortering har mindre än två element.,Quel est le cas de base pour une implémentation récursive du tri par fusion?,Lorsque la taille du tableau à trier est 1 (ou 2),Le cas de base pour une implémentation récursive du tri par fusion est lorsque la séquence passée au tri par fusion comporte moins de 2 éléments.,Wat is het basisscenario voor een recursieve implementatie van samenvoegsortering?,Als de grootte van de te sorteren array 1 (of 2) is,Het basisscenario voor een recursieve implementatie van samenvoegsortering is wanneer de reeks die wordt doorgegeven aan samenvoegsortering minder dan 2 elementen heeft.,Каков базовый случай рекурсивной реализации сортировки слиянием?,Когда размер сортируемого массива равен 1 (или 2),"Базовый случай для рекурсивной реализации сортировки слиянием - это когда последовательность, передаваемая для сортировки слиянием, имеет менее 2 элементов.",Qual è il caso di base per un&#39;implementazione ricorsiva di merge sort?,Quando la dimensione dell&#39;array da ordinare è 1 (o 2),Il caso di base per un&#39;implementazione ricorsiva di merge sort è quando la sequenza passata per merge sort ha meno di 2 elementi.,¿Cuál es el caso base para una implementación recursiva del tipo de combinación?,Cuando el tamaño de la matriz a ordenar es 1 (o 2),El caso base para una implementación recursiva de la ordenación por combinación es cuando la secuencia que se pasa a la ordenación por combinación tiene menos de 2 elementos.,Jaki jest podstawowy przypadek rekurencyjnej implementacji sortowania przez scalanie?,Gdy rozmiar sortowanej tablicy to 1 (lub 2),"Podstawowym przypadkiem rekurencyjnej implementacji sortowania przez scalanie jest sytuacja, gdy sekwencja przekazywana do sortowania przez scalanie ma mniej niż 2 elementy.",Trường hợp cơ sở cho việc triển khai đệ quy sắp xếp hợp nhất là gì?,Khi kích thước của mảng được sắp xếp là 1 (hoặc 2),Trường hợp cơ bản để triển khai đệ quy sắp xếp hợp nhất là khi chuỗi được chuyển để sắp xếp hợp nhất có ít hơn 2 phần tử.,マージソートの再帰的実装の基本ケースは何ですか？,ソートする配列のサイズが1（または2）の場合,マージソートの再帰的実装の基本ケースは、マージソートに渡されるシーケンスの要素が2つ未満の場合です。,递归实现合并排序的基本情况是什么？,当要排序的数组的大小为1（或2）时,递归实现合并排序的基本情况是传递给合并排序的序列少于2个元素。,ما هي الحالة الأساسية للتنفيذ العودي لفرز الدمج؟,عندما يكون حجم المصفوفة المراد فرزها 1 (أو 2),الحالة الأساسية للتطبيق العودي لفرز الدمج هي عندما يحتوي التسلسل الذي يتم تمريره لدمج الفرز على أقل من عنصرين.,Який базовий випадок для рекурсивної реалізації злиття?,Коли розмір сортуваного масиву дорівнює 1 (або 2),"Базовий випадок для рекурсивної реалізації сортування злиття - це коли послідовність, що передається в сортування злиття, має менше 2 елементів.",Qual é o caso base para uma implementação recursiva de merge sort?,Quando o tamanho da matriz a ser classificada é 1 (ou 2),O caso base para uma implementação recursiva de merge sort é quando a sequência que está sendo passada para merge sort tem menos de 2 elementos.,مورد اصلی برای اجرای بازگشتی نوع ادغام چیست؟,وقتی اندازه آرایه ای که مرتب می شود 1 (یا 2) باشد,حالت اصلی برای اجرای بازگشتی مرتب سازی ادغام زمانی است که توالی منتقل شده برای ادغام مرتب سازی دارای کمتر از 2 عنصر باشد.,Quin és el cas bàsic per a una implementació recursiva del tipus de combinació?,Quan la mida de la matriu a ordenar és 1 (o 2),El cas bàsic per a una implementació recursiva de la classificació de combinació és quan la seqüència que es passa a la classificació de combinació té menys de 2 elements.,Који је основни случај за рекурзивну имплементацију сортирања спајања?,Када је величина низа за сортирање 1 (или 2),Основни случај за рекурзивну имплементацију сортирања спајања је када секвенца која се преноси на сортирање спајања има мање од 2 елемента.,Apa kasus dasar untuk implementasi rekursif dari merge sort?,Jika ukuran larik yang akan diurutkan adalah 1 (atau 2),Kasus dasar untuk implementasi rekursif dari merge sort adalah ketika urutan yang diteruskan ke penggabungan memiliki kurang dari 2 elemen.,Hva er grunnlag for en rekursiv implementering av sammenslåingssortering?,Når størrelsen på matrisen som skal sorteres er 1 (eller 2),Basissaken for en rekursiv implementering av sammenslåingssortering er når sekvensen som sendes til sammenslåingssortering har mindre enn to elementer.,병합 정렬을 재귀 적으로 구현하는 기본 사례는 무엇입니까?,정렬 할 배열의 크기가 1 (또는 2) 인 경우,병합 정렬의 재귀 적 구현의 기본 사례는 병합 정렬에 전달되는 시퀀스에 요소가 2 개 미만인 경우입니다.,Mikä on yhdistämisen lajittelun rekursiivisen toteutuksen perusta?,Kun lajiteltavan taulukon koko on 1 (tai 2),"Yhdistyslajittelun rekursiivisen toteutuksen perustapaus on, kun yhdistämislajittelulle välitettävässä sekvenssissä on vähemmän kuin 2 elementtiä.",Mi az alapesete az egyesítés rendezésének rekurzív megvalósításának?,Amikor a rendezendő tömb mérete 1 (vagy 2),"Az egyesítés rendezésének rekurzív megvalósításának alapesete az, amikor az egyesítési rendezésnek átadott sorozat kevesebb, mint 2 elemet tartalmaz.",Jaký je základní případ rekurzivní implementace typu sloučení?,"Když je velikost pole, které má být tříděno, 1 (nebo 2)","Základní případ rekurzivní implementace sloučení je, když sekvence předávaná sloučení má méně než 2 prvky.",Koji je osnovni slučaj za rekurzivnu implementaciju spajanja sortiranja?,Kada je veličina niza za sortiranje 1 (ili 2),Osnovni slučaj za rekurzivnu implementaciju sortiranja spajanja je kada sekvenca koja se prenosi na sortiranje spajanja ima manje od 2 elementa.
384,384,2307,12.6,a data structure that inserts elements at the end of it and removes elements from the front.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,5.0,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Eine Datenstruktur, die Elemente am Ende einfügt und Elemente von vorne entfernt.",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,usa ka istruktura sa datos nga nagsulud mga elemento sa katapusan niini ug gikuha ang mga elemento gikan sa atubangan.,Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,en datastruktur som infogar element i slutet av den och tar bort element från fronten.,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.",une structure de données qui insère des éléments à la fin de celle-ci et supprime les éléments de l&#39;avant.,Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,een datastructuur die elementen aan het einde ervan invoegt en elementen van de voorkant verwijdert.,Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","структура данных, которая вставляет элементы в конце и удаляет элементы спереди.",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,una struttura dati che inserisce gli elementi all&#39;estremità e rimuove gli elementi dal fronte.,¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.",una estructura de datos que inserta elementos al final de la misma y elimina elementos del frente.,Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","struktura danych, która wstawia elementy na końcu i usuwa elementy z przodu.",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,một cấu trúc dữ liệu chèn các phần tử vào cuối nó và xóa các phần tử ở phía trước.,キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,末尾に要素を挿入し、前面から要素を削除するデータ構造。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,一种数据结构，在其末尾插入元素，并从前面删除元素。,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,بنية بيانات تُدرج العناصر في نهايتها وتزيل العناصر من الأمام.,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","структура даних, яка вставляє елементи в кінці та видаляє елементи спереду.",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.",uma estrutura de dados que insere elementos no final dela e remove os elementos da frente.,صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,یک ساختار داده ای که در انتهای آن عناصری را وارد کرده و عناصر را از جلو برمی دارد.,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,una estructura de dades que insereix elements al final i elimina elements de la part frontal.,Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,структура података која убацује елементе на њен крај и уклања елементе са предње стране.,Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,struktur data yang menyisipkan elemen di ujungnya dan menghilangkan elemen dari depan.,Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,en datastruktur som setter inn elementer på slutten av den og fjerner elementer fra fronten.,대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,마지막에 요소를 삽입하고 앞쪽에서 요소를 제거하는 데이터 구조입니다.,Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","tietorakenne, joka lisää elementit sen loppuun ja poistaa elementit edestä.",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","olyan adatstruktúra, amely a végére elemeket illeszt be, és elölről eltávolítja az elemeket.",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","datová struktura, která vloží prvky na konec a odebere prvky zepředu.",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,struktura podataka koja ubacuje elemente na njen kraj i uklanja elemente s prednje strane.
385,385,1407,8.4,"make a list, make the bottom the head, add on the end and make the end top","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,3.5,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,"Machen Sie eine Liste, machen Sie die Unterseite zum Kopf, fügen Sie das Ende hinzu und machen Sie das Ende oben",Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.","paghimo usa ka lista, himua ang ubos nga ulo, idugang sa katapusan ug himua ang tumoy sa tumoy",Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,"gör en lista, gör botten till huvudet, lägg till i slutet och gör slutet till toppen",Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.","faire une liste, faire du bas la tête, ajouter la fin et faire la fin en haut",Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.","maak een lijst, maak van de onderkant het hoofd, voeg het uiteinde toe en maak het uiteinde bovenaan",Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.","составьте список, сделайте нижнюю часть головы, добавьте в конец и сделайте конец верхним",Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.","fai una lista, fai in modo che il fondo sia la testa, aggiungi la fine e rendi la fine in alto",¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.","haz una lista, haz que la parte inferior sea la cabeza, agrega al final y haz que el final sea superior",Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.","zrób listę, ułóż dół na głowie, dodaj koniec i ułóż koniec na górze",Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.","lập danh sách, tạo đầu cuối, thêm vào cuối và tạo đầu cuối",リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,リストを作成し、下部を頭にし、最後に追加して、最後を上部にします,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,制作列表，使底部成为头部，在末尾添加并使末尾成为顶部,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,قم بعمل قائمة ، واجعل الجزء السفلي هو الرأس ، ثم أضفه في النهاية واجعل الطرف العلوي,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.","складіть список, зробіть низ головою, додайте в кінці і зробіть кінець вгорі",Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.","faça uma lista, faça do fundo a cabeça, adicione no final e faça o final no topo",چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,یک لیست درست کنید ، پایین آن را سر قرار دهید ، در انتها اضافه کنید و انتهای آن را بالا قرار دهید,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.","fes una llista, fes el cap inferior, afegeix al final i fes el final superior",Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.","направите списак, направите дно главом, додајте на крају и направите крај на врху",Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.","buatlah daftar, buat bagian bawah kepala, tambahkan di bagian ujung dan jadikan ujung atas",Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.","lag en liste, gjør bunnen til hodet, legg til på enden og gjør enden øverst",목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,"목록을 만들고, 아래를 머리로 만들고, 끝에 추가하고, 끝을 위로 만듭니다.",Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.","tee luettelo, tee pohjan pää, lisää pää ja tee pää ylhäältä",Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.","készítsen egy listát, tegye az alját a fejévé, tegye hozzá a végét és tegye a végét a tetejére",Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.","vytvořit seznam, udělat spodní část hlavy, přidat na konec a udělat konec horní",Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.","napravite listu, napravite dno glavom, dodajte na kraju i napravite kraj na vrhu"
386,386,1839,10.7,In a binary search tree of size 'n' it takes log(n) comparisons to find a specified element.,The height of the tree (or log of the number of elements in the tree).,How many comparisons does it take to find an element in a binary search tree?,5.0,Die Höhe des Baums (oder das Protokoll der Anzahl der Elemente im Baum).,"Wie viele Vergleiche sind erforderlich, um ein Element in einem binären Suchbaum zu finden?","In einem binären Suchbaum der Größe &#39;n&#39; sind log (n) Vergleiche erforderlich, um ein bestimmtes Element zu finden.",Pila ka mga pagtandi ang kinahanglan aron makapangita usa ka elemento sa usa ka puno nga binary search?,Ang kataas sa kahoy (o log sa gidaghanon sa mga elemento sa kahoy).,Sa usa ka punoan nga pagpangita sa binary nga gidak-on &#39;n&#39; nagkinahanglan og log (n) mga pagtandi aron makapangita usa ka natino nga elemento.,Hur många jämförelser krävs för att hitta ett element i ett binärt sökträd?,Trädets höjd (eller logg över antalet element i trädet).,I ett binärt sökträd i storleken &#39;n&#39; krävs logg (n) -jämförelser för att hitta ett angivet element.,Combien de comparaisons faut-il pour trouver un élément dans un arbre de recherche binaire?,La hauteur de l&#39;arbre (ou journal du nombre d&#39;éléments dans l&#39;arbre).,"Dans un arbre de recherche binaire de taille «n», il faut des comparaisons avec log (n) pour trouver un élément spécifié.",Hoeveel vergelijkingen zijn er nodig om een element in een binaire zoekboom te vinden?,De hoogte van de boom (of log van het aantal elementen in de boom).,In een binaire zoekboom van grootte &#39;n&#39; zijn log (n) vergelijkingen nodig om een gespecificeerd element te vinden.,"Сколько сравнений нужно, чтобы найти элемент в двоичном дереве поиска?",Высота дерева (или логарифм количества элементов в дереве).,"В двоичном дереве поиска размера n требуется log (n) сравнений, чтобы найти указанный элемент.",Quanti confronti sono necessari per trovare un elemento in un albero di ricerca binario?,L&#39;altezza dell&#39;albero (o il registro del numero di elementi dell&#39;albero).,"In un albero di ricerca binario di dimensione &#39;n&#39;, sono necessari confronti log (n) per trovare un elemento specificato.",¿Cuántas comparaciones se necesitan para encontrar un elemento en un árbol de búsqueda binaria?,La altura del árbol (o registro de la cantidad de elementos en el árbol).,"En un árbol de búsqueda binaria de tamaño &#39;n&#39;, se necesitan comparaciones log (n) para encontrar un elemento específico.","Ile porównań potrzeba, aby znaleźć element w drzewie wyszukiwania binarnego?",Wysokość drzewa (lub dziennik liczby elementów w drzewie).,W drzewie wyszukiwania binarnego o rozmiarze &#39;n&#39; do znalezienia określonego elementu potrzebne są porównania log (n).,Có bao nhiêu phép so sánh để tìm một phần tử trong cây tìm kiếm nhị phân?,Chiều cao của cây (hoặc nhật ký của số phần tử trong cây).,"Trong cây tìm kiếm nhị phân có kích thước &#39;n&#39;, cần so sánh log (n) để tìm một phần tử được chỉ định.",二分探索木で要素を見つけるのに何回の比較が必要ですか？,ツリーの高さ（またはツリー内の要素数のログ）。,サイズ &#39;n&#39;の二分探索木では、指定された要素を見つけるためにlog（n）比較が必要です。,在二进制搜索树中查找元素需要进行多少次比较？,树的高度（或树中元素数的对数）。,在大小为&#39;n&#39;的二进制搜索树中，需要进行log（n）比较才能找到指定的元素。,كم عدد المقارنات اللازمة للعثور على عنصر في شجرة بحث ثنائية؟,ارتفاع الشجرة (أو سجل عدد العناصر في الشجرة).,في شجرة البحث الثنائية بالحجم &#39;n&#39; ، تأخذ مقارنات log (n) للعثور على عنصر محدد.,"Скільки порівнянь потрібно, щоб знайти елемент у двійковому дереві пошуку?",Висота дерева (або журнал кількості елементів у дереві).,"У двійковому дереві пошуку розміром &#39;n&#39; потрібні порівняння log (n), щоб знайти вказаний елемент.",Quantas comparações são necessárias para encontrar um elemento em uma árvore de pesquisa binária?,A altura da árvore (ou log do número de elementos na árvore).,"Em uma árvore de pesquisa binária de tamanho &#39;n&#39;, são necessárias comparações log (n) para encontrar um elemento especificado.",برای یافتن عنصری در یک درخت جستجوی باینری چند مقایسه لازم است؟,ارتفاع درخت (یا تعداد تعداد عناصر موجود در درخت).,در یک درخت جستجوی دودویی با اندازه &#39;n&#39; برای پیدا کردن یک عنصر مشخص ، مقایسه log (n) طول می کشد.,Quantes comparacions es necessiten per trobar un element en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre (o registre del nombre d&#39;elements de l&#39;arbre).,En un arbre de cerca binari de mida &#39;n&#39; es necessiten comparacions log (n) per trobar un element especificat.,Колико поређења је потребно да би се пронашао елемент у бинарном стаблу претраживања?,Висина стабла (или евиденција броја елемената у дрвету).,У бинарном стаблу претраживања величине &#39;н&#39; потребна су поређења дневника (н) да би се пронашао наведени елемент.,Berapa banyak perbandingan yang diperlukan untuk menemukan elemen dalam pohon pencarian biner?,Tinggi pohon (atau log dari jumlah elemen pada pohon).,Dalam pohon pencarian biner ukuran &#39;n&#39; dibutuhkan perbandingan log (n) untuk menemukan elemen tertentu.,Hvor mange sammenligninger tar det å finne et element i et binært søketre?,Høyden på treet (eller logg over antall elementer i treet).,I et binært søketre av størrelsen &#39;n&#39; må det logg (n) sammenligninger for å finne et spesifisert element.,이진 검색 트리에서 요소를 찾는 데 얼마나 많은 비교가 필요합니까?,트리의 높이 (또는 트리의 요소 수에 대한 로그).,크기가 &#39;n&#39;인 이진 검색 트리에서 지정된 요소를 찾기 위해 log (n) 비교가 필요합니다.,Kuinka monta vertailua tarvitaan elementin löytämiseksi binaarihakupuusta?,Puun korkeus (tai puun elementtien määrän loki).,Koon &#39;n&#39; binaarihakupuussa tarvitaan log (n) -vertailuja määritetyn elementin löytämiseksi.,Hány összehasonlítás szükséges egy elem megtalálásához a bináris keresési fában?,A fa magassága (vagy a fa elemeinek számának naplója).,Az &#39;n&#39; méretű bináris keresési fában log (n) összehasonlításokra van szükség egy adott elem megtalálásához.,Kolik srovnání je potřeba k nalezení prvku v binárním vyhledávacím stromu?,Výška stromu (nebo protokol o počtu prvků ve stromu).,"V binárním vyhledávacím stromu o velikosti „n“ je třeba najít log (n) srovnání, abyste našli zadaný prvek.",Koliko je usporedbi potrebno za pronalaženje elementa u binarnom stablu pretraživanja?,Visina stabla (ili evidencija broja elemenata u stablu).,U binarnom stablu pretraživanja veličine &#39;n&#39; potrebne su usporedbe dnevnika (n) da bi se pronašao navedeni element.
387,387,1065,6.5,sizeof returns the size of the operand in bytes.,The size in bytes of its operand.,What does the sizeof operator return?,5.0,Die Größe des Operanden in Byte.,Was gibt die Größe des Operators zurück?,sizeof gibt die Größe des Operanden in Bytes zurück.,Unsa man ang pagbalik sa sizeof operator?,Ang kadako sa mga byte sa operand niini.,gibalik sa gidak-on ang gidak-on sa operand sa mga byte.,Vad returnerar operatörens storlek?,Storleken i byte för dess operand.,sizeof returnerar storleken på operand i byte.,Que renvoie l&#39;opérateur sizeof?,La taille en octets de son opérande.,sizeof renvoie la taille de l&#39;opérande en octets.,Wat levert de grootte van de operator op?,De grootte in bytes van de operand.,sizeof retourneert de grootte van de operand in bytes.,Что возвращает оператор sizeof?,Размер в байтах его операнда.,sizeof возвращает размер операнда в байтах.,Cosa restituisce la dimensione dell&#39;operatore?,La dimensione in byte del suo operando.,sizeof restituisce la dimensione dell&#39;operando in byte.,¿Qué devuelve el tamaño del operador?,El tamaño en bytes de su operando.,sizeof devuelve el tamaño del operando en bytes.,Jaki jest zwracany operator sizeof?,Rozmiar argumentu w bajtach.,sizeof zwraca rozmiar operandu w bajtach.,Toán tử sizeof trả về gì?,Kích thước tính bằng byte của toán hạng của nó.,sizeof trả về kích thước của toán hạng tính bằng byte.,sizeof演算子は何を返しますか？,オペランドのバイト単位のサイズ。,sizeofは、オペランドのサイズをバイト単位で返します。,sizeof运算符返回什么？,其操作数的大小（以字节为单位）。,sizeof返回操作数的大小（以字节为单位）。,ماذا يعود حجم المشغل؟,الحجم بالبايت لمعاملها.,تُرجع sizeof حجم المعامل بالبايت.,Що повертає оператор sizeof?,Розмір операнда в байтах.,sizeof повертає розмір операнда в байтах.,O que o operador sizeof retorna?,O tamanho em bytes de seu operando.,sizeof retorna o tamanho do operando em bytes.,عملگر sizeof چه چیزی برمی گرداند؟,اندازه در بایت عملوند آن.,sizeof اندازه عملوند را به بایت برمی گرداند.,Què retorna l’operador sizeof?,La mida en bytes del seu operand.,sizeof retorna la mida de l&#39;operant en bytes.,Шта враћа величина оператора?,Величина операнда у бајтовима.,сизеоф враћа величину операнда у бајтовима.,Berapa ukuran yang dikembalikan operator?,Ukuran dalam byte dari operannya.,sizeof mengembalikan ukuran operan dalam byte.,Hva returnerer operatørens størrelse?,Størrelsen i byte av operanden.,sizeof returnerer størrelsen på operanden i byte.,sizeof 연산자는 무엇을 반환합니까?,피연산자의 크기 (바이트)입니다.,sizeof는 피연산자의 크기를 바이트 단위로 반환합니다.,Mitä operaattorin koko palauttaa?,Operandin koko tavuina.,sizeof palauttaa operandin koon tavuina.,Mit ad vissza az operátor mérete?,Operandusának mérete bájtokban.,A sizeof az operandus méretét adja vissza bájtokban.,Co vrátí operátor sizeof?,Velikost jeho operandu v bajtech.,sizeof vrací velikost operandu v bajtech.,Šta vraća veličina operatora?,Veličina operanda u bajtovima.,sizeof vraća veličinu operanda u bajtovima.
388,388,242,2.2,data members are declared in a class definition but outside the bodies of a class's member-function definitions. Local variables are declared in a function definition's body,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,What is the difference between a data member and a local variable inside a member function?,4.0,"Auf Datenelemente kann von allen Elementfunktionen innerhalb der Klassendefinition zugegriffen werden. Auf lokale Variablen kann nur innerhalb der Elementfunktion zugegriffen werden, die sie definiert.",Was ist der Unterschied zwischen einem Datenelement und einer lokalen Variablen innerhalb einer Elementfunktion?,"Datenelemente werden in einer Klassendefinition deklariert, jedoch außerhalb der Körper der Elementfunktionsdefinitionen einer Klasse. Lokale Variablen werden im Hauptteil einer Funktionsdefinition deklariert",Unsa ang kalainan tali sa usa ka myembro sa datos ug usa ka lokal nga pagbag-o sa sulud sa kalihokan sa usa ka miyembro?,Ang mga myembro sa datos mahimo’g ma-access gikan sa bisan unsang gimbuhaton sa miyembro sa sulud sa defintion sa klase. Ang mga lokal nga pagbag-o mahimo ra nga ma-access sa sulud sa pagpaandar sa miyembro nga naghubit kanila.,ang mga myembro sa datos gideklara sa usa ka kahulugan sa klase apan sa gawas sa mga lawas sa mga kahulugan sa usa ka klase nga gimbuhaton sa usa ka klase. Ang mga lokal nga pagbag-o gideklara sa lawas sa usa ka kahulugan sa pagpaandar,Vad är skillnaden mellan en datamedlem och en lokal variabel i en medlemsfunktion?,Datamedlemmar kan nås från alla medlemsfunktioner i klassdefinitionen. Lokala variabler kan endast nås i medlemsfunktionen som definierar dem.,datamedlemmar deklareras i en klassdefinition men utanför organet i en klasss medlemsfunktionsdefinitioner. Lokala variabler deklareras i en funktionsdefinitions kropp,Quelle est la différence entre un membre de données et une variable locale dans une fonction membre?,Les membres de données sont accessibles à partir de toutes les fonctions membres de la définition de classe. Les variables locales ne sont accessibles qu&#39;à l&#39;intérieur de la fonction membre qui les définit.,Les membres de données sont déclarés dans une définition de classe mais en dehors des corps des définitions de fonction membre d&#39;une classe. Les variables locales sont déclarées dans le corps d&#39;une définition de fonction,Wat is het verschil tussen een gegevenslid en een lokale variabele binnen een lidfunctie?,Gegevensleden zijn toegankelijk vanuit alle lidfuncties binnen de klassedefinitie. Lokale variabelen zijn alleen toegankelijk binnen de lidfunctie die ze definieert.,data-leden worden gedeclareerd in een klassedefinitie maar buiten de lichamen van de lid-functiedefinities van een klasse. Lokale variabelen worden gedeclareerd in de hoofdtekst van een functie,В чем разница между элементом данных и локальной переменной внутри функции-члена?,"Доступ к элементам данных можно получить из любых функций-членов внутри определения класса. Доступ к локальным переменным можно получить только внутри функции-члена, которая их определяет.","члены данных объявлены в определении класса, но вне тела определений функций-членов класса. Локальные переменные объявляются в теле определения функции",Qual è la differenza tra un membro dati e una variabile locale all&#39;interno di una funzione membro?,È possibile accedere ai membri dati da qualsiasi funzione membro all&#39;interno della definizione della classe. È possibile accedere alle variabili locali solo all&#39;interno della funzione membro che le definisce.,i membri dati sono dichiarati in una definizione di classe ma fuori dai corpi delle definizioni di funzione membro di una classe. Le variabili locali vengono dichiarate nel corpo della definizione di una funzione,¿Cuál es la diferencia entre un miembro de datos y una variable local dentro de una función miembro?,Se puede acceder a los miembros de datos desde cualquier función miembro dentro de la definición de clase. Solo se puede acceder a las variables locales dentro de la función miembro que las define.,los miembros de datos se declaran en una definición de clase pero fuera de los cuerpos de las definiciones de función miembro de una clase. Las variables locales se declaran en el cuerpo de una definición de función,Jaka jest różnica między składową danych a zmienną lokalną wewnątrz funkcji składowej?,"Dostęp do członków danych można uzyskać z dowolnej funkcji składowej wewnątrz definicji klasy. Dostęp do zmiennych lokalnych można uzyskać tylko wewnątrz funkcji składowej, która je definiuje.","składowe danych są zadeklarowane w definicji klasy, ale poza treściami definicji funkcji składowych klasy. Zmienne lokalne są deklarowane w treści definicji funkcji",Sự khác biệt giữa một thành viên dữ liệu và một biến cục bộ bên trong một hàm thành viên là gì?,Các thành viên dữ liệu có thể được truy cập từ bất kỳ hàm thành viên nào bên trong định nghĩa lớp. Các biến cục bộ chỉ có thể được truy cập bên trong hàm thành viên định nghĩa chúng.,các thành viên dữ liệu được khai báo trong định nghĩa lớp nhưng bên ngoài phần thân của định nghĩa hàm thành viên của lớp. Các biến cục bộ được khai báo trong phần thân của định nghĩa hàm,データメンバーとメンバー関数内のローカル変数の違いは何ですか？,データメンバーには、クラス定義内の任意のメンバー関数からアクセスできます。ローカル変数には、それらを定義するメンバー関数内でのみアクセスできます。,データメンバーはクラス定義で宣言されていますが、クラスのメンバー関数定義の本体の外にあります。ローカル変数は関数定義の本体で宣言されています,数据成员与成员函数内部的局部变量有什么区别？,可以从类定义内的任何成员函数访问数据成员。局部变量只能在定义它们的成员函数中访问。,数据成员在类定义中声明，但在类的成员函数定义的主体之外。局部变量在函数定义的主体中声明,ما هو الفرق بين عضو البيانات والمتغير المحلي داخل وظيفة العضو؟,يمكن الوصول إلى أعضاء البيانات من أي وظائف عضو داخل تعريف الفئة. لا يمكن الوصول إلى المتغيرات المحلية إلا داخل دالة العضو التي تحددها.,يتم التصريح عن أعضاء البيانات في تعريف فئة ولكن خارج هياكل تعريفات وظيفة عضو الفصل. يتم التصريح عن المتغيرات المحلية في جسم تعريف الوظيفة,Яка різниця між елементом даних та локальною змінною всередині функції-члена?,"Доступ до членів даних можна отримати з будь-яких функцій-членів усередині визначення класу. Локальні змінні можуть бути доступні лише всередині функції-члена, яка їх визначає.","члени даних оголошуються у визначенні класу, але поза тілами визначень функції-члена класу. Локальні змінні оголошуються в тілі визначення функції",Qual é a diferença entre um membro de dados e uma variável local dentro de uma função de membro?,Os membros de dados podem ser acessados a partir de quaisquer funções de membro dentro da definição de classe. Variáveis locais só podem ser acessadas dentro da função membro que as define.,"membros de dados são declarados em uma definição de classe, mas fora dos corpos das definições de função de membro de uma classe. Variáveis locais são declaradas no corpo de uma definição de função",تفاوت بین یک عضو داده و یک متغیر محلی در داخل یک تابع عضو چیست؟,اعضای عضو داده را می توان از طریق توابع عضوی که در تعریف کلاس وجود دارد ، جستجو کرد. متغیرهای محلی فقط در داخل تابع عضوی که آنها را تعریف می کند قابل دسترسی هستند.,اعضای داده در یک تعریف کلاس تعریف می شوند اما خارج از متن تعاریف عملکرد عضو کلاس قرار نمی گیرند. متغیرهای محلی در بدنه تعریف عملکرد تعریف می شوند,Quina diferència hi ha entre un membre de dades i una variable local dins d’una funció de membre?,Es pot accedir als membres de les dades des de qualsevol de les funcions dels membres dins de la definició de classe. Les variables locals només es poden accedir a la funció membre que les defineix.,els membres de les dades es declaren en una definició de classe però fora dels cossos de les definicions de funció de membre d&#39;una classe. Les variables locals es declaren al cos d&#39;una definició de funció,Која је разлика између члана података и локалне променљиве унутар функције члана?,Члановима података може се приступити из било које функције члана унутар дефиниције класе. Локалним променљивим се може приступити само унутар функције члана која их дефинише.,"чланови података су декларисани у дефиницији класе, али изван тела дефиниције функције члана класе. Локалне променљиве су декларисане у телу дефиниције функције",Apa perbedaan antara anggota data dan variabel lokal di dalam fungsi anggota?,Anggota data dapat diakses dari fungsi anggota mana pun di dalam definisi kelas. Variabel lokal hanya dapat diakses di dalam fungsi anggota yang mendefinisikannya.,anggota data dideklarasikan dalam definisi kelas tetapi di luar badan definisi fungsi anggota kelas. Variabel lokal dideklarasikan dalam tubuh definisi fungsi,Hva er forskjellen mellom et datamedlem og en lokal variabel i en medlemsfunksjon?,Datamedlemmer er tilgjengelige fra alle medlemsfunksjoner i klassedefinisjonen. Lokale variabler er bare tilgjengelige i medlemsfunksjonen som definerer dem.,"datamedlemmer blir erklært i en klassedefinisjon, men utenfor organene til en klasses medlemsfunksjonsdefinisjoner. Lokale variabler blir deklarert i en funksjonsdefinisjons kropp",멤버 함수 내에서 데이터 멤버와 지역 변수의 차이점은 무엇입니까?,데이터 멤버는 클래스 정의 내의 모든 멤버 함수에서 액세스 할 수 있습니다. 지역 변수는이를 정의하는 멤버 함수 내에서만 액세스 할 수 있습니다.,데이터 멤버는 클래스 정의에서 선언되지만 클래스의 멤버 함수 정의 본문 외부에 있습니다. 지역 변수는 함수 정의 본문에 선언됩니다.,Mitä eroa on datajäsenellä ja jäsenfunktion sisällä olevalla paikallisella muuttujalla?,Tietojäseniin pääsee mistä tahansa jäsentoiminnosta luokan määritelmän sisällä. Paikallisiin muuttujiin pääsee vain niitä määrittelevässä jäsenfunktiossa.,"datajäsenet ilmoitetaan luokan määritelmässä, mutta luokan jäsenfunktiomääritelmien elinten ulkopuolella. Paikalliset muuttujat ilmoitetaan funktion määrittelyn rungossa",Mi a különbség az adattag és a tagfüggvényen belüli helyi változó között?,Az adattagok az osztálymeghatározáson belül bármely tagfunkcióból elérhetők. A helyi változók csak az őket meghatározó tagfüggvényen belül érhetők el.,"az adattagokat osztálydefinícióval deklaráljuk, de az osztály tagfüggvény-definícióinak testén kívül. A helyi változókat a függvénydefiníció testében deklaráljuk",Jaký je rozdíl mezi datovým členem a lokální proměnnou uvnitř členské funkce?,"K datovým členům lze přistupovat z jakékoli členské funkce uvnitř definice třídy. K lokálním proměnným lze přistupovat pouze uvnitř členské funkce, která je definuje.","datové členy jsou deklarovány v definici třídy, ale mimo těla definic členské funkce třídy. Místní proměnné jsou deklarovány v těle definice funkce",Koja je razlika između člana podataka i lokalne varijable unutar funkcije člana?,Članovima podataka može se pristupiti iz bilo koje funkcije člana unutar definicije klase. Lokalnim varijablama može se pristupiti samo unutar funkcije člana koja ih definira.,"članovi podataka deklarirani su u definiciji klase, ali izvan tijela definicije funkcije člana klase. Lokalne varijable su deklarirane u tijelu definicije funkcije"
389,389,2005,11.5,A recursive function solves a problem by repeatedly calling itself. the initial problem is broken into successively smaller parts until a much simpler base case is reached. the solutions to each piece of the problem are then returned a step at a time.,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine rekursive Funktion löst ein Problem, indem sie sich wiederholt selbst aufruft. Das anfängliche Problem wird in sukzessive kleinere Teile aufgeteilt, bis ein viel einfacherer Basisfall erreicht ist. Die Lösungen für jedes Problem werden dann schrittweise zurückgegeben.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,Nasulbad sa usa ka recursive function ang usa ka problema pinaagi sa kanunay nga pagtawag sa kaugalingon. ang inisyal nga problema gibuak sa sunodsunod nga gagmay nga mga bahin hangtod nga naabut ang labi ka yano nga basehan nga kaso. ang mga solusyon sa matag piraso sa problema dayon ibalik matag lakang.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,En rekursiv funktion löser ett problem genom att upprepade gånger anropa sig själv. det ursprungliga problemet delas upp i successivt mindre delar tills ett mycket enklare basfall uppnås. Lösningarna på varje del av problemet returneras sedan ett steg i taget.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,Une fonction récursive résout un problème en s&#39;appelant à plusieurs reprises. le problème initial est divisé en parties successivement plus petites jusqu&#39;à ce qu&#39;un cas de base beaucoup plus simple soit atteint. les solutions à chaque élément du problème sont ensuite renvoyées étape par étape.,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,Een recursieve functie lost een probleem op door zichzelf herhaaldelijk aan te roepen. het aanvankelijke probleem wordt opgesplitst in achtereenvolgens kleinere delen totdat een veel eenvoudiger basisgeval is bereikt. de oplossingen voor elk onderdeel van het probleem worden stap voor stap teruggestuurd.,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","Рекурсивная функция решает проблему, многократно вызывая себя. исходная проблема разбивается на последовательно меньшие части, пока не будет достигнут гораздо более простой базовый случай. решения для каждой части проблемы затем возвращаются по шагам.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,Una funzione ricorsiva risolve un problema chiamando se stessa ripetutamente. il problema iniziale viene suddiviso in parti successivamente più piccole fino a raggiungere un caso base molto più semplice. le soluzioni a ogni parte del problema vengono quindi restituite un passo alla volta.,¿Qué es una función recursiva?,Una función que se llama a sí misma.,Una función recursiva resuelve un problema llamándose a sí misma repetidamente. el problema inicial se divide en partes sucesivamente más pequeñas hasta que se alcanza un caso base mucho más simple. las soluciones a cada parte del problema se devuelven paso a paso.,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","Funkcja rekurencyjna rozwiązuje problem przez wielokrotne wywoływanie siebie. początkowy problem jest podzielony na kolejne mniejsze części, aż do osiągnięcia znacznie prostszego przypadku podstawowego. rozwiązania każdego elementu problemu są następnie przedstawiane krok po kroku.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,Một hàm đệ quy giải quyết một vấn đề bằng cách liên tục gọi chính nó. vấn đề ban đầu được chia thành các phần nhỏ hơn liên tiếp cho đến khi đạt được một trường hợp cơ sở đơn giản hơn nhiều. các giải pháp cho từng phần của vấn đề sau đó được trả lại từng bước một.,再帰関数とは何ですか？,自分自身を呼び出す関数。,再帰関数は、それ自体を繰り返し呼び出すことによって問題を解決します。最初の問題は、はるかに単純な基本ケースに到達するまで、連続して小さな部分に分割されます。次に、問題の各部分の解決策が一度に1ステップずつ返されます。,什么是递归函数？,调用自身的函数。,递归函数通过重复调用自身来解决问题。最初的问题被分解为多个较小的部分，直到获得了更为简单的基础案例。每个问题的解决方案然后一次返回。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,الدالة العودية تحل مشكلة عن طريق استدعاء نفسها بشكل متكرر. يتم تقسيم المشكلة الأولية إلى أجزاء أصغر متتالية حتى يتم الوصول إلى حالة أساسية أبسط بكثير. ثم يتم إرجاع الحلول لكل جزء من المشكلة خطوة بخطوة.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","Рекурсивна функція вирішує проблему, неодноразово викликаючи себе. початкова проблема розбивається на послідовно менші частини, поки не буде досягнуто набагато простіший базовий випадок. рішення кожної частини проблеми потім повертаються крок за кроком.",O que é uma função recursiva?,Uma função que chama a si mesma.,Uma função recursiva resolve um problema chamando a si mesma repetidamente. o problema inicial é dividido em partes sucessivamente menores até que um caso básico muito mais simples seja alcançado. as soluções para cada parte do problema são então retornadas uma etapa de cada vez.,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,یک عملکرد بازگشتی با فراخوانی مکرر خود یک مسئله را حل می کند. مشکل اولیه به قطعات پی در پی کوچکتر تقسیم می شود تا زمانی که یک مورد پایه بسیار ساده تر حاصل شود. سپس راه حل های هر قطعه از مسئله گام به گام بازگردانده می شوند.,Què és una funció recursiva?,Una funció que s’autodenomina.,"Una funció recursiva resol un problema anomenant-se repetidament. el problema inicial es divideix en parts successivament més petites fins a assolir un cas base molt més senzill. a continuació, es tornen les solucions a cada part del problema de manera progressiva.",Шта је рекурзивна функција?,Функција која себе позива.,Рекурзивна функција решава проблем поновним позивањем себе. почетни проблем се дели на узастопно мање делове док се не постигне много једноставнији основни случај. затим се решења за сваки део проблема враћају корак по корак.,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,Fungsi rekursif memecahkan masalah dengan berulang kali memanggil dirinya sendiri. masalah awal dipecah menjadi bagian-bagian yang lebih kecil secara berturut-turut hingga kasus dasar yang lebih sederhana tercapai. solusi untuk setiap bagian dari masalah kemudian dikembalikan selangkah demi selangkah.,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,En rekursiv funksjon løser et problem ved å kalle seg gjentatte ganger. det opprinnelige problemet deles opp i suksessivt mindre deler til en mye enklere basissak er nådd. Løsningene på hver del av problemet returneres deretter trinnvis.,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,재귀 함수는 자신을 반복적으로 호출하여 문제를 해결합니다. 초기 문제는 훨씬 더 간단한 기본 사례에 도달 할 때까지 연속적으로 더 작은 부분으로 나뉩니다. 문제의 각 부분에 대한 솔루션은 한 번에 한 단계 씩 반환됩니다.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","Rekursiivinen toiminto ratkaisee ongelman soittamalla itselleen toistuvasti. alkuperäinen ongelma on jaettu peräkkäin pienempiin osiin, kunnes saavutetaan paljon yksinkertaisempi peruskohde. ratkaisut kuhunkin ongelman osaan palautetaan sitten vaihe kerrallaan.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","A rekurzív függvény megoldja a problémát azzal, hogy többször felhívja önmagát. a kezdeti problémát egymás után kisebb részekre bontják, amíg egy sokkal egyszerűbb alapesetet el nem érnek. a probléma egyes részeire adott megoldásokat ezután egyenként adják vissza.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","Rekurzivní funkce řeší problém opakovaným voláním. počáteční problém je rozdělen na postupně menší části, dokud není dosaženo mnohem jednoduššího základního případu. řešení každého problému se poté vrací krok za krokem.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,Rekurzivna funkcija rješava problem ponovnim pozivanjem sebe. početni problem raščlanjuje se na sukcesivno manje dijelove dok se ne postigne mnogo jednostavniji osnovni slučaj. rješenja za svaki dio problema vraćaju se korak po korak.
390,390,2251,12.4,selection sort selects the smallest element out of the list then the second smallest ....and sorts them acordingly.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","Briefly, how does selection sort work?",5.0,Es wählt das Minimum aus einem Array aus und platziert es an der ersten Position. Anschließend wählt es das Minimum aus dem Rest des Arrays aus und platziert es an der zweiten Position und so weiter.,"Kurz gesagt, wie funktioniert die Auswahlsortierung?","Auswahlsortierung wählt das kleinste Element aus der Liste aus, dann das zweitkleinste .... und sortiert sie entsprechend.","Sa mubu, giunsa molihok ang pagpili?","Gipili niini ang minimum gikan sa usa ka laray ug gibutang kini sa una nga posisyon, unya gipili niini ang minimum gikan sa nahabilin nga laray ug gibutang kini sa ikaduhang posisyon, ug uban pa.",gipili sa pagpili ang labing gamay nga elemento gikan sa lista unya ang ikaduha nga labing gamay .... ug gilain kini sumala sa nahisubay.,"Kortfattat, hur fungerar urvalssortering?","Det väljer minimum från en array och placerar det på den första positionen, sedan väljer det minimum från resten av arrayen och placerar det på den andra positionen och så vidare.",urval sorterar det minsta elementet ur listan och sedan det näst minsta .... och sorterar dem i enlighet därmed.,"En bref, comment fonctionne le tri par sélection?","Il sélectionne le minimum dans un tableau et le place sur la première position, puis il sélectionne le minimum dans le reste du tableau et le place sur la deuxième position, et ainsi de suite.",selection sort sélectionne le plus petit élément de la liste puis le deuxième plus petit .... et les trie en conséquence.,"In het kort, hoe werkt selectiesortering?","Het selecteert het minimum uit een array en plaatst het op de eerste positie, vervolgens selecteert het het minimum uit de rest van de array en plaatst het op de tweede positie, enzovoort.",selectie sorteren selecteert het kleinste element uit de lijst en vervolgens het op een na kleinste ... en sorteert ze overeenkomstig.,"Вкратце, как работает сортировка выбора?","Он выбирает минимум из массива и помещает его в первую позицию, затем выбирает минимум из остальной части массива и помещает его во вторую позицию, и так далее.","selection sort выбирает наименьший элемент из списка, затем второй наименьший .... и соответственно сортирует их.","In breve, come funziona l&#39;ordinamento per selezione?","Seleziona il minimo da un array e lo posiziona sulla prima posizione, quindi seleziona il minimo dal resto dell&#39;array e lo posiziona sulla seconda posizione e così via.","selezione sort seleziona l&#39;elemento più piccolo dall&#39;elenco, quindi il secondo più piccolo .... e li ordina di conseguenza.","Brevemente, ¿cómo funciona la clasificación por selección?","Selecciona el mínimo de una matriz y lo coloca en la primera posición, luego selecciona el mínimo del resto de la matriz y lo coloca en la segunda posición, y así sucesivamente.",La ordenación por selección selecciona el elemento más pequeño de la lista y luego el segundo más pequeño ... y los ordena en consecuencia.,"Krótko, jak działa sortowanie przez wybór?","Wybiera minimum z tablicy i umieszcza je na pierwszej pozycji, następnie wybiera minimum z reszty tablicy i umieszcza je na drugiej pozycji i tak dalej.","sortowanie przez wybór wybiera najmniejszy element z listy, a następnie drugi najmniejszy .... i sortuje je w odpowiedni sposób.","Tóm lại, cách sắp xếp lựa chọn hoạt động như thế nào?","Nó chọn giá trị tối thiểu từ một mảng và đặt nó vào vị trí đầu tiên, sau đó nó chọn giá trị tối thiểu từ phần còn lại của mảng và đặt nó vào vị trí thứ hai, v.v.",lựa chọn sắp xếp chọn phần tử nhỏ nhất trong danh sách sau đó nhỏ nhất thứ hai .... và sắp xếp chúng theo cách ghi.,簡単に言えば、選択ソートはどのように機能しますか？,配列から最小値を選択して最初の位置に配置し、次に配列の残りの部分から最小値を選択して2番目の位置に配置します。,選択ソートは、リストから最小の要素を選択し、次に2番目に小さい要素を選択し、それに応じてそれらをソートします。,简要地说，选择排序如何工作？,它从数组中选择最小值并将其放置在第一个位置，然后从数组其余部分中选择最小值并将其放置在第二个位置，依此类推。,选择排序从列表中选择最小的元素，然后从第二个最小的元素中选择..并对其进行相应排序。,باختصار ، كيف يعمل فرز الاختيار؟,يختار الحد الأدنى من المصفوفة ويضعه في الموضع الأول ، ثم يختار الحد الأدنى من باقي المصفوفة ويضعه في الموضع الثاني ، وهكذا.,فرز التحديد يختار أصغر عنصر من القائمة ثم ثاني أصغر عنصر .... ويصنفها وفقًا لذلك.,"Коротко, як працює сортування підбору?","Він вибирає мінімум з масиву і розміщує його на першій позиції, потім він вибирає мінімум з решти масиву і розміщує його на другій позиції тощо.","selection sort виділяє найменший елемент зі списку, а потім другий найменший .... і сортує їх відповідно.","Resumidamente, como funciona a classificação por seleção?","Ele seleciona o mínimo de uma matriz e o coloca na primeira posição, em seguida, seleciona o mínimo do resto da matriz e o coloca na segunda posição, e assim por diante.","selection sort seleciona o menor elemento da lista, então o segundo menor .... e os ordena de acordo.",به طور خلاصه ، نحوه انتخاب چگونه کار می کند؟,حداقل را از یک آرایه انتخاب کرده و در موقعیت اول قرار می دهد ، سپس حداقل را از بقیه آرایه انتخاب کرده و در موقعیت دوم قرار می دهد و غیره.,انتخاب مرتب سازی کوچکترین عنصر از لیست و سپس دومین کوچکترین عنصر را انتخاب می کند ...,"Breument, com funciona la selecció?","Selecciona el mínim d’una matriu i el col·loca a la primera posició, després selecciona el mínim de la resta de la matriu i el col·loca a la segona posició, etc.",selecció ordena selecciona l&#39;element més petit de la llista i després el segon més petit .... i els ordena d&#39;acord.,"Укратко, како функционише сортирање селекције?","Одабире минимум из низа и поставља га на прво место, затим одабире минимум из остатка низа и поставља га на друго место, и тако даље.","Избор сортирања одабире најмањи елемент са листе, а затим други најмањи .... и сортира их према потреби.","Secara singkat, bagaimana cara kerja urutan seleksi?","Ini memilih minimum dari sebuah array dan menempatkannya di posisi pertama, kemudian memilih minimum dari sisa array dan menempatkannya di posisi kedua, dan seterusnya.","selection sort memilih elemen terkecil dari daftar, kemudian terkecil kedua .... dan mengurutkannya dengan sesuai.","Kort fortalt, hvordan fungerer utvalgssortering?","Den velger minimum fra en matrise og plasserer den på første posisjon, deretter velger den minimum fra resten av matrisen og plasserer den på den andre posisjonen, og så videre.",utvalgssortering velger det minste elementet ut av listen og deretter det nest minste .... og sorterer dem i samsvar.,간단히 말해서 선택 정렬은 어떻게 작동합니까?,배열에서 최소값을 선택하여 첫 번째 위치에 배치 한 다음 나머지 배열에서 최소값을 선택하여 두 번째 위치에 배치하는 식입니다.,선택 정렬은 목록에서 가장 작은 요소를 선택한 다음 두 번째로 작은 요소를 선택하고 그에 따라 정렬합니다.,"Lyhyesti, miten valintalaji toimii?","Se valitsee matriisin matriisista ja sijoittaa sen ensimmäiseen sijaintiin, sitten se valitsee minimin matriisin lopusta ja sijoittaa sen toiseen sijaintiin jne.",Valintalaji valitsee luettelosta pienimmän ja toiseksi pienimmän elementin .... ja lajittelee ne vastaavasti.,"Röviden, hogyan működik a válogatás?","Egy tömbből kiválasztja a minimumot, és az első pozícióba helyezi, majd a tömb többi részéből kiválasztja a minimumot, és a második pozícióba helyezi, és így tovább.","választási rendezés kiválasztja a legkisebb elemet a listából, majd a második legkisebbet .... és ennek megfelelően rendezi őket.","Stručně, jak funguje výběrové třídění?","Vybírá minimum z pole a umístí ho na první pozici, poté vybere minimum ze zbytku pole a umístí ho na druhou pozici atd.","selection sort vybere nejmenší prvek ze seznamu, pak druhý nejmenší .... a seřadí je podle toho.","Ukratko, kako funkcionira sortiranje odabira?","Odabire minimum iz niza i postavlja ga na prvo mjesto, zatim odabire minimum iz ostatka niza i postavlja ga na drugo mjesto itd.","selection sort odabire najmanji element s popisa, a zatim drugi najmanji .... i sortira ih prema potrebi."
391,391,1475,8.6,"infix expressions are converted to postfix, (i.e. 3+2 is changed to 32+)","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",How are infix expressions evaluated by computers?,5.0,"Zunächst werden sie in die Postfix-Form konvertiert, gefolgt von einer Auswertung des Postfix-Ausdrucks.",Wie werden Infix-Ausdrücke von Computern ausgewertet?,Infix-Ausdrücke werden in Postfix konvertiert (dh 3 + 2 wird in 32+ geändert),Giunsa ang pagsusi sa mga ekspresyon sa infix sa mga kompyuter?,"Una, gibag-o sila ngadto sa porma nga postfix, gisundan sa usa ka pagsusi sa ekspresyon sa postfix.","ang mga ekspresyon sa infix gibag-o sa postfix, (ie 3 + 2 gibag-o sa 32+)",Hur utvärderas infixuttryck av datorer?,"Först omvandlas de till postfix-form, följt av en utvärdering av postfix-uttrycket.",infix-uttryck konverteras till postfix (dvs. 3 + 2 ändras till 32+),Comment les expressions infixes sont-elles évaluées par les ordinateurs?,"Tout d&#39;abord, ils sont convertis en forme de suffixe, suivi d&#39;une évaluation de l&#39;expression de suffixe.","les expressions infixes sont converties en suffixe, (c&#39;est-à-dire que 3 + 2 est changé en 32+)",Hoe worden tussenvoegseluitdrukkingen door computers geëvalueerd?,"Eerst worden ze omgezet in een postfix-vorm, gevolgd door een evaluatie van de postfix-expressie.","tussenvoegsel-uitdrukkingen worden geconverteerd naar postfix, (dwz 3 + 2 wordt gewijzigd in 32+)",Как инфиксные выражения оцениваются компьютерами?,"Сначала они преобразуются в постфиксную форму, после чего выполняется оценка постфиксного выражения.",инфиксные выражения преобразуются в постфиксные (т.е. 3 + 2 заменяются на 32+),Come vengono valutate le espressioni infisso dai computer?,"In primo luogo, vengono convertiti in formato suffisso, seguito da una valutazione dell&#39;espressione suffisso.","le espressioni infisso vengono convertite in suffisso, (cioè 3 + 2 viene modificato in 32+)",¿Cómo evalúan las computadoras las expresiones infijas?,"Primero, se convierten en forma de sufijo, seguido de una evaluación de la expresión de sufijo.","las expresiones infijas se convierten a sufijo (es decir, 3 + 2 se cambia a 32+)",W jaki sposób wyrażenia infix są oceniane przez komputery?,"Najpierw są konwertowane do postaci postfiksowej, po czym następuje ocena wyrażenia postfiksowego.",wyrażenia infix są konwertowane na postfiks (tj. 3 + 2 jest zmieniane na 32+),Các biểu thức infix được máy tính đánh giá như thế nào?,"Đầu tiên, chúng được chuyển đổi thành dạng postfix, sau đó là đánh giá biểu thức postfix.","các biểu thức infix được chuyển đổi thành postfix, (tức là 3 + 2 được đổi thành 32+)",中置式はコンピューターによってどのように評価されますか？,最初に、それらは接尾辞形式に変換され、続いて接尾辞式が評価されます。,中置式は接尾辞に変換されます（つまり、3 + 2は32+に変更されます）,计算机如何评估中缀表达式？,首先，将它们转换为后缀形式，然后评估后缀表达式。,中缀表达式将转换为后缀（即3 + 2更改为32+）,كيف يتم تقييم تعبيرات infix بواسطة أجهزة الكمبيوتر؟,أولاً ، يتم تحويلها إلى نموذج postfix ، متبوعًا بتقييم للتعبير postfix.,يتم تحويل تعبيرات infix إلى postfix ، (أي تم تغيير 3 + 2 إلى 32+),Як обчислюються комп’ютерні вирази для інфіксів?,"Спочатку вони перетворюються у форму постфіксу, після чого виконується оцінка виразу постфікса.",вирази інфіксу перетворюються на постфікс (тобто 3 + 2 змінено на 32+),Como as expressões infixas são avaliadas por computadores?,"Primeiro, eles são convertidos para a forma pós-fixada, seguida por uma avaliação da expressão pós-fixada.","expressões infixas são convertidas em postfix, (ou seja, 3 + 2 é alterado para 32+)",عبارات اینفیکس توسط رایانه چگونه ارزیابی می شوند؟,ابتدا به فرم postfix تبدیل می شوند و به دنبال آن ارزیابی از بیان postfix می شود.,عبارات infix به postfix تبدیل می شوند (یعنی 3 + 2 به 32+ تغییر می کند),Com s’avaluen les expressions infix per ordinadors?,"En primer lloc, es converteixen en forma postfix, seguida d&#39;una avaluació de l&#39;expressió postfix.","les expressions infix es converteixen en postfix (és a dir, 3 + 2 es canvia a 32+)",Како рачунарски процењују инфиксне изразе?,"Прво се претварају у постфиксни облик, након чега следи процена израза постфикса.",инфик изрази се претварају у постфик (тј. 3 + 2 се мења у 32+),Bagaimana ekspresi infix dievaluasi oleh komputer?,"Pertama, mereka diubah menjadi bentuk postfix, diikuti dengan evaluasi ekspresi postfix.","ekspresi infix diubah menjadi postfix, (yaitu 3 + 2 diubah menjadi 32+)",Hvordan vurderes infix-uttrykk av datamaskiner?,"Først blir de konvertert til postfix-form, etterfulgt av en evaluering av postfix-uttrykket.","infix-uttrykk blir konvertert til postfix, (dvs. 3 + 2 endres til 32+)",중위 식은 컴퓨터에서 어떻게 평가됩니까?,먼저 접미사 형식으로 변환 된 다음 접미사 식의 평가가 이어집니다.,중위 식은 접미사로 변환됩니다 (예 : 3 + 2가 32+로 변경됨).,Kuinka tietokoneet arvioivat infix-lausekkeita?,"Ensin ne muunnetaan postfix-muotoon, mitä seuraa postfix-lausekkeen arviointi.",infix-lausekkeet muunnetaan postfixiksi (eli 3 + 2 muutetaan 32+),Hogyan értékelik a számítógépek az infix kifejezéseket?,"Először átalakítják őket postfix formává, majd értékelik a postfix kifejezést.",az infix kifejezések átalakításra kerülnek postfix formátumra (azaz a 3 + 2 változik 32+ -ra),Jak jsou výrazy infixu vyhodnocovány počítači?,"Nejprve jsou převedeny do formy postfixu, následované hodnocením výrazu postfixu.",výrazy infix jsou převedeny na postfix (tj. 3 + 2 se změní na 32+),Kako računarski procenjuju infiksne izraze?,"Prvo se pretvaraju u postfix oblik, nakon čega slijedi procjena izraza postfix.",infix izrazi se pretvaraju u postfix (tj. 3 + 2 se mijenja u 32+)
392,392,216,2.1,A class definition typically includes function definitions.,Data members (attributes) and member functions.,What is typically included in a class definition?,3.0,Datenelemente (Attribute) und Elementfunktionen.,Was ist normalerweise in einer Klassendefinition enthalten?,Eine Klassendefinition enthält normalerweise Funktionsdefinitionen.,Unsa ang kasagarang giapil sa usa ka kahulugan sa klase?,Mga myembro sa datos (mga hiyas) ug mga kalihokan sa miyembro.,Ang usa ka kahulugan sa klase kanunay nga adunay mga kahulugan sa pagpaandar.,Vad ingår vanligtvis i en klassdefinition?,Datamedlemmar (attribut) och medlemsfunktioner.,En klassdefinition innehåller vanligtvis funktionsdefinitioner.,Qu&#39;est-ce qui est généralement inclus dans une définition de classe?,Membres de données (attributs) et fonctions membres.,Une définition de classe comprend généralement des définitions de fonction.,Wat is er typisch opgenomen in een klassendefinitie?,Gegevensleden (attributen) en lidfuncties.,Een klassendefinitie omvat doorgaans functiedefinities.,Что обычно включается в определение класса?,Члены данных (атрибуты) и функции-члены.,Определение класса обычно включает определения функций.,Cosa è tipicamente incluso nella definizione di una classe?,Membri dei dati (attributi) e funzioni dei membri.,Una definizione di classe in genere include definizioni di funzioni.,¿Qué se incluye normalmente en una definición de clase?,Miembros de datos (atributos) y funciones de los miembros.,Una definición de clase generalmente incluye definiciones de funciones.,Co zwykle zawiera definicja klasy?,Członkowie danych (atrybuty) i funkcje składowe.,Definicja klasy zazwyczaj zawiera definicje funkcji.,Những gì thường được bao gồm trong một định nghĩa lớp?,Thành viên dữ liệu (thuộc tính) và chức năng thành viên.,Một định nghĩa lớp thường bao gồm các định nghĩa hàm.,通常、クラス定義には何が含まれていますか？,データメンバー（属性）とメンバー関数。,クラス定義には通常、関数定義が含まれます。,类定义中通常包含什么？,数据成员（属性）和成员函数。,类定义通常包括函数定义。,ما الذي يتم تضمينه عادة في تعريف الفئة؟,أعضاء البيانات (السمات) ووظائف الأعضاء.,يتضمن تعريف الفئة عادةً تعريفات الوظائف.,Що зазвичай входить у визначення класу?,Члени даних (атрибути) та функції членів.,Визначення класу зазвичай включає визначення функцій.,O que normalmente está incluído em uma definição de classe?,Membros de dados (atributos) e funções de membro.,Uma definição de classe geralmente inclui definições de função.,چه چیزی معمولاً در تعریف کلاس گنجانده می شود؟,اعضای داده (ویژگی ها) و توابع عضو.,تعریف کلاس معمولاً شامل تعاریف عملکرد است.,Què s&#39;inclou normalment en una definició de classe?,Membres de dades (atributs) i funcions de membre.,Una definició de classe normalment inclou definicions de funcions.,Шта је обично укључено у дефиницију класе?,Чланови података (атрибути) и функције чланова.,Дефиниција класе обично укључује дефиниције функција.,Apa yang biasanya termasuk dalam definisi kelas?,Data anggota (atribut) dan fungsi anggota.,Definisi kelas biasanya mencakup definisi fungsi.,Hva er vanligvis inkludert i en klassedefinisjon?,Datamedlemmer (attributter) og medlemsfunksjoner.,En klassedefinisjon inkluderer vanligvis funksjonsdefinisjoner.,일반적으로 클래스 정의에는 무엇이 포함됩니까?,데이터 멤버 (속성) 및 멤버 함수.,클래스 정의에는 일반적으로 함수 정의가 포함됩니다.,Mitä tyypillisesti sisältyy luokan määritelmään?,Tietojäsenet (attribuutit) ja jäsenfunktiot.,Luokan määrittely sisältää tyypillisesti toimintomääritelmät.,Mi jellemzően szerepel az osztály definíciójában?,Adattagok (attribútumok) és tagfunkciók.,Az osztálydefiníció jellemzően függvénydefiníciókat tartalmaz.,Co je obvykle zahrnuto v definici třídy?,Datové členy (atributy) a členské funkce.,Definice třídy obvykle zahrnuje definice funkcí.,Šta je obično uključeno u definiciju klase?,Članovi podataka (atributi) i funkcije članova.,Definicija klase obično uključuje definicije funkcija.
393,393,1128,6.7,"A function pointer contains the memory address of a function. Using a function pointer, a function can be passed to or returned by another function. Function pointers can also be stored in arrays.",The address of the location in memory where the function code resides.,What is a function pointer?,5.0,"Die Adresse des Speicherorts, an dem sich der Funktionscode befindet.",Was ist ein Funktionszeiger?,Ein Funktionszeiger enthält die Speicheradresse einer Funktion. Mit einem Funktionszeiger kann eine Funktion an eine andere Funktion übergeben oder von dieser zurückgegeben werden. Funktionszeiger können auch in Arrays gespeichert werden.,Unsa ang usa ka function pointer?,Ang adres sa lokasyon sa panumduman diin nagpuyo ang function code.,"Ang usa ka function pointer adunay sulud nga memory address sa usa ka function. Gigamit ang usa ka function pointer, ang usa ka function mahimong ipasa o ibalik sa uban pang kalihokan. Ang mga panudlo sa pagpaandar mahimo usab tipigan sa mga array.",Vad är en funktionspekare?,Adressen till platsen i minnet där funktionskoden finns.,En funktionspekare innehåller minnesadressen för en funktion. Med en funktionspekare kan en funktion skickas till eller returneras av en annan funktion. Funktionspekare kan också lagras i matriser.,Qu&#39;est-ce qu&#39;un pointeur de fonction?,L&#39;adresse de l&#39;emplacement en mémoire où réside le code de fonction.,"Un pointeur de fonction contient l&#39;adresse mémoire d&#39;une fonction. En utilisant un pointeur de fonction, une fonction peut être passée à ou retournée par une autre fonction. Les pointeurs de fonction peuvent également être stockés dans des tableaux.",Wat is een functie-aanwijzer?,Het adres van de locatie in het geheugen waar de functiecode zich bevindt.,Een functiepointer bevat het geheugenadres van een functie. Met behulp van een functiepointer kan een functie worden doorgegeven aan of geretourneerd door een andere functie. Functiewijzers kunnen ook worden opgeslagen in arrays.,Что такое указатель на функцию?,"Адрес места в памяти, где находится код функции.","Указатель функции содержит адрес памяти функции. Используя указатель на функцию, функция может быть передана или возвращена другой функцией. Указатели функций также могут храниться в массивах.",Cos&#39;è un puntatore a funzione?,L&#39;indirizzo della posizione in memoria in cui risiede il codice funzione.,"Un puntatore a funzione contiene l&#39;indirizzo di memoria di una funzione. Utilizzando un puntatore a funzione, una funzione può essere passata o restituita da un&#39;altra funzione. I puntatori a funzione possono anche essere memorizzati in array.",¿Qué es un puntero de función?,La dirección de la ubicación en la memoria donde reside el código de función.,"Un puntero de función contiene la dirección de memoria de una función. Usando un puntero de función, una función puede ser pasada o devuelta por otra función. Los punteros de función también se pueden almacenar en matrices.",Co to jest wskaźnik funkcji?,"Adres lokalizacji w pamięci, w której znajduje się kod funkcji.",Wskaźnik funkcji zawiera adres pamięci funkcji. Za pomocą wskaźnika funkcji można przekazać funkcję lub zwrócić ją do innej funkcji. Wskaźniki funkcji można również przechowywać w tablicach.,Con trỏ hàm là gì?,Địa chỉ của vị trí trong bộ nhớ nơi mã hàm cư trú.,"Một con trỏ hàm chứa địa chỉ bộ nhớ của một hàm. Sử dụng con trỏ hàm, một hàm có thể được chuyển đến hoặc trả về bởi một hàm khác. Con trỏ hàm cũng có thể được lưu trữ trong mảng.",関数ポインタとは何ですか？,機能コードが存在するメモリ内の場所のアドレス。,関数ポインタには、関数のメモリアドレスが含まれています。関数ポインタを使用すると、関数を別の関数に渡したり、別の関数から返すことができます。関数ポインタは配列に格納することもできます。,什么是函数指针？,功能代码所在的内存位置的地址。,函数指针包含函数的内存地址。使用函数指针，可以将一个函数传递给另一个函数或由另一个函数返回。函数指针也可以存储在数组中。,ما هو مؤشر الوظيفة؟,عنوان الموقع في الذاكرة حيث يوجد رمز الوظيفة.,يحتوي مؤشر الوظيفة على عنوان الذاكرة الخاص بالوظيفة. باستخدام مؤشر دالة ، يمكن تمرير دالة أو إرجاعها بواسطة دالة أخرى. يمكن أيضًا تخزين مؤشرات الوظائف في مصفوفات.,Що таке покажчик функції?,"Адреса місця в пам&#39;яті, де знаходиться код функції.","Покажчик функції містить адресу пам&#39;яті функції. Використовуючи покажчик функції, функція може бути передана або повернута іншою функцією. Покажчики функцій також можуть зберігатися в масивах.",O que é um ponteiro de função?,O endereço do local na memória onde o código de função reside.,"Um ponteiro de função contém o endereço de memória de uma função. Usando um ponteiro de função, uma função pode ser passada ou retornada por outra função. Ponteiros de função também podem ser armazenados em matrizes.",نشانگر عملکرد چیست؟,آدرس مکانی در حافظه که کد عملکرد در آن قرار دارد.,یک نشانگر تابع شامل آدرس حافظه یک تابع است. با استفاده از یک نشانگر عملکرد ، یک عملکرد می تواند به عملکرد دیگری منتقل شود یا به آن برگردانده شود. اشاره گرهای عملکرد را می توان در آرایه ها نیز ذخیره کرد.,Què és un punter de funció?,L&#39;adreça de la ubicació a la memòria on resideix el codi de funció.,"Un punter de funció conté l&#39;adreça de memòria d&#39;una funció. Mitjançant un punter de funció, una altra funció la pot passar o retornar. Els indicadors de funció també es poden emmagatzemar en matrius.",Шта је показивач функције?,Адреса локације у меморији на којој се налази код функције.,"Показивач функције садржи меморијску адресу функције. Користећи показивач функције, функција може бити прослеђена или враћена другом функцијом. Показивачи функција такође се могу чувати у низовима.",Apa itu penunjuk fungsi?,Alamat lokasi di memori tempat kode fungsi berada.,"Penunjuk fungsi berisi alamat memori dari suatu fungsi. Dengan menggunakan penunjuk fungsi, suatu fungsi dapat diteruskan atau dikembalikan oleh fungsi lain. Pointer fungsi juga dapat disimpan dalam array.",Hva er en funksjonspeker?,Adressen til stedet i minnet der funksjonskoden ligger.,En funksjonspeker inneholder minneadressen til en funksjon. Ved hjelp av en funksjonspeker kan en funksjon sendes til eller returneres av en annen funksjon. Funksjonspekere kan også lagres i matriser.,함수 포인터 란 무엇입니까?,기능 코드가있는 메모리의 위치 주소입니다.,함수 포인터는 함수의 메모리 주소를 포함합니다. 함수 포인터를 사용하면 함수가 다른 함수에 전달되거나 반환 될 수 있습니다. 함수 포인터는 배열에 저장할 수도 있습니다.,Mikä on funktion osoitin?,"Sen muistin sijainnin osoite, jossa toimintokoodi sijaitsee.",Funktion osoitin sisältää toiminnon muistiosoitteen. Funktiosoittimen avulla toiminto voidaan siirtää toiselle toiminnolle tai palauttaa se toiselle toiminnolle. Toiminnon osoittimia voidaan myös tallentaa taulukoihin.,Mi az a funkciómutató?,"A memória azon helyének címe, ahol a funkciókód található.",A funkciómutató egy funkció memória címét tartalmazza. Funkciómutatóval egy funkció átadható egy másik függvénynek vagy visszaadható egy másik függvénynek. A funkciómutatók tömbökben is tárolhatók.,Co je ukazatel funkce?,"Adresa umístění v paměti, kde se nachází funkční kód.",Ukazatel funkce obsahuje adresu paměti funkce. Pomocí ukazatele funkce lze funkci předat nebo vrátit jinou funkcí. Ukazatele funkcí lze také uložit do polí.,Što je pokazivač funkcije?,Adresa lokacije u memoriji na kojoj se nalazi kôd funkcije.,"Pokazivač funkcije sadrži memorijsku adresu funkcije. Koristeći pokazivač funkcije, funkcija se može proslijediti ili vratiti drugoj funkciji. Pokazivači funkcija također se mogu pohraniti u nizove."
394,394,834,4.7,by rows,By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",5.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?",nach Zeilen,"Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,pinaagi sa mga laray,"Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,efter rader,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,par lignes,"Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,door rijen,Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,по строкам,"Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,per righe,"¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,por filas,"W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,rzędami,"Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,theo hàng,2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,行ごと,二维数组如何按行或按列存储在内存中？,按行。,按行,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,بالصفوف,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,за рядами,"Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,por filas,آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,توسط ردیف ها,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,per files,"Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,по редовима,"Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,menurut baris,"Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,etter rader,"2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,행별,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,riveittäin,"Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,soronként,"Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,podle řádků,"Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,po redovima
395,395,1032,6.4,Element b[ n ] can be accessed by  *( bPtr + n ).,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",How can an array be addressed in pointer/offset notation?,4.0,"Durch Initialisieren eines Zeigers, der auf das erste Element des Arrays zeigt, und anschließendes Inkrementieren dieses Zeigers mit dem Index des Array-Elements.",Wie kann ein Array in Zeiger- / Offset-Notation adressiert werden?,Auf das Element b [n] kann mit * (bPtr + n) zugegriffen werden.,Giunsa ang pag-atubang sa usa ka laray sa pointer / offset notation?,"Pinaagi sa pagsugod sa usa ka pointer aron itudlo ang una nga elemento sa laray, ug pagkahuman pagdugang kini nga panudlo uban ang indeks sa elemento sa laray.",Ang elemento b [n] mahimong ma-access sa * (bPtr + n).,Hur kan en array adresseras i pekaren / offset-notationen?,Genom att initialisera en pekare för att peka på det första elementet i matrisen och sedan öka denna pekare med arrayelementets index.,Element b [n] kan nås med * (bPtr + n).,Comment un tableau peut-il être adressé en notation pointeur / offset?,"En initialisant un pointeur pour pointer vers le premier élément du tableau, puis en incrémentant ce pointeur avec l&#39;index de l&#39;élément du tableau.",L&#39;élément b [n] est accessible par * (bPtr + n).,Hoe kan een array worden geadresseerd in pointer / offset-notatie?,"Door een pointer te initialiseren om naar het eerste element van de array te wijzen, en deze pointer vervolgens te verhogen met de index van het array-element.",Element b [n] is toegankelijk via * (bPtr + n).,Как можно адресовать массив в нотации указателя / смещения?,"Инициализируя указатель для указания на первый элемент массива, а затем увеличивая этот указатель на индекс элемента массива.",Доступ к элементу b [n] можно получить с помощью * (bPtr + n).,Come si può indirizzare un array nella notazione puntatore / offset?,Inizializzando un puntatore in modo che punti al primo elemento della matrice e quindi incrementando questo puntatore con l&#39;indice dell&#39;elemento della matrice.,È possibile accedere all&#39;elemento b [n] da * (bPtr + n).,¿Cómo se puede direccionar una matriz en notación de puntero / desplazamiento?,Inicializando un puntero para que apunte al primer elemento de la matriz y luego incrementando este puntero con el índice del elemento de la matriz.,Se puede acceder al elemento b [n] mediante * (bPtr + n).,Jak można adresować tablicę w notacji wskaźnika / przesunięcia?,"Inicjując wskaźnik, aby wskazywał na pierwszy element tablicy, a następnie zwiększając ten wskaźnik o indeks elementu tablicy.",Dostęp do elementu b [n] można uzyskać za pomocą * (bPtr + n).,Làm thế nào để một mảng có thể được định địa chỉ trong ký hiệu con trỏ / offset?,"Bằng cách khởi tạo một con trỏ để trỏ đến phần tử đầu tiên của mảng, sau đó tăng dần con trỏ này với chỉ số của phần tử mảng.",Phần tử b [n] có thể được truy cập bởi * (bPtr + n).,配列をポインタ/オフセット表記でどのようにアドレス指定できますか？,配列の最初の要素を指すようにポインターを初期化し、次にこのポインターを配列要素のインデックスでインクリメントします。,要素b [n]には、*（bPtr + n）からアクセスできます。,如何用指针/偏移量表示法处理数组？,通过初始化一个指针以指向数组的第一个元素，然后用数组元素的索引递增此指针。,元素b [n]可以通过*（bPtr + n）访问。,كيف يمكن معالجة المصفوفة في ترميز المؤشر / الإزاحة؟,من خلال تهيئة مؤشر للإشارة إلى العنصر الأول من المصفوفة ، ثم زيادة هذا المؤشر بفهرس عنصر الصفيف.,يمكن الوصول إلى العنصر b [n] بواسطة * (bPtr + n).,Як можна звернутися до масиву в позначенні покажчика / зміщення?,"Ініціалізуючи покажчик для вказівки на перший елемент масиву, а потім збільшуючи цей покажчик за допомогою індексу елемента масиву.",Елемент b [n] можна отримати за допомогою * (bPtr + n).,Como uma matriz pode ser endereçada em notação de ponteiro / deslocamento?,"Inicializando um ponteiro para apontar para o primeiro elemento da matriz e, em seguida, incrementando esse ponteiro com o índice do elemento da matriz.",O elemento b [n] pode ser acessado por * (bPtr + n).,چگونه می توان به یک آرایه در نت نشانگر / افست پرداخت؟,با مقدار دهی اولیه یک اشاره گر به اولین عنصر آرایه ، و سپس افزایش این نشانگر با شاخص عنصر آرایه.,عنصر b [n] توسط * (bPtr + n) قابل دسترسی است.,Com es pot abordar una matriu en la notació de punter / desplaçament?,"Inicialitzant un punter per apuntar al primer element de la matriu i, a continuació, incrementant aquest punter amb l’índex de l’element de matriu.",Es pot accedir a l&#39;element b [n] mitjançant * (bPtr + n).,Како се низ може адресирати у нотацији показивача / помака?,"Иницијализацијом показивача да покаже на први елемент низа, а затим повећањем овог показивача индексом елемента низа.",Елементу б [н] може се приступити са * (бПтр + н).,Bagaimana array dialamatkan dalam pointer / notasi offset?,"Dengan menginisialisasi penunjuk untuk menunjuk ke elemen pertama dari larik, lalu menaikkan penunjuk ini dengan indeks elemen larik.",Elemen b [n] dapat diakses oleh * (bPtr + n).,Hvordan kan en matrise adresseres i peker- / forskyvningsnotasjon?,"Ved å initialisere en peker for å peke på det første elementet i matrisen, og deretter øke denne pekeren med indeksen til matriseelementet.",Element b [n] er tilgjengelig med * (bPtr + n).,포인터 / 오프셋 표기법으로 배열 주소를 어떻게 지정할 수 있습니까?,배열의 첫 번째 요소를 가리 키도록 포인터를 초기화 한 다음이 포인터를 배열 요소의 인덱스로 증가시킵니다.,요소 b [n]은 * (bPtr + n)으로 액세스 할 수 있습니다.,Kuinka taulukko voidaan käsitellä osoitin / offset-merkinnässä?,Alustamalla osoittimen osoittamaan taulukon ensimmäiseen elementtiin ja lisäämällä sitten osoitinta taulukkoelementin indeksillä.,Elementtiin b [n] pääsee painamalla * (bPtr + n).,Hogyan lehet egy tömböt megcímezni pointer / offset jelöléssel?,"Inicializálva egy mutatót a tömb első elemére mutatni, majd növelve ezt a mutatót a tömb elem indexével.",A b [n] elemhez * (bPtr + n) érhető el.,Jak lze pole adresovat v ukazateli / offsetové notaci?,Inicializací ukazatele na první prvek pole a následným zvýšením tohoto ukazatele indexem prvku pole.,K prvku b [n] lze přistupovat pomocí * (bPtr + n).,Kako se niz može adresirati u notaciji pokazivača / pomaka?,"Inicijalizacijom pokazivača da upućuje na prvi element niza, a zatim povećanjem ovog pokazivača indeksom elementa niza.",Elementu b [n] može se pristupiti * (bPtr + n).
396,396,893,5.2,"the sort finds the largest item and places it at the end, then then next largest is found and placed next to last, continue until there is only one number left, this is the beginning of the sorted array","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","In one sentence, what is the main idea implemented by selection sort?",4.5,"Wenn jeweils ein Array-Element von links nach rechts verwendet wird, wird das Minimum der verbleibenden Elemente ermittelt und mit dem aktuellen Element ausgetauscht.","Was ist in einem Satz die Hauptidee, die durch Auswahlsortierung umgesetzt wird?","Die Sortierung findet das größte Element und platziert es am Ende. Dann wird das nächstgrößere gefunden und vorletzt platziert. Fahren Sie fort, bis nur noch eine Zahl übrig ist. Dies ist der Anfang des sortierten Arrays","Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman sa pagpili?","Pagkuha usa ka elemento sa pag-ayos sa matag higayon, gikan sa wala ngadto sa tuo, maila niini ang minimum gikan sa nahabilin nga mga elemento ug gibaylo kini sa karon nga elemento.","ang klase makit-an ang labing kadaghan nga butang ug ibutang kini sa katapusan, unya pagkahuman sa sunod nga labing kadaghan makit-an ug ibutang sa tapad sa katapusan, magpadayon hangtod adunay usa na lang ka numero ang nahabilin, kini ang pagsugod sa naayos nga han-ay","I en mening, vad är huvudidén implementerad av urvalsortering?","Tar ett matriselement åt gången, från vänster till höger, identifierar det minsta från de återstående elementen och byter det med det aktuella elementet.","sorteringen hittar det största objektet och placerar det i slutet, sedan hittas näst största och placeras bredvid det sista, fortsätt tills det bara finns ett nummer kvar, detta är början på den sorterade matrisen","En une phrase, quelle est l&#39;idée principale mise en œuvre par le tri sélectif?","Prenant un élément de tableau à la fois, de gauche à droite, il identifie le minimum parmi les éléments restants et le remplace par l&#39;élément courant.","le tri trouve l&#39;élément le plus grand et le place à la fin, puis le plus grand suivant est trouvé et placé à côté du dernier, continuez jusqu&#39;à ce qu&#39;il ne reste qu&#39;un seul numéro, c&#39;est le début du tableau trié","In één zin, wat is het hoofdidee geïmplementeerd door middel van selectiesortering?","Door één array-element tegelijk te nemen, van links naar rechts, identificeert het het minimum van de resterende elementen en verwisselt het met het huidige element.","het sorteren vindt het grootste item en plaatst het aan het einde, dan wordt het volgende grootste item gevonden en op een na laatste geplaatst, ga door totdat er nog maar één nummer over is, dit is het begin van de gesorteerde reeks","Одним предложением, какова основная идея сортировки по выбору?","Принимая по одному элементу массива слева направо, он определяет минимум из оставшихся элементов и меняет его местами с текущим элементом.","сортировка находит самый большой элемент и помещает его в конец, затем находит следующий по величине элемент и помещает его рядом с последним, продолжайте, пока не останется только одно число, это начало отсортированного массива","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento di selezione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, identifica il minimo dagli elementi rimanenti e lo scambia con l&#39;elemento corrente.","l&#39;ordinamento trova l&#39;elemento più grande e lo posiziona alla fine, quindi viene trovato il successivo più grande e posizionato penultimo, continua finché non rimane un solo numero, questo è l&#39;inizio della matrice ordinata","En una oración, ¿cuál es la idea principal implementada por tipo de selección?","Tomando un elemento de matriz a la vez, de izquierda a derecha, identifica el mínimo de los elementos restantes y lo intercambia con el elemento actual.","la ordenación encuentra el elemento más grande y lo coloca al final, luego se encuentra el siguiente más grande y se coloca junto al último, continúa hasta que solo quede un número, este es el comienzo de la matriz ordenada","Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wybieranie?","Biorąc jeden element tablicy na raz, od lewej do prawej, identyfikuje minimum z pozostałych elementów i zamienia je na bieżący element.","sortowanie znajduje największy element i umieszcza go na końcu, następnie znajduje się następny największy i umieszczany obok ostatniego, kontynuuj, aż zostanie tylko jedna liczba, to jest początek posortowanej tablicy","Trong một câu, ý chính được triển khai bằng cách sắp xếp lựa chọn nào?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó xác định giá trị tối thiểu từ các phần tử còn lại và hoán đổi nó với phần tử hiện tại.","sắp xếp tìm mục lớn nhất và đặt nó ở cuối, sau đó lớn nhất tiếp theo được tìm thấy và đặt tiếp theo cuối cùng, tiếp tục cho đến khi chỉ còn một số, đây là đầu của mảng đã sắp xếp",一言で言えば、選択ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、残りの要素から最小値を識別して、現在の要素と交換します。,並べ替えは最大のアイテムを見つけて最後に配置し、次に大きいものを見つけて最後から2番目に配置し、残りの数値が1つになるまで続けます。これが並べ替えられた配列の始まりです,一句话，选择排序实现的主要思想是什么？,一次从左到右获取一个数组元素，它从其余元素中识别出最小值，并将其与当前元素交换。,排序找到最大的项目并将其放置在末尾，然后找到下一个最大的项目并将其放置在最后一个位置，继续直到仅剩一个数字为止，这是已排序数组的开始,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الاختيار؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يحدد الحد الأدنى من العناصر المتبقية ويتبادلها مع العنصر الحالي.,يقوم الفرز بالعثور على العنصر الأكبر ووضعه في النهاية ، ثم يتم العثور على العنصر الأكبر التالي ووضعه بجوار الأخير ، تابع حتى يتبقى رقم واحد فقط ، هذه هي بداية المصفوفة المرتبة,"В одному реченні, яка головна ідея реалізується шляхом сортування виділення?","Беручи по одному елементу масиву, зліва направо, він визначає мінімум з решти елементів і міняє його місцями з поточним елементом.","сортування знаходить найбільший елемент і розміщує його в кінці, потім наступний найбільший знаходить і розміщує поруч з останнім, продовжуйте, поки не залишиться лише одне число, це початок відсортованого масиву","Em uma frase, qual é a ideia principal implementada pela ordenação por seleção?","Pegando um elemento da matriz por vez, da esquerda para a direita, ele identifica o mínimo dos elementos restantes e o troca com o elemento atual.","a classificação encontra o maior item e o coloca no final, então o próximo maior é encontrado e colocado ao lado do último, continua até que haja apenas um número restante, este é o início da matriz classificada",در یک جمله ، ایده اصلی که براساس مرتب سازی انتخاب اجرا می شود چیست؟,با یک بار گرفتن یک عنصر آرایه ، از چپ به راست ، حداقل عناصر باقی مانده را شناسایی کرده و با عنصر فعلی عوض می کند.,مرتب سازی بزرگترین مورد را پیدا می کند و آن را در انتها قرار می دهد ، سپس بزرگترین بعدی را پیدا می کند و در کنار آخرین قرار می گیرد ، ادامه دهید تا فقط یک عدد باقی بماند ، این آغاز آرایه مرتب شده است,"En una frase, quina és la idea principal implementada pel tipus de selecció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, identifica el mínim dels elements restants i el canvia amb l’element actual.","l&#39;ordenació troba l&#39;element més gran i el col·loca al final; llavors es troba el següent més gran i es col·loca al costat de l&#39;últim, continueu fins que només quedi un número, aquest és el començament de la matriu ordenada","У једној реченици, која је главна идеја спроведена сортирањем избора?","Узимајући по један елемент низа, с лева на десно, идентификује минимум од преосталих елемената и замењује га са тренутним елементом.","сорта проналази највећи предмет и ставља га на крај, а затим се проналази следећи највећи и поставља поред последњег, настављајте док не остане само један број, ово је почетак сортиране низа","Dalam satu kalimat, apa gagasan utama yang diimplementasikan oleh selection sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, ini mengidentifikasi elemen minimum dari elemen yang tersisa dan menukarnya dengan elemen saat ini.","pengurutan menemukan item terbesar dan menempatkannya di akhir, kemudian yang terbesar berikutnya ditemukan dan ditempatkan di sebelah terakhir, teruskan hingga hanya ada satu nomor yang tersisa, ini adalah awal dari array yang diurutkan","I en setning, hva er hovedideen implementert ved sortering av utvalg?","Tar ett matriseelement om gangen, fra venstre til høyre, identifiserer det minimumet fra de gjenværende elementene og bytter det med det nåværende elementet.","sorteringen finner det største elementet og plasserer det på slutten, så blir den neste største funnet og plassert ved siden av sist, fortsett til det bare er ett nummer igjen, dette er begynnelsen på den sorterte matrisen","한 문장으로, 선택 정렬에 의해 구현 된 주요 아이디어는 무엇입니까?",한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 나머지 요소에서 최소값을 식별하고 현재 요소와 교환합니다.,정렬은 가장 큰 항목을 찾아 끝에 배치 한 다음 다음으로 큰 항목을 찾아 마지막에 배치하고 하나의 숫자 만 남을 때까지 계속합니다. 이것은 정렬 된 배열의 시작입니다.,Mikä päävalinta toteutetaan valintalajittelulla?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se tunnistaa vähimmäisarvon jäljellä olevista elementeistä ja vaihtaa sen nykyiseen elementtiin.","lajittelu löytää suurimman kohteen ja sijoittaa sen loppuun, sitten seuraava suurin löydetään ja sijoitetaan viimeisen viereen, jatka, kunnes vain yksi numero on jäljellä, tämä on lajiteltu taulukon alku",Egy mondatban mi a kiválasztott rendezéssel megvalósított fő gondolat?,"Egyszerre egy tömb elemet vesz fel balról jobbra, a többi elem alapján azonosítja a minimumot, és felcseréli az aktuális elemmel.","a rendezés megtalálja a legnagyobb elemet és a végén helyezi el, majd a következő legnagyobbat találja és az utolsó mellé helyezi, folytassa addig, amíg csak egy szám marad, ez a rendezett tömb kezdete","Jednou větou, jaká je hlavní myšlenka implementovaná výběrem?","Vezmeme-li po jednom prvku pole, zleva doprava, identifikuje minimum ze zbývajících prvků a zamění jej za aktuální prvek.","druh najde největší položku a umístí ji na konec, poté se najde další největší a umístí se vedle poslední, pokračujte, dokud nezbude jen jedno číslo, toto je začátek seřazeného pole","U jednoj rečenici, koja je glavna ideja implementirana selekcijskim sortiranjem?","Uzimajući po jedan element niza, slijeva udesno, identificira minimum iz preostalih elemenata i zamjenjuje ga s trenutnim elementom.","sorta pronalazi najveći predmet i postavlja ga na kraj, a zatim se pronalazi sljedeći najveći i postavlja pored zadnjeg, nastavite dok ne ostane samo jedan broj, ovo je početak sortirane matrice"
397,397,1818,10.6,(Left side of tree) (Root) (Right side of tree),"Traverse the left subtree, then the root, then the right subtree.",What is the inorder traversal of a binary tree?,5.0,"Durchqueren Sie den linken Teilbaum, dann die Wurzel und dann den rechten Teilbaum.",Was ist die Inorder Traversal eines Binärbaums?,(Linke Seite des Baumes) (Wurzel) (Rechte Seite des Baumes),Unsa man ang inorder traversal sa usa ka binary nga kahoy?,"Pagtabok sa wala nga subtree, pagkahuman sa gamot, pagkahuman sa tuo nga subtree.",(Wala nga bahin sa kahoy) (Root) (Tuo nga kilid sa kahoy),Vad är inorder traversal av ett binärt träd?,"Korsa vänster subtree, sedan roten, sedan höger subtree.",(Vänster sida av träd) (Rot) (Höger sida av träd),Quelle est la traversée en ordre d&#39;un arbre binaire?,"Traversez le sous-arbre gauche, puis la racine, puis le sous-arbre droit.",(Côté gauche de l&#39;arbre) (Racine) (Côté droit de l&#39;arbre),Wat is de volgorde waarin een binaire boom wordt doorlopen?,"Beweeg de linker substructuur, dan de wortel en dan de rechter substructuur.",(Linkerkant van de boom) (Wortel) (rechterkant van de boom),Что такое обход двоичного дерева в порядке?,"Пройдите по левому поддереву, затем по корню, затем по правому поддереву.",(Левая сторона дерева) (Корень) (Правая сторона дерева),Qual è l&#39;attraversamento in ordine di un albero binario?,"Attraversa la sottostruttura sinistra, quindi la radice, quindi la sottostruttura destra.",(Lato sinistro dell&#39;albero) (Radice) (Lato destro dell&#39;albero),¿Cuál es el recorrido en orden de un árbol binario?,"Atraviesa el subárbol izquierdo, luego la raíz y luego el subárbol derecho.",(Lado izquierdo del árbol) (Raíz) (Lado derecho del árbol),Jakie jest wewnętrzne przejście drzewa binarnego?,"Przejdź przez lewe poddrzewo, następnie korzeń, a następnie prawe poddrzewo.",(Lewa strona drzewa) (Korzeń) (Prawa strona drzewa),Đường truyền ngang dòng của cây nhị phân là gì?,"Duyệt qua cây con bên trái, rồi đến gốc, rồi đến cây con bên phải.",(Bên trái của cây) (Rễ) (Bên phải của cây),二分木の順序のない横断とは何ですか？,左側のサブツリー、ルート、右側のサブツリーの順にトラバースします。,（木の左側）（根）（木の右側）,二叉树的有序遍历是什么？,遍历左子树，然后遍历根，然后遍历右子树。,（树的左侧）（根）（树的右侧）,ما هو الاجتياز الداخلي للشجرة الثنائية؟,اجتياز الشجرة الفرعية اليسرى ، ثم الجذر ، ثم الشجرة الفرعية اليمنى.,(الجانب الأيسر من الشجرة) (الجذر) (الجانب الأيمن من الشجرة),Що таке обхід бінарного дерева?,"Проведіть ліве піддерево, потім корінь, потім праве піддерево.",(Ліва сторона дерева) (Корінь) (Права сторона дерева),Qual é a travessia em ordem de uma árvore binária?,"Percorra a subárvore esquerda, depois a raiz e a subárvore direita.",(Lado esquerdo da árvore) (raiz) (lado direito da árvore),پیمایش غیرمعمول یک درخت باینری چیست؟,زیر درخت چپ ، سپس ریشه و سپس زیر درخت راست را رد کنید.,(سمت چپ درخت) (ریشه) (سمت راست درخت),Quin és el recorregut inorder d&#39;un arbre binari?,"Travesseu el subarbre esquerre, després l&#39;arrel i després el subarbre dret.",(Costat esquerre de l&#39;arbre) (Arrel) (Costat dret de l&#39;arbre),Шта је унутрашња преокрет бинарног стабла?,"Пређите преко левог подстабла, затим корена, па десног подстабла.",(Лева страна дрвета) (Корен) (Десна страна дрвета),Apa yang dimaksud dengan inorder traversal dari pohon biner?,"Lintasi subtree kiri, lalu akar, lalu subtree kanan.",(Sisi kiri pohon) (Akar) (Sisi kanan pohon),Hva er inorder traversal av et binært tre?,"Kryss venstre undertre, deretter roten, deretter høyre undertre.",(Venstre side av treet) (Rot) (Høyre side av treet),이진 트리의 inorder traversal은 무엇입니까?,"왼쪽 하위 트리, 루트, 오른쪽 하위 트리 순으로 이동합니다.",(나무 왼쪽) (뿌리) (나무 오른쪽),Mikä on binäärisen puun sisäinen kulku?,"Liikuta vasenta osapuuta, sitten juurta, sitten oikeaa osapuuta.",(Puun vasen puoli) (juuri) (puun oikea puoli),Mi a bináris fa belső bejárása?,"Keresse meg a bal alfát, majd a gyökeret, majd a jobb alfát.",(A fa bal oldala) (Gyökér) (A fa jobb oldala),Co je to inorder traversal binárního stromu?,"Procházejte levým podstromem, poté kořenem a poté pravým podstromem.",(Levá strana stromu) (Kořen) (Pravá strana stromu),Koja je pogreška u binarnom stablu?,"Pređite lijevo podstablo, zatim korijen, pa desno podstablo.",(Lijeva strana drveta) (Korijen) (Desna strana drveta)
398,398,561,3.5,"By the number, types, and order of their arguments","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,5.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,"Nach Anzahl, Typ und Reihenfolge ihrer Argumente",Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.","Pinaagi sa numero, mga lahi, ug han-ay sa ilang mga argumento",Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,"Efter antal, typer och ordning på deras argument",Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.","Par le nombre, les types et l&#39;ordre de leurs arguments",Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.","Op nummer, typen en volgorde van hun argumenten",Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.","По количеству, типам и порядку их аргументов",Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.","In base al numero, ai tipi e all&#39;ordine dei loro argomenti",¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.","Por el número, los tipos y el orden de sus argumentos",W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.","Według liczby, typów i kolejności argumentów",Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.","Theo số lượng, loại và thứ tự của các đối số của chúng",オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,引数の数、タイプ、および順序によって,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,按参数的数量，类型和顺序,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,من خلال عدد وأنواع وترتيب حججهم,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.","За кількістю, типами та порядком аргументів",Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.","Pelo número, tipos e ordem de seus argumentos",توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,با توجه به تعداد ، انواع و ترتیب استدلال های آنها,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.","Pel nombre, els tipus i l&#39;ordre dels seus arguments",Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.","Према броју, врстама и редоследу њихових аргумената",Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.","Berdasarkan jumlah, jenis, dan urutan argumennya",Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.","Etter antall, typer og rekkefølge av argumentene",오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,"인수의 수, 유형 및 순서",Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.","Argumenttien lukumäärän, tyypin ja järjestyksen mukaan",Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.","Érveik száma, típusai és sorrendje szerint",Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.","Podle počtu, typů a pořadí jejich argumentů",Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.","Prema broju, vrstama i redoslijedu njihovih argumenata"
399,399,1981,11.4,"function sig is, is what is the class recognizes as the main function, or rather its specification","The name of the function and the list of parameters, including their types.",What is a function signature?,2.0,Der Name der Funktion und die Liste der Parameter einschließlich ihrer Typen.,Was ist eine Funktionssignatur?,"Funktion sig ist, was die Klasse als Hauptfunktion oder vielmehr als Spezifikation erkennt",Unsa ang usa ka pirma sa pag-andar?,"Ang ngalan sa pagpaandar ug lista sa mga parameter, lakip ang ilang mga lahi.","Ang function sig mao, unsa ang giila sa klase ingon ang punoan nga kalihokan, o labi ang paghingalan niini",Vad är en funktionssignatur?,"Funktionens namn och listan med parametrar, inklusive deras typer.","funktion sig är, är vad klassen känner igen som huvudfunktionen, eller snarare dess specifikation",Qu&#39;est-ce qu&#39;une signature de fonction?,"Le nom de la fonction et la liste des paramètres, y compris leurs types.","la fonction sig est, est ce que la classe reconnaît comme fonction principale, ou plutôt sa spécification",Wat is een functiehandtekening?,"De naam van de functie en de lijst met parameters, inclusief hun typen.","functie sig is, is wat de klasse herkent als de hoofdfunctie, of liever de specificatie ervan",Что такое сигнатура функции?,"Имя функции и список параметров, включая их типы.","функция sig - это то, что класс распознает как основную функцию, а точнее ее спецификацию",Cos&#39;è una firma di funzione?,"Il nome della funzione e l&#39;elenco dei parametri, inclusi i loro tipi.","funzione sig è, è ciò che la classe riconosce come funzione principale, o meglio la sua specifica",¿Qué es una firma de función?,"El nombre de la función y la lista de parámetros, incluidos sus tipos.","función sig es, es lo que la clase reconoce como función principal, o más bien su especificación",Co to jest podpis funkcji?,"Nazwa funkcji i lista parametrów, w tym ich typy.","function sig to to, co klasa rozpoznaje jako funkcję główną, a raczej jej specyfikację",Chữ ký hàm là gì?,"Tên của hàm và danh sách các tham số, bao gồm cả loại của chúng.","function sig là, là những gì mà lớp công nhận là chức năng chính, hay đúng hơn là đặc tả của nó",関数シグネチャとは何ですか？,関数の名前と、タイプを含むパラメーターのリスト。,function sigは、クラスがメイン関数として認識するもの、またはむしろその仕様です,什么是功能签名？,函数的名称和参数列表，包括它们的类型。,函数sig是类公认的主要函数，或者更确切地说是其规范,ما هو توقيع الوظيفة؟,اسم الوظيفة وقائمة المعلمات ، بما في ذلك أنواعها.,الوظيفة sig هي ، ما هي الفئة التي تعرفها على أنها الوظيفة الرئيسية ، أو بالأحرى مواصفاتها,Що таке підпис функції?,"Назва функції та перелік параметрів, включаючи їх типи.","Функція sig - це те, що клас визнає головною функцією, а точніше її специфікацією",O que é uma assinatura de função?,"O nome da função e a lista de parâmetros, incluindo seus tipos.","função sig é, é o que a classe reconhece como a função principal, ou melhor, sua especificação",امضای تابع چیست؟,نام عملکرد و لیست پارامترها ، از جمله انواع آنها.,تابع sig است ، همان چیزی است که کلاس به عنوان اصلی ترین عملکرد یا به عبارت بهتر مشخصات آن تشخیص می دهد,Què és una signatura de funció?,"El nom de la funció i la llista de paràmetres, inclosos els seus tipus.","La funció sig és, és el que la classe reconeix com a funció principal, o millor dit, la seva especificació",Шта је потпис функције?,"Назив функције и листа параметара, укључујући њихове типове.","функција сиг је, јесте оно што класа препознаје као главну функцију, односно њену спецификацију",Apa itu tanda tangan fungsi?,"Nama fungsi dan daftar parameter, termasuk tipenya.","function sig adalah, adalah apa yang dikenali oleh kelas sebagai fungsi utama, atau lebih tepatnya spesifikasinya",Hva er en funksjonssignatur?,"Navnet på funksjonen og listen over parametere, inkludert typer.","funksjon sig er, er hva klassen anerkjenner som hovedfunksjonen, eller rettere sagt dens spesifikasjon",함수 서명이란 무엇입니까?,함수 이름 및 유형을 포함한 매개 변수 목록.,function sig는 클래스가 주 함수로 인식하는 것입니다.,Mikä on funktion allekirjoitus?,"Funktion nimi ja parametrien luettelo, mukaan lukien niiden tyypit.","funktio sig on, mikä on luokka tunnistaa pääfunktioksi tai pikemminkin sen määrittelyksi",Mi a függvény aláírása?,"A függvény neve és a paraméterek listája, beleértve azok típusait is.","A sig függvény az, amit az osztály fő funkcióként ismer el, vagy inkább annak specifikációja",Co je podpis funkce?,"Název funkce a seznam parametrů, včetně jejich typů.","funkce sig je, je to, co třída rozpoznává jako hlavní funkci, nebo spíše její specifikaci",Što je potpis funkcije?,"Naziv funkcije i lista parametara, uključujući njihove tipove.","funkcija sig je, jeste ono što klasa prepoznaje kao glavnu funkciju, odnosno njenu specifikaciju"
400,400,994,6.2,the reference to a variable,The memory address of its operand.,What does the address (&) operator return?,4.5,Die Speicheradresse seines Operanden.,Was gibt der Adressoperator (&amp;) zurück?,der Verweis auf eine Variable,Unsa man ang pagbalik sa address (&amp;) sa operator?,Ang adres sa memorya sa operand niini.,ang pakisayran sa us aka variable,Vad returnerar adressoperatören?,Minnesadressen för dess operand.,hänvisningen till en variabel,Que renvoie l&#39;opérateur d&#39;adresse (&amp;)?,L&#39;adresse mémoire de son opérande.,la référence à une variable,Wat retourneert de adres (&amp;) operator?,Het geheugenadres van zijn operand.,de verwijzing naar een variabele,Что возвращает оператор адреса (&amp;)?,Адрес памяти его операнда.,ссылка на переменную,Cosa restituisce l&#39;indirizzo (&amp;) operatore?,L&#39;indirizzo di memoria del suo operando.,il riferimento a una variabile,¿Qué devuelve el operador de dirección (&amp;)?,La dirección de memoria de su operando.,la referencia a una variable,Co zwraca operator adresu (&amp;)?,Adres pamięci jego operandu.,odniesienie do zmiennej,Toán tử địa chỉ (&amp;) trả về cái gì?,Địa chỉ bộ nhớ của toán hạng của nó.,tham chiếu đến một biến,アドレス（＆）演算子は何を返しますか？,そのオペランドのメモリアドレス。,変数への参照,地址（＆）运算符返回什么？,其操作数的内存地址。,对变量的引用,ماذا يعود العنوان (&amp;) عامل؟,عنوان ذاكرة المعامل الخاص به.,الإشارة إلى المتغير,Що повертає оператор адреси (&amp;)?,Адреса пам&#39;яті його операнда.,посилання на змінну,O que o operador de endereço (&amp;) retorna?,O endereço de memória de seu operando.,a referência a uma variável,عملگر آدرس (&amp;) چه چیزی را برمی گرداند؟,آدرس حافظه عملوند آن.,ارجاع به یک متغیر,Què retorna l&#39;operador d&#39;adreça (&amp;)?,L&#39;adreça de memòria del seu operand.,la referència a una variable,Шта оператер адресе (&amp;) враћа?,Адреса меморије свог операнда.,референца на променљиву,Apa yang dikembalikan oleh operator alamat (&amp;)?,Alamat memori operannya.,referensi ke variabel,Hva returnerer adresseoperatøren?,Minneadressen til operanden.,referansen til en variabel,주소 (&amp;) 연산자는 무엇을 반환합니까?,피연산자의 메모리 주소입니다.,변수에 대한 참조,Mitä osoite (&amp;) operaattori palauttaa?,Operandin muistiosoite.,viittaus muuttujaan,Mit ad vissza a cím (&amp;) operátor?,Operandusának memóriacíme.,a változóra való hivatkozás,Co vrátí operátor adresy (&amp;)?,Paměťová adresa jeho operandu.,odkaz na proměnnou,Šta operater adrese (&amp;) vraća?,Adresa memorije svog operanda.,referenca na varijablu
401,401,258,2.2,"data members   local variables are declared in a function definitionÃ¢â¬â¢s body. they Cannot be used outside of that function body. When a function terminates, the values of its local variables are lost.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,What is the difference between a data member and a local variable inside a member function?,4.5,"Auf Datenelemente kann von allen Elementfunktionen innerhalb der Klassendefinition zugegriffen werden. Auf lokale Variablen kann nur innerhalb der Elementfunktion zugegriffen werden, die sie definiert.",Was ist der Unterschied zwischen einem Datenelement und einer lokalen Variablen innerhalb einer Elementfunktion?,"Lokale Variablen von Datenelementen werden im Körper einer Funktionsdefinition deklariert. Sie können nicht außerhalb dieses Funktionskörpers verwendet werden. Wenn eine Funktion beendet wird, gehen die Werte ihrer lokalen Variablen verloren.",Unsa ang kalainan tali sa usa ka myembro sa datos ug usa ka lokal nga pagbag-o sa sulud sa kalihokan sa usa ka miyembro?,Ang mga myembro sa datos mahimo’g ma-access gikan sa bisan unsang gimbuhaton sa miyembro sa sulud sa defintion sa klase. Ang mga lokal nga pagbag-o mahimo ra nga ma-access sa sulud sa pagpaandar sa miyembro nga naghubit kanila.,"ang mga myembro sa datos nga mga lokal nga baryable gipahayag sa usa ka kahulugan nga pagpaandar sa lawas nga ¢ â‚¬â „¢ s. dili sila magamit sa gawas sa lawas nga gigamit. Kung natapos ang usa ka function, nawala ang mga kantidad sa mga lokal nga variable niini.",Vad är skillnaden mellan en datamedlem och en lokal variabel i en medlemsfunktion?,Datamedlemmar kan nås från alla medlemsfunktioner i klassdefinitionen. Lokala variabler kan endast nås i medlemsfunktionen som definierar dem.,datamedlemmar lokala variabler deklareras i en funktionsdefinitionens kropp. de kan inte användas utanför den funktionskroppen. När en funktion avslutas går värdena på dess lokala variabler förlorade.,Quelle est la différence entre un membre de données et une variable locale dans une fonction membre?,Les membres de données sont accessibles à partir de toutes les fonctions membres de la définition de classe. Les variables locales ne sont accessibles qu&#39;à l&#39;intérieur de la fonction membre qui les définit.,"Les variables locales des membres de données sont déclarées dans le corps d&#39;une définition de fonction. ils ne peuvent pas être utilisés en dehors de ce corps de fonction. Lorsqu&#39;une fonction se termine, les valeurs de ses variables locales sont perdues.",Wat is het verschil tussen een gegevenslid en een lokale variabele binnen een lidfunctie?,Gegevensleden zijn toegankelijk vanuit alle lidfuncties binnen de klassedefinitie. Lokale variabelen zijn alleen toegankelijk binnen de lidfunctie die ze definieert.,"data leden lokale variabelen worden gedeclareerd in een functie definitionâ € ™ s body. ze kunnen niet buiten die functie worden gebruikt. Wanneer een functie wordt beëindigd, gaan de waarden van de lokale variabelen verloren.",В чем разница между элементом данных и локальной переменной внутри функции-члена?,"Доступ к элементам данных можно получить из любых функций-членов внутри определения класса. Доступ к локальным переменным можно получить только внутри функции-члена, которая их определяет.","Локальные переменные членов данных объявляются в теле определения функции. они не могут быть использованы вне тела этой функции. Когда функция завершается, значения ее локальных переменных теряются.",Qual è la differenza tra un membro dati e una variabile locale all&#39;interno di una funzione membro?,È possibile accedere ai membri dati da qualsiasi funzione membro all&#39;interno della definizione della classe. È possibile accedere alle variabili locali solo all&#39;interno della funzione membro che le definisce.,"le variabili locali dei membri dati sono dichiarate nel corpo di una definizione di funzione. Non possono essere utilizzati al di fuori di quel corpo funzione. Quando una funzione termina, i valori delle sue variabili locali vengono persi.",¿Cuál es la diferencia entre un miembro de datos y una variable local dentro de una función miembro?,Se puede acceder a los miembros de datos desde cualquier función miembro dentro de la definición de clase. Solo se puede acceder a las variables locales dentro de la función miembro que las define.,"Las variables locales de los miembros de datos se declaran en el cuerpo de una definición de función. No se pueden usar fuera del cuerpo de esa función. Cuando una función termina, los valores de sus variables locales se pierden.",Jaka jest różnica między składową danych a zmienną lokalną wewnątrz funkcji składowej?,"Dostęp do członków danych można uzyskać z dowolnej funkcji składowej wewnątrz definicji klasy. Dostęp do zmiennych lokalnych można uzyskać tylko wewnątrz funkcji składowej, która je definiuje.","składowe danych zmienne lokalne są deklarowane w treści definicji funkcji. Nie można ich używać poza treścią tej funkcji. Kiedy funkcja kończy działanie, wartości jej zmiennych lokalnych są tracone.",Sự khác biệt giữa một thành viên dữ liệu và một biến cục bộ bên trong một hàm thành viên là gì?,Các thành viên dữ liệu có thể được truy cập từ bất kỳ hàm thành viên nào bên trong định nghĩa lớp. Các biến cục bộ chỉ có thể được truy cập bên trong hàm thành viên định nghĩa chúng.,"các biến cục bộ của thành viên dữ liệu được khai báo trong phần thân của hàm định nghĩa. chúng Không thể được sử dụng bên ngoài cơ quan chức năng đó. Khi một hàm kết thúc, các giá trị của các biến cục bộ của nó sẽ bị mất.",データメンバーとメンバー関数内のローカル変数の違いは何ですか？,データメンバーには、クラス定義内の任意のメンバー関数からアクセスできます。ローカル変数には、それらを定義するメンバー関数内でのみアクセスできます。,データメンバーのローカル変数は、関数定義の本体で宣言されます。その関数本体の外部では使用できません。関数が終了すると、そのローカル変数の値は失われます。,数据成员与成员函数内部的局部变量有什么区别？,可以从类定义内的任何成员函数访问数据成员。局部变量只能在定义它们的成员函数中访问。,数据成员局部变量在函数定义的主体中声明。它们不能在该功能主体之外使用。当函数终止时，其局部变量的值将丢失。,ما هو الفرق بين عضو البيانات والمتغير المحلي داخل وظيفة العضو؟,يمكن الوصول إلى أعضاء البيانات من أي وظائف عضو داخل تعريف الفئة. لا يمكن الوصول إلى المتغيرات المحلية إلا داخل دالة العضو التي تحددها.,يتم التصريح عن المتغيرات المحلية لأعضاء البيانات في تعريف الوظيفة الجسم. لا يمكن استخدامها خارج تلك الوظيفة. عندما تنتهي إحدى الوظائف ، تُفقد قيم متغيراتها المحلية.,Яка різниця між елементом даних та локальною змінною всередині функції-члена?,"Доступ до членів даних можна отримати з будь-яких функцій-членів усередині визначення класу. Локальні змінні можуть бути доступні лише всередині функції-члена, яка їх визначає.","члени даних локальні змінні оголошуються в тілі визначення функції. їх не можна використовувати поза цим функціональним тілом. Коли функція завершується, значення її локальних змінних втрачаються.",Qual é a diferença entre um membro de dados e uma variável local dentro de uma função de membro?,Os membros de dados podem ser acessados a partir de quaisquer funções de membro dentro da definição de classe. Variáveis locais só podem ser acessadas dentro da função membro que as define.,"as variáveis locais dos membros dos dados são declaradas no corpo de uma definição de função. eles não podem ser usados fora desse corpo de função. Quando uma função termina, os valores de suas variáveis locais são perdidos.",تفاوت بین یک عضو داده و یک متغیر محلی در داخل یک تابع عضو چیست؟,اعضای عضو داده را می توان از طریق توابع عضوی که در تعریف کلاس وجود دارد ، جستجو کرد. متغیرهای محلی فقط در داخل تابع عضوی که آنها را تعریف می کند قابل دسترسی هستند.,اعضای داده متغیرهای محلی در بدنه تعریف تعریف می شوند. آنها نمی توانند در خارج از بدن عملکرد استفاده شوند. وقتی یک تابع خاتمه می یابد ، مقادیر متغیرهای محلی آن از بین می روند.,Quina diferència hi ha entre un membre de dades i una variable local dins d’una funció de membre?,Es pot accedir als membres de les dades des de qualsevol de les funcions dels membres dins de la definició de classe. Les variables locals només es poden accedir a la funció membre que les defineix.,"Les variables locals dels membres de les dades es declaren en el cos d&#39;una definició de funció. no es poden utilitzar fora d&#39;aquest cos de funció. Quan finalitza una funció, es perden els valors de les seves variables locals.",Која је разлика између члана података и локалне променљиве унутар функције члана?,Члановима података може се приступити из било које функције члана унутар дефиниције класе. Локалним променљивим се може приступити само унутар функције члана која их дефинише.,"локалне променљиве чланова података су декларисане у телу дефиниције функције. не могу се користити изван тог функционалног тела. Када се функција заврши, вредности њених локалних променљивих се губе.",Apa perbedaan antara anggota data dan variabel lokal di dalam fungsi anggota?,Anggota data dapat diakses dari fungsi anggota mana pun di dalam definisi kelas. Variabel lokal hanya dapat diakses di dalam fungsi anggota yang mendefinisikannya.,"anggota data variabel lokal dideklarasikan dalam tubuh definisi fungsi. mereka tidak dapat digunakan di luar badan fungsi itu. Ketika suatu fungsi berakhir, nilai variabel lokalnya hilang.",Hva er forskjellen mellom et datamedlem og en lokal variabel i en medlemsfunksjon?,Datamedlemmer er tilgjengelige fra alle medlemsfunksjoner i klassedefinisjonen. Lokale variabler er bare tilgjengelige i medlemsfunksjonen som definerer dem.,"datamedlemmer lokale variabler er deklarert i en funksjonsdefinisjonens kropp. de kan ikke brukes utenfor den funksjonen kroppen. Når en funksjon avsluttes, går verdiene til de lokale variablene tapt.",멤버 함수 내에서 데이터 멤버와 지역 변수의 차이점은 무엇입니까?,데이터 멤버는 클래스 정의 내의 모든 멤버 함수에서 액세스 할 수 있습니다. 지역 변수는이를 정의하는 멤버 함수 내에서만 액세스 할 수 있습니다.,데이터 멤버 지역 변수는 함수 정의 본문에 선언됩니다. 해당 기능 본문 외부에서 사용할 수 없습니다. 함수가 종료되면 해당 지역 변수의 값이 손실됩니다.,Mitä eroa on datajäsenellä ja jäsenfunktion sisällä olevalla paikallisella muuttujalla?,Tietojäseniin pääsee mistä tahansa jäsentoiminnosta luokan määritelmän sisällä. Paikallisiin muuttujiin pääsee vain niitä määrittelevässä jäsenfunktiossa.,"datajäsenet paikalliset muuttujat ilmoitetaan funktion määrittelyn rungossa. niitä ei voida käyttää kyseisen toimintorungon ulkopuolella. Kun toiminto päättyy, sen paikallisten muuttujien arvot menetetään.",Mi a különbség az adattag és a tagfüggvényen belüli helyi változó között?,Az adattagok az osztálymeghatározáson belül bármely tagfunkcióból elérhetők. A helyi változók csak az őket meghatározó tagfüggvényen belül érhetők el.,"az adattagok helyi változóit egy függvénydefiníciós testben deklaráljuk. nem használhatók azon a funkciótesten kívül. Amikor egy függvény leáll, a helyi változók értékei elvesznek.",Jaký je rozdíl mezi datovým členem a lokální proměnnou uvnitř členské funkce?,"K datovým členům lze přistupovat z jakékoli členské funkce uvnitř definice třídy. K lokálním proměnným lze přistupovat pouze uvnitř členské funkce, která je definuje.",datové členy lokální proměnné jsou deklarovány v těle definice funkce. nelze je použít mimo toto funkční tělo. Po ukončení funkce dojde ke ztrátě hodnot jejích lokálních proměnných.,Koja je razlika između člana podataka i lokalne varijable unutar funkcije člana?,Članovima podataka može se pristupiti iz bilo koje funkcije člana unutar definicije klase. Lokalnim varijablama može se pristupiti samo unutar funkcije člana koja ih definira.,"lokalne varijable članova podataka deklarirane su u tijelu definicije funkcije. ne mogu se koristiti izvan tog funkcionalnog tijela. Kada se funkcija završi, vrijednosti njenih lokalnih varijabli se gube."
402,402,134,1.5,a stored value used by the program,A location in memory that can store a value.,What is a variable?,4.5,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,Ein vom Programm verwendeter gespeicherter Wert,Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,usa ka gitipig nga kantidad nga gigamit sa programa,Vad är en variabel?,En plats i minnet som kan lagra ett värde.,ett lagrat värde som används av programmet,Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,une valeur stockée utilisée par le programme,Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,een opgeslagen waarde die door het programma wordt gebruikt,Что такое переменная?,"Место в памяти, в котором может храниться значение.","сохраненное значение, используемое программой",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,un valore memorizzato utilizzato dal programma,¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,un valor almacenado utilizado por el programa,Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.",przechowywana wartość używana przez program,Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,một giá trị được lưu trữ được sử dụng bởi chương trình,変数とは何ですか？,値を格納できるメモリ内の場所。,プログラムによって使用される保存された値,什么是变量？,内存中可以存储值的位置。,程序使用的存储值,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,قيمة مخزنة يستخدمها البرنامج,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","збережене значення, що використовується програмою",O que é uma variável?,Um local na memória que pode armazenar um valor.,um valor armazenado usado pelo programa,متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,یک مقدار ذخیره شده توسط برنامه استفاده می شود,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,un valor emmagatzemat utilitzat pel programa,Шта је променљива?,Локација у меморији која може да ускладишти вредност.,ускладиштена вредност коју користи програм,Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,nilai tersimpan yang digunakan oleh program,Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,en lagret verdi som brukes av programmet,변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,프로그램에서 사용하는 저장 값,Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.",ohjelman käyttämä tallennettu arvo,Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.",a program által használt tárolt érték,Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.",uložená hodnota používaná programem,Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,pohranjena vrijednost koju koristi program
403,403,1737,10.2,is the number of generations in the tree,The length of the longest path from the root to any of its leaves.,What is the height of a tree?,4.5,Die Länge des längsten Weges von der Wurzel zu einem seiner Blätter.,Wie hoch ist ein Baum?,ist die Anzahl der Generationen im Baum,Unsa ang kataas sa usa ka kahoy?,Ang gitas-on sa labing kadugay nga agianan gikan sa gamot hangtod sa bisan unsang dahon niini.,mao ang ihap sa mga henerasyon sa kahoy,Vad är höjden på ett träd?,Längden på den längsta vägen från roten till någon av dess löv.,är antalet generationer i trädet,Quelle est la hauteur d&#39;un arbre?,La longueur du chemin le plus long de la racine à l&#39;une de ses feuilles.,est le nombre de générations dans l&#39;arbre,Wat is de hoogte van een boom?,De lengte van het langste pad van de wortel tot een van de bladeren.,is het aantal generaties in de boom,Какая высота у дерева?,Длина самого длинного пути от корня до любого из его листьев.,это количество поколений в дереве,Qual è l&#39;altezza di un albero?,La lunghezza del percorso più lungo dalla radice a una qualsiasi delle sue foglie.,è il numero di generazioni nell&#39;albero,¿Cuál es la altura de un árbol?,La longitud del camino más largo desde la raíz hasta cualquiera de sus hojas.,es el número de generaciones en el árbol,Jaka jest wysokość drzewa?,Długość najdłuższej ścieżki od korzenia do któregokolwiek z liści.,to liczba pokoleń w drzewie,Chiều cao của cây là bao nhiêu?,Chiều dài của con đường dài nhất từ gốc đến bất kỳ lá nào của nó.,là số thế hệ trong cây,木の高さはどれくらいですか？,根からその葉のいずれかまでの最長の経路の長さ。,ツリーの世代数です,一棵树的高度是多少？,从根到其任何叶子的最长路径的长度。,是树中的世代数,ما هو ارتفاع الشجرة؟,طول أطول مسار من الجذر إلى أي من أوراقه.,هو عدد الأجيال في الشجرة,Яка висота дерева?,Довжина найдовшого шляху від кореня до будь-якого його листя.,- кількість поколінь на дереві,Qual é a altura de uma árvore?,O comprimento do caminho mais longo da raiz a qualquer uma de suas folhas.,é o número de gerações na árvore,ارتفاع یک درخت چقدر است؟,طول طولانی ترین مسیر از ریشه تا هر برگ آن.,تعداد نسلهای درخت است,Quina alçada té un arbre?,La longitud del camí més llarg des de l’arrel fins a qualsevol de les seves fulles.,és el nombre de generacions de l&#39;arbre,Колика је висина дрвета?,Дужина најдужег пута од корена до било ког његовог лишћа.,је број генерација у дрвету,Berapa tinggi pohon?,Panjang jalur terpanjang dari akar ke salah satu daunnya.,adalah jumlah generasi di pohon,Hva er høyden på et tre?,Lengden på den lengste stien fra roten til noen av bladene.,er antall generasjoner i treet,나무의 높이는 얼마입니까?,뿌리에서 잎까지 가장 긴 경로의 길이입니다.,트리의 세대 수입니다.,Mikä on puun korkeus?,Pisin reitin pituus juuresta mihin tahansa sen lehteen.,on puun sukupolvien lukumäärä,Mekkora egy fa magassága?,A leghosszabb út hossza a gyökértől bármelyik leveléig.,a fán lévő nemzedékek száma,Jaká je výška stromu?,Délka nejdelší cesty od kořene po kterýkoli z jejích listů.,je počet generací ve stromu,Kolika je visina drveta?,Dužina najdužeg puta od korijena do bilo kojeg od njegovih listova.,je broj generacija na drvetu
404,404,2228,12.3,"2^(log n), log(log n), n!, n^2, n^3",log(log n);  2^(log n) ; n^2 ; n^3; n!,Order the following functions by their running time: n^2; log(log n) ; 2^(log n) ; n! ; n^3.,1.75,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,Ordnen Sie die folgenden Funktionen nach ihrer Laufzeit: n ^ 2; log (log n); 2 ^ (log n); n! ;; n ^ 3.,"2 ^ (log n), log (log n), n!, N ^ 2, n ^ 3",Pag-order sa mga mosunud nga pag-andar pinaagi sa ilang oras sa pagdagan: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Beställ följande funktioner efter deras körtid: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Classez les fonctions suivantes en fonction de leur durée de fonctionnement: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Sorteer de volgende functies op basis van hun looptijd: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Отсортируйте следующие функции по времени выполнения: n ^ 2; журнал (журнал n); 2 ^ (журнал п); п! ; п ^ 3.,журнал (журнал n); 2 ^ (журнал п); п ^ 2; п ^ 3; п!,"2 ^ (журнал n), журнал (журнал n), n !, n ^ 2, n ^ 3",Ordina le seguenti funzioni in base al loro tempo di esecuzione: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Ordene las siguientes funciones por su tiempo de ejecución: n ^ 2; log (log n); 2 ^ (log n); ¡norte! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; ¡norte!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Uporządkuj następujące funkcje według ich czasu działania: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Thứ tự các hàm sau theo thời gian chạy của chúng: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",次の関数を実行時間順に並べます。n^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,2 ^（log n）、log（log n）、n！、n ^ 2、n ^ 3,按其运行时间排序以下功能：n ^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,"2 ^（log n），log（log n），n !, n ^ 2，n ^ 3",اطلب الوظائف التالية حسب وقت تشغيلها: n ^ 2 ؛ سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن! ؛ ن ^ 3.,سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن ^ 2 ؛ ن ^ 3 ؛ ن!,2 ^ (تسجيل ن) ، تسجيل (تسجيل ن) ، ن !، ن ^ 2 ، ن ^ 3,Впорядкуйте такі функції за часом їх роботи: n ^ 2; журнал (журнал n); 2 ^ (журнал n); п! ; n ^ 3.,журнал (журнал n); 2 ^ (журнал n); n ^ 2; n ^ 3; п!,"2 ^ (журнал n), журнал (log n), n !, n ^ 2, n ^ 3",Ordene as seguintes funções por seu tempo de execução: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",توابع زیر را بر اساس مدت زمان اجرای آنها ترتیب دهید: n ^ 2؛ log (log n) ؛ 2 ^ (ورود به سیستم) ن! ؛ n ^ 3,log (log n) ؛ 2 ^ (ورود به سیستم) n ^ 2 ؛ n ^ 3 ؛ ن!,2 ^ (log n) ، log (log n) ، n !، n ^ 2 ، n ^ 3,Ordeneu les funcions següents pel seu temps d&#39;execució: n ^ 2; log (registre n); 2 ^ (registre n); n! ; n ^ 3.,log (registre n); 2 ^ (registre n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Наредите следеће функције према њиховом радном времену: н ^ 2; лог (лог н); 2 ^ (лог н); н! ; н ^ 3.,лог (лог н); 2 ^ (лог н); н ^ 2; н ^ 3; н!,"2 ^ (лог н), лог (лог н), н !, н ^ 2, н ^ 3",Urutkan fungsi-fungsi berikut berdasarkan waktu berjalannya: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Bestill følgende funksjoner etter kjøretid: n ^ 2; logg (logg n); 2 ^ (log n); n! ; n ^ 3.,logg (logg n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",실행 시간별로 다음 함수를 정렬하십시오. n ^ 2; log (log n); 2 ^ (log n); 엔! ; n ^ 3.,log (로그 n); 2 ^ (log n); n ^ 2; n ^ 3; 엔!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Järjestä seuraavat toiminnot niiden käyttöajan mukaan: n ^ 2; loki (log n); 2 ^ (log n); n! ; n ^ 3.,loki (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Rendezze a következő függvényeket futási idejük szerint: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Seřaďte následující funkce podle doby běhu: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3",Poredaj sljedeće funkcije prema njihovom vremenu izvođenja: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"2 ^ (log n), log (log n), n !, n ^ 2, n ^ 3"
405,405,2001,11.5,a function that calls on itself and uses a base case to stop the recursion,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Eine Funktion, die sich selbst aufruft und einen Basisfall verwendet, um die Rekursion zu stoppen",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,usa ka function nga nagtawag sa iyang kaugalingon ug naggamit us aka base case aron ihunong ang recursion,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,en funktion som anropar sig själv och använder ett basfall för att stoppa rekursionen,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,une fonction qui s&#39;appelle sur elle-même et utilise un cas de base pour arrêter la récursivité,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,een functie die zichzelf aanroept en een basisscenario gebruikt om de recursie te stoppen,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","функция, которая вызывает сама себя и использует базовый вариант для остановки рекурсии",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,una funzione che chiama se stessa e utilizza un caso base per fermare la ricorsione,¿Qué es una función recursiva?,Una función que se llama a sí misma.,una función que se llama a sí misma y usa un caso base para detener la recursividad,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","funkcja, która wywołuje samą siebie i wykorzystuje wielkość podstawową do zatrzymania rekurencji",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,một hàm gọi chính nó và sử dụng một trường hợp cơ sở để dừng đệ quy,再帰関数とは何ですか？,自分自身を呼び出す関数。,自分自身を呼び出し、ベースケースを使用して再帰を停止する関数,什么是递归函数？,调用自身的函数。,一个调用自身并使用基本情况停止递归的函数,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,دالة تستدعي نفسها وتستخدم حالة أساسية لإيقاف العودية,Що таке рекурсивна функція?,"Функція, яка викликає себе.","функція, яка викликає себе і використовує базовий випадок, щоб зупинити рекурсію",O que é uma função recursiva?,Uma função que chama a si mesma.,uma função que chama a si mesma e usa um caso base para interromper a recursão,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,تابعی که خود را فراخوانی می کند و از یک حالت پایه برای جلوگیری از بازگشت استفاده می کند,Què és una funció recursiva?,Una funció que s’autodenomina.,una funció que crida a si mateixa i utilitza un cas base per aturar la recursió,Шта је рекурзивна функција?,Функција која себе позива.,функција која позива себе и користи основни случај да заустави рекурзију,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,fungsi yang memanggil dirinya sendiri dan menggunakan kasus dasar untuk menghentikan rekursi,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,en funksjon som påkaller seg selv og bruker en basissak for å stoppe rekursjonen,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,자신을 호출하고 기본 케이스를 사용하여 재귀를 중지하는 함수,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","toiminto, joka kutsuu itsensä ja käyttää peruskokoa rekursio pysäyttämään",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","egy olyan funkció, amely felhívja önmagát, és egy alap esetet használ a rekurzió leállításához",Co je rekurzivní funkce?,"Funkce, která si říká sama.","funkce, která se sama volá a k zastavení rekurze používá základní případ",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,funkcija koja poziva sebe i koristi osnovni slučaj da zaustavi rekurziju
406,406,2237,12.3,"linear, logarithmic, exponential, linear, linear",log(log n);  2^(log n) ; n^2 ; n^3; n!,Order the following functions by their running time: n^2; log(log n) ; 2^(log n) ; n! ; n^3.,1.5,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,Ordnen Sie die folgenden Funktionen nach ihrer Laufzeit: n ^ 2; log (log n); 2 ^ (log n); n! ;; n ^ 3.,"linear, logarithmisch, exponentiell, linear, linear",Pag-order sa mga mosunud nga pag-andar pinaagi sa ilang oras sa pagdagan: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"linear, logarithmic, exponential, linear, linear",Beställ följande funktioner efter deras körtid: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"linjär, logaritmisk, exponentiell, linjär, linjär",Classez les fonctions suivantes en fonction de leur durée de fonctionnement: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"linéaire, logarithmique, exponentielle, linéaire, linéaire",Sorteer de volgende functies op basis van hun looptijd: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"lineair, logaritmisch, exponentieel, lineair, lineair",Отсортируйте следующие функции по времени выполнения: n ^ 2; журнал (журнал n); 2 ^ (журнал п); п! ; п ^ 3.,журнал (журнал n); 2 ^ (журнал п); п ^ 2; п ^ 3; п!,"линейный, логарифмический, экспоненциальный, линейный, линейный",Ordina le seguenti funzioni in base al loro tempo di esecuzione: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"lineare, logaritmico, esponenziale, lineare, lineare",Ordene las siguientes funciones por su tiempo de ejecución: n ^ 2; log (log n); 2 ^ (log n); ¡norte! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; ¡norte!,"lineal, logarítmico, exponencial, lineal, lineal",Uporządkuj następujące funkcje według ich czasu działania: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"liniowa, logarytmiczna, wykładnicza, liniowa, liniowa",Thứ tự các hàm sau theo thời gian chạy của chúng: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"tuyến tính, logarit, hàm mũ, tuyến tính, tuyến tính",次の関数を実行時間順に並べます。n^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,線形、対数、指数、線形、線形,按其运行时间排序以下功能：n ^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,线性，对数，指数，线性，线性,اطلب الوظائف التالية حسب وقت تشغيلها: n ^ 2 ؛ سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن! ؛ ن ^ 3.,سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن ^ 2 ؛ ن ^ 3 ؛ ن!,خطي ، لوغاريتمي ، أسي ، خطي ، خطي,Впорядкуйте такі функції за часом їх роботи: n ^ 2; журнал (журнал n); 2 ^ (журнал n); п! ; n ^ 3.,журнал (журнал n); 2 ^ (журнал n); n ^ 2; n ^ 3; п!,"лінійний, логарифмічний, експоненціальний, лінійний, лінійний",Ordene as seguintes funções por seu tempo de execução: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"linear, logarítmico, exponencial, linear, linear",توابع زیر را بر اساس مدت زمان اجرای آنها ترتیب دهید: n ^ 2؛ log (log n) ؛ 2 ^ (ورود به سیستم) ن! ؛ n ^ 3,log (log n) ؛ 2 ^ (ورود به سیستم) n ^ 2 ؛ n ^ 3 ؛ ن!,خطی ، لگاریتمی ، نمایی ، خطی ، خطی,Ordeneu les funcions següents pel seu temps d&#39;execució: n ^ 2; log (registre n); 2 ^ (registre n); n! ; n ^ 3.,log (registre n); 2 ^ (registre n); n ^ 2; n ^ 3; n!,"lineal, logarítmic, exponencial, lineal, lineal",Наредите следеће функције према њиховом радном времену: н ^ 2; лог (лог н); 2 ^ (лог н); н! ; н ^ 3.,лог (лог н); 2 ^ (лог н); н ^ 2; н ^ 3; н!,"линеарни, логаритамски, експоненцијални, линеарни, линеарни",Urutkan fungsi-fungsi berikut berdasarkan waktu berjalannya: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"linier, logaritmik, eksponensial, linier, linier",Bestill følgende funksjoner etter kjøretid: n ^ 2; logg (logg n); 2 ^ (log n); n! ; n ^ 3.,logg (logg n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"lineær, logaritmisk, eksponentiell, lineær, lineær",실행 시간별로 다음 함수를 정렬하십시오. n ^ 2; log (log n); 2 ^ (log n); 엔! ; n ^ 3.,log (로그 n); 2 ^ (log n); n ^ 2; n ^ 3; 엔!,"선형, 로그, 지수, 선형, 선형",Järjestä seuraavat toiminnot niiden käyttöajan mukaan: n ^ 2; loki (log n); 2 ^ (log n); n! ; n ^ 3.,loki (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"lineaarinen, logaritminen, eksponentiaalinen, lineaarinen, lineaarinen",Rendezze a következő függvényeket futási idejük szerint: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"lineáris, logaritmikus, exponenciális, lineáris, lineáris",Seřaďte následující funkce podle doby běhu: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"lineární, logaritmický, exponenciální, lineární, lineární",Poredaj sljedeće funkcije prema njihovom vremenu izvođenja: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"linearni, logaritamski, eksponencijalni, linearni, linearni"
407,407,241,2.2,"data members are permanent attributes of the class, local variables inside a member function are lost when the scope of the member function ends.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,What is the difference between a data member and a local variable inside a member function?,4.0,"Auf Datenelemente kann von allen Elementfunktionen innerhalb der Klassendefinition zugegriffen werden. Auf lokale Variablen kann nur innerhalb der Elementfunktion zugegriffen werden, die sie definiert.",Was ist der Unterschied zwischen einem Datenelement und einer lokalen Variablen innerhalb einer Elementfunktion?,"Datenelemente sind permanente Attribute der Klasse. Lokale Variablen innerhalb einer Elementfunktion gehen verloren, wenn der Bereich der Elementfunktion endet.",Unsa ang kalainan tali sa usa ka myembro sa datos ug usa ka lokal nga pagbag-o sa sulud sa kalihokan sa usa ka miyembro?,Ang mga myembro sa datos mahimo’g ma-access gikan sa bisan unsang gimbuhaton sa miyembro sa sulud sa defintion sa klase. Ang mga lokal nga pagbag-o mahimo ra nga ma-access sa sulud sa pagpaandar sa miyembro nga naghubit kanila.,"ang mga myembro sa datos permanente nga mga hiyas sa klase, mga lokal nga variable sa sulud sa usa ka kalihokan sa miyembro nawala kung nahuman ang kasangkaran sa pagpaandar sa myembro.",Vad är skillnaden mellan en datamedlem och en lokal variabel i en medlemsfunktion?,Datamedlemmar kan nås från alla medlemsfunktioner i klassdefinitionen. Lokala variabler kan endast nås i medlemsfunktionen som definierar dem.,"datamedlemmar är permanenta attribut för klassen, lokala variabler i en medlemsfunktion går förlorade när omfattningen av medlemsfunktionen slutar.",Quelle est la différence entre un membre de données et une variable locale dans une fonction membre?,Les membres de données sont accessibles à partir de toutes les fonctions membres de la définition de classe. Les variables locales ne sont accessibles qu&#39;à l&#39;intérieur de la fonction membre qui les définit.,"Les membres de données sont des attributs permanents de la classe, les variables locales à l&#39;intérieur d&#39;une fonction membre sont perdues lorsque la portée de la fonction membre se termine.",Wat is het verschil tussen een gegevenslid en een lokale variabele binnen een lidfunctie?,Gegevensleden zijn toegankelijk vanuit alle lidfuncties binnen de klassedefinitie. Lokale variabelen zijn alleen toegankelijk binnen de lidfunctie die ze definieert.,"data-leden zijn permanente attributen van de klasse, lokale variabelen binnen een lidfunctie gaan verloren wanneer het bereik van de lidfunctie eindigt.",В чем разница между элементом данных и локальной переменной внутри функции-члена?,"Доступ к элементам данных можно получить из любых функций-членов внутри определения класса. Доступ к локальным переменным можно получить только внутри функции-члена, которая их определяет.","члены данных являются постоянными атрибутами класса, локальные переменные внутри функции-члена теряются, когда область действия функции-члена заканчивается.",Qual è la differenza tra un membro dati e una variabile locale all&#39;interno di una funzione membro?,È possibile accedere ai membri dati da qualsiasi funzione membro all&#39;interno della definizione della classe. È possibile accedere alle variabili locali solo all&#39;interno della funzione membro che le definisce.,"i membri dati sono attributi permanenti della classe, le variabili locali all&#39;interno di una funzione membro vengono perse quando l&#39;ambito della funzione membro termina.",¿Cuál es la diferencia entre un miembro de datos y una variable local dentro de una función miembro?,Se puede acceder a los miembros de datos desde cualquier función miembro dentro de la definición de clase. Solo se puede acceder a las variables locales dentro de la función miembro que las define.,"Los miembros de datos son atributos permanentes de la clase, las variables locales dentro de una función miembro se pierden cuando finaliza el alcance de la función miembro.",Jaka jest różnica między składową danych a zmienną lokalną wewnątrz funkcji składowej?,"Dostęp do członków danych można uzyskać z dowolnej funkcji składowej wewnątrz definicji klasy. Dostęp do zmiennych lokalnych można uzyskać tylko wewnątrz funkcji składowej, która je definiuje.","składowe danych są stałymi atrybutami klasy, zmienne lokalne wewnątrz funkcji składowej są tracone, gdy kończy się zakres funkcji składowej.",Sự khác biệt giữa một thành viên dữ liệu và một biến cục bộ bên trong một hàm thành viên là gì?,Các thành viên dữ liệu có thể được truy cập từ bất kỳ hàm thành viên nào bên trong định nghĩa lớp. Các biến cục bộ chỉ có thể được truy cập bên trong hàm thành viên định nghĩa chúng.,"các thành viên dữ liệu là các thuộc tính vĩnh viễn của lớp, các biến cục bộ bên trong một hàm thành viên sẽ bị mất khi phạm vi của hàm thành viên kết thúc.",データメンバーとメンバー関数内のローカル変数の違いは何ですか？,データメンバーには、クラス定義内の任意のメンバー関数からアクセスできます。ローカル変数には、それらを定義するメンバー関数内でのみアクセスできます。,データメンバーはクラスの永続的な属性であり、メンバー関数内のローカル変数は、メンバー関数のスコープが終了すると失われます。,数据成员与成员函数内部的局部变量有什么区别？,可以从类定义内的任何成员函数访问数据成员。局部变量只能在定义它们的成员函数中访问。,数据成员是该类的永久属性，成员函数的作用域结束时，成员函数内的局部变量将丢失。,ما هو الفرق بين عضو البيانات والمتغير المحلي داخل وظيفة العضو؟,يمكن الوصول إلى أعضاء البيانات من أي وظائف عضو داخل تعريف الفئة. لا يمكن الوصول إلى المتغيرات المحلية إلا داخل دالة العضو التي تحددها.,أعضاء البيانات هم سمات دائمة للفئة ، وتضيع المتغيرات المحلية داخل وظيفة العضو عندما ينتهي نطاق وظيفة العضو.,Яка різниця між елементом даних та локальною змінною всередині функції-члена?,"Доступ до членів даних можна отримати з будь-яких функцій-членів усередині визначення класу. Локальні змінні можуть бути доступні лише всередині функції-члена, яка їх визначає.","члени даних є постійними атрибутами класу, локальні змінні всередині функції-члена втрачаються, коли область дії функції-члена закінчується.",Qual é a diferença entre um membro de dados e uma variável local dentro de uma função de membro?,Os membros de dados podem ser acessados a partir de quaisquer funções de membro dentro da definição de classe. Variáveis locais só podem ser acessadas dentro da função membro que as define.,"membros de dados são atributos permanentes da classe, variáveis locais dentro de uma função de membro são perdidas quando o escopo da função de membro termina.",تفاوت بین یک عضو داده و یک متغیر محلی در داخل یک تابع عضو چیست؟,اعضای عضو داده را می توان از طریق توابع عضوی که در تعریف کلاس وجود دارد ، جستجو کرد. متغیرهای محلی فقط در داخل تابع عضوی که آنها را تعریف می کند قابل دسترسی هستند.,اعضای داده صفات دائمی کلاس هستند ، متغیرهای محلی درون یک تابع عضو با پایان یافتن دامنه عملکرد عضو از بین می روند.,Quina diferència hi ha entre un membre de dades i una variable local dins d’una funció de membre?,Es pot accedir als membres de les dades des de qualsevol de les funcions dels membres dins de la definició de classe. Les variables locals només es poden accedir a la funció membre que les defineix.,"els membres de dades són atributs permanents de la classe, les variables locals dins d&#39;una funció membre es perden quan s&#39;acaba l&#39;abast de la funció membre.",Која је разлика између члана података и локалне променљиве унутар функције члана?,Члановима података може се приступити из било које функције члана унутар дефиниције класе. Локалним променљивим се може приступити само унутар функције члана која их дефинише.,"чланови података су трајни атрибути класе, локалне променљиве унутар функције члана губе се када се обим функције члана завршава.",Apa perbedaan antara anggota data dan variabel lokal di dalam fungsi anggota?,Anggota data dapat diakses dari fungsi anggota mana pun di dalam definisi kelas. Variabel lokal hanya dapat diakses di dalam fungsi anggota yang mendefinisikannya.,"anggota data adalah atribut permanen kelas, variabel lokal di dalam fungsi anggota akan hilang ketika ruang lingkup fungsi anggota berakhir.",Hva er forskjellen mellom et datamedlem og en lokal variabel i en medlemsfunksjon?,Datamedlemmer er tilgjengelige fra alle medlemsfunksjoner i klassedefinisjonen. Lokale variabler er bare tilgjengelige i medlemsfunksjonen som definerer dem.,"datamedlemmer er permanente attributter for klassen, lokale variabler i en medlemsfunksjon går tapt når omfanget av medlemsfunksjonen slutter.",멤버 함수 내에서 데이터 멤버와 지역 변수의 차이점은 무엇입니까?,데이터 멤버는 클래스 정의 내의 모든 멤버 함수에서 액세스 할 수 있습니다. 지역 변수는이를 정의하는 멤버 함수 내에서만 액세스 할 수 있습니다.,데이터 멤버는 클래스의 영구적 인 속성이며 멤버 함수의 범위가 끝나면 멤버 함수 내의 지역 변수가 손실됩니다.,Mitä eroa on datajäsenellä ja jäsenfunktion sisällä olevalla paikallisella muuttujalla?,Tietojäseniin pääsee mistä tahansa jäsentoiminnosta luokan määritelmän sisällä. Paikallisiin muuttujiin pääsee vain niitä määrittelevässä jäsenfunktiossa.,"datajäsenet ovat luokan pysyviä määritteitä, jäsenfunktion sisällä olevat paikalliset muuttujat menetetään, kun jäsenfunktion laajuus loppuu.",Mi a különbség az adattag és a tagfüggvényen belüli helyi változó között?,Az adattagok az osztálymeghatározáson belül bármely tagfunkcióból elérhetők. A helyi változók csak az őket meghatározó tagfüggvényen belül érhetők el.,"az adattagok az osztály állandó attribútumai, a tagfüggvényen belüli helyi változók elvesznek, amikor a tagfüggvény hatóköre megszűnik.",Jaký je rozdíl mezi datovým členem a lokální proměnnou uvnitř členské funkce?,"K datovým členům lze přistupovat z jakékoli členské funkce uvnitř definice třídy. K lokálním proměnným lze přistupovat pouze uvnitř členské funkce, která je definuje.","datové členy jsou trvalé atributy třídy, místní proměnné uvnitř členské funkce se ztratí, když skončí rozsah členské funkce.",Koja je razlika između člana podataka i lokalne varijable unutar funkcije člana?,Članovima podataka može se pristupiti iz bilo koje funkcije člana unutar definicije klase. Lokalnim varijablama može se pristupiti samo unutar funkcije člana koja ih definira.,"članovi podataka su trajni atributi klase, lokalne varijable unutar funkcije člana gube se kada opseg funkcije člana završava."
408,408,1913,11.2,public and private,Private and public.,What are the access-specifiers that can be used in a C++ class definition?,5.0,Privat und öffentlich.,Welche Zugriffsspezifizierer können in einer C ++ - Klassendefinition verwendet werden?,öffentlich und privat,Unsa ang mga access-specifier nga mahimong magamit sa usa ka C ++ nga kahulugan sa klase?,Pribado ug publiko.,publiko ug pribado,Vilka är de åtkomstspecifikatorer som kan användas i en C ++ klassdefinition?,Privat och offentlig.,offentliga och privata,Quels sont les spécificateurs d&#39;accès qui peuvent être utilisés dans une définition de classe C ++?,Privé et public.,publique et privée,Wat zijn de toegangsspecificaties die kunnen worden gebruikt in een C ++ klassendefinitie?,Privé en openbaar.,publiek en prive,Какие спецификаторы доступа можно использовать в определении класса C ++?,Частное и публичное.,общественные и частные,Quali sono gli specificatori di accesso che possono essere utilizzati in una definizione di classe C ++?,Privato e pubblico.,pubblico e privato,¿Cuáles son los especificadores de acceso que se pueden usar en una definición de clase C ++?,Privado y publico.,pública y privada,"Jakie są specyfikatory dostępu, których można używać w definicji klasy C ++?",Prywatne i publiczne.,publiczny i prywatny,Các chỉ định truy cập có thể được sử dụng trong định nghĩa lớp C ++ là gì?,Tư nhân và công cộng.,Công cộng và tư nhân,C ++クラス定義で使用できるアクセス指定子は何ですか？,プライベートとパブリック。,パブリックとプライベート,C ++类定义中可以使用哪些访问说明符？,私人和公共。,公立和私立,ما هي محددات الوصول التي يمكن استخدامها في تعريف فئة C ++؟,الخاص والعامة.,عام و شخصي,Які специфікатори доступу можна використовувати у визначенні класу C ++?,Приватні та державні.,державні та приватні,Quais são os especificadores de acesso que podem ser usados em uma definição de classe C ++?,Privado e público.,público e privado,مشخص کننده های دسترسی که می توانند در تعریف کلاس C ++ استفاده شوند کدامند؟,خصوصی و دولتی.,دولتی و خصوصی,Quins són els especificadors d&#39;accés que es poden utilitzar en una definició de classe C ++?,Privada i pública.,públics i privats,Који су спецификатори приступа који се могу користити у дефиницији класе Ц ++?,Приватно и јавно.,јавни и приватни,Apa penentu akses yang dapat digunakan dalam definisi kelas C ++?,Pribadi dan publik.,publik dan swasta,Hva er tilgangsspesifikatorene som kan brukes i en C ++ klassedefinisjon?,Privat og offentlig.,offentlig og privat,C ++ 클래스 정의에서 사용할 수있는 액세스 지정자는 무엇입니까?,개인 및 공개.,공개 및 비공개,"Mitkä ovat pääsyn määrittelijät, joita voidaan käyttää C ++ -luokan määrittelyssä?",Yksityinen ja julkinen.,julkinen ja yksityinen,Melyek a C ++ osztálydefinícióban használható hozzáférés-specifikátorok?,Magán és állami.,állami és magán,"Jaké jsou specifikátory přístupu, které lze použít v definici třídy C ++?",Soukromé i veřejné.,veřejné a soukromé,Koji su specifikatori pristupa koji se mogu koristiti u definiciji klase C ++?,Privatno i javno.,javno i privatno
409,409,1348,8.2,push (insert an item) pop (remove an item),push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?",Drücken Sie (Einfügen eines Elements) Pop (Entfernen eines Elements),Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,iduso (isulud usa ka aytem) pop (tangtanga ang usa ka aytem),Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,tryck (infoga ett objekt) pop (ta bort ett objekt),Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,push (insérer un élément) pop (supprimer un élément),Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,push (voeg een item in) pop (verwijder een item),Какие две основные функции определяет стек?,толкать и хлопать,push (вставить элемент) pop (удалить элемент),Quali sono le due funzioni principali definite da uno stack?,spingere e pop,spingere (inserire un elemento) aprire (rimuovere un elemento),¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,empujar (insertar un elemento) pop (eliminar un elemento),Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,push (wstaw element) pop (usuń element),Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,push (chèn một mục) pop (xóa một mục),スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,push（アイテムを挿入）pop（アイテムを削除）,堆栈定义的两个主要功能是什么？,推和弹出,推入（插入项目）弹出（移出项目）,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,دفع (أدخل عنصرًا) انبثاق (إزالة عنصر),Які дві основні функції визначає стек?,натискання та поп,натиснути (вставити елемент) спливаюче (видалити елемент),Quais são as duas funções principais definidas por uma pilha?,empurre e estale,empurre (insira um item) pop (remova um item),دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,فشار دادن (قرار دادن یک مورد) پاپ (حذف یک مورد),Quines són les dues funcions principals definides per una pila?,empenta i esclata,prémer (inserir un element) pop (eliminar un element),Које су две главне функције дефинисане стеком?,гурај и пуцај,притисните (убаците ставку) искочите (уклоните ставку),Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,dorong (masukkan item) pop (hapus item),Hva er de to hovedfunksjonene definert av en stabel?,push og pop,trykk (sett inn et element) pop (fjern et element),스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,push (항목 삽입) pop (항목 제거),Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,työnnä (lisää kohde) pop (poista kohde),Mi a verem által definiált két fő funkció?,nyomja és pattog,push (elem beszúrása) pop (elem eltávolítása),Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,push (vložení položky) pop (odebrání položky),Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,pritisnite (umetnite predmet) pop (uklonite stavku)
410,410,2375,12.8,"has preorder, in order, and postorder of a tree.  preorder = puts the parent node in front of the child node(s).  in order = puts the parent node between the left child and right child node(s).  postorder = puts the parent node after the child node(s).","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,3.5,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"hat Vorbestellung, Reihenfolge und Nachbestellung eines Baumes. preorder = stellt den übergeordneten Knoten vor den untergeordneten Knoten. in order = setzt den übergeordneten Knoten zwischen den linken und rechten untergeordneten Knoten. postorder = setzt den übergeordneten Knoten nach den untergeordneten Knoten.",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.","adunay preorder, sa han-ay, ug postorder sa usa ka kahoy. preorder = gibutang ang ginikanan node sa atubangan sa (mga) node sa bata. sa han-ay = gibutang ang ginikanan node taliwala sa wala nga bata ug tuo nga node (s) sa bata. postorder = gibutang ang node sa ginikanan pagkahuman sa (mga) node sa bata.",Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.","har förbeställning, i ordning och efterbeställning av ett träd. förbeställning = placerar föräldernoden framför den eller de underordnade noderna. i ordning = placerar föräldernoden mellan vänster barn och höger barn nod. postorder = placerar föräldernoden efter den eller de underordnade noderna.",Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.","a le précommande, dans l&#39;ordre et le post-ordre d&#39;un arbre. preorder = place le nœud parent devant le (s) nœud (s) enfant (s). in order = place le nœud parent entre les nœuds enfants gauche et droit. postorder = place le nœud parent après le ou les nœuds enfants.",Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.","heeft een voorbestelling, in volgorde en postorder van een boom. preorder = plaatst het bovenliggende knooppunt voor de kindknooppunt (en). in order = plaatst het bovenliggende knooppunt tussen het linker kind en het rechter kind knooppunt (en). postorder = plaatst het bovenliggende knooppunt na de kindknooppunt (en).",Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","имеет предзаказ, по порядку и по порядку дерева. preorder = помещает родительский узел перед дочерним узлом (ами). in order = помещает родительский узел между левым дочерним и правым дочерним узлами. postorder = помещает родительский узел после дочернего (ых) узла (ов).",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.","ha preordine, in ordine e postordine di un albero. preorder = mette il nodo genitore davanti ai nodi figli. in order = mette il nodo genitore tra il nodo figlio sinistro e il nodo figlio destro. postorder = inserisce il nodo padre dopo il nodo figlio.",¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.","tiene preorden, en orden y postorder de un árbol. preorder = coloca el nodo padre delante del nodo (s) hijo (s). in order = coloca el nodo padre entre el nodo secundario izquierdo y el nodo secundario derecho. postorder = coloca el nodo padre después de los nodos secundarios.",Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","ma preorder, zamówienie i zamówienie pocztowe drzewa. preorder = umieszcza węzeł nadrzędny przed węzłem potomnym. in order = umieszcza węzeł nadrzędny między lewym węzłem potomnym a prawym węzłem potomnym. postorder = umieszcza węzeł nadrzędny po węźle potomnym.",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.","đã đặt hàng trước, theo thứ tự và đặt hàng sau của một cây. preorder = đặt nút cha trước (các) nút con. in order = đặt nút cha giữa (các) nút con bên trái và bên phải. postorder = đặt nút cha sau (các) nút con.",木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,ツリーのプレオーダー、オーダー、ポストオーダーがあります。 preorder =親ノードを子ノードの前に配置します。 in order =親ノードを、左の子ノードと右の子ノードの間に配置します。 postorder =親ノードを子ノードの後に配置します。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,具有树的前序，后序和后序。 preorder =将父节点放在子节点的前面。顺序=将父节点置于左子节点和右子节点之间。 postorder =将父节点放在子节点之后。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,يحتوي على شجرة بالترتيب المسبق والترتيب البريدي. الطلب المسبق = يضع العقدة الأصلية أمام العقدة (العقد) الفرعية. بالترتيب = يضع العقدة الأصلية بين العقدة الفرعية اليسرى والعقدة الفرعية اليمنى. postorder = يضع العقدة الأصلية بعد العقدة الفرعية.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","має попереднє замовлення, впорядкування та післяпорядкування дерева. preorder = ставить батьківський вузол перед дочірніми вузлами. in order = розміщує батьківський вузол між лівим дочірнім і правим дочірніми вузлами. postorder = ставить батьківський вузол після дочірніх вузлів.",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.","tem pré-pedido, em ordem e pós-pedido de uma árvore. preorder = coloca o nó pai na frente do (s) nó (s) filho (s). in order = coloca o nó pai entre o (s) nó (s) filho (s) esquerdo e direito (s). postorder = coloca o nó pai após o (s) nó (s) filho (s).",پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,دارای یک پیش سفارش ، به ترتیب ، و پس از سفارش یک درخت است. preorder = گره اصلی را در مقابل گره (های) کودک قرار می دهد. in order = گره والد را بین گره (های) کودک چپ و راست قرار می دهد. postorder = گره اصلی را بعد از گره (های) کودک قرار می دهد.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.","té un preordre, per ordre i un postordre d’un arbre. preordenar = posa el node pare davant dels nodes secundaris. en ordre = posa el node pare entre els nodes fills esquerra i dret (s). postordre = posa el node pare després dels nodes secundaris.",Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","има предбиљежбу, редом и поруџбину дрвета. преордер = ставља родитељски чвор испред подређених чворова. редом = ставља родитељски чвор између левог и десног подређеног чвора. постордер = ставља родитељски чвор након подређених чворова.",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.","memiliki preorder, order, dan postorder pohon. preorder = menempatkan simpul induk di depan simpul anak. in order = menempatkan node induk antara node anak kiri dan node anak kanan. postorder = menempatkan simpul induk setelah simpul anak.",Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.","har forhåndsbestilling, i rekkefølge og etterbestilling av et tre. forhåndsbestilling = setter foreldrenoden foran barnets node (r). i rekkefølge = setter foreldrenoden mellom venstre barn og høyre barn node. postordre = setter foreldrenoden etter barnetoden (e).",나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.","나무의 preorder, order 및 postorder가 있습니다. preorder = 부모 노드를 자식 노드 앞에 놓습니다. 순서대로 = 왼쪽 자식 노드와 오른쪽 자식 노드 사이에 부모 노드를 놓습니다. postorder = 자식 노드 뒤에 부모 노드를 놓습니다.",Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.",on puun ennakkotilaus järjestyksessä ja postitilaus. preorder = laittaa ylätason solmun lapsisolmun (solmujen) eteen. järjestyksessä = laittaa ylätason solmun vasemman ja oikean lapsisolmun väliin. postorder = laittaa ylätason solmun lapsisolmun (solmujen) perään.,Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.",rendelkezik egy fa előrendelésével és sorrendjével. előrendelés = a szülő csomópontot a gyermek csomópont (ok) elé helyezi. sorrendben = a szülő csomópontot a bal és a jobb gyermek csomópont (ok) közé helyezi. postorder = a szülő csomópontot a gyermek csomópont (ok) után helyezi el.,Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.","má předobjednávku, v pořadí a poobjednávku stromu. preorder = umístí nadřazený uzel před podřízený uzel. v pořadí = umístí nadřazený uzel mezi levé a pravé podřízené uzly. postorder = umístí nadřazený uzel za podřízený uzel.",Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.","ima predbilježbu, redom i porudžbinu stabla. preorder = stavlja roditeljski čvor ispred podređenih čvorova. in order = stavlja roditeljski čvor između lijevog i desnog dječjeg čvora. postorder = stavlja roditeljski čvor nakon podređenih čvorova."
411,411,169,1.6,global variables are declared in the main function local variables are declared in any other function,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Where are variables declared in a C++ program?,4.0,Variablen können überall in einem Programm deklariert werden. Sie können innerhalb einer Funktion (lokale Variablen) oder außerhalb der Funktionen (globale Variablen) deklariert werden.,Wo werden Variablen in einem C ++ - Programm deklariert?,Globale Variablen werden in der Hauptfunktion deklariert. Lokale Variablen werden in jeder anderen Funktion deklariert,Asa man ang mga variable nga gideklara sa usa ka C ++ nga programa?,Ang mga variable mahimo ipahayag bisan diin sa usa ka programa. Mahimo sila madeklara sa sulud sa usa ka pagpaandar (mga lokal nga baryable) o sa gawas sa mga gimbuhaton (global variable),ang mga variable sa kalibutan gipahayag sa panguna nga gimbuhaton ang mga lokal nga baryable gideklara sa bisan unsang ubang kalihokan,Var deklareras variabler i ett C ++ - program?,Variabler kan deklareras var som helst i ett program. De kan deklareras i en funktion (lokala variabler) eller utanför funktionerna (globala variabler),globala variabler deklareras i huvudfunktionen lokala variabler deklareras i någon annan funktion,Où les variables sont-elles déclarées dans un programme C ++?,Les variables peuvent être déclarées n&#39;importe où dans un programme. Ils peuvent être déclarés à l&#39;intérieur d&#39;une fonction (variables locales) ou en dehors des fonctions (variables globales),les variables globales sont déclarées dans la fonction principale les variables locales sont déclarées dans toute autre fonction,Waar worden variabelen gedeclareerd in een C ++ -programma?,Variabelen kunnen overal in een programma worden gedeclareerd. Ze kunnen worden gedeclareerd binnen een functie (lokale variabelen) of buiten de functies (globale variabelen),globale variabelen worden gedeclareerd in de hoofdfunctie lokale variabelen worden gedeclareerd in elke andere functie,Где объявлены переменные в программе на C ++?,Переменные можно объявлять в любом месте программы. Они могут быть объявлены внутри функции (локальные переменные) или вне функций (глобальные переменные).,глобальные переменные объявлены в основной функции локальные переменные объявлены в любой другой функции,Dove sono le variabili dichiarate in un programma C ++?,Le variabili possono essere dichiarate ovunque in un programma. Possono essere dichiarati all&#39;interno di una funzione (variabili locali) o all&#39;esterno delle funzioni (variabili globali),le variabili globali sono dichiarate nella funzione principale le variabili locali sono dichiarate in qualsiasi altra funzione,¿Dónde se declaran las variables en un programa C ++?,Las variables se pueden declarar en cualquier lugar de un programa. Pueden declararse dentro de una función (variables locales) o fuera de las funciones (variables globales),las variables globales se declaran en la función principal las variables locales se declaran en cualquier otra función,Gdzie są zmienne zadeklarowane w programie C ++?,Zmienne można zadeklarować w dowolnym miejscu programu. Można je zadeklarować wewnątrz funkcji (zmienne lokalne) lub poza funkcjami (zmienne globalne),"zmienne globalne są deklarowane w funkcji głównej, zmienne lokalne są deklarowane w każdej innej funkcji",Các biến được khai báo ở đâu trong một chương trình C ++?,Các biến có thể được khai báo ở bất kỳ đâu trong chương trình. Chúng có thể được khai báo bên trong một hàm (biến cục bộ) hoặc bên ngoài hàm (biến toàn cục),biến toàn cục được khai báo trong hàm chính Các biến cục bộ được khai báo trong bất kỳ hàm nào khác,C ++プログラムで変数はどこで宣言されていますか？,変数は、プログラム内のどこでも宣言できます。これらは、関数内（ローカル変数）または関数外（グローバル変数）で宣言できます。,グローバル変数はメイン関数で宣言されますローカル変数は他の関数で宣言されます,C ++程序中的变量在哪里声明？,变量可以在程序中的任何位置声明。可以在函数内部（局部变量）或函数外部（全局变量）声明它们,全局变量在主函数中声明局部变量在任何其他函数中声明,أين يتم التصريح عن المتغيرات في برنامج C ++؟,يمكن التصريح عن المتغيرات في أي مكان في البرنامج. يمكن التصريح عنها داخل دالة (المتغيرات المحلية) أو خارج الوظائف (المتغيرات العالمية),يتم التصريح عن المتغيرات العامة في الوظيفة الرئيسية المتغيرات المحلية يتم الإعلان عنها في أي وظيفة أخرى,"Де змінні, оголошені в програмі на C ++?",Змінні можуть бути оголошені в будь-якому місці програми. Вони можуть бути оголошені всередині функції (локальні змінні) або поза функціями (глобальні змінні),глобальні змінні оголошені в основній функції локальні змінні оголошені в будь-якій іншій функції,Onde as variáveis são declaradas em um programa C ++?,As variáveis podem ser declaradas em qualquer lugar em um programa. Eles podem ser declarados dentro de uma função (variáveis locais) ou fora das funções (variáveis globais),variáveis globais são declaradas na função principal variáveis locais são declaradas em qualquer outra função,متغیرها در یک برنامه C ++ کجا اعلام می شوند؟,متغیرها را می توان در هر کجای یک برنامه اعلام کرد. آنها را می توان در داخل یک تابع (متغیرهای محلی) یا خارج از توابع (متغیرهای جهانی) اعلام کرد,متغیرهای جهانی در تابع اصلی اعلام می شوند متغیرهای محلی در هر تابع دیگر اعلام می شوند,On es declaren les variables en un programa C ++?,Les variables es poden declarar a qualsevol lloc del programa. Es poden declarar dins d&#39;una funció (variables locals) o fora de les funcions (variables globals),les variables globals es declaren a la funció principal Les variables locals es declaren en qualsevol altra funció,Где су променљиве декларисане у програму Ц ++?,Променљиве се могу декларисати било где у програму. Могу се декларисати унутар функције (локалне променљиве) или изван функције (глобалне променљиве),глобалне променљиве су декларисане у главној функцији локалне променљиве су декларисане у било којој другој функцији,Di mana variabel dideklarasikan dalam program C ++?,Variabel dapat dideklarasikan dimanapun dalam program. Mereka dapat dideklarasikan di dalam fungsi (variabel lokal) atau di luar fungsi (variabel global),variabel global dideklarasikan dalam fungsi utama variabel lokal dideklarasikan dalam fungsi lain,Hvor er variabler deklarert i et C ++ - program?,Variabler kan deklareres hvor som helst i et program. De kan deklareres i en funksjon (lokale variabler) eller utenfor funksjonene (globale variabler),globale variabler blir deklarert i hovedfunksjonen lokale variabler blir deklarert i en hvilken som helst annen funksjon,C ++ 프로그램에서 변수는 어디에 선언되어 있습니까?,변수는 프로그램의 어느 곳에서나 선언 할 수 있습니다. 함수 내부 (로컬 변수) 또는 함수 외부 (전역 변수)에서 선언 할 수 있습니다.,전역 변수는 주 함수에서 선언됩니다. 지역 변수는 다른 함수에서 선언됩니다.,Missä muuttujat ilmoitetaan C ++ -ohjelmassa?,Muuttujat voidaan ilmoittaa missä tahansa ohjelmassa. Ne voidaan ilmoittaa funktion sisällä (paikalliset muuttujat) tai toimintojen ulkopuolella (yleiset muuttujat),globaalit muuttujat ilmoitetaan pääfunktiossa paikalliset muuttujat ilmoitetaan missä tahansa muussa funktiossa,Hol vannak deklarálva a változók egy C ++ programban?,A változókat bárhol deklarálhatjuk egy programban. Deklarálhatók egy függvényen belül (helyi változók) vagy a függvényeken kívül (globális változók),"a globális változókat a fő függvényben deklaráljuk, a helyi változókat bármely más függvényben deklaráljuk",Kde jsou proměnné deklarovány v programu C ++?,Proměnné lze deklarovat kdekoli v programu. Mohou být deklarovány uvnitř funkce (lokální proměnné) nebo mimo funkce (globální proměnné),"globální proměnné jsou deklarovány v hlavní funkci, lokální proměnné jsou deklarovány v jakékoli jiné funkci",Gdje su varijable deklarirane u programu C ++?,Varijable se mogu deklarirati bilo gdje u programu. Mogu se deklarirati unutar funkcije (lokalne varijable) ili izvan funkcije (globalne varijable),"globalne varijable su deklarirane u glavnoj funkciji, lokalne varijable su deklarirane u bilo kojoj drugoj funkciji"
412,412,2376,12.8,"The Euler traveral is when you go through a tree looking for nodes to put in the order of left, root, right. Like inOrder traversal.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",What is the Euler tour traversal of a tree?,4.0,"Ein Spaziergang um den Baum, beginnend mit der Wurzel, wo jeder Knoten dreimal gesehen wird: von links, von unten, von rechts.",Was ist die Euler-Tour durch einen Baum?,"Der Euler-Traveral ist, wenn Sie durch einen Baum gehen und nach Knoten suchen, die in der Reihenfolge links, root, rechts platziert werden sollen. Wie inOrder Traversal.",Unsa man ang pagbiyahe sa Euler sa usa ka punoan?,"Paglakaw libot sa kahoy, sugod sa gamot, diin ang matag node makita sa tulo ka beses: gikan sa wala, gikan sa ubos, gikan sa tuo.","Ang Euler traveral kung moagi ka sa usa ka punoan nga nangita mga node aron ibutang sa han-ay sa wala, ugat, tuo. Sama sa inOrder traversal.",Vad är Eulers turkorsning av ett träd?,"En promenad runt trädet, som börjar med roten, där varje nod ses tre gånger: från vänster, underifrån, från höger.","Euler-traveralen är när du går igenom ett träd och letar efter noder för att placera i ordningen vänster, rot, höger. Som i Beställningskorsning.",Qu&#39;est-ce que le parcours Euler d&#39;un arbre?,"Une promenade autour de l&#39;arbre, en commençant par la racine, où chaque nœud est vu trois fois: de gauche, d&#39;en bas, de droite.","Le parcours d&#39;Euler est lorsque vous parcourez un arbre à la recherche de nœuds à mettre dans l&#39;ordre gauche, racine, droite. Comme inOrder traversal.",Wat is de Euler-tour door een boom?,"Een wandeling rond de boom, beginnend met de wortel, waar elk knooppunt drie keer wordt gezien: van links, van onderaf, van rechts.","De Euler-traveral is wanneer je door een boom gaat op zoek naar knooppunten die je in de volgorde links, wortel, rechts kunt plaatsen. Zoals inOrder traversal.",Что такое обход дерева с помощью тура Эйлера?,"Обход дерева, начиная с корня, где каждый узел виден трижды: слева, снизу, справа.","Путешествие Эйлера - это когда вы просматриваете дерево в поисках узлов, которые нужно расположить в следующем порядке: левый, корневой, правый. Как inOrder traversal.",Qual è l&#39;attraversamento del tour di Eulero di un albero?,"Una passeggiata intorno all&#39;albero, partendo dalla radice, dove ogni nodo è visto tre volte: da sinistra, da sotto, da destra.","Il percorso di Eulero è quando attraversi un albero alla ricerca di nodi da inserire nell&#39;ordine di sinistra, radice, destra. Come in Order traversal.",¿Qué es el recorrido de Euler por un árbol?,"Un paseo por el árbol, empezando por la raíz, donde cada nodo se ve tres veces: desde la izquierda, desde abajo, desde la derecha.","El recorrido de Euler es cuando atraviesas un árbol en busca de nodos para poner en el orden de izquierda, raíz, derecha. Como inOrder transversal.",Czym jest przemierzanie drzewa przez wycieczkę Euler?,"Spacer po drzewie, zaczynając od korzenia, gdzie każdy węzeł jest widoczny trzy razy: z lewej, z dołu, z prawej.","Traveral Eulera ma miejsce, gdy przechodzisz przez drzewo w poszukiwaniu węzłów do ułożenia w kolejności lewo, korzeń, prawo. Jak w traversal zamówienia.",Chuyến tham quan Euler của một cái cây là gì?,"Đi bộ quanh cây, bắt đầu từ gốc, nơi mỗi nút được nhìn thấy ba lần: từ bên trái, từ bên dưới, từ bên phải.","Đường dẫn Euler là khi bạn đi qua một cái cây tìm kiếm các nút để đặt theo thứ tự trái, gốc, phải. Giống như inOrder traversal.",木のオイラーツアートラバーサルとは何ですか？,ルートから始めて、ツリーの周りを歩きます。各ノードは、左から、下から、右から3回表示されます。,オイラートラベラルは、ツリーを通過して、左、ルート、右の順序で配置するノードを探す場合です。 inOrderトラバーサルのように。,一棵树的欧拉游历遍历是什么？,从根开始，在树上走动，在每个树上看到三个节点：从左到左，从右到右。,欧拉（Euler）遍历是当您穿过一棵树寻找按左，根，右顺序排列的节点时。像inOrder遍历一样。,ما هو اجتياز شجرة أويلر في جولة؟,نزهة حول الشجرة ، بدءًا من الجذر ، حيث تُرى كل عقدة ثلاث مرات: من اليسار ، من الأسفل ، من اليمين.,اجتياز أويلر هو عندما تمر عبر شجرة تبحث عن عقد لترتيبها من اليسار ، والجذر ، واليمين. مثل inOrder traversal.,Що таке обхідна подорож дерева по Ейлеру?,"Прогулянка навколо дерева, починаючи з кореня, де кожен вузол видно тричі: зліва, знизу, праворуч.","Подорож Euler - це коли ви проходите по дереву, шукаючи вузли, які слід розмістити в порядку ліворуч, корінь, праворуч. Як inOrder обхід.",O que é a travessia do tour de Euler por uma árvore?,"Um passeio ao redor da árvore, começando pela raiz, onde cada nó é visto três vezes: da esquerda, de baixo, da direita.","O traveral de Euler é quando você passa por uma árvore procurando por nós para colocar na ordem de esquerda, raiz e direita. Como na passagem de pedido.",پیمایش تور اولر از یک درخت چیست؟,یک پیاده روی در اطراف درخت ، شروع با ریشه ، جایی که هر گره سه بار دیده می شود: از سمت چپ ، از پایین ، از راست.,سفر اولر زمانی است که از میان درختی عبور می کنید و به دنبال گره هایی می روید که به ترتیب چپ ، ریشه ، راست قرار گیرند. مانند پیمایش inOrder.,Què és la travessia d’un arbre per Euler?,"Un passeig per l’arbre, començant per l’arrel, on es veu cada node tres vegades: des de l’esquerra, des de baix, des de la dreta.","El traveral d’Euler és quan es passa per un arbre a la recerca de nodes per posar en l’ordre esquerre, arrel, dret. Com el recorregut inOrder.",Шта је Еулерова турнеја по дрвету?,"Шетња око дрвета, почевши од корена, где се сваки чвор види три пута: слева, одоздо, здесна.","Еулер путовање је када пролазите кроз дрво тражећи чворове које ћете ставити у редослед лево, корен, десно. Као обилазак инОрдер.",Apa yang dimaksud dengan traversal tur Euler dari pohon?,"Berjalan mengelilingi pohon, dimulai dengan akar, di mana setiap simpul terlihat tiga kali: dari kiri, dari bawah, dari kanan.","Traveral Euler adalah saat Anda melewati sebuah pohon mencari node untuk diletakkan di urutan kiri, root, kanan. Seperti inOrder traversal.",Hva er Euler-turen gjennom et tre?,"En tur rundt treet, og begynner med roten, der hver node blir sett tre ganger: fra venstre, nedenfra, fra høyre.","Euler traveral er når du går gjennom et tre på jakt etter noder for å sette i rekkefølgen av venstre, rot, høyre. Som i Bestill traversal.",나무의 오일러 투어 순회는 무엇입니까?,"각 노드가 왼쪽에서, 아래에서, 오른쪽에서 세 번 표시되는 루트에서 시작하여 트리 주위를 산책합니다.","오일러 순회는 왼쪽, 루트, 오른쪽 순서로 배치 할 노드를 찾는 트리를 통과 할 때입니다. inOrder 순회와 같습니다.",Mikä on puun Euler-kiertue?,"Kävely puun ympärillä alkaen juuresta, jossa jokainen solmu näkyy kolme kertaa: vasemmalta, alhaalta, oikealta.","Euler-traveraali on, kun käydään puun läpi etsimällä solmuja, jotka asetetaan vasemmalle, juurelle, oikealle. Kuten inTilausliikenteessä.",Mi az a fa Euler túraútja?,"Séta a fán, kezdve a gyökérrel, ahol minden csomópont háromszor látható: balról, alulról, jobbról.","Az Euler-utazás az, amikor egy fán megy keresztül, és csomópontokat keres, amelyeket bal, gyökér, jobb sorrendbe helyezhet. Mint az InOrder bejárásában.",Co je Eulerův průchod stromem?,"Procházka kolem stromu, počínaje kořenem, kde je každý uzel viděn třikrát: zleva, zdola, zprava.","Eulerův pohřeb je, když procházíte stromem a hledáte uzly, které se dají v pořadí vlevo, root, vpravo. Jako průchod objednávky.",Šta je Eulerova turneja po drvetu?,"Šetnja oko drveta, počevši od korijena, gdje se svaki čvor vidi tri puta: slijeva, odozdo, zdesna.","Euler putovanje je kada prolazite kroz drvo tražeći čvorove koje ćete staviti u redoslijed lijevo, korijen, desno. Kao obilazak inOrder."
413,413,2022,11.6,Another alternative way to solve a problem instead of using recursive functions is by using iteration.,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?","Eine andere alternative Möglichkeit, ein Problem zu lösen, anstatt rekursive Funktionen zu verwenden, ist die Verwendung von Iteration.",Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,Ang laing alternatibo nga paagi aron masulbad ang usa ka problema imbis nga gamiton ang recursive function mao ang paggamit sa iteration.,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,Ett annat alternativt sätt att lösa ett problem istället för att använda rekursiva funktioner är att använda iteration.,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,Une autre façon de résoudre un problème au lieu d&#39;utiliser des fonctions récursives consiste à utiliser l&#39;itération.,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,"Een andere alternatieve manier om een probleem op te lossen in plaats van recursieve functies te gebruiken, is door iteratie te gebruiken.","Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,Другой альтернативный способ решения проблемы вместо использования рекурсивных функций - использовать итерацию.,Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,Un altro modo alternativo per risolvere un problema invece di utilizzare funzioni ricorsive è usare l&#39;iterazione.,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,Otra forma alternativa de resolver un problema en lugar de utilizar funciones recursivas es mediante la iteración.,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,Innym alternatywnym sposobem rozwiązania problemu zamiast korzystania z funkcji rekurencyjnych jest użycie iteracji.,Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,Một cách thay thế khác để giải quyết vấn đề thay vì sử dụng các hàm đệ quy là sử dụng phép lặp.,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,再帰関数を使用する代わりに問題を解決する別の代替方法は、反復を使用することです。,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,解决问题而不是使用递归函数的另一种替代方法是使用迭代。,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,هناك طريقة أخرى بديلة لحل مشكلة بدلاً من استخدام الدوال العودية وهي استخدام التكرار.,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,Іншим альтернативним способом вирішення проблеми замість використання рекурсивних функцій є використання ітерації.,Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,Outra forma alternativa de resolver um problema em vez de usar funções recursivas é usar iteração.,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,روش جایگزین دیگر برای حل مسئله به جای استفاده از توابع بازگشتی ، استفاده از تکرار است.,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,Una altra forma alternativa de resoldre un problema en lloc d’utilitzar funcions recursives és mitjançant la iteració.,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,Други алтернативни начин решавања проблема уместо рекурзивних функција је коришћење итерације.,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,Cara alternatif lain untuk menyelesaikan masalah daripada menggunakan fungsi rekursif adalah dengan menggunakan iterasi.,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,En annen alternativ måte å løse et problem i stedet for å bruke rekursive funksjoner er å bruke iterasjon.,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,재귀 함수를 사용하는 대신 문제를 해결하는 또 다른 방법은 반복을 사용하는 것입니다.,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,Toinen vaihtoehtoinen tapa ratkaista ongelma rekursiivisten toimintojen käyttämisen sijaan on iterointi.,Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,A probléma megoldásának másik alternatív módja a rekurzív függvények használata helyett az iteráció használata.,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,Dalším alternativním způsobem řešení problému namísto použití rekurzivních funkcí je použití iterace.,Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,Drugi alternativni način rješavanja problema umjesto korištenja rekurzivnih funkcija je korištenje iteracije.
414,414,700,4.3,Specify array name without brackets. Array size is normally passed as another argument so the function can process the specific number of elements in the array. Arrays are passed by reference. Individual array elements passed by value. Functions that take arrays as arguments.,by reference.,How are arrays passed to functions?,5.0,durch Bezugnahme.,Wie werden Arrays an Funktionen übergeben?,"Geben Sie den Namen des Arrays ohne Klammern an. Die Arraygröße wird normalerweise als weiteres Argument übergeben, damit die Funktion die bestimmte Anzahl von Elementen im Array verarbeiten kann. Arrays werden als Referenz übergeben. Einzelne Array-Elemente, die als Wert übergeben werden. Funktionen, die Arrays als Argumente verwenden.",Giunsa ang pagpasa sa mga array sa mga gimbuhaton?,pinaagi sa pakisayran.,Gipiho ang ngalan sa array nga wala’y bracket. Ang gidak-on sa Array kasagarang gipasa ingon usa pa nga argumento aron ang pagpaandar mahimong maproseso ang piho nga gidaghanon sa mga elemento sa laray. Ang mga array gipasa pinaagi sa pakisayran. Ang mga indibidwal nga elemento sa pag-ayo gipasa sa kantidad. Mga pag-andar nga nagkuha sa mga array ingon mga pangatarungan.,Hur skickas matriser till funktioner?,genom hänvisning.,Ange arraynamn utan parentes. Arraystorlek skickas normalt som ett annat argument så att funktionen kan bearbeta det specifika antalet element i matrisen. Arrayer skickas genom referens. Enskilda matriselement skickade efter värde. Funktioner som tar matriser som argument.,Comment les tableaux sont-ils passés aux fonctions?,par référence.,Spécifiez le nom du tableau sans crochets. La taille du tableau est normalement transmise comme un autre argument afin que la fonction puisse traiter le nombre spécifique d&#39;éléments dans le tableau. Les tableaux sont passés par référence. Éléments de tableau individuels passés par valeur. Fonctions qui prennent des tableaux comme arguments.,Hoe worden arrays doorgegeven aan functies?,door verwijzing.,"Geef de arraynaam op zonder haakjes. De array-grootte wordt normaal gesproken als een ander argument doorgegeven, zodat de functie het specifieke aantal elementen in de array kan verwerken. Arrays worden door middel van referentie doorgegeven. Afzonderlijke matrixelementen doorgegeven op waarde. Functies die arrays als argumenten gebruiken.",Как массивы передаются функциям?,по ссылке.,"Укажите имя массива без скобок. Размер массива обычно передается в качестве другого аргумента, чтобы функция могла обрабатывать определенное количество элементов в массиве. Массивы передаются по ссылке. Отдельные элементы массива передаются по значению. Функции, которые принимают массивы в качестве аргументов.",Come vengono passati gli array alle funzioni?,come riferimento.,Specificare il nome dell&#39;array senza parentesi. La dimensione dell&#39;array viene normalmente passata come un altro argomento in modo che la funzione possa elaborare il numero specifico di elementi dell&#39;array. Gli array vengono passati per riferimento. Singoli elementi dell&#39;array passati per valore. Funzioni che accettano array come argomenti.,¿Cómo se pasan las matrices a las funciones?,por referencia.,Especifique el nombre de la matriz sin corchetes. El tamaño de la matriz normalmente se pasa como otro argumento para que la función pueda procesar el número específico de elementos de la matriz. Las matrices se pasan por referencia. Elementos de matriz individuales pasados por valor. Funciones que toman matrices como argumentos.,W jaki sposób tablice są przekazywane do funkcji?,przez odniesienie.,"Podaj nazwę tablicy bez nawiasów. Rozmiar tablicy jest zwykle przekazywany jako kolejny argument, więc funkcja może przetworzyć określoną liczbę elementów w tablicy. Tablice są przekazywane przez odwołanie. Poszczególne elementy tablicy przekazywane przez wartość. Funkcje, które przyjmują tablice jako argumenty.",Mảng được truyền cho các hàm như thế nào?,bằng cách tham khảo.,Chỉ định tên mảng không có dấu ngoặc. Kích thước mảng thường được truyền dưới dạng một đối số khác để hàm có thể xử lý số phần tử cụ thể trong mảng. Mảng được truyền bằng tham chiếu. Các phần tử mảng riêng lẻ được truyền bởi giá trị. Các hàm nhận mảng làm đối số.,配列はどのように関数に渡されますか？,参照による。,配列名は角かっこなしで指定してください。配列サイズは通常、別の引数として渡されるため、関数は配列内の特定の数の要素を処理できます。配列は参照によって渡されます。値によって渡される個々の配列要素。配列を引数として取る関数。,数组如何传递给函数？,引用。,指定不带括号的数组名称。数组大小通常作为另一个参数传递，因此该函数可以处理数组中特定数量的元素。数组通过引用传递。单个数组元素按值传递。以数组为参数的函数。,كيف يتم تمرير المصفوفات إلى الوظائف؟,بالتزكية.,حدد اسم مصفوفة بدون أقواس. عادةً ما يتم تمرير حجم المصفوفة كوسيطة أخرى حتى تتمكن الوظيفة من معالجة عدد محدد من العناصر في المصفوفة. يتم تمرير المصفوفات بالإشارة. تم تمرير عناصر المصفوفة الفردية بالقيمة. الدوال التي تأخذ المصفوفات كوسيطات.,Як масиви передаються функціям?,за посиланням.,"Вкажіть ім&#39;я масиву без дужок. Розмір масиву зазвичай передається як інший аргумент, тому функція може обробляти певну кількість елементів у масиві. Масиви передаються за посиланням. Окремі елементи масиву, передані за значенням. Функції, які приймають масиви як аргументи.",Como os arrays são passados para as funções?,por referência.,Especifique o nome da matriz sem colchetes. O tamanho da matriz é normalmente passado como outro argumento para que a função possa processar o número específico de elementos na matriz. Matrizes são passadas por referência. Elementos individuais da matriz passados por valor. Funções que usam arrays como argumentos.,چگونه آرایه ها به توابع منتقل می شوند؟,با مرجع.,نام آرایه را بدون براکت مشخص کنید. اندازه آرایه به طور معمول به عنوان آرگومان دیگری منتقل می شود ، بنابراین تابع می تواند تعداد خاصی از عناصر آرایه را پردازش کند. آرایه ها با مرجع منتقل می شوند. عناصر آرایه منفرد از نظر مقدار عبور می کنند. توابعی که آرایه ها را به عنوان آرگومان در نظر می گیرند.,Com es passen les matrius a les funcions?,per referència.,"Especifiqueu el nom de la matriu sense claudàtors. Normalment, la mida de la matriu es passa com un argument més, de manera que la funció pot processar el nombre específic d&#39;elements de la matriu. Les matrius es passen per referència. Elements de matriu individuals passats pel valor. Funcions que prenen matrius com a arguments.",Како се низови преносе функцијама?,по референци.,"Наведите име низа без заграда. Величина низа се обично предаје као други аргумент, тако да функција може обрадити одређени број елемената у низу. Низови се преносе референцом. Појединачни елементи низа прослеђени вредношћу. Функције које узимају низове као аргументе.",Bagaimana array diteruskan ke fungsi?,dengan referensi.,Tentukan nama array tanpa tanda kurung. Ukuran array biasanya dikirimkan sebagai argumen lain sehingga fungsi tersebut dapat memproses jumlah elemen tertentu dalam array. Array dilewatkan dengan referensi. Elemen array individu yang diteruskan oleh nilai Fungsi yang menjadikan array sebagai argumen.,Hvordan overføres matriser til funksjoner?,som referanse.,"Spesifiser matrisenavn uten parentes. Arraystørrelse sendes normalt som et annet argument, slik at funksjonen kan behandle det spesifikke antallet elementer i matrisen. Arrangementer sendes som referanse. Individuelle matriseelementer sendt etter verdi. Funksjoner som tar arrays som argumenter.",배열은 함수에 어떻게 전달됩니까?,참고로.,대괄호없이 배열 이름을 지정하십시오. 배열 크기는 일반적으로 다른 인수로 전달되므로 함수가 배열의 특정 요소 수를 처리 할 수 있습니다. 배열은 참조로 전달됩니다. 값으로 전달 된 개별 배열 요소입니다. 배열을 인수로 취하는 함수.,Kuinka taulukot välitetään funktioille?,viittaamalla.,"Määritä taulukon nimi ilman sulkeita. Taulukon koko välitetään normaalisti toisena argumenttina, joten funktio voi käsitellä tietyn määrän elementtejä taulukossa. Taulukot välitetään viitteenä. Yksittäiset taulukon elementit on välitetty arvon mukaan. Funktiot, jotka ottavat matriiseja argumentteina.",Hogyan adják át a tömbök a függvényeknek?,referencia alapján.,"Adja meg a tömb nevét zárójelek nélkül. A tömb méretét általában másik argumentumként adják át, így a függvény képes feldolgozni a tömb adott elemszámát. A tömböket referenciaként adjuk át. Érték szerint átadott egyes tömb elemek. A tömböket argumentumként használó funkciók.",Jak jsou pole předávána funkcím?,Odkazem.,"Zadejte název pole bez závorek. Velikost pole se obvykle předává jako další argument, takže funkce dokáže zpracovat konkrétní počet prvků v poli. Pole jsou předávána odkazem. Jednotlivé prvky pole předávané hodnotou. Funkce, které berou pole jako argumenty.",Kako se nizovi prenose funkcijama?,putem reference.,"Navedite ime polja bez zagrada. Veličina polja obično se prenosi kao drugi argument, tako da funkcija može obraditi određeni broj elemenata u polju. Nizovi se prosljeđuju referencom. Pojedinačni elementi niza proslijeđeni vrijednošću. Funkcije koje kao argumente uzimaju nizove."
415,415,1601,9.4,"Use a linked list with 2 pointers, one to the front and one to the back. As long as back != front, the queue is not empty.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",How can you implement a queue with a list?,4.5,"Lassen Sie die Rückseite der Warteschlange auf das Ende der verknüpften Liste zeigen, sodass die Warteschlangenoperation am Ende der Liste ausgeführt wird, und halten Sie die Vorderseite der Warteschlange auf den Kopf der verknüpften Liste, damit die Warteschlangenoperation ausgeführt wird am Anfang der Liste.",Wie können Sie eine Warteschlange mit einer Liste implementieren?,"Verwenden Sie eine verknüpfte Liste mit 2 Zeigern, einen nach vorne und einen nach hinten. Solange hinten! = Vorne, ist die Warteschlange nicht leer.",Giunsa nimo ipatuman ang usa ka pila nga adunay lista?,"Ipadayon ang likud sa pila nga nagpunting sa ikog sa nalambigit nga lista, mao nga ang enqueue nga operasyon gihimo sa katapusan sa lista, ug ipadayon ang atubangan sa pila nga nagtudlo sa ulohan sa na-link nga lista, mao nga nahuman ang operasyon sa dequeue sa pagsugod sa lista.","Paggamit us aka nalambigit nga lista nga adunay 2 nga tudlo, usa sa atubangan ug usa sa likud. Basta sa likod! = Atubangan, ang pila wala’y sulod.",Hur kan du implementera en kö med en lista?,"Håll den bakre delen av kön pekande mot svansen på den länkade listan, så enqueue-operationen görs i slutet av listan och håll den främre delen av kön pekande mot huvudet på den länkade listan, så att dequeue-operationen är klar i början av listan.","Använd en länkad lista med två pekare, en fram och en bak. Så länge som tillbaka! = Fram är kön inte tom.",Comment pouvez-vous implémenter une file d&#39;attente avec une liste?,"Gardez l&#39;arrière de la file d&#39;attente pointant vers la fin de la liste liée, de sorte que l&#39;opération de mise en file d&#39;attente soit effectuée à la fin de la liste, et gardez l&#39;avant de la file d&#39;attente pointant vers la tête de la liste liée, de sorte que l&#39;opération de retrait de la file d&#39;attente soit effectuée au début de la liste.","Utilisez une liste chaînée avec 2 pointeurs, un vers l&#39;avant et un vers l&#39;arrière. Tant que back! = Front, la file d&#39;attente n&#39;est pas vide.",Hoe implementeer je een wachtrij met een lijst?,"Houd de achterkant van de wachtrij naar de staart van de gekoppelde lijst, zodat de bewerking voor het in de wachtrij plaatsen aan het einde van de lijst wordt uitgevoerd en laat de voorkant van de wachtrij naar de kop van de gekoppelde lijst wijzen, zodat de bewerking voor het verwijderen van de wachtrij is voltooid aan het begin van de lijst.","Gebruik een gekoppelde lijst met 2 verwijzingen, één naar voren en één naar achteren. Zolang back! = Front is de wachtrij niet leeg.",Как можно реализовать очередь со списком?,"Задняя часть очереди должна указывать на конец связанного списка, чтобы операция постановки в очередь выполнялась в конце списка, а передняя часть очереди должна указывать на начало связанного списка, поэтому операция удаления из очереди выполняется в начале списка.","Используйте связанный список с двумя указателями: один вперед и один назад. Пока back! = Front, очередь не пуста.",Come puoi implementare una coda con un elenco?,"Mantieni la parte posteriore della coda che punta alla coda della lista collegata, quindi l&#39;operazione di accodamento viene eseguita alla fine della lista e mantieni la parte anteriore della coda puntata all&#39;inizio della lista collegata, quindi l&#39;operazione di rimozione dalla coda è fatta all&#39;inizio della lista.","Utilizza un elenco collegato con 2 puntatori, uno in primo piano e uno in fondo. Finché back! = Front, la coda non è vuota.",¿Cómo se puede implementar una cola con una lista?,"Mantenga la parte posterior de la cola apuntando a la cola de la lista vinculada, de modo que la operación de puesta en cola se realice al final de la lista, y mantenga la parte delantera de la cola apuntando al encabezado de la lista vinculada, para que la operación de eliminación de la cola esté lista al principio de la lista.","Utilice una lista vinculada con 2 punteros, uno al frente y otro al final. Siempre que back! = Front, la cola no está vacía.",Jak zaimplementować kolejkę z listą?,"Utrzymuj tył kolejki skierowany na koniec połączonej listy, aby operacja umieszczania w kolejce była wykonywana na końcu listy i utrzymuj przód kolejki skierowany na początek połączonej listy, aby operacja usunięcia z kolejki została zakończona na początku listy.","Użyj połączonej listy z 2 wskazówkami, jedną z przodu i jedną z tyłu. Dopóki back! = Front, kolejka nie jest pusta.",Làm thế nào bạn có thể triển khai một hàng đợi với một danh sách?,"Giữ phần phía sau của hàng đợi trỏ đến phần cuối của danh sách được liên kết, do đó, hoạt động xếp hàng được thực hiện ở cuối danh sách và giữ phần phía trước của hàng đợi trỏ đến phần đầu của danh sách được liên kết, do đó hoạt động xếp hàng được thực hiện ở đầu danh sách.","Sử dụng danh sách liên kết với 2 con trỏ, một ở phía trước và một ở phía sau. Miễn là back! = Front, hàng đợi không trống.",リストを使用してキューを実装するにはどうすればよいですか？,キューの後ろがリンクリストの末尾を指すようにして、エンキュー操作がリストの最後を指すようにし、キューの前をリンクリストの先頭を指すようにして、デキュー操作が行われるようにします。リストの最初に。,前面と背面の2つのポインタを持つリンクリストを使用します。 back！= frontである限り、キューは空ではありません。,如何实现带有列表的队列？,使队列的尾部指向链接列表的末尾，因此入队操作在列表的末尾进行，使队列的前部指向链接列表的头，因此完成出队操作在列表的开头。,使用带有2个指针的链接列表，一个指向前面，一个指向后面。只要back！= front，队列就不会为空。,كيف يمكنك تنفيذ قائمة انتظار مع قائمة؟,احتفظ بالجزء الخلفي من قائمة الانتظار يشير إلى ذيل القائمة المرتبطة ، بحيث تتم عملية قائمة الانتظار في نهاية القائمة ، واحتفظ بمقدمة قائمة الانتظار تشير إلى رأس القائمة المرتبطة ، بحيث تتم عملية إنهاء قائمة الانتظار في بداية القائمة.,استخدم قائمة مرتبطة بمؤشرين ، أحدهما في المقدمة والآخر في الخلف. طالما ظهر! = الأمامي ، فإن قائمة الانتظار ليست فارغة.,Як можна реалізувати чергу зі списком?,"Тримайте задню частину черги, спрямовану на хвіст пов’язаного списку, таким чином, операція чергування виконується в кінці списку, а передня частина черги вказує на голову пов’язаного списку, таким чином, операція скидання виконується на початку списку.","Використовуйте зв’язаний список із 2-ма покажчиками, один на передній і задній. Поки back! = Front, черга не порожня.",Como você pode implementar uma fila com uma lista?,"Mantenha a parte traseira da fila apontando para o final da lista vinculada, para que a operação de enfileiramento seja feita no final da lista, e mantenha a frente da fila apontando para o início da lista vinculada, para que a operação de desenfileiramento seja feita no início da lista.","Use uma lista vinculada com 2 ponteiros, um para a frente e outro para trás. Contanto que back! = Front, a fila não está vazia.",چگونه می توان صف را با لیست پیاده سازی کرد؟,قسمت عقب صف را به سمت انتهای لیست پیوندی نگه دارید ، بنابراین عملیات enqueue در انتهای لیست انجام می شود و قسمت جلوی صف را به سمت سر لیست پیوندی نگه دارید ، بنابراین عملیات حذف نتیجه انجام می شود در ابتدای لیست.,از یک لیست پیوندی با 2 نشانگر ، یکی به جلو و دیگری به عقب استفاده کنید. تا زمانی که به عقب! = جلو ، صف خالی نیست.,Com es pot implementar una cua amb una llista?,"Mantingueu la part posterior de la cua apuntant a la cua de la llista enllaçada, de manera que l&#39;operació de cola es realitzarà al final de la llista i mantingueu la part frontal de la cua apuntant cap al cap de la llista enllaçada, de manera que l&#39;operació de cola es realitzi. al principi de la llista.","Utilitzeu una llista enllaçada amb dos punteres, un al davant i un al darrere. Mentre es torni enrere! = Frontal, la cua no està buida.",Како можете да примените ред са листом?,"Задњи део реда задржите тако да показује на реп повезане листе, тако да се операција чекања обавља на крају листе, а чек ред нека буде усмјерен на главу повезане листе, тако да је операција уклањања редоследа завршена на почетку списка.","Користите повезану листу са 2 показивача, једним напред и једним позади. Све док је бацк! = Фронт, ред није празан.",Bagaimana Anda bisa menerapkan antrian dengan daftar?,"Pertahankan bagian belakang antrian mengarah ke bagian belakang daftar tertaut, sehingga operasi antrean dilakukan di akhir daftar, dan pertahankan bagian depan antrean mengarah ke kepala daftar tertaut, sehingga operasi dequeue selesai di awal daftar.","Gunakan daftar terkait dengan 2 penunjuk, satu ke depan dan satu ke belakang. Asalkan back! = Depan, antriannya tidak kosong.",Hvordan kan du implementere en kø med en liste?,"Hold baksiden av køen pekende mot halen på den koblede listen, slik at enqueue-operasjonen gjøres på slutten av listen, og hold forsiden av køen pekende mot hodet til den koblede listen, slik at dequeue-operasjonen er ferdig i begynnelsen av listen.","Bruk en koblet liste med to pekere, en foran og en bak. Så lenge bak! = Foran, er køen ikke tom.",목록이있는 대기열을 어떻게 구현할 수 있습니까?,대기열의 뒤쪽이 연결된 목록의 끝을 가리 키도록 유지하여 대기열에 넣기 작업이 목록의 끝에서 수행되도록하고 대기열의 앞쪽이 연결된 목록의 머리를 가리 키도록 유지하여 대기열에서 빼기 작업이 수행되도록합니다. 목록의 시작 부분에.,"2 개의 포인터가있는 연결 목록을 사용하십시오. 하나는 앞쪽, 다른 하나는 뒤쪽입니다. back! = front 인 한 큐는 비어 있지 않습니다.",Kuinka voit toteuttaa jonon luettelon kanssa?,"Pidä jonon takaosaa linkitetyn luettelon hännään päin, jotta enqueue-toiminto tehdään luettelon lopussa, ja pidä jonon etu osoittavan linkitetyn luettelon päähän, joten purkotoiminto on valmis luettelon alussa.","Käytä linkitettyä luetteloa, jossa on 2 osoitinta, yksi eteen ja toinen taakse. Niin kauan kuin takana! = Edessä, jono ei ole tyhjä.",Hogyan lehet megvalósítani a listát tartalmazó várólistát?,"Tartsa a sor hátulját a csatolt lista farka felé mutatva, így az enqueue műveletet a lista végén hajtja végre, és a sor elejét tartsa a linkelt lista fejére mutatva, így a dequeue művelet megtörténik a lista elején.","Használjon összekapcsolt listát 2 mutatóval, egyet előre és egyet hátul. Amíg hátul! = Elöl, a sor nem üres.",Jak můžete implementovat frontu se seznamem?,"Udržujte zadní část fronty směřující na konec propojeného seznamu, aby se operace zařazení do fronty prováděla na konci seznamu, a udržujte přední část fronty směřující k hlavě propojeného seznamu, aby se operace zrušení fronty prováděla na začátku seznamu.","Použijte propojený seznam se 2 ukazateli, jedním vpředu a druhým vzadu. Pokud je zpět! = Front, fronta není prázdná.",Kako možete implementirati red sa popisom?,"Zadnji dio reda neka bude usmjeren na rep povezane liste, tako da se operacija čekanja vrši na kraju popisa, a prednji dio reda mora biti usmjeren na glavu povezane liste, tako da je izvršena operacija uklanjanja reda na početku liste.","Koristite povezanu listu s 2 pokazivača, jednim naprijed i jednim natrag. Sve dok je back! = Front, red nije prazan."
416,416,1281,7.6,each node points to both its predecessor and its successor.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Jeder Knoten zeigt sowohl auf seinen Vorgänger als auch auf seinen Nachfolger.,Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",ang matag node nagpunting sa pareho ug gisundan niini.,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",varje nod pekar på både sin föregångare och dess efterträdare.,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",chaque nœud pointe à la fois vers son prédécesseur et son successeur.,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",elk knooppunt verwijst naar zowel zijn voorganger als zijn opvolger.,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.","каждый узел указывает как на своего предшественника, так и на его преемника.",Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",ogni nodo punta sia al suo predecessore che al suo successore.,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",cada nodo apunta tanto a su predecesor como a su sucesor.,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.","każdy węzeł wskazuje zarówno na swojego poprzednika, jak i następcę.",Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",mỗi nút trỏ đến cả nút tiền nhiệm và nút kế nhiệm của nó.,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,各ノードは、その先行ノードと後続ノードの両方を指します。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,每个节点都指向其前任和后继。,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,تشير كل عقدة إلى سابقتها وخليفتها.,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.","кожен вузол вказує як на свого попередника, так і на наступника.",Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",cada nó aponta para seu predecessor e seu sucessor.,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,هر گره هم به سلف خود و هم به جانشین خود اشاره می کند.,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",cada node apunta tant al seu predecessor com al seu successor.,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",сваки чвор указује и на свог претходника и на свог наследника.,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",setiap node menunjuk ke pendahulunya dan penggantinya.,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",hver node peker mot både forgjengeren og etterfølgeren.,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,각 노드는 이전 노드와 후속 노드를 모두 가리 킵니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",kukin solmu osoittaa sekä edeltäjäänsä että seuraajaansa.,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.",minden csomópont elődjére és utódjára egyaránt mutat.,Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.",každý uzel ukazuje na svého předchůdce i jeho následníka.,Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",svaki čvor pokazuje i na svog prethodnika i na svog nasljednika.
417,417,2396,12.9,delete node;,"Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,1.5,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,Knoten löschen;,Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).",tangtangon ang node;,Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,radera knutpunkt;,Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).",supprimer le nœud;,Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,verwijder knooppunt;,Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).",удалить узел;,Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).",elimina nodo;,¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).",Eliminar nodo;,Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).",Usuń węzeł;,Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).",xóa nút;,二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,ノードを削除します。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,删除节点;,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,حذف العقدة,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).",видалити вузол;,Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,excluir nó;,چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,حذف گره؛,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).",eliminar node;,Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).",брисање чвора;,Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).",hapus node;,Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).",Slett node;,이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,노드 삭제;,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,poista solmu;,Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).",csomópont törlése;,Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,odstranit uzel;,Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).",brisanje čvora;
418,418,1231,7.4,"linked lists are passed by reference, specificly the Head pointer",By reference.,How are linked lists passed as arguments to a function?,5.0,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,"Verknüpfte Listen werden als Referenz übergeben, insbesondere als Kopfzeiger",Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,"ang mga nalista nga lista gipasa pinaagi sa pakisayran, nga piho nga ang Pointer sa ulo",Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,"länkade listor skickas genom referens, särskilt huvudpekaren",Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,"les listes liées sont passées par référence, en particulier le pointeur Head",Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,"gekoppelde lijsten worden doorgegeven door middel van verwijzing, met name de Head-pointer",Как связанные списки передаются в качестве аргументов функции?,По ссылке.,"связанные списки передаются по ссылке, в частности, указатель Head",Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,"gli elenchi collegati vengono passati per riferimento, in particolare il puntatore Head",¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,"las listas enlazadas se pasan por referencia, específicamente el puntero Head",W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,"listy połączone są przekazywane przez odwołanie, a konkretnie przez wskaźnik Head",Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,"danh sách liên kết được chuyển bằng tham chiếu, cụ thể là con trỏ Head",リンクリストはどのように引数として関数に渡されますか？,参照による。,リンクリストは参照によって渡されます。具体的には、ヘッドポインタです。,链表如何作为参数传递给函数？,引用。,链接列表通过引用传递，特别是Head指针,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,يتم تمرير القوائم المرتبطة عن طريق المرجع ، وتحديدًا مؤشر الرأس,Як зв’язані списки передаються як аргументи функції?,За посиланням.,"зв’язані списки передаються за посиланням, зокрема за покажчиком Head",Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,"listas vinculadas são passadas por referência, especificamente o ponteiro Head",چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,لیست های پیوند داده شده توسط مرجع ، به طور خاص نشانگر Head منتقل می شوند,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,"les llistes enllaçades es passen per referència, concretament el punter Head",Како се повезане листе прослеђују као аргументи функцији?,По референци.,"повезане листе се прослеђују референцом, тачније показивачем Хеад",Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,"daftar tertaut diteruskan dengan referensi, khususnya penunjuk Kepala",Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,"lenkede lister sendes ved referanse, nærmere bestemt hodepekeren",연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,"연결 목록은 참조, 특히 Head 포인터로 전달됩니다.",Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,"linkitetyt luettelot välitetään viitteenä, erityisesti Head pointer",Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,"az összekapcsolt listákat hivatkozás útján adjuk át, konkrétan a Head pointert",Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,"propojené seznamy jsou předávány odkazem, konkrétně ukazatelem Head",Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,"povezane liste se prosljeđuju referencom, posebno pokazivačem glave"
419,419,1145,7.1,"A linked list is a data structure that is not necessarily in the same contiguous memory space (such as arrays). It holds the data type and points to the next data item in the list, or in a doubly linked list also to the previous item.",A collection of elements that can be allocated dynamically.,What is a linked list?,5.0,"Eine Sammlung von Elementen, die dynamisch zugewiesen werden können.",Was ist eine verknüpfte Liste?,"Eine verknüpfte Liste ist eine Datenstruktur, die sich nicht unbedingt im selben zusammenhängenden Speicherbereich befindet (z. B. Arrays). Es enthält den Datentyp und zeigt auf das nächste Datenelement in der Liste oder in einer doppelt verknüpften Liste auch auf das vorherige Element.",Unsa ang usa ka nalakip nga lista?,Usa ka koleksyon sa mga elemento nga mahimong gigahin nga dinamiko.,"Ang usa ka nalambigit nga lista usa ka istraktura sa datos nga dili kinahanglan nga parehas sa magkadugtong nga wanang sa panumduman (sama sa mga array). Gihuptan niini ang tipo sa datos ug gipunting ang sunod nga item sa datos sa lista, o sa doble nga nalambigit nga lista usab sa naunang butang.",Vad är en länkad lista?,En samling element som kan tilldelas dynamiskt.,"En länkad lista är en datastruktur som inte nödvändigtvis finns i samma angränsande minnesutrymme (såsom matriser). Den innehåller datatypen och pekar på nästa datapost i listan, eller i en dubbelt länkad lista också till föregående objekt.",Qu&#39;est-ce qu&#39;une liste chaînée?,Une collection d&#39;éléments qui peuvent être alloués dynamiquement.,"Une liste chaînée est une structure de données qui ne se trouve pas nécessairement dans le même espace mémoire contigu (tel que des tableaux). Il contient le type de données et pointe vers l&#39;élément de données suivant dans la liste, ou dans une liste doublement liée également vers l&#39;élément précédent.",Wat is een gekoppelde lijst?,Een verzameling elementen die dynamisch kunnen worden toegewezen.,"Een gekoppelde lijst is een gegevensstructuur die niet noodzakelijk in dezelfde aaneengesloten geheugenruimte is (zoals arrays). Het bevat het datatype en verwijst naar het volgende data-item in de lijst, of in een dubbel gelinkte lijst ook naar het vorige item.",Что такое связанный список?,"Коллекция элементов, которые можно размещать динамически.","Связанный список - это структура данных, которая не обязательно находится в одном и том же непрерывном пространстве памяти (например, в массивах). Он содержит тип данных и указывает на следующий элемент данных в списке или в двусвязном списке также на предыдущий элемент.",Cos&#39;è un elenco collegato?,Una raccolta di elementi che possono essere allocati dinamicamente.,"Un elenco collegato è una struttura di dati che non si trova necessariamente nello stesso spazio di memoria contiguo (come gli array). Contiene il tipo di dati e punta all&#39;elemento di dati successivo nell&#39;elenco, o in un elenco doppiamente collegato anche all&#39;elemento precedente.",¿Qué es una lista vinculada?,Una colección de elementos que se pueden asignar dinámicamente.,"Una lista vinculada es una estructura de datos que no se encuentra necesariamente en el mismo espacio de memoria contiguo (como matrices). Contiene el tipo de datos y apunta al siguiente elemento de datos de la lista, o en una lista doblemente vinculada también al elemento anterior.",Co to jest lista połączona?,"Zbiór elementów, które mogą być przydzielane dynamicznie.","Lista połączona to struktura danych, która niekoniecznie znajduje się w tym samym ciągłym obszarze pamięci (na przykład tablice). Przechowuje typ danych i wskazuje następny element danych na liście lub na liście podwójnie połączonej również do poprzedniego elementu.",Danh sách liên kết là gì?,Một tập hợp các phần tử có thể được cấp phát động.,Danh sách liên kết là một cấu trúc dữ liệu không nhất thiết phải nằm trong cùng một không gian bộ nhớ liền kề (chẳng hạn như mảng). Nó giữ kiểu dữ liệu và trỏ đến mục dữ liệu tiếp theo trong danh sách hoặc trong một danh sách được liên kết kép cũng với mục trước đó.,リンクリストとは何ですか？,動的に割り当てることができる要素のコレクション。,リンクリストは、必ずしも同じ連続したメモリ空間（配列など）にあるとは限らないデータ構造です。データ型を保持し、リスト内の次のデータアイテム、または前のアイテムにも二重にリンクされたリストを指します。,什么是链表？,可以动态分配的元素的集合。,链表是一种数据结构，它不一定位于相同的连续内存空间（例如数组）中。它保存数据类型并指向列表中的下一个数据项，或者在双向链接的列表中也指向前一个数据项。,ما هي القائمة المرتبطة؟,مجموعة من العناصر التي يمكن تخصيصها ديناميكيًا.,القائمة المرتبطة هي بنية بيانات ليست بالضرورة في نفس مساحة الذاكرة المتجاورة (مثل المصفوفات). إنه يحمل نوع البيانات ويشير إلى عنصر البيانات التالي في القائمة ، أو في قائمة مرتبطة بشكل مضاعف أيضًا بالعنصر السابق.,Що таке пов&#39;язаний список?,"Колекція елементів, які можна динамічно розподіляти.","Зв’язаний список - це структура даних, яка не обов’язково знаходиться в одному суміжному просторі пам’яті (наприклад, масиви). Він містить тип даних і вказує на наступний елемент даних у списку або в подвійно зв’язаному списку також на попередній елемент.",O que é uma lista vinculada?,Uma coleção de elementos que podem ser alocados dinamicamente.,Uma lista vinculada é uma estrutura de dados que não está necessariamente no mesmo espaço de memória contíguo (como matrizes). Ele contém o tipo de dados e aponta para o próximo item de dados na lista ou em uma lista duplamente vinculada também para o item anterior.,لیست پیوندی چیست؟,مجموعه ای از عناصر است که می تواند به صورت پویا اختصاص داده شود.,لیست پیوندی یک ساختار داده است که لزوماً در همان فضای حافظه مجاور نیست (مانند آرایه ها). این نوع داده را نگه می دارد و به مورد داده بعدی در لیست یا در یک لیست پیوند یافته دو برابر با مورد قبلی اشاره می کند.,Què és una llista enllaçada?,Una col·lecció d’elements que es poden assignar dinàmicament.,"Una llista enllaçada és una estructura de dades que no necessàriament es troba al mateix espai de memòria contigu (com ara matrius). Conté el tipus de dades i apunta al següent element de dades de la llista, o en una llista doblement enllaçada també a l&#39;element anterior.",Шта је повезана листа?,Колекција елемената који се могу динамички доделити.,Повезана листа је структура података која није нужно у истом непрекидном меморијском простору (као што су низови). Садржи тип података и показује на следећу ставку података на листи или на двоструко повезаној листи такође на претходну ставку.,Apa itu daftar tertaut?,Kumpulan elemen yang dapat dialokasikan secara dinamis.,"Daftar tertaut adalah struktur data yang tidak harus berada dalam ruang memori berdekatan yang sama (seperti array). Ini memegang tipe data dan menunjuk ke item data berikutnya dalam daftar, atau dalam daftar tertaut ganda juga ke item sebelumnya.",Hva er en koblet liste?,En samling av elementer som kan tildeles dynamisk.,"En koblet liste er en datastruktur som ikke nødvendigvis har samme sammenhengende hukommelsesrom (for eksempel matriser). Den inneholder datatypen og peker på neste dataelement i listen, eller i en dobbeltkoblet liste også til forrige element.",연결 목록이란 무엇입니까?,동적으로 할당 할 수있는 요소 모음입니다.,연결 목록은 동일한 연속 메모리 공간 (예 : 배열)에 반드시 있어야하는 것은 아닌 데이터 구조입니다. 데이터 유형을 보유하고 목록의 다음 데이터 항목을 가리 키거나 이중 연결 목록에서 이전 항목을 가리 킵니다.,Mikä on linkitetty luettelo?,"Kokoelma elementtejä, jotka voidaan allokoida dynaamisesti.","Linkitetty luettelo on tietorakenne, joka ei välttämättä ole samassa vierekkäisessä muistitilassa (kuten taulukot). Se pitää tietotyypin ja osoittaa luettelon seuraavaan tietokohteeseen tai kaksoislinkitetyssä luettelossa myös edelliseen kohteeseen.",Mi a linkelt lista?,Dinamikusan lefoglalható elemek gyűjteménye.,"A csatolt lista olyan adatstruktúra, amely nem feltétlenül ugyanazon az összefüggő memóriaterületen van (például tömbök). Tartja az adattípust, és rámutat a lista következő adattételére, vagy egy kétszeresen összekapcsolt listában az előző elemre is.",Co je to propojený seznam?,"Kolekce prvků, které lze dynamicky přidělit.","Propojený seznam je datová struktura, která nemusí být nutně ve stejném souvislém paměťovém prostoru (například pole). Obsahuje datový typ a ukazuje na další datovou položku v seznamu nebo v dvojnásobně propojeném seznamu také na předchozí položku.",Šta je povezana lista?,Zbirka elemenata koji se mogu dinamički dodijeliti.,Povezana lista je struktura podataka koja nije nužno u istom susjednom memorijskom prostoru (kao što su nizovi). Sadrži tip podataka i usmjerava na sljedeću stavku podataka na popisu ili na dvostruko povezanoj listi također na prethodnu stavku.
420,420,1359,8.2,"push and pop, push puts an object into the list, and pop takes the last object off.",push and pop,What are the two main functions defined by a stack?,5.0,Push and Pop,"Was sind die beiden Hauptfunktionen, die ein Stapel definiert?","push and pop, push fügt ein Objekt in die Liste ein und pop nimmt das letzte Objekt ab.",Unsa ang duha ka punoan nga gimbuhaton nga gihubit sa usa ka stack?,iduso ug pop,"pagduso ug pop, pagduso gibutang ang usa ka butang sa lista, ug pop gikuha ang katapusang butang.",Vilka är de två huvudfunktionerna som definieras av en stack?,tryck och knäpp,"push och pop, push sätter ett objekt i listan och pop tar bort det sista objektet.",Quelles sont les deux fonctions principales définies par une pile?,pousser et pop,"push and pop, push met un objet dans la liste et pop enlève le dernier objet.",Wat zijn de twee belangrijkste functies die door een stapel worden gedefinieerd?,duwen en knallen,"push en pop, push plaatst een object in de lijst en pop haalt het laatste object eraf.",Какие две основные функции определяет стек?,толкать и хлопать,"push и pop, push помещает объект в список, а pop удаляет последний объект.",Quali sono le due funzioni principali definite da uno stack?,spingere e pop,"push e pop, push inserisce un oggetto nell&#39;elenco e pop rimuove l&#39;ultimo oggetto.",¿Cuáles son las dos funciones principales definidas por una pila?,empujar y hacer estallar,"push and pop, push pone un objeto en la lista y pop quita el último objeto.",Jakie są dwie główne funkcje zdefiniowane przez stos?,push i pop,"push and pop, push umieszcza obiekt na liście, a pop usuwa ostatni obiekt.",Hai chức năng chính được xác định bởi một ngăn xếp là gì?,đẩy và bật,"push và pop, push đưa một đối tượng vào danh sách và pop đưa đối tượng cuối cùng ra ngoài.",スタックによって定義される2つの主な機能は何ですか？,プッシュアンドポップ,pushとpop、pushはオブジェクトをリストに入れ、popは最後のオブジェクトを削除します。,堆栈定义的两个主要功能是什么？,推和弹出,push和pop，push将对象放入列表，而pop将最后一个对象取走。,ما هي الوظيفتان الرئيسيتان المحددتان بواسطة المكدس؟,ادفع وبوب,اضغط وفرقع ، اضغط على وضع كائن في القائمة ، والبوب يزيل الكائن الأخير.,Які дві основні функції визначає стек?,натискання та поп,"push та поп, push вводить об’єкт у список, а поп знімає останній об’єкт.",Quais são as duas funções principais definidas por uma pilha?,empurre e estale,"push e pop, push coloca um objeto na lista e pop remove o último objeto.",دو عملکرد اصلی که توسط پشته تعریف می شوند چیست؟,فشار و پاپ,فشار و پاپ ، فشار یک شی را در لیست قرار می دهد و پاپ آخرین شی را خاموش می کند.,Quines són les dues funcions principals definides per una pila?,empenta i esclata,"push i pop, push posa un objecte a la llista i pop treu l’últim objecte.",Које су две главне функције дефинисане стеком?,гурај и пуцај,"пусх и поп, пусх ставља објекат на листу, а поп уклања последњи објекат.",Apa dua fungsi utama yang ditentukan oleh tumpukan?,push dan pop,"push dan pop, push memasukkan objek ke dalam daftar, dan pop mengeluarkan objek terakhir.",Hva er de to hovedfunksjonene definert av en stabel?,push og pop,"push og pop, push setter et objekt inn i listen, og pop tar det siste objektet av.",스택에 의해 정의되는 두 가지 주요 기능은 무엇입니까?,밀고 팝,"push 및 pop, push는 개체를 목록에 넣고 pop은 마지막 개체를 제거합니다.",Mitkä ovat pinon kaksi päätoimintoa?,työnnä ja pop,"push and pop, push laittaa objektin luetteloon ja pop vie viimeisen objektin pois.",Mi a verem által definiált két fő funkció?,nyomja és pattog,"push and pop, a push egy objektumot vesz fel a listára, a pop pedig leveszi az utolsó objektumot.",Jaké jsou dvě hlavní funkce definované zásobníkem?,push a pop,"push a pop, push vloží objekt do seznamu a pop vypne poslední objekt.",Koje su dvije glavne funkcije definirane stogom?,guraj i pucaj,"push i pop, push stavlja objekt na listu, a pop uklanja posljednji objekt."
421,421,1428,8.5,list-based because it does not use a fixed size like an array would.,"Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred, and why?",5.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird bevorzugt und warum?,"Listenbasiert, da keine feste Größe wie bei einem Array verwendet wird.","Kinsa nga pagpatuman (gipasukad sa array vs. list-based) ang gipalabi, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)",nakabase sa lista tungod kay dili kini naggamit usa ka pirmi nga gidak-on sama sa usa ka laraw.,"Vilket genomförande (array-baserat kontra listbaserat) är att föredra, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),listbaserad eftersom den inte använder en fast storlek som en matris skulle göra.,Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée et pourquoi?,"Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)",basé sur une liste car il n&#39;utilise pas une taille fixe comme le ferait un tableau.,"Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)",lijst-gebaseerd omdat het geen vaste grootte gebruikt zoals een array zou doen.,Какая реализация (на основе массива или на основе списка) предпочтительна и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","на основе списка, поскольку он не использует фиксированный размер, как массив.",Quale implementazione (basata su array o basata su elenchi) è preferita e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)",basato su elenco perché non utilizza una dimensione fissa come farebbe un array.,¿Qué implementación (basada en matrices o basada en listas) se prefiere y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)",basado en listas porque no usa un tamaño fijo como lo haría una matriz.,Która implementacja (oparta na tablicach czy oparta na liście) jest preferowana i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","oparta na liście, ponieważ nie używa stałego rozmiaru, jak w przypadku tablicy.",Triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên hơn và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)",dựa trên danh sách bởi vì nó không sử dụng kích thước cố định như một mảng.,どの実装（配列ベースとリストベース）が推奨されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,配列のように固定サイズを使用しないため、リストベース。,首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,基于列表的，因为它不像数组那样使用固定大小。,ما هو التطبيق المفضل (المستندة إلى المصفوفة مقابل القائمة) ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),قائم على القائمة لأنه لا يستخدم حجمًا ثابتًا مثل المصفوفة.,"Яка реалізація (на основі масивів проти списку) є кращою, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","на основі списку, оскільки він не використовує фіксованого розміру, як масив.",Qual implementação (baseada em matriz vs. baseada em lista) é preferida e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)",baseado em lista porque não usa um tamanho fixo como um array faria.,کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) ترجیح داده می شود ، و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),مبتنی بر لیست زیرا از اندازه ثابت مانند آرایه استفاده نمی کند.,Quina implementació (basada en matriu vs. basada en llistes) es prefereix i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)",basat en llista perquè no utilitza una mida fixa com ho faria una matriu.,Која имплементација (заснована на низу у односу на листу) је пожељнија и зашто?,"На основу везе, јер су динамични (без ограничења величине)",заснован на листи јер не користи фиксну величину као што би то био низ.,"Implementasi mana (berbasis larik vs. berbasis daftar) yang lebih disukai, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)",berbasis daftar karena tidak menggunakan ukuran tetap seperti yang dilakukan array.,"Hvilken implementering (arraybasert vs. listebasert) foretrekkes, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)",listebasert fordi den ikke bruker en fast størrelse som en matrise ville gjort.,어떤 구현 (배열 기반 vs. 목록 기반)이 선호되며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",배열처럼 고정 된 크기를 사용하지 않기 때문에 목록 기반입니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","luettelopohjainen, koska se ei käytä kiinteää kokoa kuten matriisi.","Melyik megvalósítást (tömb alapú vagy lista alapú) részesítik előnyben, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","lista alapú, mert nem használ fix méretű méretet, mint egy tömb.",Která implementace (založená na poli vs. založená na seznamu) je upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","na základě seznamu, protože nepoužívá pevnou velikost, jako by to mělo pole.",Koja je implementacija (zasnovana na nizu u odnosu na listu) poželjna i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)",zasnovan na listi jer ne koristi fiksnu veličinu kao što bi to bio niz.
422,422,1624,9.5,"List-based, because when you enqueue (or dequeue depending upon your implementation) you would need to shift all elements to another space with an array, causing a horrid time complexity for large data sets, where as you can just modify the pointers in a list for a constant time complexity","Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred for a queue, and why?",4.5,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird für eine Warteschlange bevorzugt und warum?,"Listenbasiert, da Sie beim Einreihen in die Warteschlange (oder je nach Implementierung aus der Warteschlange) alle Elemente mit einem Array in einen anderen Bereich verschieben müssten, was bei großen Datenmengen zu einer schrecklichen Zeitkomplexität führt, bei der Sie einfach die Zeiger in a ändern können Liste für eine konstante zeitliche Komplexität","Kinsa nga pagpatuman (nakabase sa laraw kumpara sa lista) ang gipili alang sa usa ka pila, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)","Gibase sa lista, tungod kay kung mag-enqueue (o mag-dequeue depende sa imong pagpatuman) kinahanglan nimo ibalhin ang tanan nga mga elemento sa lain nga wanang nga adunay usa ka laray, hinungdan sa usa ka makahadlok nga pagkakumplikado sa oras alang sa daghang mga set sa datos, diin mahimo nimo nga mausab ang mga tudlo sa usa ka lista alang sa kanunay nga pagkakumplikado sa oras","Vilken implementering (arraybaserad kontra listbaserad) är att föredra för en kö, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),"Listbaserad, för när du tar enqueue (eller dequeue beroende på din implementering) skulle du behöva flytta alla element till ett annat utrymme med en array, vilket orsakar en hemsk tidskomplexitet för stora datamängder, där du bara kan ändra pekarna i en lista för en konstant tidskomplexitet","Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée pour une file d&#39;attente, et pourquoi?","Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)","Basé sur une liste, car lorsque vous mettez en file d&#39;attente (ou retirez la file en fonction de votre implémentation), vous devez déplacer tous les éléments vers un autre espace avec un tableau, ce qui entraîne une complexité temporelle horrible pour les grands ensembles de données, où, comme vous pouvez simplement modifier les pointeurs dans un liste pour une complexité temporelle constante","Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur voor een wachtrij, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)","Lijstgebaseerd, omdat wanneer u in de wachtrij plaatst (of de wachtrij verwijdert, afhankelijk van uw implementatie), u alle elementen naar een andere ruimte met een array zou moeten verplaatsen, wat een vreselijke tijdcomplexiteit veroorzaakt voor grote gegevenssets, waar u de pointers in een lijst voor een constante tijdcomplexiteit",Какая реализация (на основе массива или на основе списка) предпочтительнее для очереди и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","На основе списка, потому что, когда вы ставите в очередь (или удаляете из очереди в зависимости от вашей реализации), вам нужно будет переместить все элементы в другое пространство с массивом, что вызовет ужасную временную сложность для больших наборов данных, где вы можете просто изменить указатели в список для постоянной временной сложности",Quale implementazione (basata su array o basata su elenco) è preferita per una coda e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)","Basato su elenco, perché quando si accoda (o si rimuove dalla coda in base alla propria implementazione) è necessario spostare tutti gli elementi in un altro spazio con un array, causando un&#39;orribile complessità temporale per grandi set di dati, dove come si può semplicemente modificare i puntatori in lista per una complessità temporale costante",¿Qué implementación (basada en matrices o basada en listas) se prefiere para una cola y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)","Basado en listas, porque cuando pone en cola (o retira de la cola dependiendo de su implementación) necesitaría cambiar todos los elementos a otro espacio con una matriz, lo que genera una complejidad de tiempo horrible para conjuntos de datos grandes, mientras que puede modificar los punteros en un lista para una complejidad de tiempo constante",Która implementacja (oparta na tablicy czy oparta na liście) jest preferowana dla kolejki i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","Oparty na liście, ponieważ podczas kolejkowania (lub usuwania z kolejki w zależności od implementacji) musiałbyś przenieść wszystkie elementy do innej przestrzeni z tablicą, powodując okropną złożoność czasową dla dużych zestawów danych, gdzie możesz po prostu zmodyfikować wskaźniki w lista dla stałej złożoności czasowej",Việc triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên cho hàng đợi và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)","Dựa trên danh sách, bởi vì khi bạn xếp hàng (hoặc xếp hàng tùy thuộc vào việc triển khai của bạn), bạn sẽ cần phải chuyển tất cả các phần tử sang không gian khác với một mảng, gây ra sự phức tạp về thời gian kinh khủng cho các tập dữ liệu lớn, nơi bạn có thể chỉ cần sửa đổi các con trỏ danh sách phức tạp về thời gian không đổi",キューにはどの実装（配列ベースとリストベース）が優先されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リストベース。エンキュー（または実装によってはデキュー）するときに、すべての要素を配列のある別のスペースにシフトする必要があるため、大規模なデータセットでは時間計算量が非常に複雑になりますが、一定の時間計算量のリスト,队列首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,基于列表，因为当您排入队列（或根据实现而出队）时，您将需要使用数组将所有元素移到另一个空间，这会导致大型数据集的时间复杂化，因为您可以在其中修改指针恒定时间复杂度列表,ما هو التنفيذ المفضل لقائمة الانتظار ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),قائم على القائمة ، لأنه عندما تقوم بإدراج (أو إلغاء ترتيب حسب التنفيذ الخاص بك) ، ستحتاج إلى نقل جميع العناصر إلى مساحة أخرى باستخدام مصفوفة ، مما يتسبب في تعقيد زمني رهيب لمجموعات البيانات الكبيرة ، حيث يمكنك تعديل المؤشرات في قائمة التعقيد الزمني المستمر,"Яка реалізація (на основі масиву проти списку) є кращою для черги, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","На основі списку, тому що, коли ви ставите в чергу (або виводите з черги, залежно від вашої реалізації), вам потрібно буде перенести всі елементи в інший простір за допомогою масиву, викликаючи жахливу складність часу для великих наборів даних, де, як ви можете просто змінити вказівники в список для постійної складності часу",Qual implementação (baseada em matriz vs. baseada em lista) é preferida para uma fila e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)","Baseado em lista, porque quando você enfileira (ou retira da fila, dependendo de sua implementação), você precisaria mudar todos os elementos para outro espaço com uma matriz, causando uma complexidade de tempo horrível para grandes conjuntos de dados, onde você pode apenas modificar os ponteiros em um lista para uma complexidade de tempo constante",کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) برای یک صف ترجیح داده می شود و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),مبتنی بر لیست ، زیرا هنگام پیاده سازی (بسته به پیاده سازی خود حذف) باید تمام عناصر را با یک آرایه به فضای دیگری منتقل کنید و باعث ایجاد پیچیدگی زمانی وحشتناک در مجموعه داده های بزرگ شود ، زیرا در اینجا فقط می توانید نشانگرها را در یک برای پیچیدگی زمانی ثابت لیست کنید,Quina implementació (basada en matriu vs. basada en llista) es prefereix per a una cua i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)","Basat en llistes, perquè quan feu una cua (o desqueu depenent de la implementació), haureu de canviar tots els elements a un altre espai amb una matriu, provocant una horrible complexitat horària per a conjunts de dades grans, on només podeu modificar els indicadors en un llista per a una complexitat temporal constant",Која имплементација (заснована на низу на основу листе) је пожељна за ред и зашто?,"На основу везе, јер су динамични (без ограничења величине)","Заснован на листи, јер када ставите у ред (или избаците из њега у зависности од ваше имплементације), требали бисте да преместите све елементе у други простор с низом, што узрокује ужасну временску сложеност за велике скупове података, где, као што можете само модификовати показиваче у списак за сталну временску сложеност","Implementasi mana (berbasis array vs. berbasis daftar) yang lebih disukai untuk antrian, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)","Berbasis daftar, karena ketika Anda mengantrekan (atau dequeue tergantung pada implementasi Anda), Anda perlu menggeser semua elemen ke ruang lain dengan larik, menyebabkan kompleksitas waktu yang mengerikan untuk kumpulan data yang besar, di mana Anda hanya dapat memodifikasi penunjuk dalam daftar untuk kompleksitas waktu yang konstan","Hvilken implementering (arraybasert vs. listebasert) foretrekkes for en kø, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)","Listebasert, for når du innhenter (eller avhenger avhengig av implementering), må du flytte alle elementene til et annet rom med en matrise, noe som forårsaker en fryktelig tidskompleksitet for store datasett, der du bare kan endre pekerne i en liste for en konstant tidskompleksitet",대기열에 대해 선호되는 구현 (배열 기반 대 목록 기반)은 무엇이며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",목록 기반 : 대기열에 추가 (또는 구현에 따라 대기열에서 제외) 할 때 배열이있는 다른 공간으로 모든 요소를 이동해야하므로 큰 데이터 세트에 대해 끔찍한 시간 복잡성이 발생합니다. 일정한 시간 복잡도 목록,Mikä toteutus (taulukko- tai luettelopohjainen) on jonossa suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","Luettelopohjainen, koska kun kiinnität (tai purat käyttötarkoituksesta riippuen), sinun on siirrettävä kaikki elementit toiseen tilaan taulukon kanssa, mikä aiheuttaa kauheaa ajan monimutkaisuutta suurille tietojoukoille, missä voit vain muokata osoittimia luettelo jatkuvan monimutkaisuuden vuoksi","Melyik implementációt (tömb alapú vagy lista alapú) részesítik előnyben a sorban, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","Lista alapú, mert amikor létrehozza (vagy a megvalósítástól függően dequeue), akkor minden elemet át kell helyeznie egy tömböt egy másik térbe, ami borzalmas időbonyolultságot okoz a nagy adathalmazok számára, ahol csak módosíthatja a mutatókat egy felsorolja az állandó időbonyolultságot",Která implementace (založená na poli vs. založená na seznamu) je pro frontu upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","List-based, because when you enqueue (or dequeue depending on your implementation) you would need to shift all elements to another space with an array, allowing a desble time complexity for large data sets, where as you can just modify the pointers in a seznam pro konstantní časovou složitost",Koja je implementacija (zasnovana na nizu ili na bazi popisa) poželjna za red i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)","Bazirano na listi, jer kada stavite u red (ili izbacite iz reda u zavisnosti od vaše implementacije), trebali biste premjestiti sve elemente u drugi prostor s nizom, što uzrokuje užasnu vremensku složenost za velike skupove podataka, gdje, kao što možete samo mijenjati pokazivače u lista za stalnu vremensku složenost"
423,423,2219,12.3,"log(log n), n^2, n^3, 2^(log n), n!",log(log n);  2^(log n) ; n^2 ; n^3; n!,Order the following functions by their running time: n^2; log(log n) ; 2^(log n) ; n! ; n^3.,4.0,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,Ordnen Sie die folgenden Funktionen nach ihrer Laufzeit: n ^ 2; log (log n); 2 ^ (log n); n! ;; n ^ 3.,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Pag-order sa mga mosunud nga pag-andar pinaagi sa ilang oras sa pagdagan: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Beställ följande funktioner efter deras körtid: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Classez les fonctions suivantes en fonction de leur durée de fonctionnement: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Sorteer de volgende functies op basis van hun looptijd: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Отсортируйте следующие функции по времени выполнения: n ^ 2; журнал (журнал n); 2 ^ (журнал п); п! ; п ^ 3.,журнал (журнал n); 2 ^ (журнал п); п ^ 2; п ^ 3; п!,"журнал (журнал п), п ^ 2, п ^ 3, 2 ^ (журнал п), п!",Ordina le seguenti funzioni in base al loro tempo di esecuzione: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Ordene las siguientes funciones por su tiempo de ejecución: n ^ 2; log (log n); 2 ^ (log n); ¡norte! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; ¡norte!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Uporządkuj następujące funkcje według ich czasu działania: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Thứ tự các hàm sau theo thời gian chạy của chúng: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",次の関数を実行時間順に並べます。n^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,log（log n）、n ^ 2、n ^ 3、2 ^（log n）、n！,按其运行时间排序以下功能：n ^ 2; log（log n）; 2 ^（log n）; n！ ; n ^ 3。,log（log n）; 2 ^（log n）; n ^ 2; n ^ 3; n！,log（log n），n ^ 2，n ^ 3，2 ^（log n），n！,اطلب الوظائف التالية حسب وقت تشغيلها: n ^ 2 ؛ سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن! ؛ ن ^ 3.,سجل (تسجيل ن) ؛ 2 ^ (تسجيل ن) ؛ ن ^ 2 ؛ ن ^ 3 ؛ ن!,تسجيل (تسجيل ن) ، ن ^ 2 ، ن ^ 3 ، 2 ^ (سجل ن) ، ن!,Впорядкуйте такі функції за часом їх роботи: n ^ 2; журнал (журнал n); 2 ^ (журнал n); п! ; n ^ 3.,журнал (журнал n); 2 ^ (журнал n); n ^ 2; n ^ 3; п!,"журнал (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Ordene as seguintes funções por seu tempo de execução: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",توابع زیر را بر اساس مدت زمان اجرای آنها ترتیب دهید: n ^ 2؛ log (log n) ؛ 2 ^ (ورود به سیستم) ن! ؛ n ^ 3,log (log n) ؛ 2 ^ (ورود به سیستم) n ^ 2 ؛ n ^ 3 ؛ ن!,log (log n) ، n ^ 2 ، n ^ 3 ، 2 ^ (log n) ، n!,Ordeneu les funcions següents pel seu temps d&#39;execució: n ^ 2; log (registre n); 2 ^ (registre n); n! ; n ^ 3.,log (registre n); 2 ^ (registre n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Наредите следеће функције према њиховом радном времену: н ^ 2; лог (лог н); 2 ^ (лог н); н! ; н ^ 3.,лог (лог н); 2 ^ (лог н); н ^ 2; н ^ 3; н!,"лог (лог н), н ^ 2, н ^ 3, 2 ^ (лог н), н!",Urutkan fungsi-fungsi berikut berdasarkan waktu berjalannya: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Bestill følgende funksjoner etter kjøretid: n ^ 2; logg (logg n); 2 ^ (log n); n! ; n ^ 3.,logg (logg n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"logg (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",실행 시간별로 다음 함수를 정렬하십시오. n ^ 2; log (log n); 2 ^ (log n); 엔! ; n ^ 3.,log (로그 n); 2 ^ (log n); n ^ 2; n ^ 3; 엔!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Järjestä seuraavat toiminnot niiden käyttöajan mukaan: n ^ 2; loki (log n); 2 ^ (log n); n! ; n ^ 3.,loki (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"loki (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Rendezze a következő függvényeket futási idejük szerint: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Seřaďte následující funkce podle doby běhu: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!",Poredaj sljedeće funkcije prema njihovom vremenu izvođenja: n ^ 2; log (log n); 2 ^ (log n); n! ; n ^ 3.,log (log n); 2 ^ (log n); n ^ 2; n ^ 3; n!,"log (log n), n ^ 2, n ^ 3, 2 ^ (log n), n!"
424,424,1656,9.6,push,push,What is the stack operation corresponding to the enqueue operation in queues?,5.0,drücken,"Was ist die Stapeloperation, die der Warteschlangenoperation in Warteschlangen entspricht?",drücken,Unsa ang operasyon sa stack nga katumbas sa enqueue nga operasyon sa mga pila?,iduso,iduso,Vad motsvarar stackoperationen enqueue-operationen i köer?,tryck,tryck,Quelle est l&#39;opération de pile correspondant à l&#39;opération de mise en file d&#39;attente dans les files d&#39;attente?,poussez,poussez,Wat is de stapelbewerking die overeenkomt met de bewerking in wachtrij plaatsen?,Duwen,Duwen,Какая операция стека соответствует операции постановки в очередь в очередях?,От себя,От себя,Qual è l&#39;operazione di stack corrispondente all&#39;operazione di accodamento nelle code?,spingere,spingere,¿Cuál es la operación de pila correspondiente a la operación de puesta en cola en colas?,empujar,empujar,Jaka jest operacja na stosie odpowiadająca operacji umieszczania w kolejce w kolejkach?,Pchać,Pchać,Hoạt động ngăn xếp tương ứng với hoạt động xếp hàng trong hàng đợi là gì?,đẩy,đẩy,キュー内のエンキュー操作に対応するスタック操作とは何ですか？,押す,押す,与队列中的入队操作相对应的堆栈操作是什么？,推,推,ما هي عملية المكدس المقابلة لعملية قائمة الانتظار في قوائم الانتظار؟,إدفع,إدفع,"Що таке операція стеку, що відповідає операції черги в чергах?",штовхати,штовхати,Qual é a operação de pilha correspondente à operação de enfileiramento nas filas?,empurrar,empurrar,عملیات پشته متناسب با عملیات enqueue در صف چیست؟,فشار دادن,فشار دادن,Quina és l&#39;operació de pila corresponent a l&#39;operació de cola a les cues?,empènyer,empènyer,Која је операција стека која одговара операцији чекања у редовима?,гурати,гурати,Apa operasi stack yang sesuai dengan operasi enqueue dalam antrian?,Dorong,Dorong,Hva tilsvarer stackoperasjonen enqueue-operasjonen i køer?,trykk,trykk,대기열에 넣는 작업에 해당하는 스택 작업은 무엇입니까?,푸시,푸시,Mikä pinooperaatio vastaa jonojen enqueue-operaatiota?,työntää,työntää,"Mi a verem művelet, amely megfelel a sorok enqueue műveletének?",nyom,nyom,Co je operace zásobníku odpovídající operaci zařazení do fronty?,tlačit,tlačit,Koja je operacija slaganja koja odgovara operaciji čekanja u redovima?,gurnuti,gurnuti
425,425,123,1.5,A variable is a location in the computers memory where a value can be stored for use by a program,A location in memory that can store a value.,What is a variable?,5.0,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,"Eine Variable ist ein Speicherort im Computerspeicher, an dem ein Wert zur Verwendung durch ein Programm gespeichert werden kann",Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,Ang usa ka variable usa ka lokasyon sa memorya sa mga kompyuter diin ang usa ka kantidad mahimong tipigan aron magamit sa usa ka programa,Vad är en variabel?,En plats i minnet som kan lagra ett värde.,En variabel är en plats i datorminnet där ett värde kan lagras för användning av ett program,Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,Une variable est un emplacement dans la mémoire de l&#39;ordinateur où une valeur peut être stockée pour être utilisée par un programme,Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,Een variabele is een locatie in het geheugen van de computer waar een waarde kan worden opgeslagen voor gebruik door een programma,Что такое переменная?,"Место в памяти, в котором может храниться значение.","Переменная - это место в памяти компьютера, где значение может быть сохранено для использования программой.",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,Una variabile è una posizione nella memoria del computer in cui un valore può essere memorizzato per essere utilizzato da un programma,¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,Una variable es una ubicación en la memoria de la computadora donde se puede almacenar un valor para que lo use un programa.,Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.","Zmienna to lokalizacja w pamięci komputera, w której można zapisać wartość do wykorzystania przez program",Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,Một biến là một vị trí trong bộ nhớ máy tính nơi một giá trị có thể được lưu trữ để sử dụng bởi một chương trình,変数とは何ですか？,値を格納できるメモリ内の場所。,変数は、プログラムで使用するために値を格納できるコンピュータメモリ内の場所です。,什么是变量？,内存中可以存储值的位置。,变量是计算机内存中可以存储值以供程序使用的位置,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,المتغير هو موقع في ذاكرة الكمبيوتر حيث يمكن تخزين قيمة لاستخدامها من قبل البرنامج,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","Змінна - це місце в пам&#39;яті комп’ютерів, де значення може зберігатися для використання програмою",O que é uma variável?,Um local na memória que pode armazenar um valor.,Uma variável é um local na memória do computador onde um valor pode ser armazenado para uso por um programa,متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,متغیر مکانی است در حافظه رایانه ها که می توان مقداری را برای استفاده توسط برنامه ذخیره کرد,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,Una variable és una ubicació a la memòria dels ordinadors on es pot emmagatzemar un valor per a un programa,Шта је променљива?,Локација у меморији која може да ускладишти вредност.,Варијабла је место у рачунарској меморији где вредност може да се ускладишти за употребу у програму,Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,Variabel adalah lokasi di memori komputer di mana nilai dapat disimpan untuk digunakan oleh program,Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,En variabel er et sted i datamaskinens minne hvor en verdi kan lagres for bruk av et program,변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,변수는 프로그램에서 사용하기 위해 값을 저장할 수있는 컴퓨터 메모리의 위치입니다.,Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.","Muuttuja on paikka tietokoneiden muistissa, johon arvo voidaan tallentaa ohjelman käyttöä varten",Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.","A változó az a hely a számítógép memóriájában, ahol egy érték tárolható egy program számára",Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.","Proměnná je umístění v paměti počítače, kde lze uložit hodnotu pro použití programem",Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,Varijabla je mjesto u memoriji računara gdje se vrijednost može pohraniti za upotrebu u programu
426,426,1709,10.1,"A tree is a finite set of one or more nodes such that there is a specially designated node called the root. The remaining nodes are partitioned into n&gt;=0 disjoint sets T the n plus 1, where each element set is a tree.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",What is a tree?,5.0,"Eine Sammlung von Knoten mit einem speziellen Knoten namens root und der Rest der Knoten sind in eine oder mehrere disjunkte Mengen unterteilt, wobei jede Menge ein Baum ist.",Was ist ein Baum?,"Ein Baum ist eine endliche Menge von einem oder mehreren Knoten, so dass es einen speziell bezeichneten Knoten gibt, der als Wurzel bezeichnet wird. Die verbleibenden Knoten werden in n&gt; = 0 disjunkte Mengen T the n plus 1 aufgeteilt, wobei jede Elementmenge ein Baum ist.",Unsa ang usa ka kahoy?,"Usa ka koleksyon sa mga node, nga adunay usa ka espesyal nga node nga gitawag ug ugat, ug ang nahabilin nga mga node gibahin sa usa o daghan pa nga dili magkauyon nga mga set, nga ang matag set usa ka kahoy.","Ang usa ka punoan usa ka adunay kinutuban nga hugpong sa usa o daghan pa nga mga node nga adunay usa ka espesyal nga gitudlo nga node nga gitawag nga ugat. Ang nahabilin nga mga node gibahin sa n&gt; = 0 disjoint set T ang n plus 1, diin ang matag elemento nga gibutang usa ka kahoy.",Vad är ett träd?,"En samling noder, som har en speciell nod som kallas root, och resten av noderna är uppdelade i en eller flera separata uppsättningar, var och en uppsättning är ett träd.","Ett träd är en ändlig uppsättning av en eller flera noder så att det finns en speciellt utsedd nod som kallas roten. De återstående noderna är uppdelade i n&gt; = 0 separata uppsättningar T n plus 1, där varje elementuppsättning är ett träd.",Qu&#39;est-ce qu&#39;un arbre?,"Une collection de nœuds, qui a un nœud spécial appelé root, et le reste des nœuds sont partitionnés en un ou plusieurs ensembles disjoints, chaque ensemble étant un arbre.","Un arbre est un ensemble fini d&#39;un ou plusieurs nœuds de sorte qu&#39;il existe un nœud spécialement désigné appelé racine. Les nœuds restants sont partitionnés en n&gt; = 0 ensembles disjoints T les n plus 1, où chaque ensemble d&#39;éléments est un arbre.",Wat is een boom?,"Een verzameling knooppunten, die een speciaal knooppunt heeft dat root wordt genoemd, en de rest van de knooppunten is onderverdeeld in een of meer disjuncte sets, waarbij elke set een boom is.","Een boom is een eindige set van een of meer knooppunten, zodat er een speciaal aangewezen knooppunt is dat de wortel wordt genoemd. De overige knooppunten zijn onderverdeeld in n&gt; = 0 disjuncte sets T de n plus 1, waarbij elke elementenset een boom is.",Что такое дерево?,"Набор узлов, который имеет специальный узел, называемый корнем, а остальные узлы разделены на один или несколько непересекающихся наборов, каждый набор представляет собой дерево.","Дерево - это конечный набор из одного или нескольких узлов, так что существует специально назначенный узел, называемый корнем. Остальные узлы делятся на n&gt; = 0 непересекающихся множеств T n плюс 1, где каждый набор элементов представляет собой дерево.",Cos&#39;è un albero?,"Una raccolta di nodi, che ha un nodo speciale chiamato root, e il resto dei nodi è partizionato in uno o più insiemi disgiunti, ogni insieme è un albero.","Un albero è un insieme finito di uno o più nodi tale che esiste un nodo appositamente designato chiamato radice. I nodi rimanenti sono partizionati in n&gt; = 0 insiemi disgiunti T il n più 1, dove ogni insieme di elementi è un albero.",¿Qué es un árbol?,"Una colección de nodos, que tiene un nodo especial llamado raíz, y el resto de los nodos están divididos en uno o más conjuntos disjuntos, siendo cada conjunto un árbol.","Un árbol es un conjunto finito de uno o más nodos, de modo que hay un nodo especialmente designado llamado raíz. Los nodos restantes se dividen en n&gt; = 0 conjuntos disjuntos T el n más 1, donde cada conjunto de elementos es un árbol.",Co to jest drzewo?,"Zbiór węzłów, który ma specjalny węzeł zwany korzeniem, a pozostałe węzły są podzielone na jeden lub więcej rozłącznych zestawów, z których każdy jest drzewem.","Drzewo to skończony zbiór jednego lub więcej węzłów, tak że istnieje specjalnie wyznaczony węzeł zwany korzeniem. Pozostałe węzły są podzielone na n&gt; = 0 rozłącznych zbiorów T n plus 1, gdzie każdy zbiór elementów jest drzewem.",Cây là gì?,"Một tập hợp các nút, trong đó có một nút đặc biệt được gọi là gốc, và phần còn lại của các nút được phân chia thành một hoặc nhiều bộ rời rạc, mỗi bộ là một cây.","Cây là một tập hợp hữu hạn của một hoặc nhiều nút sao cho có một nút được chỉ định đặc biệt gọi là gốc. Các nút còn lại được phân chia thành n&gt; = 0 tập rời T là n cộng với 1, trong đó mỗi tập phần tử là một cây.",木とは何ですか？,ルートと呼ばれる特別なノードを持つノードのコレクションと、残りのノードは1つ以上の互いに素なセットに分割され、各セットはツリーになります。,ツリーは、ルートと呼ばれる特別に指定されたノードが存在するような、1つ以上のノードの有限集合です。残りのノードは、n&gt; = 0の互いに素なセットTn + 1に分割されます。ここで、各要素セットはツリーです。,什么是树？,节点的集合，具有一个称为根的特殊节点，其余节点被划分为一个或多个不相交的集合，每个集合都是一棵树。,树是一个或多个节点的有限集合，因此存在一个称为根的特殊指定的节点。其余节点被划分为n&gt; = 0不相交集T n + 1，其中每个元素集都是一棵树。,ما هي الشجرة؟,مجموعة من العقد ، التي لها عقدة خاصة تسمى الجذر ، ويتم تقسيم العقد المتبقية إلى مجموعة واحدة أو أكثر من المجموعات المنفصلة ، كل مجموعة عبارة عن شجرة.,الشجرة عبارة عن مجموعة محدودة من عقد أو أكثر بحيث توجد عقدة معينة تسمى الجذر. يتم تقسيم العقد المتبقية إلى n&gt; = 0 مجموعات منفصلة T و n زائد 1 ، حيث تكون كل مجموعة عنصر شجرة.,Що таке дерево?,"Колекція вузлів, яка має спеціальний вузол, який називається root, а решта вузлів розділені на один або кілька непересічних наборів, кожен набір являє собою дерево.","Дерево - це скінченна сукупність одного або декількох вузлів, така що існує спеціально призначений вузол, який називається коренем. Решта вузлів розділено на n&gt; = 0 неперервних наборів T n плюс 1, де кожен набір елементів є деревом.",O que é uma árvore?,"Uma coleção de nós, que possui um nó especial denominado raiz, e o resto dos nós são particionados em um ou mais conjuntos disjuntos, cada conjunto sendo uma árvore.","Uma árvore é um conjunto finito de um ou mais nós, de modo que existe um nó especialmente designado chamado raiz. Os nós restantes são particionados em n&gt; = 0 conjuntos disjuntos T an mais 1, onde cada conjunto de elementos é uma árvore.",درخت چیست؟,مجموعه ای از گره ها که دارای گره خاصی به نام root است و بقیه گره ها به یک یا چند مجموعه جدا از هم تقسیم می شوند که هر مجموعه یک درخت است.,درخت مجموعه ای محدود از یك یا چند گره است به گونه ای كه گره خاصی برای آن وجود دارد كه ریشه نامیده می شود. گره های باقیمانده به n&gt; = 0 مجموعه جدا از هم تقسیم می شوند T n به علاوه 1 ، جایی که هر مجموعه عنصر یک درخت است.,Què és un arbre?,"Una col·lecció de nodes, que té un node especial anomenat arrel, i la resta de nodes estan particionats en un o més conjunts disjunts, cadascun dels quals és un arbre.","Un arbre és un conjunt finit d’un o més nodes de tal manera que hi ha un node especialment designat anomenat arrel. La resta de nodes estan particionats en n&gt; = 0 conjunts disjunts T el n més 1, on cada conjunt d&#39;elements és un arbre.",Шта је дрво?,"Збирка чворова која има посебан чвор који се назива роот, а остатак чворова подељен је у један или више нераздвојених скупова, а сваки скуп је стабло.","Стабло је коначан скуп једног или више чворова такав да постоји посебно одређени чвор који се назива корен. Преостали чворови су подељени у н&gt; = 0 дисјунктних скупова Т н плус 1, где је сваки скуп елемената стабло.",Apakah pohon itu?,"Kumpulan node, yang memiliki node khusus yang disebut root, dan node lainnya dipartisi menjadi satu atau lebih set terpisah, setiap set menjadi pohon.","Pohon adalah himpunan terbatas dari satu atau lebih simpul sedemikian rupa sehingga ada simpul khusus yang disebut root. Node yang tersisa dipartisi menjadi n&gt; = 0 himpunan terpisah T n plus 1, di mana setiap himpunan elemen adalah sebuah pohon.",Hva er et tre?,"En samling noder, som har en spesiell node kalt root, og resten av nodene er delt inn i ett eller flere usammenhengende sett, hvor hvert sett er et tre.","Et tre er et endelig sett med en eller flere noder slik at det er en spesielt utpekt node som kalles roten. De resterende nodene er delt inn i n&gt; = 0 usammenhengende sett T n pluss 1, der hvert elementsett er et tre.",나무는 무엇입니까?,루트라는 특수 노드가있는 노드 모음과 나머지 노드는 하나 이상의 분리 된 집합으로 분할되며 각 집합은 트리입니다.,"트리는 루트라고하는 특별히 지정된 노드가 있도록 하나 이상의 노드로 구성된 유한 세트입니다. 나머지 노드는 각각의 요소 집합이 트리 인 n&gt; = 0 분리 된 집합 T, n + 1로 분할됩니다.",Mikä on puu?,"Solmujen kokoelma, jolla on erityinen solmu nimeltä root, ja muut solmut jaetaan yhteen tai useampaan disjointjoukkoon, joista kukin on puu.","Puu on rajallinen joukko yhdestä tai useammasta solmusta siten, että siellä on erityinen solmu, jota kutsutaan juureksi. Loput solmut jaetaan osiin n&gt; = 0 disjointjoukkoa T n n plus 1, missä kukin elementtijoukko on puu.",Mi az a fa?,"Csomópontok gyűjteménye, amelynek van egy speciális, root nevű csomópontja, és a többi csomópont egy vagy több diszjunkt halmazba van felosztva, mindegyik halmaz egy fa.","A fa egy vagy több csomópont véges halmaza, így van egy speciálisan kijelölt csomópont, amelyet gyökérnek hívnak. A fennmaradó csomópontokat n&gt; = 0 disszjunkt halmazba osztjuk fel T az n plusz 1, ahol minden elem halmaz egy fa.",Co je to strom?,"Kolekce uzlů, která má speciální uzel zvaný root, a zbytek uzlů je rozdělen do jedné nebo více nespojených sad, přičemž každá sada je strom.","Strom je konečná sada jednoho nebo více uzlů, takže existuje speciálně určený uzel zvaný root. Zbývající uzly jsou rozděleny do n&gt; = 0 disjunktních množin T n plus 1, kde každá sada prvků je strom.",Šta je drvo?,"Zbirka čvorova koja ima poseban čvor koji se naziva root, a ostatak čvorova podijeljen je u jedan ili više nepodudarnih skupova, a svaki skup je stablo.","Stablo je konačni skup jednog ili više čvorova takav da postoji posebno određeni čvor koji se naziva korijen. Preostali čvorovi podijeljeni su u n&gt; = 0 disjunktnih skupova T n plus 1, gdje je svaki skup elemenata stablo."
427,427,858,5.1,a comparison sort in which the sorted array is built one entry at a time,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","In one sentence, what is the main idea implemented by insertion sort?",4.0,"Wenn Sie jeweils ein Array-Element von links nach rechts nehmen, wird es an der rechten Position unter den bereits sortierten Elementen auf der linken Seite eingefügt.","Was ist in einem Satz die Hauptidee, die durch Einfügesortierung umgesetzt wird?","Eine Vergleichssortierung, bei der das sortierte Array jeweils für einen Eintrag erstellt wird","Sa usa ka tudling-pulong, unsa man ang punoan nga ideya nga gipatuman pinaagi sa pagsulud?","Pagkuha usa ka elemento sa pag-ayo sa matag higayon, gikan sa wala ngadto sa tuo, gisukip kini sa tama nga posisyon taliwala sa mga naayos na nga elemento sa wala niini.",usa ka klase nga pagtandi diin ang gihan-ay nga han-ay gitukod usa ka pagsulod sa usa ka higayon,"I en mening, vad är huvudidén som implementeras genom insättningssortering?","Tar ett matriselement åt gången, från vänster till höger, infogar det i rätt position bland de redan sorterade elementen till vänster.",en jämförelsessort där den sorterade matrisen byggs en post i taget,"En une phrase, quelle est l&#39;idée principale implémentée par le tri par insertion?","Prenant un élément du tableau à la fois, de gauche à droite, il l&#39;insère à la bonne position parmi les éléments déjà triés à sa gauche.",un tri de comparaison dans lequel le tableau trié est construit une entrée à la fois,Wat is in één zin het hoofdidee geïmplementeerd door invoegsortering?,"Het neemt één array-element tegelijk, van links naar rechts, en voegt het in de juiste positie tussen de reeds gesorteerde elementen aan de linkerkant.",een vergelijkende sortering waarin de gesorteerde array één item tegelijk wordt opgebouwd,"Одним предложением, какова основная идея сортировки вставкой?","Принимая по одному элементу массива слева направо, он вставляет его в правильную позицию среди уже отсортированных элементов слева.","сортировка сравнения, в которой отсортированный массив строится по одной записи за раз","In una frase, qual è l&#39;idea principale implementata dall&#39;ordinamento per inserzione?","Prendendo un elemento dell&#39;array alla volta, da sinistra a destra, lo inserisce nella posizione giusta tra gli elementi già ordinati alla sua sinistra.",un ordinamento di confronto in cui l&#39;array ordinato viene creato una voce alla volta,"En una oración, ¿cuál es la idea principal implementada por ordenación por inserción?","Tomando un elemento de matriz a la vez, de izquierda a derecha, lo inserta en la posición correcta entre los elementos ya ordenados a su izquierda.",una clasificación de comparación en la que la matriz ordenada se construye una entrada a la vez,"Jednym zdaniem, jaka jest główna idea realizowana przez sortowanie przez wstawianie?","Biorąc jeden element tablicy na raz, od lewej do prawej, wstawia go we właściwej pozycji wśród już posortowanych elementów po jego lewej stronie.","sortowanie porównawcze, w którym posortowana tablica jest budowana pojedynczo","Trong một câu, ý chính được triển khai bằng cách sắp xếp chèn là gì?","Lấy một phần tử mảng tại một thời điểm, từ trái sang phải, nó sẽ chèn nó vào vị trí bên phải trong số các phần tử đã được sắp xếp ở bên trái của nó.",một sắp xếp so sánh trong đó mảng đã sắp xếp được tạo một mục nhập tại một thời điểm,一言で言えば、挿入ソートによって実装される主なアイデアは何ですか？,一度に1つの配列要素を左から右に取得し、左側の既に並べ替えられた要素の中で正しい位置に挿入します。,ソートされた配列が一度に1つのエントリで作成される比較ソート,一句话，插入排序实现的主要思想是什么？,一次从左到右取一个数组元素，将其插入到左边已排序元素中的右边位置。,比较排序，在该比较排序中，一次建立一个已排序数组的条目,في جملة واحدة ، ما هي الفكرة الرئيسية التي يتم تنفيذها عن طريق فرز الإدراج؟,بأخذ عنصر مصفوفة واحد في كل مرة ، من اليسار إلى اليمين ، فإنه يدرجه في الموضع الصحيح بين العناصر التي تم فرزها بالفعل على يساره.,نوع مقارنة يتم فيه إنشاء المصفوفة المرتبة إدخالًا واحدًا في كل مرة,"В одному реченні, яка основна ідея реалізується шляхом вставки сортування?","Беручи по одному елементу масиву, зліва направо, він вставляє його в потрібне положення серед уже відсортованих елементів зліва.","порівняльне сортування, в якому відсортований масив будується по одному запису за раз","Em uma frase, qual é a ideia principal implementada pelo tipo de inserção?","Pegando um elemento do array por vez, da esquerda para a direita, ele o insere na posição certa entre os elementos já classificados à sua esquerda.",uma classificação de comparação em que a matriz classificada é construída uma entrada de cada vez,در یک جمله ، ایده اصلی که با درج مرتب سازی پیاده سازی شده است چیست؟,هر بار با گرفتن یک عنصر آرایه ، از چپ به راست ، آن را در موقعیت مناسب در میان عناصر مرتب شده در سمت چپ خود قرار می دهد.,یک مرتبه مقایسه ای که در آن آرایه مرتب شده هر بار یک ورودی ساخته می شود,"En una frase, quina és la idea principal implementada per la inserció?","Prenent un element de matriu a la vegada, d’esquerra a dreta, l’insereix en la posició correcta entre els elements ja ordenats de la seva esquerra.",un tipus de comparació en què la matriu ordenada es construeix una entrada a la vegada,"У једној реченици, која је главна идеја спроведена сортирањем уметања?","Узимајући по један елемент низа, слева надесно, убацује га у прави положај међу већ сортиране елементе лево.",поредбена сорта у којој се сортирани низ гради један по један унос,"Dalam satu kalimat, apa ide utama yang diimplementasikan oleh insertion sort?","Mengambil satu elemen array pada satu waktu, dari kiri ke kanan, itu menyisipkannya di posisi kanan di antara elemen yang sudah diurutkan di sebelah kirinya.",semacam perbandingan di mana array yang diurutkan dibuat satu entri pada satu waktu,"I en setning, hva er hovedideen implementert ved innsettingssortering?","Tar ett matriseelement om gangen, fra venstre til høyre, setter det inn i riktig posisjon blant de allerede sorterte elementene til venstre.",en sammenligningssort der den sorterte matrisen er bygget en oppføring om gangen,한 문장에서 삽입 정렬로 구현 된 주요 아이디어는 무엇입니까?,한 번에 하나의 배열 요소를 왼쪽에서 오른쪽으로 가져 와서 왼쪽에 이미 정렬 된 요소 중 오른쪽 위치에 삽입합니다.,정렬 된 배열이 한 번에 한 항목 씩 작성되는 비교 정렬,Mikä on lisäyslajittelun pääidea yhdessä lauseessa?,"Kun otetaan yksi taulukkoelementti kerrallaan vasemmalta oikealle, se lisää sen oikeaan kohtaan jo järjestettyjen elementtien joukossa vasemmalla.","vertailulaji, jossa lajiteltu taulukko rakennetaan yksi merkintä kerrallaan","Egy mondatban mi a fő gondolat, amelyet a beszúrásos rendezéssel hajtanak végre?","Egyszerre egy tömb elemet vesz fel balról jobbra, és a bal oldali már rendezett elemek közé illeszti a jobb helyzetbe.","egy összehasonlító rendezés, amelyben a rendezett tömb egy bejegyzéssel épül fel","V jedné větě, jaká je hlavní myšlenka implementovaná třídou vložení?","Vezmeme-li po jednom prvku pole zleva doprava, vloží jej na správnou pozici mezi již seřazené prvky nalevo.","srovnávací řazení, ve kterém je seřazené pole zabudováno po jedné položce","U jednoj rečenici, koja je glavna ideja implementirana sortiranjem umetanja?","Uzimajući po jedan element niza, slijeva udesno, ubacuje ga u pravi položaj među već sortirane elemente s lijeve strane.",poredbena sorta u kojoj se sortirani niz gradi jedan po jedan unos
428,428,1291,7.7,"In a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. Also, the special cases at the beginning or end of the list are more complicated.",Extra space required to store the back pointers.,What is the main disadvantage of a doubly-linked list over a basic linked list?,3.5,Zusätzlicher Speicherplatz zum Speichern der hinteren Zeiger.,Was ist der Hauptnachteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"In einer doppelt verknüpften Liste müssen mehr Zeiger gesetzt werden, und die Mechanismen zum Einfügen und Löschen sind schwieriger. Außerdem sind die Sonderfälle am Anfang oder Ende der Liste komplizierter.",Unsa man ang punoan nga kakulian sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,Gikinahanglan ang dugang nga wanang aron tipigan ang mga back point.,"Sa usa ka doble nga nalambigit nga lista, adunay daghang mga tudlo nga itakda ug ang mga mekaniko sa pagsal-ot ug pagtangtang labi ka lisud. Ingon usab, ang mga espesyal nga kaso sa pagsugod o katapusan sa lista labi ka komplikado.",Vad är den största nackdelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,Extra utrymme krävs för att lagra bakre pekare.,I en dubbelt länkad lista finns det fler pekare att ställa in och mekaniken för att infoga och ta bort är svårare. Specialfallen i början eller slutet av listan är också mer komplicerade.,Quel est le principal inconvénient d&#39;une liste à double lien par rapport à une liste liée de base?,Espace supplémentaire requis pour stocker les pointeurs arrière.,"Dans une liste doublement liée, il y a plus de pointeurs à définir et les mécanismes d&#39;insertion et de suppression sont plus difficiles. De plus, les cas particuliers au début ou à la fin de la liste sont plus compliqués.",Wat is het grootste nadeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,Extra ruimte nodig om de rugwijzers op te bergen.,In een dubbel gelinkte lijst zijn er meer aanwijzingen om in te stellen en zijn de mechanismen van invoegen en verwijderen moeilijker. Ook zijn de speciale gevallen aan het begin of einde van de lijst ingewikkelder.,В чем состоит главный недостаток двусвязного списка перед базовым связанным списком?,"Дополнительное место, необходимое для хранения обратных указателей.","В двусвязном списке нужно установить больше указателей, а механика вставки и удаления более сложна. Кроме того, особые случаи в начале или конце списка более сложны.",Qual è il principale svantaggio di un elenco a doppio collegamento rispetto a un elenco collegato di base?,Spazio aggiuntivo richiesto per memorizzare i puntatori indietro.,"In una lista doppiamente concatenata, ci sono più puntatori da impostare e le meccaniche di inserimento ed eliminazione sono più difficili. Inoltre, i casi speciali all&#39;inizio o alla fine dell&#39;elenco sono più complicati.",¿Cuál es la principal desventaja de una lista enlazada doble sobre una lista enlazada básica?,Se requiere espacio adicional para almacenar los punteros traseros.,"En una lista doblemente enlazada, hay más punteros para establecer y la mecánica de insertar y eliminar es más difícil. Además, los casos especiales al principio o al final de la lista son más complicados.",Jaka jest główna wada listy podwójnie połączonej w porównaniu z listą podstawową?,Wymagane dodatkowe miejsce do przechowywania wskazówek.,"Na podwójnie połączonej liście jest więcej wskaźników do ustawienia, a mechanika wstawiania i usuwania jest trudniejsza. Ponadto szczególne przypadki na początku lub na końcu listy są bardziej skomplikowane.",Nhược điểm chính của danh sách liên kết kép so với danh sách liên kết cơ bản là gì?,Cần thêm không gian để lưu các con trỏ ngược.,"Trong một danh sách được liên kết kép, có nhiều con trỏ hơn để đặt và cơ chế chèn và xóa khó hơn. Ngoài ra, các trường hợp đặc biệt ở đầu hoặc cuối danh sách phức tạp hơn.",基本的なリンクリストに対する二重リンクリストの主な欠点は何ですか？,バックポインタを格納するために必要な追加スペース。,二重にリンクされたリストでは、設定するポインターが多くなり、挿入と削除のメカニズムがより困難になります。また、リストの最初または最後の特殊なケースはより複雑です。,与基本链表相比，双链表的主要缺点是什么？,存储后退指针所需的额外空间。,在双向链表中，有更多的指针可以设置，并且插入和删除的机制更加困难。此外，列表开头或结尾的特殊情况更为复杂。,ما هو العيب الرئيسي لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,مطلوب مساحة إضافية لتخزين المؤشرات الخلفية.,في قائمة مرتبطة بشكل مضاعف ، هناك المزيد من المؤشرات التي يجب تعيينها وتكون آليات الإدراج والحذف أكثر صعوبة. كما أن الحالات الخاصة في بداية القائمة أو نهايتها أكثر تعقيدًا.,Який головний недолік подвійно пов’язаного списку перед основним пов’язаним списком?,Для зберігання зворотних покажчиків потрібно додатковий простір.,"У подвійно пов’язаному списку є більше вказівок, а механіка вставлення та видалення є більш складною. Крім того, особливі випадки на початку або в кінці списку є більш складними.",Qual é a principal desvantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,Espaço extra necessário para armazenar os ponteiros de trás.,"Em uma lista duplamente vinculada, há mais ponteiros para definir e a mecânica de inserção e exclusão é mais difícil. Além disso, os casos especiais no início ou no final da lista são mais complicados.",ضرر اصلی یک لیست پیوندی مضاعف نسبت به یک لیست پیوندی اصلی چیست؟,فضای اضافی برای ذخیره نشانگرهای عقب مورد نیاز است.,در یک لیست پیوند خورده ، اشاره گرهای بیشتری برای تنظیم وجود دارد و مکانیک درج و حذف دشوارتر است. همچنین ، موارد خاص در ابتدا یا انتهای لیست پیچیده تر هستند.,Quin és el principal desavantatge d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,Espai addicional necessari per emmagatzemar els punteres posteriors.,"En una llista doblement enllaçada, hi ha més indicadors per establir i la mecànica d’inserció i supressió és més difícil. A més, els casos especials al començament o al final de la llista són més complicats.",Који је главни недостатак двоструко повезане листе у односу на основну повезану листу?,Додатни простор потребан за чување задњих показивача.,"На двоструко повезаној листи има више показивача за постављање, а механика уметања и брисања је тежа. Такође, посебни случајеви на почетку или на крају списка су сложенији.",Apa kerugian utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,Ruang ekstra diperlukan untuk menyimpan penunjuk belakang.,"Dalam daftar tertaut ganda, ada lebih banyak petunjuk untuk disetel dan mekanisme memasukkan dan menghapus lebih sulit. Selain itu, kasus khusus di awal atau akhir daftar lebih rumit.",Hva er den største ulempen med en dobbeltkoblet liste i forhold til en grunnkoblet liste?,Ekstra plass kreves for å lagre bakpekerne.,"I en dobbeltkoblet liste er det flere tips å sette, og mekanikken for å sette inn og slette er vanskeligere. Spesielle tilfeller i begynnelsen eller slutten av listen er også mer kompliserte.",기본 연결 목록에 비해 이중 연결 목록의 주요 단점은 무엇입니까?,백 포인터를 저장하려면 추가 공간이 필요합니다.,이중 연결 목록에는 설정할 포인터가 더 많으며 삽입 및 삭제 메커니즘이 더 어렵습니다. 또한 목록의 시작 또는 끝에있는 특수한 경우는 더 복잡합니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein haitta verrattuna linkitettyyn perusluetteloon?,Ylimääräinen tila tarvitaan takaosoittimien tallentamiseen.,Kaksinkertaisesti linkitetyssä luettelossa on lisää viitteitä asetettavaksi ja lisäämisen ja poistamisen mekaniikka on vaikeampaa. Myös luettelon alussa tai lopussa olevat erikoistapaukset ovat monimutkaisempia.,Mi a kettős linkelésű lista fő hátránya az alap linkelt listával szemben?,További hely szükséges a hátsó mutatók tárolásához.,"A kétszeresen összekapcsolt listában több mutatót kell beállítani, a beillesztés és a törlés mechanikája pedig nehezebb. Ezenkívül a lista elején vagy végén található speciális esetek bonyolultabbak.",Jaká je hlavní nevýhoda seznamu s dvojitým propojením oproti základnímu?,K uložení zadních ukazatelů je zapotřebí více místa.,"V dvojnásobně propojeném seznamu je více ukazatelů, které je třeba nastavit, a mechanika vkládání a mazání je obtížnější. Zvláštní případy na začátku nebo na konci seznamu jsou také komplikovanější.",Koji je glavni nedostatak dvostruko povezane liste u odnosu na osnovnu povezanu listu?,Dodatni prostor potreban za spremanje stražnjih pokazivača.,"Na dvostruko povezanoj listi postoji više pokazivača za postavljanje, a mehanika umetanja i brisanja je teža. Takođe, posebni slučajevi na početku ili na kraju popisa su složeniji."
429,429,1456,8.6,computers usually convert infix expressions to post fix expression and evaluate them using a stack.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",How are infix expressions evaluated by computers?,5.0,"Zunächst werden sie in die Postfix-Form konvertiert, gefolgt von einer Auswertung des Postfix-Ausdrucks.",Wie werden Infix-Ausdrücke von Computern ausgewertet?,Computer konvertieren normalerweise Infix-Ausdrücke in Post-Fix-Ausdrücke und werten sie mithilfe eines Stapels aus.,Giunsa ang pagsusi sa mga ekspresyon sa infix sa mga kompyuter?,"Una, gibag-o sila ngadto sa porma nga postfix, gisundan sa usa ka pagsusi sa ekspresyon sa postfix.",kasagarang gibag-o sa mga kompyuter ang mga ekspresyon nga infix aron ma-post ang ekspresyon sa pag-ayo ug susihon kini gamit ang usa ka stack.,Hur utvärderas infixuttryck av datorer?,"Först omvandlas de till postfix-form, följt av en utvärdering av postfix-uttrycket.",datorer konverterar vanligtvis infix-uttryck för att publicera fix-uttryck och utvärderar dem med hjälp av en stack.,Comment les expressions infixes sont-elles évaluées par les ordinateurs?,"Tout d&#39;abord, ils sont convertis en forme de suffixe, suivi d&#39;une évaluation de l&#39;expression de suffixe.",les ordinateurs convertissent généralement les expressions infixes en expressions post-fix et les évaluent à l&#39;aide d&#39;une pile.,Hoe worden tussenvoegseluitdrukkingen door computers geëvalueerd?,"Eerst worden ze omgezet in een postfix-vorm, gevolgd door een evaluatie van de postfix-expressie.",computers converteren tussenvoegseluitdrukkingen meestal om fixuitdrukkingen te posten en evalueren ze met behulp van een stapel.,Как инфиксные выражения оцениваются компьютерами?,"Сначала они преобразуются в постфиксную форму, после чего выполняется оценка постфиксного выражения.",компьютеры обычно преобразуют инфиксные выражения в выражения после исправления и оценивают их с помощью стека.,Come vengono valutate le espressioni infisso dai computer?,"In primo luogo, vengono convertiti in formato suffisso, seguito da una valutazione dell&#39;espressione suffisso.",i computer di solito convertono le espressioni infix in espressioni post fix e le valutano utilizzando uno stack.,¿Cómo evalúan las computadoras las expresiones infijas?,"Primero, se convierten en forma de sufijo, seguido de una evaluación de la expresión de sufijo.",las computadoras generalmente convierten expresiones infijas en expresiones post-fijas y las evalúan usando una pila.,W jaki sposób wyrażenia infix są oceniane przez komputery?,"Najpierw są konwertowane do postaci postfiksowej, po czym następuje ocena wyrażenia postfiksowego.",komputery zwykle konwertują wyrażenia infix na wyrażenie po poprawce i oceniają je przy użyciu stosu.,Các biểu thức infix được máy tính đánh giá như thế nào?,"Đầu tiên, chúng được chuyển đổi thành dạng postfix, sau đó là đánh giá biểu thức postfix.",máy tính thường chuyển đổi các biểu thức infix để đăng biểu thức sửa chữa và đánh giá chúng bằng cách sử dụng một ngăn xếp.,中置式はコンピューターによってどのように評価されますか？,最初に、それらは接尾辞形式に変換され、続いて接尾辞式が評価されます。,コンピュータは通常、中置式を後置式に変換し、スタックを使用してそれらを評価します。,计算机如何评估中缀表达式？,首先，将它们转换为后缀形式，然后评估后缀表达式。,计算机通常将后缀表达式转换为后缀表达式，并使用堆栈对其进行评估。,كيف يتم تقييم تعبيرات infix بواسطة أجهزة الكمبيوتر؟,أولاً ، يتم تحويلها إلى نموذج postfix ، متبوعًا بتقييم للتعبير postfix.,تقوم أجهزة الكمبيوتر عادة بتحويل تعبيرات infix لنشر تعبير fix وتقييمها باستخدام مكدس.,Як обчислюються комп’ютерні вирази для інфіксів?,"Спочатку вони перетворюються у форму постфіксу, після чого виконується оцінка виразу постфікса.","комп’ютери, як правило, перетворюють вирази з інфіксом на виразу після виправлення та обчислюють їх за допомогою стека.",Como as expressões infixas são avaliadas por computadores?,"Primeiro, eles são convertidos para a forma pós-fixada, seguida por uma avaliação da expressão pós-fixada.",os computadores geralmente convertem expressões infixas para postar expressões fixas e as avaliam usando uma pilha.,عبارات اینفیکس توسط رایانه چگونه ارزیابی می شوند؟,ابتدا به فرم postfix تبدیل می شوند و به دنبال آن ارزیابی از بیان postfix می شود.,رایانه ها معمولاً عبارات infix را به عبارت fix fix تبدیل می کنند و آنها را با استفاده از پشته ارزیابی می کنند.,Com s’avaluen les expressions infix per ordinadors?,"En primer lloc, es converteixen en forma postfix, seguida d&#39;una avaluació de l&#39;expressió postfix.",els ordinadors solen convertir expressions infix per publicar expressions de correcció i avaluar-les mitjançant una pila.,Како рачунарски процењују инфиксне изразе?,"Прво се претварају у постфиксни облик, након чега следи процена израза постфикса.",рачунари обично претварају инфиксне изразе у пост фик изразе и процењују их помоћу стека.,Bagaimana ekspresi infix dievaluasi oleh komputer?,"Pertama, mereka diubah menjadi bentuk postfix, diikuti dengan evaluasi ekspresi postfix.",komputer biasanya mengubah ekspresi infix untuk memposting ekspresi tetap dan mengevaluasinya menggunakan tumpukan.,Hvordan vurderes infix-uttrykk av datamaskiner?,"Først blir de konvertert til postfix-form, etterfulgt av en evaluering av postfix-uttrykket.",datamaskiner konverterer vanligvis infix-uttrykk for å publisere fix-uttrykk og evaluerer dem ved hjelp av en stabel.,중위 식은 컴퓨터에서 어떻게 평가됩니까?,먼저 접미사 형식으로 변환 된 다음 접미사 식의 평가가 이어집니다.,컴퓨터는 일반적으로 중위 식을 수정 후 식으로 변환하고 스택을 사용하여 평가합니다.,Kuinka tietokoneet arvioivat infix-lausekkeita?,"Ensin ne muunnetaan postfix-muotoon, mitä seuraa postfix-lausekkeen arviointi.",tietokoneet yleensä muuntaa infix-lausekkeet post fix -lausekkeiksi ja arvioivat ne pinon avulla.,Hogyan értékelik a számítógépek az infix kifejezéseket?,"Először átalakítják őket postfix formává, majd értékelik a postfix kifejezést.","a számítógépek általában átalakítják az infix kifejezéseket post fix javító kifejezésekké, és verem segítségével értékelik ki őket.",Jak jsou výrazy infixu vyhodnocovány počítači?,"Nejprve jsou převedeny do formy postfixu, následované hodnocením výrazu postfixu.",počítače obvykle převádějí infixové výrazy na postfixové výrazy a vyhodnocují je pomocí zásobníku.,Kako računarski procenjuju infiksne izraze?,"Prvo se pretvaraju u postfix oblik, nakon čega slijedi procjena izraza postfix.",računari obično pretvaraju infix izraze u post fix izraze i procjenjuju ih pomoću stoga.
430,430,2280,12.5,You do not have to predetermine your list size as you do with arrays. Linked list have the ability to be as large as you want them adding memory as needed.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",What is the advantage of linked lists over arrays?,5.0,"Verknüpfte Listen sind dynamische Strukturen, mit denen eine variable Anzahl von Elementen gespeichert werden kann.",Was ist der Vorteil von verknüpften Listen gegenüber Arrays?,"Sie müssen Ihre Listengröße nicht wie bei Arrays vorab festlegen. Verknüpfte Listen können so groß sein, wie Sie möchten, und nach Bedarf Speicher hinzufügen.",Unsa ang bentaha sa mga nalambigit nga lista sa mga pag-array?,"Ang mga nalista nga lista usa ka dinamikong istruktura, nga nagtugot sa usa ka variable number sa mga elemento nga matipigan.",Dili nimo kinahanglan nga predetermine ang gidak-on sa imong lista sama sa imong gihimo sa mga arrays. Ang lista sa naka-link adunay katakus nga mahimo’g kadaghan sama sa gusto nimo nga dugangan nila ang memorya kung gikinahanglan.,Vilken är fördelen med länkade listor framför matriser?,Länkade listor är dynamiska strukturer som gör det möjligt att lagra ett varierande antal element.,Du behöver inte förutbestämma din liststorlek som med arrays. Länkad lista har förmågan att vara så stor som du vill att de ska lägga till minne efter behov.,Quel est l&#39;avantage des listes chaînées par rapport aux tableaux?,"Les listes liées sont des structures dynamiques, qui permettent de stocker un nombre variable d&#39;éléments.",Vous n&#39;avez pas à prédéterminer la taille de votre liste comme vous le faites avec les tableaux. La liste liée a la capacité d&#39;être aussi grande que vous le souhaitez en ajoutant de la mémoire si nécessaire.,Wat is het voordeel van gekoppelde lijsten ten opzichte van arrays?,Gelinkte lijsten zijn dynamische structuren waarmee een variabel aantal elementen kan worden opgeslagen.,"U hoeft uw lijstgrootte niet vooraf te bepalen, zoals bij arrays. Gekoppelde lijsten kunnen zo groot zijn als u wilt, en kunnen zo nodig geheugen toevoegen.",В чем преимущество связанных списков перед массивами?,"Связанные списки - это динамические структуры, которые позволяют хранить переменное количество элементов.","Вам не нужно заранее определять размер списка, как в случае с массивами. Связанный список может быть настолько большим, насколько вы хотите, добавляя память по мере необходимости.",Qual è il vantaggio degli elenchi collegati rispetto agli array?,"Gli elenchi collegati sono strutture dinamiche, che consentono di memorizzare un numero variabile di elementi.",Non è necessario predeterminare la dimensione dell&#39;elenco come si fa con gli array. Gli elenchi collegati possono essere grandi quanto vuoi aggiungendo memoria secondo necessità.,¿Cuál es la ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas son estructuras dinámicas que permiten almacenar un número variable de elementos.,"No tiene que predeterminar el tamaño de su lista como lo hace con las matrices. La lista vinculada tiene la capacidad de ser tan grande como desee, agregando memoria según sea necesario.",Jaka jest przewaga połączonych list nad tablicami?,"Listy połączone to struktury dynamiczne, które pozwalają na przechowywanie zmiennej liczby elementów.","Nie musisz z góry określać rozmiaru listy, tak jak w przypadku tablic. Połączone listy mogą być tak duże, jak chcesz, dodając pamięć w razie potrzeby.",Lợi thế của danh sách liên kết so với mảng là gì?,"Danh sách được liên kết là cấu trúc động, cho phép lưu trữ một số phần tử thay đổi.",Bạn không cần phải xác định trước kích thước danh sách của mình như khi làm với mảng. Danh sách được liên kết có khả năng lớn như bạn muốn chúng thêm bộ nhớ nếu cần.,配列に対するリンクリストの利点は何ですか？,リンクリストは動的な構造であり、可変数の要素を格納できます。,配列の場合のように、リストのサイズを事前に決定する必要はありません。リンクリストには、必要に応じてメモリを追加するために必要なだけ大きくする機能があります。,链表相对于数组的优势是什么？,链接列表是动态结构，可以存储可变数量的元素。,您不必像使用数组那样预先确定列表大小。链表可以随您的需要添加内存而变大。,ما هي ميزة القوائم المرتبطة على المصفوفات؟,القوائم المرتبطة عبارة عن هياكل ديناميكية تسمح بتخزين عدد متغير من العناصر.,لست مضطرًا إلى التحديد المسبق لحجم قائمتك كما تفعل مع المصفوفات. تتمتع القائمة المرتبطة بالقدرة على أن تكون كبيرة بالقدر الذي تريده مع إضافة الذاكرة حسب الحاجة.,У чому перевага зв’язаних списків перед масивами?,"Зв’язані списки - це динамічні структури, які дозволяють зберігати змінну кількість елементів.","Вам не потрібно визначати розмір списку заздалегідь, як це потрібно для масивів. Зв’язані списки можуть бути настільки великими, наскільки ви хочете, щоб вони додавали пам’ять за необхідності.",Qual é a vantagem das listas vinculadas sobre os arrays?,Listas vinculadas são estruturas dinâmicas que permitem o armazenamento de um número variável de elementos.,"Você não precisa predeterminar o tamanho da lista como faz com os arrays. A lista vinculada pode ser tão grande quanto você quiser, adicionando memória conforme necessário.",مزیت لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی ساختارهای پویایی هستند که اجازه می دهند تعداد متغیری از عناصر ذخیره شوند.,لازم نیست همانند آرایه ها ، اندازه لیست خود را از قبل تعیین کنید. لیست پیوندی این توانایی را دارد که به همان اندازه که می خواهید حافظه را اضافه کنید.,Quin avantatge tenen les llistes enllaçades sobre les matrius?,Les llistes enllaçades són estructures dinàmiques que permeten emmagatzemar un nombre variable d’elements.,"No cal que predetermineu la mida de la vostra llista com ho feu amb les matrius. Les llistes enllaçades poden ser tan grans com vulgueu, afegint memòria segons calgui.",Која је предност повезаних листа над низовима?,"Повезане листе су динамичке структуре, које омогућавају чување променљивог броја елемената.",Не морате унапред одредити величину листе као што је то случај са низовима. Повезане листе могу да буду толико велике колико желите да додају меморију по потреби.,Apa keuntungan dari daftar tertaut dibandingkan array?,"Daftar tertaut adalah struktur dinamis, yang memungkinkan penyimpanan sejumlah elemen variabel.","Anda tidak harus menentukan ukuran daftar Anda seperti yang Anda lakukan dengan array. Daftar tertaut memiliki kemampuan untuk menjadi sebesar yang Anda inginkan, menambahkan memori sesuai kebutuhan.",Hva er fordelen med koblede lister i forhold til matriser?,"Koblede lister er dynamiske strukturer, som gjør det mulig å lagre et variabelt antall elementer.",Du trenger ikke å forhåndsbestemme listestørrelsen slik du gjør med arrays. Koblet liste har muligheten til å være så stor som du vil at de skal legge til minne etter behov.,배열에 비해 연결된 목록의 장점은 무엇입니까?,"연결된 목록은 동적 구조로, 다양한 수의 요소를 저장할 수 있습니다.",배열 에서처럼 목록 크기를 미리 결정할 필요가 없습니다. 연결된 목록에는 필요한만큼 메모리를 추가 할 수있는 기능이 있습니다.,Mikä on linkitettyjen luetteloiden etu matriiseihin verrattuna?,"Linkitetyt luettelot ovat dynaamisia rakenteita, joiden avulla voidaan tallentaa vaihteleva määrä elementtejä.",Sinun ei tarvitse määrittää ennalta luettelosi kokoa kuten matriisien kanssa. Linkitetyn luettelon kyky olla niin suuri kuin haluat niiden lisäävän muistia tarpeen mukaan.,Mi az előnye a kapcsolt listáknak a tömbökkel szemben?,"Az összekapcsolt listák dinamikus struktúrák, amelyek változó számú elem tárolását teszik lehetővé.","Nem kell előre meghatároznia a lista méretét, mint a tömböknél. Az összekapcsolt lista képes akkora méretűnek lennie, amennyire csak szeretné, ha szükséges memóriát ad hozzá.",Jaká je výhoda propojených seznamů oproti polím?,"Propojené seznamy jsou dynamické struktury, které umožňují uložit proměnný počet prvků.","Nemusíte předem určovat velikost seznamu jako u polí. Propojený seznam má schopnost být tak velký, jak chcete, aby podle potřeby přidával paměť.",Koja je prednost povezanih lista nad nizovima?,"Povezane liste su dinamičke strukture, koje omogućuju pohranjivanje promjenjivog broja elemenata.",Ne morate unaprijed odrediti veličinu liste kao što je to slučaj s nizovima. Povezane liste mogu biti velike onoliko koliko želite da dodaju memoriju po potrebi.
431,431,415,3.1,The function signature includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,Die Funktionssignatur enthält den Namen der Funktion und die Typen ihrer Argumente.,Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,Ang pirma sa pagpaandar kauban ang ngalan sa pagpaandar ug mga lahi sa mga argumento niini.,Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,Funktionssignaturen innehåller namnet på funktionen och typerna av dess argument.,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,La signature de la fonction comprend le nom de la fonction et les types de ses arguments.,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,De functiehandtekening bevat de naam van de functie en de typen argumenten.,Что включает в себя сигнатура функции?,Имя функции и типы параметров.,Сигнатура функции включает имя функции и типы ее аргументов.,Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,La firma della funzione include il nome della funzione e i tipi dei suoi argomenti.,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,La firma de la función incluye el nombre de la función y los tipos de sus argumentos.,Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,Podpis funkcji zawiera nazwę funkcji i typy jej argumentów.,Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,Chữ ký hàm bao gồm tên của hàm và các loại đối số của nó.,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数シグネチャには、関数の名前とその引数のタイプが含まれます。,功能签名包括什么？,函数的名称和参数的类型。,函数签名包括函数的名称及其参数的类型。,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,يتضمن توقيع الوظيفة اسم الوظيفة وأنواع الوسائط الخاصة بها.,Що включає підпис функції?,Назва функції та типи параметрів.,Підпис функції включає ім&#39;я функції та типи її аргументів.,O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,A assinatura da função inclui o nome da função e os tipos de seus argumentos.,امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,امضای تابع شامل نام تابع و انواع آرگومان های آن است.,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,La signatura de la funció inclou el nom de la funció i els tipus dels seus arguments.,Шта укључује потпис функције?,Назив функције и врсте параметара.,Потпис функције укључује име функције и врсте њених аргумената.,Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,Tanda tangan fungsi menyertakan nama fungsi dan tipe argumennya.,Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,Funksjonssignaturen inkluderer navnet på funksjonen og typene av argumentene.,함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수 서명에는 함수 이름과 인수 유형이 포함됩니다.,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,Funktion allekirjoitus sisältää funktion nimen ja sen argumenttien tyypit.,Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,A függvény aláírása tartalmazza a függvény nevét és argumentumainak típusait.,Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,Podpis funkce zahrnuje název funkce a typy jejích argumentů.,Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,Potpis funkcije uključuje ime funkcije i vrste njenih argumenata.
432,432,1084,6.6,-Nonconstant pointer to nonconstant data       -Nonconstant pointer to constant data        -Constant pointer to nonconstant data         -Constant pointer to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",What are the different ways to pass a pointer to a function?,5.0,"Es gibt vier Möglichkeiten: nicht konstanter Zeiger auf konstante Daten, nicht konstanter Zeiger auf nicht konstante Daten, konstanter Zeiger auf konstante Daten, konstanter Zeiger auf nicht konstante Daten.","Welche verschiedenen Möglichkeiten gibt es, einen Zeiger auf eine Funktion zu übergeben?",- Nicht konstanter Zeiger auf nicht konstante Daten - Nicht konstanter Zeiger auf konstante Daten - Konstanter Zeiger auf nicht konstante Daten - Konstanter Zeiger auf konstante Daten,Unsa ang lainlaing mga paagi aron maipasa ang usa ka pointer sa usa ka kalihokan?,"Adunay upat ka mga paagi: dili makanunayon nga tudlo sa kanunay nga datos, dili padayon nga tudlo sa dili pagsalig data, kanunay nga tudlo sa kanunay nga datos, kanunay nga tudlo sa dili makanunayon nga datos.",-Nonconstant pointer sa nonconstant data -Nonconstant pointer sa kanunay nga data -Constant pointer sa nonconstant data -Constant pointer sa kanunay data,Vilka är de olika sätten att skicka en pekare till en funktion?,"Det finns fyra sätt: icke-konstant pekare till konstant data, icke-konstant pekare till icke-konstant data, konstant pekare till konstant data, konstant pekare till icke-konstant data.",-Konstant pekare till icke-konstant data -Konstant pekare till konstant data -Konstant pekare till icke-konstant data -Konstant pekare till konstant data,Quelles sont les différentes manières de transmettre un pointeur à une fonction?,"Il existe quatre façons: pointeur non constant vers des données constantes, pointeur non constant vers des données non constantes, pointeur constant vers des données constantes, pointeur constant vers des données non constantes.",- Pointeur non constant vers des données non constantes - Pointeur non constant vers des données constantes - Pointeur constant vers des données non constantes - Pointeur constant vers des données constantes,Wat zijn de verschillende manieren om een aanwijzer door te geven aan een functie?,"Er zijn vier manieren: niet-constante pointer naar constante gegevens, niet-constante pointer naar niet-constante data, constante pointer naar constante data, constante pointer naar niet-constante data.",-Niet-constante aanwijzer naar niet-constante gegevens -Niet-constante aanwijzer naar constante gegevens -Constante aanwijzer naar niet-constante gegevens -Constante aanwijzer naar constante gegevens,Какими способами можно передать указатель на функцию?,"Существует четыре способа: непостоянный указатель на постоянные данные, непостоянный указатель на непостоянные данные, постоянный указатель на постоянные данные, постоянный указатель на непостоянные данные.",- Непостоянный указатель на непостоянные данные - Непостоянный указатель на постоянные данные - Постоянный указатель на непостоянные данные - Постоянный указатель на постоянные данные,Quali sono i diversi modi per passare un puntatore a una funzione?,"Ci sono quattro modi: puntatore non costante a dati costanti, puntatore non costante a dati non costanti, puntatore costante a dati costanti, puntatore costante a dati non costanti.",- Puntatore non costante a dati non costanti - Puntatore non costante a dati costanti - Puntatore costante a dati non costanti - Puntatore costante a dati costanti,¿Cuáles son las diferentes formas de pasar un puntero a una función?,"Hay cuatro formas: puntero no constante a datos constantes, puntero no constante a datos no constantes, puntero constante a datos constantes, puntero constante a datos no constantes.",-Puntero no constante a datos no constantes -Puntero no constante a datos constantes -Puntero constante a datos no constantes -Puntero constante a datos constantes,Jakie są różne sposoby przekazywania wskaźnika do funkcji?,"Istnieją cztery sposoby: niestały wskaźnik do stałych danych, niestały wskaźnik do niestałych danych, stały wskaźnik do stałych danych, stały wskaźnik do niestałych danych.",-Niestały wskaźnik do niestałych danych -Niestały wskaźnik do stałych danych -Stały wskaźnik do niestałych danych -Stały wskaźnik do stałych danych,Các cách khác nhau để truyền một con trỏ đến một hàm là gì?,"Có bốn cách: con trỏ không đổi tới dữ liệu không đổi, con trỏ không kiên định tới dữ liệu không thay đổi, con trỏ liên tục tới dữ liệu không đổi, con trỏ hằng tới dữ liệu không kiên định.",-Con trỏ không liên tục đến dữ liệu không liên tục -Con trỏ không liên quan đến dữ liệu không đổi -Con trỏ liên tục đến dữ liệu không liên tục -Con trỏ liên tục đến dữ liệu không đổi,関数へのポインタを渡すさまざまな方法は何ですか？,4つの方法があります：定数データへの非定数ポインター、非定数データへの非定数ポインター、定数データへの定数ポインター、非定数データへの定数ポインター。,-非定数データへの非定数ポインタ-定数データへの非定数ポインタ-非定数データへの定数ポインタ-定数データへの定数ポインタ,将指针传递给函数有哪些不同的方法？,有四种方法：指向常量数据的非恒定指针，指向常量数据的非恒定指针，指向常量数据的常量指针，指向非常量数据的常量指针。,-指向非恒定数据的非恒定指针-指向恒定数据的非恒定指针-指向非恒定数据的恒定指针-指向恒定数据的恒定指针,ما هي الطرق المختلفة لتمرير مؤشر إلى دالة؟,هناك أربع طرق: مؤشر غير ثابت إلى بيانات ثابتة ، ومؤشر غير ثابت إلى بيانات غير ثابتة ، ومؤشر ثابت إلى بيانات ثابتة ، ومؤشر ثابت إلى بيانات غير ثابتة.,- مؤشر غير ثابت إلى بيانات غير ثابتة - مؤشر غير ثابت إلى بيانات ثابتة - مؤشر ثابت إلى بيانات غير ثابتة - مؤشر ثابت إلى بيانات ثابتة,Які різні способи передачі покажчика на функцію?,"Існує чотири шляхи: непостійний вказівник на постійні дані, непостійний вказівник на непостійні дані, постійний вказівник на постійні дані, постійний вказівник на непостійні дані.",-Непостійний вказівник на непостійні дані -Непостійний вказівник на постійні дані -Постійний вказівник на непостійні дані -Постійний вказівник на постійні дані,Quais são as diferentes maneiras de passar um ponteiro para uma função?,"Existem quatro maneiras: ponteiro não constante para dados constantes, ponteiro não constante para dados não constantes, ponteiro constante para dados constantes, ponteiro constante para dados não constantes.",- Ponteiro não constante para dados não constantes - Ponteiro não constante para dados constantes - Ponteiro constante para dados não constantes - Ponteiro constante para dados constantes,روش های مختلف برای انتقال نشانگر به یک عملکرد چیست؟,چهار روش وجود دارد: اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده ثابت ، اشاره گر ثابت به داده غیر ثابت.,- اشاره گر نا ثابت به داده غیر ثابت - اشاره گر ثابت به داده ثابت - اشاره گر ثابت به داده غیر ثابت - اشاره گر ثابت به داده ثابت,Quines són les diferents maneres de passar un punter a una funció?,"Hi ha quatre maneres: punter no constant a dades constants, punter no constant a dades no constants, punter constant a dades constants, punter constant a dades no constants.",-Puntador no constant a dades no constants -Puntador no constant a dades constants -Puntador constant a dades no constants -Puntador constant a dades constants,Који су различити начини прослеђивања показивача на функцију?,"Постоје четири начина: нестални показивач на сталне податке, нестални показивач на несталне податке, стални показивач на сталне податке, стални показивач на несталне податке.",-Неконстантни показивач на несталне податке -Непостојани показивач на константне податке -Константни показивач на несталне податке -Константни показивач на сталне податке,Apa sajakah cara berbeda untuk meneruskan penunjuk ke suatu fungsi?,"Ada empat cara: penunjuk tidak konstan ke data konstan, penunjuk tidak konstan ke data tidak konstan, penunjuk konstan ke data konstan, penunjuk konstan ke data tidak konstan.",-Penunjuk tidak konstan ke data non-konstan -Penunjuk tidak konstan ke data konstan -Penunjuk konstan ke data tidak konstan -Penunjuk konstan ke data konstan,Hva er de forskjellige måtene å overføre en peker til en funksjon på?,"Det er fire måter: ikke-konstant peker til konstant data, ikke-konstant peker til ikke-konstant data, konstant peker til konstant data, konstant peker til ikke-konstant data.",-Ikonstant peker til ikke-konstant data -Ikonstant peker til konstant data -Konstant peker til ikke-konstant data -Konstant peker til konstant data,함수에 대한 포인터를 전달하는 다른 방법은 무엇입니까?,"네 가지 방법이 있습니다 : 상수 데이터에 대한 비상 수 포인터, 상수 데이터에 대한 상수 포인터, 상수 데이터에 대한 상수 포인터, 비상 수 데이터에 대한 상수 포인터.",-비상 수 데이터에 대한 불일치 포인터-상수 데이터에 대한 불일치 포인터-비상 수 데이터에 대한 상수 포인터-상수 데이터에 대한 상수 포인터,Mitä eri tapoja siirtää osoitin funktiolle?,"On neljä tapaa: jatkuva osoitin vakiotietoihin, epävakaa osoitin epävakaisiin tietoihin, vakioosoitin vakiotietoihin, jatkuva osoitin epävakaisiin tietoihin.",-Vakio-osoitin ei-vakiomuotoiseen dataan -Vakio-osoitin vakiotietoihin -Vakio-osoitin epävakaisiin tietoihin -Vakio-osoitin vakiotietoihin,Milyen módon lehet a mutatót átadni egy függvénynek?,"Négy módja van: nem állandó mutató az állandó adatokhoz, a nem állandó mutató a nem állandó adatokhoz, az állandó mutató az állandó adatokhoz, az állandó mutató a nem állandó adatokhoz.",-Nonconstant mutató a nonconstant adatokra -Nonconstant pointer az állandó adatokra -Constant pointer a nem konstans adatokra -Constant pointer az állandó adatokra,"Jaké jsou různé způsoby, jak předat ukazatel na funkci?","Existují čtyři způsoby: nekonstantní ukazatel na konstantní data, nekonstantní ukazatel na nekonstantní data, konstantní ukazatel na konstantní data, konstantní ukazatel na nekonstantní data.",- Nekonstantní ukazatel na nekonstantní data - Nekonstantní ukazatel na konstantní data - Konstantní ukazatel na nekonstantní data - Konstantní ukazatel na konstantní data,Koji su različiti načini prosljeđivanja pokazivača na funkciju?,"Postoje četiri načina: nestalni pokazivač na konstantne podatke, nestalni pokazivač na nestalne podatke, stalni pokazivač na stalne podatke, stalni pokazivač na nestalne podatke.",-Nekonstantni pokazivač na nestalne podatke -Nekonstantni pokazivač na konstantne podatke -Konstantni pokazivač na nestalne podatke -Konstantni pokazivač na stalne podatke
433,433,2414,12.1,Log(n) where n is the number of nodes.,The height of the tree.,How many steps does it take to search a node in a binary search tree?,5.0,Die Höhe des Baumes.,"Wie viele Schritte sind erforderlich, um einen Knoten in einem binären Suchbaum zu durchsuchen?",Protokoll (n) wobei n die Anzahl der Knoten ist.,Pila ka mga lakang ang gikinahanglan aron makapangita usa ka node sa usa ka binary search tree?,Ang kataas sa kahoy.,Pag-log (n) diin ang n ang ihap sa mga node.,Hur många steg tar det för att söka efter en nod i ett binärt sökträd?,Trädets höjd.,Logga (n) där n är antalet noder.,Combien d&#39;étapes faut-il pour rechercher un nœud dans une arborescence de recherche binaire?,La hauteur de l&#39;arbre.,Log (n) où n est le nombre de nœuds.,Hoeveel stappen zijn er nodig om een knooppunt in een binaire zoekboom te zoeken?,De hoogte van de boom.,Log (n) waarbij n het aantal knooppunten is.,Сколько шагов нужно для поиска узла в двоичном дереве поиска?,Высота дерева.,"Log (n), где n - количество узлов.",Quanti passaggi sono necessari per cercare un nodo in un albero di ricerca binario?,L&#39;altezza dell&#39;albero.,Log (n) dove n è il numero di nodi.,¿Cuántos pasos se necesitan para buscar un nodo en un árbol de búsqueda binaria?,La altura del árbol.,Log (n) donde n es el número de nodos.,Ile kroków wymaga przeszukanie węzła w drzewie wyszukiwania binarnego?,Wysokość drzewa.,"Log (n), gdzie n to liczba węzłów.",Có bao nhiêu bước để tìm kiếm một nút trong cây tìm kiếm nhị phân?,Chiều cao của cây.,Log (n) với n là số nút.,二分探索木でノードを検索するのに何ステップかかりますか？,木の高さ。,Log（n）ここで、nはノードの数です。,在二叉搜索树中搜索节点需要多少步骤？,树的高度。,Log（n），其中n是节点数。,كم عدد الخطوات التي يستغرقها البحث عن عقدة في شجرة بحث ثنائية؟,ارتفاع الشجرة.,Log (n) حيث n هو عدد العقد.,Скільки кроків потрібно для пошуку вузла в двійковому дереві пошуку?,Висота дерева.,"Журнал (n), де n - кількість вузлів.",Quantas etapas são necessárias para pesquisar um nó em uma árvore de pesquisa binária?,A altura da árvore.,Log (n) onde n é o número de nós.,چند مرحله برای جستجوی گره در یک درخت جستجوی باینری انجام می شود؟,ارتفاع درخت.,ورود به سیستم (n) که n تعداد گره ها است.,Quants passos cal fer per cercar un node en un arbre de cerca binari?,L&#39;alçada de l&#39;arbre.,Registre (n) on n és el nombre de nodes.,Колико корака је потребно за претрагу чвора у бинарном стаблу претраживања?,Висина стабла.,Евиденција (н) где је н број чворова.,Berapa banyak langkah yang diperlukan untuk mencari node di pohon pencarian biner?,Ketinggian pohon.,Log (n) dengan n adalah jumlah node.,Hvor mange trinn tar det å søke i en node i et binært søketre?,Høyden på treet.,Logg (n) der n er antall noder.,이진 검색 트리에서 노드를 검색하려면 몇 단계가 필요합니까?,나무의 높이.,Log (n) 여기서 n은 노드 수입니다.,Kuinka monta vaihetta tarvitaan etsimään solmua binäärihakupuussa?,Puun korkeus.,"Loki (n), jossa n on solmujen määrä.",Hány lépés szükséges egy csomópont kereséséhez egy bináris keresési fában?,A fa magassága.,"Log (n), ahol n a csomópontok száma.",Kolik kroků je potřeba k vyhledání uzlu v binárním vyhledávacím stromu?,Výška stromu.,"Log (n), kde n je počet uzlů.",Koliko je koraka potrebno za pretraživanje čvora u binarnom stablu pretraživanja?,Visina stabla.,Dnevnik (n) gdje je n broj čvorova.
434,434,1156,7.1,linear collection of self-referential nodes connected by pointers.,A collection of elements that can be allocated dynamically.,What is a linked list?,4.0,"Eine Sammlung von Elementen, die dynamisch zugewiesen werden können.",Was ist eine verknüpfte Liste?,"lineare Sammlung von selbstreferenziellen Knoten, die durch Zeiger verbunden sind.",Unsa ang usa ka nalakip nga lista?,Usa ka koleksyon sa mga elemento nga mahimong gigahin nga dinamiko.,linear nga koleksyon sa kaugalingon nga mga referral node nga konektado sa mga pointers.,Vad är en länkad lista?,En samling element som kan tilldelas dynamiskt.,linjär samling av självreferensnoder kopplade till pekare.,Qu&#39;est-ce qu&#39;une liste chaînée?,Une collection d&#39;éléments qui peuvent être alloués dynamiquement.,collection linéaire de nœuds autoréférentiels connectés par des pointeurs.,Wat is een gekoppelde lijst?,Een verzameling elementen die dynamisch kunnen worden toegewezen.,lineaire verzameling van zelfreferentiële knooppunten verbonden door pointers.,Что такое связанный список?,"Коллекция элементов, которые можно размещать динамически.","линейный набор самореферентных узлов, соединенных указателями.",Cos&#39;è un elenco collegato?,Una raccolta di elementi che possono essere allocati dinamicamente.,raccolta lineare di nodi autoreferenziali collegati da puntatori.,¿Qué es una lista vinculada?,Una colección de elementos que se pueden asignar dinámicamente.,colección lineal de nodos autorreferenciales conectados por punteros.,Co to jest lista połączona?,"Zbiór elementów, które mogą być przydzielane dynamicznie.",liniowy zbiór węzłów odwołujących się do siebie połączonych wskaźnikami.,Danh sách liên kết là gì?,Một tập hợp các phần tử có thể được cấp phát động.,tập hợp tuyến tính của các nút tự tham chiếu được kết nối bằng con trỏ.,リンクリストとは何ですか？,動的に割り当てることができる要素のコレクション。,ポインタで接続された自己参照ノードの線形コレクション。,什么是链表？,可以动态分配的元素的集合。,通过指针连接的自指节点的线性集合。,ما هي القائمة المرتبطة؟,مجموعة من العناصر التي يمكن تخصيصها ديناميكيًا.,مجموعة خطية من العقد المرجعية الذاتية المتصلة بواسطة المؤشرات.,Що таке пов&#39;язаний список?,"Колекція елементів, які можна динамічно розподіляти.","лінійна колекція самореференційних вузлів, з&#39;єднаних покажчиками.",O que é uma lista vinculada?,Uma coleção de elementos que podem ser alocados dinamicamente.,coleção linear de nós autorreferenciais conectados por ponteiros.,لیست پیوندی چیست؟,مجموعه ای از عناصر است که می تواند به صورت پویا اختصاص داده شود.,مجموعه ای خطی از گره های خود ارجاعی متصل شده توسط اشاره گرها.,Què és una llista enllaçada?,Una col·lecció d’elements que es poden assignar dinàmicament.,col·lecció lineal de nodes autoreferencials connectats per punteres.,Шта је повезана листа?,Колекција елемената који се могу динамички доделити.,линеарна колекција аутореференцијалних чворова повезаних показивачима.,Apa itu daftar tertaut?,Kumpulan elemen yang dapat dialokasikan secara dinamis.,kumpulan linier dari node referensi sendiri yang dihubungkan dengan pointer.,Hva er en koblet liste?,En samling av elementer som kan tildeles dynamisk.,lineær samling av selvhenvisende noder forbundet med pekere.,연결 목록이란 무엇입니까?,동적으로 할당 할 수있는 요소 모음입니다.,포인터로 연결된 자체 참조 노드의 선형 컬렉션.,Mikä on linkitetty luettelo?,"Kokoelma elementtejä, jotka voidaan allokoida dynaamisesti.",lineaarinen kokoelma osoittimilla yhdistettyjä itsereferenssisolmuja.,Mi a linkelt lista?,Dinamikusan lefoglalható elemek gyűjteménye.,mutatókkal összekapcsolt önreferenciális csomópontok lineáris gyűjteménye.,Co je to propojený seznam?,"Kolekce prvků, které lze dynamicky přidělit.",lineární soubor autoreferenčních uzlů spojených ukazateli.,Šta je povezana lista?,Zbirka elemenata koji se mogu dinamički dodijeliti.,linearna kolekcija autoreferencijalnih čvorova povezanih pokazivačima.
435,435,1162,7.2,"Array size is fixed,but Linked is not fixed.",The linked lists can be of variable length.,What is the main advantage of linked lists over arrays?,5.0,Die verknüpften Listen können von variabler Länge sein.,Was ist der Hauptvorteil von verknüpften Listen gegenüber Arrays?,"Die Arraygröße ist fest, aber Linked ist nicht festgelegt.",Unsa ang punoan nga bentaha sa mga nalambigit nga lista sa mga pag-array?,Ang gilakip nga mga lista mahimong adunay gitas-on nga variable.,"Ang kadako sa Array naayo na, apan ang gi-link dili ayohon.",Vad är den största fördelen med länkade listor jämfört med matriser?,De länkade listorna kan ha varierande längd.,"Matrisstorleken är fast, men länkad är inte fixad.",Quel est le principal avantage des listes chaînées par rapport aux tableaux?,Les listes chaînées peuvent être de longueur variable.,"La taille du tableau est fixe, mais Linked n&#39;est pas fixe.",Wat is het belangrijkste voordeel van gekoppelde lijsten ten opzichte van arrays?,De gekoppelde lijsten kunnen een variabele lengte hebben.,"De matrixgrootte is vast, maar Linked staat niet vast.",В чем главное преимущество связанных списков перед массивами?,Связанные списки могут быть переменной длины.,"Размер массива фиксированный, но связанный не фиксированный.",Qual è il vantaggio principale degli elenchi collegati rispetto agli array?,Le liste collegate possono essere di lunghezza variabile.,"La dimensione dell&#39;array è fissa, ma Linked non è fissa.",¿Cuál es la principal ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas pueden tener una longitud variable.,"El tamaño de la matriz es fijo, pero Linked no es fijo.",Jaka jest główna przewaga połączonych list nad tablicami?,Połączone listy mogą mieć różną długość.,"Rozmiar tablicy jest stały, ale link nie jest ustalony.",Ưu điểm chính của danh sách liên kết so với mảng là gì?,Các danh sách được liên kết có thể có độ dài thay đổi.,"Kích thước mảng được cố định, nhưng Liên kết không cố định.",配列に対するリンクリストの主な利点は何ですか？,リンクリストは可変長にすることができます。,配列サイズは固定されていますが、リンクは固定されていません。,链表相对于数组的主要优点是什么？,链表的长度可以变化。,数组大小是固定的，但链接的不是固定的。,ما هي الميزة الرئيسية للقوائم المرتبطة على المصفوفات؟,يمكن أن تكون القوائم المرتبطة متغيرة الطول.,تم إصلاح حجم الصفيف ، ولكن لم يتم إصلاح الارتباط.,Яка головна перевага пов’язаних списків над масивами?,Пов’язані списки можуть мати різну довжину.,"Розмір масиву фіксований, але Linked не фіксований.",Qual é a principal vantagem das listas vinculadas em relação às matrizes?,As listas vinculadas podem ter comprimento variável.,"O tamanho do array é fixo, mas Linked não é fixo.",مزیت اصلی لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی می توانند از طول متغیر باشند.,اندازه آرایه ثابت است ، اما پیوند ثابت نیست.,Quin és el principal avantatge de les llistes enllaçades sobre les matrius?,Les llistes enllaçades poden tenir una longitud variable.,"La mida de la matriu és fixa, però enllaçada no.",Која је главна предност повезаних листа над низовима?,Повезане листе могу бити променљиве дужине.,"Величина низа је фиксна, али Линкед није фиксна.",Apa keuntungan utama dari daftar tertaut dibandingkan array?,Panjang daftar tertaut bisa bervariasi.,"Ukuran array tetap, tetapi Linked tidak tetap.",Hva er den største fordelen med koblede lister fremfor matriser?,De lenkede listene kan ha variabel lengde.,"Arraystørrelse er fast, men Linked er ikke løst.",배열에 비해 연결 목록의 주요 이점은 무엇입니까?,연결된 목록은 가변 길이 일 수 있습니다.,배열 크기는 고정되어 있지만 Linked는 고정되어 있지 않습니다.,Mikä on linkitettyjen luetteloiden tärkein etu matriiseihin nähden?,Linkitetyt luettelot voivat olla vaihtelevia pituisia.,"Matriisin koko on kiinteä, mutta linkitetty ei ole kiinteä.",Mi a linkelt listák fő előnye a tömbökhöz képest?,A linkelt listák változó hosszúságúak lehetnek.,"A tömb mérete rögzített, de a Linked nem rögzített.",Jaká je hlavní výhoda propojených seznamů oproti polím?,Propojené seznamy mohou mít různou délku.,"Velikost pole je pevná, ale propojená není pevná.",Koja je glavna prednost povezanih lista nad nizovima?,Povezane liste mogu biti promjenljive dužine.,"Veličina polja je fiksna, ali Linked nije fiksna."
436,436,201,1.7,"a while loop is pre-check (it checks the condition statement before it executes the code within the while block)  a do while loop is post-check (it checks the condition AFTER the block executes, it runs at least once no matter what the condition statement is)",The block inside a do...while statement will execute at least once.,What is the main difference between a while and a do...while statement?,5.0,Der Block in einer do ... while-Anweisung wird mindestens einmal ausgeführt.,Was ist der Hauptunterschied zwischen einer while- und einer do ... while-Anweisung?,"Eine while-Schleife wird vorab überprüft (sie überprüft die Bedingungsanweisung, bevor sie den Code innerhalb des while-Blocks ausführt). Eine do while-Schleife wird nachgeprüft (sie überprüft die Bedingung, nachdem der Block ausgeführt wurde, und wird mindestens einmal ausgeführt, unabhängig davon, was der ist Bedingungserklärung ist)",Unsa ang punoan nga kalainan tali sa usa ka samtang ug usa nga buhaton ... samtang pahayag?,Ang bloke sa sulud sa usa ka buhaton ... samtang ang pahayag magpatuman labing menos kausa.,"ang usa ka loop samtang pauna nga pagsusi (gisusi niini ang pahayag sa kondisyon sa wala pa kini ipatuman ang code sa sulud nga bloke samtang) usa ka buhaton samtang ang loop mao ang post-check (gisusi niini ang kondisyon pagkahuman sa pagpatuman sa bloke, kini modagan labing menos kausa ka beses bisan kung unsa ang pahayag sa kahimtang mao ang)",Vad är den största skillnaden mellan ett tag och ett do ... while-uttalande?,Blocket inuti ett do ... while-uttalande kommer att köras minst en gång.,"en stundslinga är förkontroll (den kontrollerar tillståndsuttalandet innan den kör koden inom while-blocket) en do while-loop är efterkontroll (den kontrollerar tillståndet EFTER att blocket körs, det körs minst en gång oavsett vad tillståndsförklaring är)",Quelle est la principale différence entre une déclaration while et une déclaration do ... while?,Le bloc à l&#39;intérieur d&#39;une instruction do ... while s&#39;exécutera au moins une fois.,"une boucle while est pré-vérification (elle vérifie l&#39;instruction de condition avant d&#39;exécuter le code dans le bloc while) une boucle do while est post-vérification (elle vérifie la condition APRÈS l&#39;exécution du bloc, elle s&#39;exécute au moins une fois, peu importe ce que le l&#39;instruction de condition est)",Wat is het belangrijkste verschil tussen een while en een do ... while-verklaring?,Het blok binnen een do ... while-instructie wordt minstens één keer uitgevoerd.,"een while-lus is pre-check (hij controleert de voorwaarde-instructie voordat hij de code binnen het while-blok uitvoert) een do while-lus is post-check (hij controleert de voorwaarde NADAT het blok is uitgevoerd, hij wordt minstens één keer uitgevoerd, ongeacht wat de voorwaarde verklaring is)",В чем основное различие между оператором while и do ... while?,Блок внутри оператора do ... while будет выполнен как минимум один раз.,"цикл while - это предварительная проверка (он проверяет оператор условия перед выполнением кода в блоке while) цикл do while является пост-проверкой (он проверяет условие ПОСЛЕ выполнения блока, он запускается по крайней мере один раз, независимо от того, что условие условие)",Qual è la differenza principale tra un&#39;istruzione while e a do ... while?,Il blocco all&#39;interno di un&#39;istruzione do ... while verrà eseguito almeno una volta.,"un ciclo while è un pre-controllo (controlla l&#39;istruzione della condizione prima di eseguire il codice all&#39;interno del blocco while) un ciclo do while è un post-controllo (controlla la condizione DOPO l&#39;esecuzione del blocco, viene eseguito almeno una volta indipendentemente dal condizione è)",¿Cuál es la principal diferencia entre una declaración while y do ... while?,El bloque dentro de una instrucción do ... while se ejecutará al menos una vez.,"un bucle while es una verificación previa (verifica la declaración de condición antes de ejecutar el código dentro del bloque while) un bucle do while es una verificación posterior (verifica la condición DESPUÉS de que se ejecuta el bloque, se ejecuta al menos una vez sin importar la la declaración de condición es)",Jaka jest główna różnica między stwierdzeniem a while a do ... while?,Blok wewnątrz instrukcji do ... while zostanie wykonany co najmniej raz.,"a while jest sprawdzaniem wstępnym (sprawdza instrukcję warunku przed wykonaniem kodu w bloku while) a pętla do while jest sprawdzaniem końcowym (sprawdza warunek PO wykonaniu bloku, uruchamia się przynajmniej raz, bez względu na warunek jest)",Sự khác biệt chính giữa câu lệnh while và do ... while là gì?,Khối bên trong câu lệnh do ... while sẽ thực thi ít nhất một lần.,"vòng lặp while là kiểm tra trước (nó kiểm tra câu lệnh điều kiện trước khi thực thi mã bên trong khối while) vòng lặp do while là kiểm tra hậu (nó kiểm tra điều kiện SAU KHI khối thực thi, nó chạy ít nhất một lần bất kể câu lệnh điều kiện là)",whileステートメントとdo ... whileステートメントの主な違いは何ですか？,do ... whileステートメント内のブロックは、少なくとも1回実行されます。,whileループは事前チェック（whileブロック内のコードを実行する前に条件ステートメントをチェックします）do whileループは事後チェックです（ブロックの実行後に条件をチェックし、何があっても少なくとも1回は実行されます条件ステートメントは）,while和do ... while语句之间的主要区别是什么？,do ... while语句中的块将至少执行一次。,while循环是预检查（它在while块中执行代码之前检查条件语句），而do while循环是后检查（它在块执行后检查条件，无论执行什么操作都至少运行一次）。条件声明是）,ما هو الفرق الرئيسي بين جملة while و a do ... while؟,سيتم تنفيذ الكتلة داخل بيان do ... while مرة واحدة على الأقل.,حلقة while هي التحقق المسبق (فهي تتحقق من بيان الشرط قبل أن تنفذ الشفرة داخل الكتلة while) ، أما حلقة do while loop فهي فحص لاحق (يتحقق الشرط بعد تنفيذ الكتلة ، ويتم تشغيله مرة واحدة على الأقل بغض النظر عن ماهية بيان الشرط),Яка головна різниця між твердженням while та do ... while?,Блок усередині оператора do ... while виконуватиметься принаймні один раз.,"цикл while здійснює попередню перевірку (він перевіряє оператор умови перед тим, як виконати код у блоці while) цикл do while здійснює попередню перевірку (перевіряє стан ПІСЛЯ виконання блоку, він виконується принаймні один раз незалежно від того, що умова є)",Qual é a principal diferença entre a instrução while e do ... while?,O bloco dentro de uma instrução do ... while será executado pelo menos uma vez.,"um loop while é pré-checado (ele verifica a instrução de condição antes de executar o código dentro do bloco while) um loop do while é pós-verificado (ele verifica a condição APÓS o bloco ser executado, ele executa pelo menos uma vez, não importa o que declaração da condição é)",تفاوت اصلی میان جمله و حالات do ... while چیست؟,بلوک داخل دستور do ... while حداقل یک بار اجرا می شود.,حلقه while قبل از بررسی است (قبل از اجرای کد در بلوک while ، عبارت شرط را بررسی می کند) حلقه do while بعد از بررسی است (بعد از اجرای بلوک ، شرایط را بررسی می کند ، مهم نیست که حداقل یک بار اجرا شود) عبارت شرط است),Quina és la diferència principal entre una afirmació mentre que una sentència do ... while?,El bloc dins d&#39;una sentència do ... while s&#39;executarà almenys una vegada.,"un bucle while es comprova prèviament (comprova la sentència de condició abans que executi el codi dins del bloc while) un bucle do while es comprova després (comprova la condició DESPRÉS que s’executa el bloc, s’executa almenys una vegada, independentment del que sigui declaració de condició és)",Која је главна разлика између изјаве неко време и уради ... док?,Блок унутар наредбе до ... вхиле извршиће се најмање једном.,"петља вхиле је претходно провјерена (провјерава наредбу стања прије него што изврши код унутар блока вхиле) петља до вхиле је провјера (провјерава стање НАКОН извршења блока, покреће се најмање једном без обзира на Изјава о стању је)",Apa perbedaan utama antara pernyataan while dan do ... while?,Blok di dalam pernyataan do ... while akan dieksekusi setidaknya sekali.,"a while loop adalah pre-check (ia memeriksa pernyataan kondisi sebelum mengeksekusi kode dalam blok while) a do while loop adalah post-check (ia memeriksa kondisi SETELAH blok dieksekusi, ia berjalan setidaknya sekali tidak peduli apa pernyataan kondisi adalah)",Hva er hovedforskjellen mellom en stund og en gjør ... mens uttalelse?,Blokken inne i en gjør ... mens uttalelsen vil kjøres minst en gang.,"en stund-løkke er forhåndskontroll (den sjekker tilstandsuttalelsen før den utfører koden i mens blokken) en gjør mens sløyfen er etterkontroll (den sjekker tilstanden ETTER at blokken kjøres, den kjører minst en gang uansett hva tilstandserklæring er)",while과 do ... while 문의 주요 차이점은 무엇입니까?,do ... while 문 내부의 블록은 한 번 이상 실행됩니다.,while 루프는 사전 검사입니다 (while 블록 내에서 코드를 실행하기 전에 조건문을 확인합니다). do while 루프는 사후 검사입니다 (블록이 실행 된 후 조건을 확인합니다. 조건문은),Mikä on tärkein ero hetken ja tekemisen ... lausunnon välillä?,Lohko do ... while-lauseen sisällä suoritetaan ainakin kerran.,"jonkin aikaa silmukka on ennakkotarkistettu (se tarkistaa ehtoilmoituksen ennen kuin se suorittaa koodin while-lohkossa) do while loop on jälkitarkistus (se tarkistaa ehdon LOPUN suorittamisen jälkeen, se suoritetaan ainakin kerran riippumatta siitä, mikä ehtoilmoitus on)",Mi a fő különbség egy idő és egy tennivaló ... kijelentés között?,A blokk a do ... while utasításban legalább egyszer végrehajtásra kerül.,"a while ciklus előzetes ellenőrzés (ellenőrzi a feltétel utasítást, mielőtt végrehajtja a kódot a while blokkban) egy do while ciklus utólagos ellenőrzés (ellenőrzi a blokk végrehajtása utáni feltételt, legalább egyszer fut, függetlenül attól, hogy mi a feltétel állítás)",Jaký je hlavní rozdíl mezi příkazem while a do ... while?,Blok uvnitř příkazu do ... while se provede alespoň jednou.,"smyčka while je předběžná kontrola (kontroluje příkaz podmínky před provedením kódu v bloku while) smyčka do while je kontrola po kontrole (kontroluje podmínku PO provedení bloku, spustí se alespoň jednou bez ohledu na to, co podmínka prohlášení je)",Koja je glavna razlika između izjave neko vrijeme i do ... while?,Blok unutar naredbe do ... while izvršit će se najmanje jednom.,"petlja while je prethodno provjerena (provjerava uvjet stanja prije nego što izvrši kod unutar bloka while) petlja do while je provjera (provjerava stanje NAKON izvršenja bloka, izvodi se barem jednom bez obzira na Izjava o stanju je)"
437,437,124,1.5,-An identifier that holds a location in memory.,A location in memory that can store a value.,What is a variable?,4.0,"Ein Speicherort im Speicher, an dem ein Wert gespeichert werden kann.",Was ist eine Variable?,"-Eine Kennung, die einen Speicherort enthält.",Unsa ang variable?,Usa ka lokasyon sa memorya nga mahimong tipiganan ang usa ka kantidad.,-Usa ka nagpaila nga naghupot sa usa ka lokasyon sa memorya.,Vad är en variabel?,En plats i minnet som kan lagra ett värde.,-En identifierare som har en plats i minnet.,Qu&#39;est-ce qu&#39;une variable?,Un emplacement en mémoire qui peut stocker une valeur.,-Un identifiant qui contient un emplacement en mémoire.,Wat is een variabele?,Een locatie in het geheugen die een waarde kan opslaan.,-Een ID die een locatie in het geheugen bevat.,Что такое переменная?,"Место в памяти, в котором может храниться значение.","-Идентификатор, содержащий место в памяти.",Cos&#39;è una variabile?,Una posizione nella memoria che può memorizzare un valore.,-Un identificatore che contiene una posizione in memoria.,¿Qué es una variable?,Una ubicación en la memoria que puede almacenar un valor.,-Un identificador que guarda una ubicación en la memoria.,Co to jest zmienna?,"Miejsce w pamięci, w którym można przechowywać wartość.",-Identyfikator przechowujący lokalizację w pamięci.,Biến là gì?,Một vị trí trong bộ nhớ có thể lưu trữ một giá trị.,-Một định danh giữ một vị trí trong bộ nhớ.,変数とは何ですか？,値を格納できるメモリ内の場所。,-メモリ内の場所を保持する識別子。,什么是变量？,内存中可以存储值的位置。,-在内存中保存位置的标识符。,ما هو المتغير؟,موقع في الذاكرة يمكنه تخزين قيمة.,-معرّف يحتفظ بموقع في الذاكرة.,Що таке змінна?,"Місце в пам&#39;яті, яке може зберігати значення.","-Ідентифікатор, який зберігає місце в пам&#39;яті.",O que é uma variável?,Um local na memória que pode armazenar um valor.,-Um identificador que contém um local na memória.,متغیر چیست؟,مکانی در حافظه که می تواند مقداری را ذخیره کند.,-یک شناسه که مکانی را در حافظه نگهداری می کند.,Què és una variable?,Una ubicació a la memòria que pot emmagatzemar un valor.,-Un identificador que manté una ubicació a la memòria.,Шта је променљива?,Локација у меморији која може да ускладишти вредност.,-Идентификатор који држи локацију у меморији.,Apa itu variabel?,Lokasi di memori yang dapat menyimpan nilai.,-Pengenal yang menyimpan lokasi di memori.,Hva er en variabel?,En plassering i minnet som kan lagre en verdi.,-En identifikator som holder en plassering i minnet.,변수 란 무엇입니까?,값을 저장할 수있는 메모리의 위치입니다.,-메모리에 위치를 저장하는 식별자.,Mikä on muuttuja?,"Sijainti muistissa, joka voi tallentaa arvon.","-Tunniste, jolla on sijainti muistissa.",Mi a változó?,"Olyan hely a memóriában, amely értéket képes tárolni.","-Az azonosító, amely helyet foglal a memóriában.",Co je to proměnná?,"Umístění v paměti, do kterého lze uložit hodnotu.","- Identifikátor, který obsahuje umístění v paměti.",Šta je varijabla?,Lokacija u memoriji koja može pohraniti vrijednost.,-Identifikator koji drži lokaciju u memoriji.
438,438,186,1.7,"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.",The block inside a do...while statement will execute at least once.,What is the main difference between a while and a do...while statement?,5.0,Der Block in einer do ... while-Anweisung wird mindestens einmal ausgeführt.,Was ist der Hauptunterschied zwischen einer while- und einer do ... while-Anweisung?,"Eine while-Anweisung wird nur verarbeitet, wenn die Anweisung erfüllt ist, während eine do ... while-Anweisung immer einmal verarbeitet wird und dann nur fortgesetzt wird, wenn die Anweisung erfüllt ist.",Unsa ang punoan nga kalainan tali sa usa ka samtang ug usa nga buhaton ... samtang pahayag?,Ang bloke sa sulud sa usa ka buhaton ... samtang ang pahayag magpatuman labing menos kausa.,"ang usa ka samtang nga pamahayag magproseso ra kung ang pamahayag natagbo, samtang ang usa ka buhata ... samtang kanunay nga magproseso kausa, unya magpadayon ra kung matuman ang pahayag.",Vad är den största skillnaden mellan ett tag och ett do ... while-uttalande?,Blocket inuti ett do ... while-uttalande kommer att köras minst en gång.,"ett while-uttalande kommer bara att bearbetas om uttalandet uppfylls, medan ett do ... while alltid kommer att behandlas en gång, fortsätt bara om uttalandet uppfylls.",Quelle est la principale différence entre une déclaration while et une déclaration do ... while?,Le bloc à l&#39;intérieur d&#39;une instruction do ... while s&#39;exécutera au moins une fois.,"une instruction while ne sera traitée que si l&#39;instruction est satisfaite, tandis qu&#39;une instruction do ... while traitera toujours une fois, puis ne continuera que si l&#39;instruction est satisfaite.",Wat is het belangrijkste verschil tussen een while en een do ... while-verklaring?,Het blok binnen een do ... while-instructie wordt minstens één keer uitgevoerd.,"een while-instructie wordt alleen verwerkt als aan de instructie wordt voldaan, terwijl een do ... while-instructie altijd één keer wordt verwerkt en alleen doorgaat als aan de instructie wordt voldaan.",В чем основное различие между оператором while и do ... while?,Блок внутри оператора do ... while будет выполнен как минимум один раз.,"Оператор while будет обрабатываться только в том случае, если оператор выполняется, в то время как do ... while всегда будет обрабатываться один раз, а затем продолжить, только если оператор выполняется.",Qual è la differenza principale tra un&#39;istruzione while e a do ... while?,Il blocco all&#39;interno di un&#39;istruzione do ... while verrà eseguito almeno una volta.,"un&#39;istruzione while verrà elaborata solo se l&#39;istruzione viene soddisfatta, mentre una do ... while elaborerà sempre una volta, quindi continuerà solo se l&#39;istruzione viene soddisfatta.",¿Cuál es la principal diferencia entre una declaración while y do ... while?,El bloque dentro de una instrucción do ... while se ejecutará al menos una vez.,"una instrucción while solo se procesará si se cumple la instrucción, mientras que una instrucción do ... while siempre se procesará una vez, luego solo continuará si se cumple la instrucción.",Jaka jest główna różnica między stwierdzeniem a while a do ... while?,Blok wewnątrz instrukcji do ... while zostanie wykonany co najmniej raz.,"Instrukcja while będzie przetwarzana tylko wtedy, gdy instrukcja zostanie spełniona, podczas gdy instrukcja do ... while będzie przetwarzana zawsze raz, a następnie będzie kontynuowana tylko wtedy, gdy instrukcja zostanie spełniona.",Sự khác biệt chính giữa câu lệnh while và do ... while là gì?,Khối bên trong câu lệnh do ... while sẽ thực thi ít nhất một lần.,"câu lệnh while sẽ chỉ xử lý nếu câu lệnh được đáp ứng, trong khi câu lệnh do ... while sẽ luôn xử lý một lần, sau đó chỉ tiếp tục nếu câu lệnh được đáp ứng.",whileステートメントとdo ... whileステートメントの主な違いは何ですか？,do ... whileステートメント内のブロックは、少なくとも1回実行されます。,whileステートメントは、ステートメントが満たされた場合にのみ処理されますが、do ... whileは常に1回処理され、ステートメントが満たされた場合にのみ続行されます。,while和do ... while语句之间的主要区别是什么？,do ... while语句中的块将至少执行一次。,while语句仅在满足条件时才会处理，而do ... while将始终处理一次，然后仅在满足条件时才继续。,ما هو الفرق الرئيسي بين جملة while و a do ... while؟,سيتم تنفيذ الكتلة داخل بيان do ... while مرة واحدة على الأقل.,لن تتم معالجة جملة while إلا إذا تم استيفاء العبارة ، بينما تتم معالجة عبارة do ... while دائمًا مرة واحدة ، ثم تستمر فقط إذا تم استيفاء العبارة.,Яка головна різниця між твердженням while та do ... while?,Блок усередині оператора do ... while виконуватиметься принаймні один раз.,"оператор while оброблятиметься лише в тому випадку, якщо він виконується, тоді як do ... while завжди буде оброблятися один раз, тоді продовжуватиметься лише у випадку, якщо він виконується",Qual é a principal diferença entre a instrução while e do ... while?,O bloco dentro de uma instrução do ... while será executado pelo menos uma vez.,"uma instrução while só será processada se a instrução for satisfeita, enquanto um do ... while sempre será processado uma vez, então só continuará se a instrução for satisfeita.",تفاوت اصلی میان جمله و حالات do ... while چیست؟,بلوک داخل دستور do ... while حداقل یک بار اجرا می شود.,دستور while فقط در صورت ملاقات بودن عبارت پردازش می شود ، در حالی که یک انجام ... در حالی که همیشه یکبار پردازش می شود ، فقط در صورت تحقق بیانیه ادامه می یابد.,Quina és la diferència principal entre una afirmació mentre que una sentència do ... while?,El bloc dins d&#39;una sentència do ... while s&#39;executarà almenys una vegada.,"una sentència while només es processarà si es compleix la sentència, mentre que do ... while sempre es processarà una vegada, només continuarà si es compleix la sentència.",Која је главна разлика између изјаве неко време и уради ... док?,Блок унутар наредбе до ... вхиле извршиће се најмање једном.,"наредба вхиле обрађиват ће се само ако је изјава задовољена, док ће се до ... вхиле обрађивати једном, а затим ће се наставити само ако је изјава задовољена.",Apa perbedaan utama antara pernyataan while dan do ... while?,Blok di dalam pernyataan do ... while akan dieksekusi setidaknya sekali.,"Pernyataan while hanya akan diproses jika pernyataan tersebut terpenuhi, sedangkan pernyataan do ... while akan selalu memproses sekali, kemudian hanya akan dilanjutkan jika pernyataan tersebut terpenuhi.",Hva er hovedforskjellen mellom en stund og en gjør ... mens uttalelse?,Blokken inne i en gjør ... mens uttalelsen vil kjøres minst en gang.,"en stund uttalelse vil bare behandles hvis uttalelsen er oppfylt, mens en gjør ... mens alltid vil behandle en gang, så fortsett bare hvis uttalelsen er oppfylt.",while과 do ... while 문의 주요 차이점은 무엇입니까?,do ... while 문 내부의 블록은 한 번 이상 실행됩니다.,while 문은 문이 충족되는 경우에만 처리되고 do ... while은 항상 한 번 처리 된 다음 문이 충족되는 경우에만 계속됩니다.,Mikä on tärkein ero hetken ja tekemisen ... lausunnon välillä?,Lohko do ... while-lauseen sisällä suoritetaan ainakin kerran.,"a while -lauseke käsitellään vain, jos lauseke täytetään, kun taas do ... -prosessi käsitellään aina kerran, jatka sitten vain, jos lauseke täyttyy.",Mi a fő különbség egy idő és egy tennivaló ... kijelentés között?,A blokk a do ... while utasításban legalább egyszer végrehajtásra kerül.,"a while utasítás csak akkor fog feldolgozni, ha az utasítás teljesül, míg a do ... while mindig egyszer fog feldolgozni, akkor csak akkor folytassa, ha az utasítás teljesül.",Jaký je hlavní rozdíl mezi příkazem while a do ... while?,Blok uvnitř příkazu do ... while se provede alespoň jednou.,"příkaz while se zpracuje pouze v případě, že je příkaz splněn, zatímco příkaz do ... while bude zpracován vždy jednou, pak bude pokračovat pouze v případě, že je příkaz splněn.",Koja je glavna razlika između izjave neko vrijeme i do ... while?,Blok unutar naredbe do ... while izvršit će se najmanje jednom.,"naredba while obrađivat će se samo ako je izjava zadovoljena, dok će se do ... while obrađivati jednom, a zatim će se nastaviti samo ako je izjava zadovoljena."
439,439,1412,8.4,"Create a new list.  Pop elements in the stack as needed.  Push the stack to remove items, unless the stack is empty.  The top item is at the head of the list. The last item is at the end.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",How can you implement a stack with a list?,4.5,"Lassen Sie den oberen Rand des Stapels auf den Kopf der verknüpften Liste zeigen, damit die Push- und Pop-Vorgänge Elemente am Anfang der Liste hinzufügen oder entfernen.",Wie können Sie einen Stapel mit einer Liste implementieren?,"Erstellen Sie eine neue Liste. Pop-Elemente im Stapel nach Bedarf. Schieben Sie den Stapel, um Elemente zu entfernen, es sei denn, der Stapel ist leer. Das oberste Element steht am Anfang der Liste. Der letzte Punkt ist am Ende.",Giunsa nimo ipatuman ang usa ka stack nga adunay lista?,"Ipadayon ang tumoy sa stack nga nagtudlo sa ulo sa nalista nga lista, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento sa pagsugod sa lista.","Paghimo usa ka bag-ong lista. Mga elemento sa pop sa stack kung gikinahanglan. Itulak ang stack aron makuha ang mga butang, gawas kung wala ang stack. Ang nag-una nga butang naa sa ulohan sa lista. Ang ulahi nga butang naa sa katapusan.",Hur kan du implementera en stack med en lista?,Håll toppen av stacken pekande mot huvudet på den länkade listan så att push- och pop-operationerna lägger till eller tar bort element i början av listan.,"Skapa en ny lista. Popelement i stacken efter behov. Tryck på stacken för att ta bort objekt, såvida inte stacken är tom. Det översta objektet är i början av listan. Det sista objektet är i slutet.",Comment pouvez-vous implémenter une pile avec une liste?,"Gardez le haut de la pile pointant vers la tête de la liste chaînée, afin que les opérations push et pop ajoutent ou suppriment des éléments au début de la liste.","Créez une nouvelle liste. Pop éléments dans la pile selon les besoins. Poussez la pile pour retirer des éléments, sauf si la pile est vide. L&#39;élément supérieur est en tête de la liste. Le dernier élément est à la fin.",Hoe implementeer je een stapel met een lijst?,"Laat de bovenkant van de stapel naar de bovenkant van de gekoppelde lijst wijzen, zodat de push- en pop-bewerkingen elementen aan het begin van de lijst zullen toevoegen of verwijderen.","Maak een nieuwe lijst. Pop elementen in de stapel als dat nodig is. Duw tegen de stapel om items te verwijderen, tenzij de stapel leeg is. Het bovenste item staat bovenaan de lijst. Het laatste item is aan het einde.",Как можно реализовать стек со списком?,"Верхняя часть стека должна указывать на заголовок связанного списка, поэтому операции push и pop будут добавлять или удалять элементы в начале списка.","Создайте новый список. При необходимости вставляйте элементы в стек. Толкайте стопку, чтобы удалить элементы, если она не пуста. Верхний элемент находится во главе списка. Последний пункт в конце.",Come puoi implementare uno stack con un elenco?,"Mantieni la parte superiore della pila puntata all&#39;inizio dell&#39;elenco collegato, quindi le operazioni push e pop aggiungeranno o rimuoveranno elementi all&#39;inizio dell&#39;elenco.","Crea un nuovo elenco. Metti gli elementi nella pila secondo necessità. Spingere la pila per rimuovere gli elementi, a meno che la pila non sia vuota. L&#39;elemento in cima è all&#39;inizio dell&#39;elenco. L&#39;ultimo elemento è alla fine.",¿Cómo se puede implementar una pila con una lista?,"Mantenga la parte superior de la pila apuntando al encabezado de la lista vinculada, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos al comienzo de la lista.","Crea una nueva lista. Pop elementos en la pila según sea necesario. Empuje la pila para quitar elementos, a menos que la pila esté vacía. El elemento superior está al principio de la lista. El último elemento está al final.",Jak zaimplementować stos z listą?,"Utrzymuj górę stosu skierowaną do początku połączonej listy, aby operacje push i pop dodały lub usunęły elementy na początku listy.","Utwórz nową listę. W razie potrzeby wbij elementy stosu. Popchnij stos, aby usunąć elementy, chyba że stos jest pusty. Najwyższa pozycja znajduje się na początku listy. Ostatnia pozycja jest na końcu.",Làm thế nào bạn có thể triển khai một ngăn xếp với một danh sách?,"Giữ phần trên cùng của ngăn xếp chỉ đến phần đầu của danh sách được liên kết, vì vậy các thao tác đẩy và bật sẽ thêm hoặc bớt các phần tử ở đầu danh sách.","Tạo một danh sách mới. Các phần tử bật lên trong ngăn xếp nếu cần. Đẩy ngăn xếp để xóa các mục, trừ khi ngăn xếp trống. Mục hàng đầu nằm ở đầu danh sách. Mục cuối cùng là ở cuối.",リストを使用してスタックを実装するにはどうすればよいですか？,スタックの最上位がリンクリストの先頭を指すようにして、プッシュ操作とポップ操作でリストの先頭にある要素を追加または削除します。,新しいリストを作成します。必要に応じて、スタック内の要素をポップします。スタックが空でない限り、スタックを押してアイテムを削除します。一番上の項目はリストの先頭にあります。最後の項目は最後です。,如何实现带有列表的堆栈？,保持堆栈顶部指向链接列表的开头，以便推和弹出操作将在列表的开头添加或删除元素。,创建一个新列表。根据需要弹出堆栈中的元素。推动堆栈以取出项目，除非堆栈为空。最上面的项目在列表的顶部。最后一项在最后。,كيف يمكنك تنفيذ مكدس مع قائمة؟,احتفظ بأعلى المكدس يشير إلى رأس القائمة المرتبطة ، لذلك ستضيف عمليات الدفع والبوب عناصر أو تزيلها في بداية القائمة.,أنشئ قائمة جديدة. عناصر البوب في المكدس حسب الحاجة. ادفع المكدس لإزالة العناصر ، ما لم تكن المجموعة فارغة. العنصر العلوي في رأس القائمة. العنصر الأخير في النهاية.,Як можна реалізувати стек зі списком?,"Тримайте верх стека, вказуючи на головку зв’язаного списку, так що операції натискання та висунення додаватимуть або видалятимуть елементи на початку списку.","Створіть новий список. Поп-елементи в стосі за потреби. Натисніть стек, щоб видалити елементи, якщо стек не порожній. Верхній пункт знаходиться вгорі списку. Останній пункт знаходиться в кінці.",Como você pode implementar uma pilha com uma lista?,"Mantenha o topo da pilha apontando para o início da lista vinculada, de modo que as operações push e pop irão adicionar ou remover elementos no início da lista.","Crie uma nova lista. Pop os elementos na pilha conforme necessário. Empurre a pilha para remover itens, a menos que a pilha esteja vazia. O item superior está no topo da lista. O último item está no final.",چگونه می توانید پشته ای را با لیست پیاده سازی کنید؟,قسمت بالای پشته را به سمت بالای لیست پیوندی نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر ابتدای لیست اضافه یا حذف می شوند.,لیست جدیدی ایجاد کنید. عناصر پاپ را در صورت لزوم در پشته قرار دهید. پشته را فشار دهید تا موارد برداشته شود ، مگر اینکه پشته خالی باشد. مورد برتر در بالای لیست است. آخرین مورد در پایان است.,Com es pot implementar una pila amb una llista?,"Mantingueu la part superior de la pila apuntant cap al cap de la llista enllaçada, de manera que les operacions push i pop afegiran o eliminaran elements al començament de la llista.","Creeu una llista nova. Apareu elements de la pila segons calgui. Premeu la pila per eliminar elements, tret que la pila estigui buida. L’element superior es troba al capdavant de la llista. L&#39;últim element és al final.",Како можете применити стог са листом?,"Држите врх стека усмјерен на главу повезане листе, тако да ће пусх и поп операције додати или уклонити елементе на почетку листе.","Направите нову листу. Поп елементи у слогу по потреби. Притисните гомилу да бисте уклонили предмете, осим ако стек није празан. Горња ставка је на врху листе. Последња ставка је на крају.",Bagaimana Anda bisa menerapkan tumpukan dengan daftar?,"Jaga agar bagian atas tumpukan mengarah ke bagian atas daftar tertaut, sehingga operasi push dan pop akan menambah atau menghapus elemen di awal daftar.","Buat daftar baru. Pop elemen dalam tumpukan sesuai kebutuhan. Dorong tumpukan untuk mengeluarkan item, kecuali jika tumpukan tersebut kosong. Item teratas ada di bagian atas daftar. Item terakhir ada di bagian akhir.",Hvordan kan du implementere en stabel med en liste?,"Hold toppen av stabelen pekende mot hodet til den koblede listen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer i begynnelsen av listen.","Lag en ny liste. Pop elementer i stabelen etter behov. Skyv bunken for å fjerne gjenstander, med mindre bunken er tom. Det øverste elementet er øverst på listen. Det siste elementet er på slutten.",목록으로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위가 연결된 목록의 헤드를 가리 키도록 유지하면 푸시 및 팝 작업이 목록의 시작 부분에 요소를 추가하거나 제거합니다.,새 목록을 만듭니다. 필요에 따라 스택의 요소를 팝합니다. 스택이 비어 있지 않으면 스택을 밀어 항목을 제거합니다. 맨 위 항목은 목록의 맨 위에 있습니다. 마지막 항목은 끝에 있습니다.,Kuinka pino voidaan toteuttaa luettelon avulla?,"Pidä pinon yläosa linkitetyn luettelon päätä kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä luettelon alussa.","Luo uusi luettelo. Pop-elementit pinossa tarpeen mukaan. Poista pino painamalla pinoa, ellei pino ole tyhjä. Yläosa on luettelon kärjessä. Viimeinen kohta on lopussa.",Hogyan lehet megvalósítani egy listát tartalmazó verem?,"Tartsa a verem tetejét a csatolt lista fejére mutatva, így a push és a pop műveletek hozzáadnak vagy eltávolítanak elemeket a lista elején.","Hozzon létre egy új listát. Szükség szerint pop elemek a veremben. Nyomja meg a köteget az elemek eltávolításához, kivéve, ha a verem üres. A legfelső tétel a lista élén áll. Az utolsó elem a végén van.",Jak můžete implementovat zásobník se seznamem?,"Udržujte horní část zásobníku směřující k hlavě propojeného seznamu, takže operace push a pop přidají nebo odeberou prvky na začátku seznamu.","Vytvořte nový seznam. Popujte prvky v zásobníku podle potřeby. Zatlačením na hromádku odeberete položky, pokud není prázdná. Horní položka je v čele seznamu. Poslední položka je na konci.",Kako možete implementirati stog sa listom?,"Neka vrh snopa bude usmjeren na glavu povezanog popisa, tako da će push i pop operacije dodati ili ukloniti elemente na početku popisa.","Kreirajte novu listu. Pop elementi u hrpi po potrebi. Gurnite snop da biste uklonili predmete, osim ako je snop prazan. Gornja stavka nalazi se na vrhu liste. Posljednja stavka je na kraju."
440,440,555,3.5,The number and type of its parameters.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,5.0,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,Die Anzahl und Art seiner Parameter.,Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.",Ang numero ug klase sa mga parameter niini.,Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,Antalet och typen av dess parametrar.,Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.",Le nombre et le type de ses paramètres.,Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.",Het aantal en het type van de parameters.,Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.",Количество и тип его параметров.,Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.",Il numero e il tipo dei suoi parametri.,¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.",El número y tipo de sus parámetros.,W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.",Liczba i rodzaj jego parametrów.,Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.",Số lượng và loại tham số của nó.,オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,そのパラメーターの数とタイプ。,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,其参数的数量和类型。,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,عدد ونوع معلماته.,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.",Кількість і тип його параметрів.,Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.",O número e o tipo de seus parâmetros.,توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,تعداد و نوع پارامترهای آن,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.",El nombre i el tipus dels seus paràmetres.,Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.",Број и врста његових параметара.,Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.",Jumlah dan jenis parameternya.,Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.",Antall og type parametere.,오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,매개 변수의 수와 유형.,Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.",Sen parametrien lukumäärä ja tyyppi.,Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.",Paramétereinek száma és típusa.,Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.",Počet a typ jeho parametrů.,Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.",Broj i vrsta njegovih parametara.
441,441,205,2.1,Information telling the compiler what data members and member functions belong to the class.,Data members (attributes) and member functions.,What is typically included in a class definition?,5.0,Datenelemente (Attribute) und Elementfunktionen.,Was ist normalerweise in einer Klassendefinition enthalten?,"Informationen, die dem Compiler mitteilen, welche Datenelemente und Elementfunktionen zur Klasse gehören.",Unsa ang kasagarang giapil sa usa ka kahulugan sa klase?,Mga myembro sa datos (mga hiyas) ug mga kalihokan sa miyembro.,Ang kasayuran nga nagsulti sa tagtipon kung unsa ang mga miyembro sa datos ug mga gimbuhaton sa miyembro nga nahisakop sa klase.,Vad ingår vanligtvis i en klassdefinition?,Datamedlemmar (attribut) och medlemsfunktioner.,Information som berättar kompilatorn vilka datamedlemmar och medlemsfunktioner som hör till klassen.,Qu&#39;est-ce qui est généralement inclus dans une définition de classe?,Membres de données (attributs) et fonctions membres.,Informations indiquant au compilateur quels membres de données et fonctions membres appartiennent à la classe.,Wat is er typisch opgenomen in een klassendefinitie?,Gegevensleden (attributen) en lidfuncties.,Informatie die de compiler vertelt welke gegevensleden en lidfuncties tot de klasse behoren.,Что обычно включается в определение класса?,Члены данных (атрибуты) и функции-члены.,"Информация, сообщающая компилятору, какие члены данных и функции-члены принадлежат классу.",Cosa è tipicamente incluso nella definizione di una classe?,Membri dei dati (attributi) e funzioni dei membri.,Informazioni che dicono al compilatore quali membri dati e funzioni membro appartengono alla classe.,¿Qué se incluye normalmente en una definición de clase?,Miembros de datos (atributos) y funciones de los miembros.,Información que le dice al compilador qué miembros de datos y funciones miembro pertenecen a la clase.,Co zwykle zawiera definicja klasy?,Członkowie danych (atrybuty) i funkcje składowe.,"Informacja informująca kompilator, jakie elementy składowe danych i funkcje składowe należą do klasy.",Những gì thường được bao gồm trong một định nghĩa lớp?,Thành viên dữ liệu (thuộc tính) và chức năng thành viên.,Thông tin cho trình biên dịch biết các thành viên dữ liệu và các hàm thành viên thuộc về lớp nào.,通常、クラス定義には何が含まれていますか？,データメンバー（属性）とメンバー関数。,どのデータメンバーとメンバー関数がクラスに属しているかをコンパイラーに通知する情報。,类定义中通常包含什么？,数据成员（属性）和成员函数。,告诉编译器哪些数据成员和成员函数属于该类的信息。,ما الذي يتم تضمينه عادة في تعريف الفئة؟,أعضاء البيانات (السمات) ووظائف الأعضاء.,معلومات تخبر المترجم عن أعضاء البيانات ووظائف الأعضاء التي تنتمي إلى الفصل الدراسي.,Що зазвичай входить у визначення класу?,Члени даних (атрибути) та функції членів.,"Інформація, що повідомляє компілятору, які члени даних та функції-члени належать до класу.",O que normalmente está incluído em uma definição de classe?,Membros de dados (atributos) e funções de membro.,Informações que dizem ao compilador quais membros de dados e funções de membro pertencem à classe.,چه چیزی معمولاً در تعریف کلاس گنجانده می شود؟,اعضای داده (ویژگی ها) و توابع عضو.,اطلاعاتی که به کامپایلر می گوید اعضای داده و توابع عضو مربوط به کلاس هستند.,Què s&#39;inclou normalment en una definició de classe?,Membres de dades (atributs) i funcions de membre.,Informació que indica al compilador quins membres de dades i funcions de membre pertanyen a la classe.,Шта је обично укључено у дефиницију класе?,Чланови података (атрибути) и функције чланова.,Информације које компајлеру говоре који чланови података и функције чланова припадају класи.,Apa yang biasanya termasuk dalam definisi kelas?,Data anggota (atribut) dan fungsi anggota.,Informasi yang memberi tahu compiler tentang anggota data dan fungsi anggota milik kelas.,Hva er vanligvis inkludert i en klassedefinisjon?,Datamedlemmer (attributter) og medlemsfunksjoner.,Informasjon som forteller kompilatoren hvilke datamedlemmer og medlemsfunksjoner som tilhører klassen.,일반적으로 클래스 정의에는 무엇이 포함됩니까?,데이터 멤버 (속성) 및 멤버 함수.,클래스에 속하는 데이터 멤버 및 멤버 함수를 컴파일러에 알려주는 정보.,Mitä tyypillisesti sisältyy luokan määritelmään?,Tietojäsenet (attribuutit) ja jäsenfunktiot.,"Tiedot, jotka kertovat kääntäjälle, mitkä tietojäsenet ja jäsenfunktiot kuuluvat luokkaan.",Mi jellemzően szerepel az osztály definíciójában?,Adattagok (attribútumok) és tagfunkciók.,"Információ, amely megmondja a fordítónak, hogy az adattagok és tagfunkciók milyen osztályba tartoznak.",Co je obvykle zahrnuto v definici třídy?,Datové členy (atributy) a členské funkce.,"Informace sdělující kompilátoru, jaké datové členy a členské funkce patří do třídy.",Šta je obično uključeno u definiciju klase?,Članovi podataka (atributi) i funkcije članova.,Informacije koje kompajleru govore koji članovi podataka i funkcije člana pripadaju klasi.
442,442,177,1.7,While loop used to execute a block of code as long as some condition is true.  A do...while loop used to execute a block of code as long as some condition is satisfied.  The difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.,The block inside a do...while statement will execute at least once.,What is the main difference between a while and a do...while statement?,5.0,Der Block in einer do ... while-Anweisung wird mindestens einmal ausgeführt.,Was ist der Hauptunterschied zwischen einer while- und einer do ... while-Anweisung?,"While-Schleife, die zum Ausführen eines Codeblocks verwendet wird, solange eine Bedingung erfüllt ist. Eine do ... while-Schleife, mit der ein Codeblock ausgeführt wird, solange eine bestimmte Bedingung erfüllt ist. Der Unterschied zwischen while und do ... while besteht darin, dass die while-Schleife ihren Zustand vor der Ausführung ihres Inhalts testet und die do ... while-Schleife ihren Zustand nach der Ausführung ihres Inhalts mindestens einmal testet.",Unsa ang punoan nga kalainan tali sa usa ka samtang ug usa nga buhaton ... samtang pahayag?,Ang bloke sa sulud sa usa ka buhaton ... samtang ang pahayag magpatuman labing menos kausa.,Samtang gigamit ang loop aron magpatuman usa ka bloke sa code basta tinuod ang pipila nga kondisyon. Usa ka buhaton ... samtang gigamit ang loop aron magpatuman sa usa ka bloke sa code basta natagbaw ang pipila nga kondisyon. Ang kalainan tali sa samtang ug buhaton ... samtang samtang gisulayan sa loop ang kondisyon niini sa wala pa ipatuman ang mga sulud niini ug ang buhaton ... samtang gisulayan sa loop ang kondisyon niini pagkahuman sa pagpatuman sa mga sulud niini labing menos kausa.,Vad är den största skillnaden mellan ett tag och ett do ... while-uttalande?,Blocket inuti ett do ... while-uttalande kommer att köras minst en gång.,While loop används för att köra ett kodblock så länge som vissa villkor är sanna. En do ... while-slinga som används för att utföra ett kodblock så länge som något villkor är uppfyllt. Skillnaden mellan medan och gör ... medan är medan loop testar dess tillstånd innan exekveringen av dess innehåll och do ... while loop testar dess tillstånd efter utförandet av dess innehåll minst en gång.,Quelle est la principale différence entre une déclaration while et une déclaration do ... while?,Le bloc à l&#39;intérieur d&#39;une instruction do ... while s&#39;exécutera au moins une fois.,La boucle While utilisée pour exécuter un bloc de code tant qu&#39;une condition est vraie. Une boucle do ... while utilisée pour exécuter un bloc de code tant qu&#39;une condition est satisfaite. La différence entre while et do ... while est tandis que la boucle teste sa condition avant l&#39;exécution de son contenu et la boucle do ... while teste sa condition après l&#39;exécution de son contenu au moins une fois.,Wat is het belangrijkste verschil tussen een while en een do ... while-verklaring?,Het blok binnen een do ... while-instructie wordt minstens één keer uitgevoerd.,"While-lus die wordt gebruikt om een codeblok uit te voeren, zolang een bepaalde voorwaarde waar is. Een do ... while-lus die wordt gebruikt om een codeblok uit te voeren zolang aan een voorwaarde is voldaan. Het verschil tussen while en do ... while is while-lus test zijn toestand voordat de inhoud wordt uitgevoerd en de do ... while-lus test zijn toestand na de uitvoering van de inhoud minstens één keer.",В чем основное различие между оператором while и do ... while?,Блок внутри оператора do ... while будет выполнен как минимум один раз.,"Цикл while используется для выполнения блока кода, пока выполняется какое-то условие. Цикл do ... while используется для выполнения блока кода, пока выполняется какое-то условие. Разница между while и do ... while заключается в том, что цикл while проверяет свое состояние перед выполнением своего содержимого, а цикл do ... while проверяет свое состояние хотя бы один раз после выполнения своего содержимого.",Qual è la differenza principale tra un&#39;istruzione while e a do ... while?,Il blocco all&#39;interno di un&#39;istruzione do ... while verrà eseguito almeno una volta.,Il ciclo while viene utilizzato per eseguire un blocco di codice purché una condizione sia vera. Un ciclo do ... while usato per eseguire un blocco di codice purché una condizione sia soddisfatta. La differenza tra while e do ... while è il ciclo while che verifica la sua condizione prima dell&#39;esecuzione del suo contenuto e il ciclo do ... while verifica la sua condizione dopo l&#39;esecuzione del suo contenuto almeno una volta.,¿Cuál es la principal diferencia entre una declaración while y do ... while?,El bloque dentro de una instrucción do ... while se ejecutará al menos una vez.,Mientras que el bucle se usa para ejecutar un bloque de código siempre que alguna condición sea verdadera. Un bucle do ... while utilizado para ejecutar un bloque de código siempre que se cumpla alguna condición. La diferencia entre while y do ... while es while prueba su condición antes de la ejecución de su contenido y el ciclo do ... while prueba su condición después de la ejecución de su contenido al menos una vez.,Jaka jest główna różnica między stwierdzeniem a while a do ... while?,Blok wewnątrz instrukcji do ... while zostanie wykonany co najmniej raz.,"Podczas gdy pętla jest używana do wykonania bloku kodu, o ile jakiś warunek jest spełniony. Pętla do ... while używana do wykonania bloku kodu, o ile spełniony jest jakiś warunek. Różnica między while i do ... while polega na tym, że pętla while sprawdza swój stan przed wykonaniem swojej zawartości, a pętla do ... while sprawdza stan co najmniej raz po wykonaniu jej zawartości.",Sự khác biệt chính giữa câu lệnh while và do ... while là gì?,Khối bên trong câu lệnh do ... while sẽ thực thi ít nhất một lần.,Vòng lặp while được sử dụng để thực thi một khối mã miễn là một số điều kiện là đúng. Vòng lặp do ... while được sử dụng để thực thi một khối mã miễn là một số điều kiện được thỏa mãn. Sự khác biệt giữa while và do ... while Vòng lặp while là while kiểm tra điều kiện của nó trước khi thực thi nội dung của nó và do ... while vòng lặp kiểm tra điều kiện của nó sau khi thực thi nội dung của nó ít nhất một lần.,whileステートメントとdo ... whileステートメントの主な違いは何ですか？,do ... whileステートメント内のブロックは、少なくとも1回実行されます。,ある条件が真である限り、コードのブロックを実行するために使用されるwhileループ。何らかの条件が満たされている限り、コードのブロックを実行するために使用されるdo ... whileループ。 whileループとdo ... whileループの違いは、whileループはコンテンツの実行前に条件をテストし、do ... whileループはコンテンツの実行後に少なくとも1回は条件をテストすることです。,while和do ... while语句之间的主要区别是什么？,do ... while语句中的块将至少执行一次。,只要满足某些条件，while循环就可以执行代码块。只要满足某些条件，就可以使用do ... while循环执行代码块。 while和do ... while之间的区别是while循环至少在执行一次其内容之前测试其条件，而do ... while循环至少在执行一次其内容之后测试其条件。,ما هو الفرق الرئيسي بين جملة while و a do ... while؟,سيتم تنفيذ الكتلة داخل بيان do ... while مرة واحدة على الأقل.,أثناء استخدام حلقة لتنفيذ كتلة من التعليمات البرمجية طالما أن بعض الشروط صحيحة. تستخدم حلقة do ... while loop لتنفيذ كتلة من التعليمات البرمجية طالما تم استيفاء بعض الشروط. الفرق بين while and do ... while is while loop تختبر حالتها قبل تنفيذ محتوياتها وتقوم do ... while loop باختبار حالتها بعد تنفيذ محتوياتها مرة واحدة على الأقل.,Яка головна різниця між твердженням while та do ... while?,Блок усередині оператора do ... while виконуватиметься принаймні один раз.,"Цикл while використовується для виконання блоку коду, якщо виконується якась умова. Цикл do ... while, який використовується для виконання блоку коду, якщо виконується якась умова. Різниця між while і do ... while цикл while перевіряє свій стан перед виконанням його вмісту, а do ... while цикл перевіряє свій стан після виконання його вмісту принаймні один раз.",Qual é a principal diferença entre a instrução while e do ... while?,O bloco dentro de uma instrução do ... while será executado pelo menos uma vez.,"O loop while é usado para executar um bloco de código, desde que alguma condição seja verdadeira. Um loop do ... while usado para executar um bloco de código, desde que alguma condição seja satisfeita. A diferença entre while e do ... while é que o loop while testa sua condição antes da execução de seu conteúdo e o loop do ... while testa sua condição após a execução de seu conteúdo pelo menos uma vez.",تفاوت اصلی میان جمله و حالات do ... while چیست؟,بلوک داخل دستور do ... while حداقل یک بار اجرا می شود.,حلقه while برای اجرای بلوکی از کد استفاده می شود به شرطی که برخی از شرایط درست باشد. حلقه do ... while برای اجرای یک بلوک کد استفاده می شود به شرطی که برخی از شرایط راضی باشد. تفاوت بین while و do ... while در حالی است که حلقه قبل از اجرای محتوای آن و do ... شرایط خود را آزمایش می کند در حالی که حلقه حداقل پس از اجرای محتوای آن حداقل یک بار آزمایش می کند.,Quina és la diferència principal entre una afirmació mentre que una sentència do ... while?,El bloc dins d&#39;una sentència do ... while s&#39;executarà almenys una vegada.,Mentre s&#39;utilitza el bucle per executar un bloc de codi sempre que es compleixi alguna condició. Un bucle do ... while s&#39;utilitza per executar un bloc de codi sempre que es compleixi alguna condició. La diferència entre while i do ... while és while loop prova la seva condició abans de l&#39;execució del seu contingut i el do ... while loop prova la seva condició després de l&#39;execució del seu contingut almenys una vegada.,Која је главна разлика између изјаве неко време и уради ... док?,Блок унутар наредбе до ... вхиле извршиће се најмање једном.,Петља вхиле се користи за извршавање блока кода све док је неки услов тачан. Петља до ... вхиле која се користи за извршавање блока кода све док је задовољен неки услов. Разлика између вхиле и до ... вхиле петља петљу тестира своје стање пре извршавања свог садржаја и до ... вхиле петља најмање једном тестира своје стање након извршавања свог садржаја.,Apa perbedaan utama antara pernyataan while dan do ... while?,Blok di dalam pernyataan do ... while akan dieksekusi setidaknya sekali.,Sedangkan loop digunakan untuk mengeksekusi suatu blok kode selama beberapa kondisinya benar. Sebuah do ... while loop digunakan untuk mengeksekusi satu blok kode selama beberapa kondisi terpenuhi. Perbedaan antara while dan do ... while is while loop menguji kondisinya sebelum eksekusi isinya dan do ... while loop menguji kondisinya setelah eksekusi isinya setidaknya sekali.,Hva er hovedforskjellen mellom en stund og en gjør ... mens uttalelse?,Blokken inne i en gjør ... mens uttalelsen vil kjøres minst en gang.,Mens loop brukes til å utføre en blokk med kode så lenge noen tilstand er oppfylt. En do ... while-sløyfe som ble brukt til å utføre en kodeblokk så lenge noen betingelser er oppfylt. Forskjellen mellom mens og gjør ... mens er mens sløyfe tester tilstanden før utførelsen av innholdet og gjør ... mens sløyfen tester tilstanden etter utførelsen av innholdet minst en gang.,while과 do ... while 문의 주요 차이점은 무엇입니까?,do ... while 문 내부의 블록은 한 번 이상 실행됩니다.,조건이 참인 동안 코드 블록을 실행하는 데 사용되는 While 루프. 일부 조건이 충족되는 한 코드 블록을 실행하는 데 사용되는 do ... while 루프입니다. while과 do ... while의 차이점은 while 루프는 내용을 실행하기 전에 조건을 테스트하고 do ... while 루프는 내용을 한 번 이상 실행 한 후에 조건을 테스트한다는 것입니다.,Mikä on tärkein ero hetken ja tekemisen ... lausunnon välillä?,Lohko do ... while-lauseen sisällä suoritetaan ainakin kerran.,"Vaikka silmukka käytetään koodilohkon suorittamiseen niin kauan kuin jokin ehto on totta. Tee ... kun silmukka käytetään koodilohkon suorittamiseen niin kauan kuin jokin ehto täyttyy. While ja do ... while on while -silmukan ero testaa kuntoaan ennen sen sisällön suorittamista ja do ... kun taas loop testaa kuntoaan sen jälkeen, kun sisältö on suoritettu ainakin kerran.",Mi a fő különbség egy idő és egy tennivaló ... kijelentés között?,A blokk a do ... while utasításban legalább egyszer végrehajtásra kerül.,"Míg a ciklus egy kódblokk végrehajtására szolgál, amíg valamilyen feltétel teljesül. A do ... míg a ciklus egy kódblokk végrehajtására szolgál, amíg valamilyen feltétel teljesül. A while és a do ... while is while ciklus közötti különbség a tartalma és a do ... végrehajtása előtt teszteli állapotát, míg a loop a tartalma legalább egyszer végrehajtása után.",Jaký je hlavní rozdíl mezi příkazem while a do ... while?,Blok uvnitř příkazu do ... while se provede alespoň jednou.,"Zatímco smyčka slouží k provedení bloku kódu, pokud platí některá podmínka. Smyčka do ... while slouží k provedení bloku kódu, pokud je splněna nějaká podmínka. Rozdíl mezi while a do ... while je while smyčka testuje její stav před provedením jejího obsahu a smyčka do ... while testuje její stav po provedení jejího obsahu alespoň jednou.",Koja je glavna razlika između izjave neko vrijeme i do ... while?,Blok unutar naredbe do ... while izvršit će se najmanje jednom.,Petlja while koristi se za izvršavanje bloka koda sve dok je neki uvjet istinit. Petlja do ... while koja se koristi za izvršavanje bloka koda sve dok je zadovoljen neki uvjet. Razlika između while i do ... while je while petlja testira svoje stanje prije izvršavanja svog sadržaja i do ... while petlja najmanje jednom testira svoje stanje nakon izvršavanja svog sadržaja.
443,443,1286,7.6,You can traverse the list both forward and backwards.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Sie können die Liste sowohl vorwärts als auch rückwärts durchlaufen.,Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",Mahimo nimo nga latason ang lista sa unahan ug paatras.,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",Du kan korsa listan både framåt och bakåt.,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",Vous pouvez parcourir la liste en avant et en arrière.,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",U kunt de lijst zowel vooruit als achteruit doorlopen.,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.","Вы можете перемещаться по списку как вперед, так и назад.",Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",Puoi scorrere l&#39;elenco sia in avanti che all&#39;indietro.,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",Puede recorrer la lista tanto hacia adelante como hacia atrás.,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.","Listę można przechodzić zarówno do przodu, jak i do tyłu.",Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",Bạn có thể duyệt qua danh sách cả về phía trước và phía sau.,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,リストは前後にトラバースできます。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,您可以前后浏览列表。,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,يمكنك اجتياز القائمة للأمام وللخلف.,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.","Ви можете переглядати список як вперед, так і назад.",Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",Você pode percorrer a lista para frente e para trás.,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,می توانید لیست را به جلو و عقب رد کنید.,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",Podeu recórrer la llista cap endavant i cap enrere.,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",Листу можете прелазити унапред и уназад.,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",Anda dapat melintasi daftar maju dan mundur.,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",Du kan krysse listen både fremover og bakover.,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,목록을 앞뒤로 탐색 할 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",Voit liikkua luettelossa sekä eteenpäin että taaksepäin.,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.",A listán előre és hátra is haladhat.,Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.",V seznamu můžete procházet dopředu i dozadu.,Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",Možete listati listu unaprijed i unatrag.
444,444,920,5.3,n operations  The best case scenario is when all the numbers are in increasing order.,N (the length of the array) operations achieved for a sorted array.,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",5.0,"N (die Länge des Arrays) Operationen, die für ein sortiertes Array erzielt wurden.","Wie viele Operationen müssen für die Einfügungssortierung in einem Best-Case-Szenario ausgeführt werden, und in welchem Best-Case-Szenario?","n Operationen Das beste Szenario ist, wenn alle Zahlen in aufsteigender Reihenfolge sind.","Unsa ang gidaghanon sa mga operasyon alang sa pagsulud nga sulud sa ilalum sa usa ka labing maayo nga kahimtang nga sitwasyon, ug unsa ang labing maayo nga sitwasyon nga hitabo?",N (ang gitas-on sa laray) nakamit ang mga operasyon alang sa usa ka gihan-ay nga laray.,n operasyon Ang labing kaayo nga sitwasyon sa kaso kung ang tanan nga mga numero naa sa pagdugang sa pagkahan-ay.,"Vad är antalet operationer för insättningssortering under ett bästa fall, och vad är det bästa fallet?",N (längden på matrisen) som uppnåtts för en sorterad matris.,n operationer Det bästa fallet är när alla siffror är i ökande ordning.,Quel est le nombre d&#39;opérations pour le tri par insertion dans le meilleur des cas et quel est le meilleur des cas?,N (la longueur du tableau) opérations réalisées pour un tableau trié.,n opérations Le meilleur scénario est celui où tous les nombres sont en ordre croissant.,"Wat is het aantal bewerkingen voor invoegsortering in het beste geval, en wat is het beste scenario?",N (de lengte van de array) bewerkingen die zijn bereikt voor een gesorteerde array.,n bewerkingen Het beste scenario is wanneer alle getallen in oplopende volgorde staan.,Каково количество операций сортировки вставкой в лучшем случае и в каком сценарии лучше всего?,"N (длина массива) операций, выполненных для отсортированного массива.",n операций Наилучший сценарий - когда все числа расположены в порядке возрастания.,Qual è il numero di operazioni per l&#39;ordinamento per inserzione in uno scenario migliore e qual è lo scenario migliore?,N (la lunghezza dell&#39;array) operazioni ottenute per un array ordinato.,n operazioni Lo scenario migliore è quando tutti i numeri sono in ordine crescente.,¿Cuál es la cantidad de operaciones para la ordenación por inserción en el mejor de los casos y cuál es el mejor de los casos?,N (la longitud de la matriz) operaciones logradas para una matriz ordenada.,n operaciones El mejor escenario es cuando todos los números están en orden creciente.,Jaka jest liczba operacji sortowania przez wstawianie w ramach najlepszego scenariusza i jaki jest najlepszy scenariusz?,N (długość tablicy) operacji uzyskanych dla posortowanej tablicy.,"n operacji Najlepszym scenariuszem jest sytuacja, w której wszystkie liczby są w porządku rosnącym.",Số hoạt động để sắp xếp chèn trong trường hợp tốt nhất là bao nhiêu và trường hợp tốt nhất là gì?,N (độ dài của mảng) hoạt động đạt được cho một mảng đã sắp xếp.,n phép toán Tình huống tốt nhất là khi tất cả các số theo thứ tự tăng dần.,最良のシナリオでの挿入ソートの操作数と、最良のシナリオは何ですか？,ソートされた配列に対して達成されたN（配列の長さ）操作。,n操作最良のシナリオは、すべての数値が昇順である場合です。,在最佳情况下，插入排序的操作数是多少？最佳情况是什么？,已排序的数组完成了N次（数组的长度）操作。,n操作最好的情况是所有数字都按升序排列。,ما هو عدد العمليات لفرز الإدراج ضمن سيناريو أفضل حالة ، وما هو أفضل سيناريو؟,تم تحقيق N (طول المصفوفة) لعمليات مصفوفة مرتبة.,n العمليات أفضل سيناريو هو عندما تكون جميع الأرقام بترتيب متزايد.,"Яка кількість операцій для сортування вставки за найкращим сценарієм, і який найкращий варіант?","N (довжина масиву) операції, досягнуті для відсортованого масиву.",n операцій Найкращий сценарій - це коли всі цифри зростають.,Qual é o número de operações para classificação por inserção em um cenário de melhor caso e qual é o cenário de melhor caso?,N (o comprimento da matriz) operações obtidas para uma matriz classificada.,n operações O melhor cenário é quando todos os números estão em ordem crescente.,تعداد عملیات برای مرتب سازی درج در یک سناریوی بهترین حالت چقدر است و بهترین سناریو کدام است؟,N (طول آرایه) عملیاتی که برای یک آرایه مرتب شده بدست می آید.,n عملیات بهترین حالت زمانی است که همه اعداد به ترتیب رو به افزایش باشند.,Quin és el nombre d&#39;operacions per ordenar la inserció en un escenari del millor cas i quin és el millor cas?,N (la longitud de la matriu) operacions aconseguides per a una matriu ordenada.,n operacions El millor cas és quan tots els nombres estan en ordre creixent.,"Који је број операција за сортирање уметања у најбољем случају, а који у најбољем случају?",Н (дужина низа) операција постигнутих за сортирани низ.,н операција Најбољи случај је када се сви бројеви повећавају.,"Berapa jumlah operasi untuk pengurutan penyisipan dalam skenario kasus terbaik, dan apa skenario kasus terbaik?",Operasi N (panjang array) dicapai untuk array yang diurutkan.,n operasi Skenario kasus terbaik adalah ketika semua angka dalam urutan yang meningkat.,"Hva er antall operasjoner for innsettingssortering under et best-case-scenario, og hva er best-case-scenariet?",N (lengden på matrisen) operasjoner oppnådd for en sortert matrise.,n operasjoner Det beste tilfellet er når alle tallene er i økende rekkefølge.,최상의 시나리오에서 삽입 정렬을위한 작업의 수와 최상의 시나리오는 무엇입니까?,정렬 된 배열에 대해 수행 된 N (배열의 길이) 작업.,n 작업 가장 좋은 시나리오는 모든 숫자가 오름차순 일 때입니다.,Mikä on parhaan mahdollisen skenaarion mukaan lisättävien toimintojen määrä ja mikä on paras tapaus?,"N (matriisin pituus) operaatiota, jotka on saatu lajitellulle taulukolle.","n operaatiota Paras tapaus on, kun kaikki numerot ovat kasvavassa järjestyksessä.","Mennyi a beillesztési műveletek száma a legjobb forgatókönyv szerint, és mi a legjobb eset?",N (a tömb hossza) rendezett tömbnél elért műveletek.,"n művelet A legjobb eset az, amikor az összes szám növekvő sorrendben van.",Jaký je počet operací pro třídění vložení v případě nejlepšího scénáře a jaký je nejlepší případ?,N (délka pole) operace dosažené pro tříděné pole.,"n operace Nejlepší scénář je, když jsou všechna čísla ve vzestupném pořadí.","Koji je broj operacija za sortiranje umetanja u najboljem scenariju, a koji je najbolji slučaj?",N (dužina niza) operacija postignutih za sortirani niz.,n operacija Najbolji slučaj je kada se svi brojevi povećavaju.
445,445,1268,7.6,"Doubly-linked lists can traverse backwards, though they still cannot access data at any point in the list, it can be shorter to traverse backwards.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,"Doppelt verknüpfte Listen können rückwärts durchlaufen, obwohl sie zu keinem Zeitpunkt in der Liste auf Daten zugreifen können, kann es kürzer sein, rückwärts zu durchlaufen.",Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.","Ang mga lista nga adunay kalabutan sa pagduha-duha mahimong moagi sa paatras, bisan kung dili pa sila maka-access sa datos sa bisan unsang punto sa lista, mahimo kini nga labing mub-ot sa pagtabok paatras.",Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.","Dubbellänkade listor kan korsa bakåt, även om de fortfarande inte kan komma åt data någon gång i listan, kan det vara kortare att korsa bakåt.",Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.","Les listes à double liaison peuvent traverser vers l&#39;arrière, bien qu&#39;elles ne puissent toujours pas accéder aux données à n&#39;importe quel point de la liste, elles peuvent être plus courtes à parcourir en arrière.",Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.","Dubbel gekoppelde lijsten kunnen achteruit gaan, hoewel ze op geen enkel punt in de lijst toegang hebben tot gegevens, het kan korter zijn om achteruit te bladeren.",В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.","Двусвязные списки могут перемещаться в обратном направлении, хотя они по-прежнему не могут получить доступ к данным в любой точке списка, обратное перемещение может быть короче.",Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.","Gli elenchi a doppio collegamento possono spostarsi all&#39;indietro, sebbene non possano ancora accedere ai dati in qualsiasi punto dell&#39;elenco, può essere più breve spostarsi all&#39;indietro.",¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.","Las listas doblemente enlazadas pueden retroceder, aunque todavía no pueden acceder a los datos en ningún punto de la lista, puede ser más corto retroceder.",Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.","Listy podwójnie połączone mogą przechodzić wstecz, chociaż nadal nie mogą uzyskać dostępu do danych w dowolnym miejscu listy, może być krótsze, aby przejść wstecz.",Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.","Danh sách được liên kết đôi có thể duyệt ngược lại, mặc dù chúng vẫn không thể truy cập dữ liệu tại bất kỳ điểm nào trong danh sách, việc duyệt ngược có thể ngắn hơn.",基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,二重にリンクされたリストは逆方向にトラバースできますが、リスト内のどのポイントでもデータにアクセスすることはできませんが、逆方向にトラバースする方が短くなる可能性があります。,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,双链接列表可以向后遍历，尽管它们仍然无法访问列表中的任何点的数据，但是向后遍历可以更短。,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,يمكن للقوائم المرتبطة بشكل مضاعف الانتقال للخلف ، على الرغم من أنها لا تزال غير قادرة على الوصول إلى البيانات في أي نقطة في القائمة ، إلا أنه يمكن أن يكون الانتقال للخلف أقصر.,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.","Подвійно пов’язані списки можуть рухатися назад, хоча вони все ще не можуть отримати доступ до даних у будь-якій точці списку, але може бути коротшим для зворотного переходу.",Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.","Listas duplamente vinculadas podem retroceder, embora ainda não possam acessar dados em nenhum ponto da lista, pode ser mais curto retroceder.",مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,لیستهای دارای پیوند مضاعف می توانند به عقب برگردند ، اگرچه آنها هنوز نمی توانند در هر نقطه از لیست به داده ها دسترسی پیدا کنند ، اما عبور از آنها به عقب ممکن است کوتاهتر باشد.,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.","Les llistes enllaçades doblement poden recórrer cap enrere, tot i que encara no poden accedir a les dades en cap punt de la llista, pot ser més curt recórrer cap enrere.",Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.","Двоструко повезане листе могу се кретати уназад, иако још увек не могу приступити подацима ни у једној тачки листе, може бити краће за уназад.",Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.","Daftar yang ditautkan ganda dapat melintasi ke belakang, meskipun mereka masih tidak dapat mengakses data di titik mana pun dalam daftar, daftar itu bisa lebih pendek untuk ditelusuri ke belakang.",Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.","Dobbeltkoblede lister kan krysse bakover, selv om de fremdeles ikke får tilgang til data på noe tidspunkt i listen, kan det være kortere å krysse bakover.",기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,이중으로 연결된 목록은 뒤로 이동할 수 있지만 목록의 어느 지점에서도 데이터에 액세스 할 수는 없지만 뒤로 탐색하는 것이 더 짧을 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.","Kaksinkertaisesti linkitetyt luettelot voivat liikkua taaksepäin, vaikka ne eivät vieläkään pääse dataan missään luettelon kohdassa, taaksepäin siirtyminen voi olla lyhyempi.",Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.","A kétszeresen összekapcsolt listák visszafelé haladhatnak, bár továbbra sem férnek hozzá az adatokhoz a lista egyetlen pontján sem, rövidebb lehet hátrafelé haladni.",Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.","Dvojitě propojené seznamy mohou procházet zpět, i když stále nemají přístup k datům v žádném bodě seznamu, může být kratší procházet zpět.",Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.","Dvostruko povezane liste mogu se kretati unatrag, iako još uvijek ne mogu pristupiti podacima ni u jednoj točki liste, može biti kraće za unatrag."
446,446,480,3.3,You declare your inline function in the header or before your int main(). You then can call that function at anytime in your main program quickly and easily.,It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,2.0,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,Sie deklarieren Ihre Inline-Funktion im Header oder vor Ihrem int main (). Sie können diese Funktion dann jederzeit schnell und einfach in Ihrem Hauptprogramm aufrufen.,Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,Gideklarar nimo ang imong paglihok sa linya sa header o sa wala pa ang imong int main (). Mahimo nimo dayon tawagan ang kana nga pag-andar sa bisan unsang oras sa imong punoan nga programa nga dali ug dali.,Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,Du förklarar din inline-funktion i rubriken eller före din int main (). Du kan då ringa den funktionen när som helst i ditt huvudprogram snabbt och enkelt.,Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,Vous déclarez votre fonction inline dans l&#39;en-tête ou avant votre int main (). Vous pouvez ensuite appeler cette fonction à tout moment dans votre programme principal rapidement et facilement.,Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,U declareert uw inline-functie in de header of vóór uw int main (). U kunt die functie dan op elk moment in uw hoofdprogramma snel en gemakkelijk oproepen.,Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.",Вы объявляете встроенную функцию в заголовке или перед int main (). Затем вы можете быстро и легко вызвать эту функцию в любой момент в основной программе.,In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,Dichiari la tua funzione inline nell&#39;intestazione o prima di int main (). È quindi possibile richiamare quella funzione in qualsiasi momento nel programma principale in modo rapido e semplice.,¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,"Declaras tu función en línea en el encabezado o antes de tu int main (). A continuación, puede llamar a esa función en cualquier momento en su programa principal de forma rápida y sencilla.",Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.",Deklarujesz swoją funkcję inline w nagłówku lub przed int main (). Następnie możesz szybko i łatwo wywołać tę funkcję w dowolnym momencie w głównym programie.,Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,"Bạn khai báo hàm nội tuyến của mình trong tiêu đề hoặc trước int main () của bạn. Sau đó, bạn có thể gọi hàm đó bất cứ lúc nào trong chương trình chính của mình một cách nhanh chóng và dễ dàng.",コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,インライン関数は、ヘッダーまたはint main（）の前で宣言します。その後、メインプログラムでいつでもその関数をすばやく簡単に呼び出すことができます。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,您可以在标头中或int main（）之前声明内联函数。然后，您可以随时在主程序中快速，轻松地调用该函数。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,أنت تعلن عن وظيفتك المضمنة في الرأس أو قبل int main (). يمكنك بعد ذلك استدعاء هذه الوظيفة في أي وقت في برنامجك الرئيسي بسرعة وسهولة.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.",Ви оголошуєте свою вбудовану функцію в заголовку або перед вашим int main (). Потім ви можете викликати цю функцію в будь-який час у вашій головній програмі швидко і легко.,Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"Você declara sua função embutida no cabeçalho ou antes de seu int main (). Em seguida, você pode chamar essa função a qualquer momento em seu programa principal de forma rápida e fácil.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,شما عملکرد درون خطی خود را در هدر یا قبل از int main خود () اعلام کنید. سپس می توانید در هر زمان از برنامه اصلی خود به سرعت و به راحتی با آن عملکرد تماس بگیرید.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,"Declareu la vostra funció en línia a la capçalera o abans de la vostra int main (). A continuació, podeu trucar a aquesta funció en qualsevol moment del programa principal de manera ràpida i senzilla.",Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,Изјављујете своју инлине функцију у заглављу или пре вашег инт маин (). Тада можете брзо и лако позвати ту функцију у било ком тренутку свог главног програма.,Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,Anda mendeklarasikan fungsi inline Anda di header atau sebelum int main (). Anda kemudian dapat memanggil fungsi itu kapan saja di program utama Anda dengan cepat dan mudah.,Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,Du erklærer din innebygde funksjon i overskriften eller før din int main (). Du kan da ringe den funksjonen når som helst i hovedprogrammet ditt raskt og enkelt.,컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,헤더 또는 int main () 앞에 인라인 함수를 선언합니다. 그런 다음 언제든지 주 프로그램에서 해당 함수를 빠르고 쉽게 호출 할 수 있습니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.",Ilmoitat sisäisen toimintosi otsikossa tai ennen int main () -tunnusta. Tämän jälkeen voit soittaa kyseiselle toiminnolle milloin tahansa pääohjelmassasi nopeasti ja helposti.,Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.",Az inline függvényt a fejlécben vagy az int main () előtt deklarálja. Ezután a főprogramban bármikor gyorsan és egyszerűen meghívhatja ezt a funkciót.,Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.",Deklarujete svou inline funkci v záhlaví nebo před int int (). Tuto funkci můžete kdykoli rychle a snadno vyvolat v hlavním programu.,Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,Izjavljujete svoju ugrađenu funkciju u zaglavlju ili prije vašeg int main (). Tada možete brzo i jednostavno pozvati tu funkciju u bilo kojem trenutku svog glavnog programa.
447,447,977,6.1,A pointer is a way to get at another object. Essentially it is a way to grab an instance of an object and then either pass that instance a message or retreive some data from that object. A pointer is actually just an address of where an instance is held in memory.,A variable that contains the address in memory of another variable.,What is a pointer?,4.5,"Eine Variable, die die Adresse im Speicher einer anderen Variablen enthält.",Was ist ein Zeiger?,"Ein Zeiger ist ein Weg, um an ein anderes Objekt zu gelangen. Im Wesentlichen ist dies eine Möglichkeit, eine Instanz eines Objekts abzurufen und dieser Instanz dann entweder eine Nachricht zu übergeben oder einige Daten von diesem Objekt abzurufen. Ein Zeiger ist eigentlich nur eine Adresse, an der sich eine Instanz im Speicher befindet.",Unsa ang usa ka pointer?,Usa ka variable nga adunay sulud nga panumduman sa uban pa nga variable.,Ang usa ka pointer usa ka paagi aron makakuha sa ubang butang. Sa tinuud kini usa ka paagi aron makuha ang usa ka pananglitan sa usa ka butang ug pagkahuman ipasa ang pananglitan nga usa ka mensahe o ibalik ang pila ka datos gikan sa kana nga butang. Ang usa ka pointer sa tinuud usa ra ka address diin ang pananglitan gihimo sa memorya.,Vad är en pekare?,En variabel som innehåller adressen i minnet för en annan variabel.,En pekare är ett sätt att komma till ett annat objekt. I grund och botten är det ett sätt att fånga en instans av ett objekt och sedan antingen skicka den instansen ett meddelande eller hämta lite data från det objektet. En pekare är faktiskt bara en adress där en instans hålls i minnet.,Qu&#39;est-ce qu&#39;un pointeur?,Une variable qui contient l&#39;adresse en mémoire d&#39;une autre variable.,"Un pointeur est un moyen d&#39;accéder à un autre objet. Il s&#39;agit essentiellement d&#39;un moyen de récupérer une instance d&#39;un objet, puis de transmettre à cette instance un message ou de récupérer des données à partir de cet objet. Un pointeur est en fait juste une adresse de l&#39;endroit où une instance est conservée en mémoire.",Wat is een aanwijzer?,Een variabele die het adres in het geheugen van een andere variabele bevat.,Een aanwijzer is een manier om bij een ander object te komen. In wezen is het een manier om een exemplaar van een object te pakken en vervolgens aan dat exemplaar een bericht door te geven of gegevens van dat object op te halen. Een pointer is eigenlijk gewoon een adres van waar een instantie in het geheugen wordt bewaard.,Что такое указатель?,"Переменная, содержащая адрес в памяти другой переменной.","Указатель - это способ добраться до другого объекта. По сути, это способ получить экземпляр объекта, а затем либо передать этому экземпляру сообщение, либо получить некоторые данные из этого объекта. На самом деле указатель - это просто адрес того, где экземпляр хранится в памяти.",Cos&#39;è un puntatore?,Una variabile che contiene l&#39;indirizzo in memoria di un&#39;altra variabile.,Un puntatore è un modo per raggiungere un altro oggetto. Essenzialmente è un modo per acquisire un&#39;istanza di un oggetto e quindi passare a tale istanza un messaggio o recuperare alcuni dati da quell&#39;oggetto. Un puntatore è in realtà solo un indirizzo di dove è conservata un&#39;istanza in memoria.,¿Qué es un puntero?,Una variable que contiene la dirección en memoria de otra variable.,"Un puntero es una forma de llegar a otro objeto. Esencialmente, es una forma de tomar una instancia de un objeto y luego pasarle un mensaje a esa instancia o recuperar algunos datos de ese objeto. Un puntero es en realidad solo una dirección de dónde se guarda una instancia en la memoria.",Co to jest wskaźnik?,"Zmienna, która zawiera adres w pamięci innej zmiennej.","Wskaźnik to sposób na dotarcie do innego obiektu. Zasadniczo jest to sposób na pobranie instancji obiektu, a następnie przekazanie tej instancji wiadomości lub odzyskanie niektórych danych z tego obiektu. Wskaźnik to właściwie tylko adres miejsca, w którym instancja jest przechowywana w pamięci.",Con trỏ là gì?,Một biến chứa địa chỉ trong bộ nhớ của một biến khác.,"Con trỏ là một cách để đến một đối tượng khác. Về cơ bản, nó là một cách để lấy một thể hiện của một đối tượng và sau đó chuyển đối tượng đó một thông báo hoặc truy xuất một số dữ liệu từ đối tượng đó. Một con trỏ thực sự chỉ là một địa chỉ nơi một thể hiện được lưu giữ trong bộ nhớ.",ポインタとは何ですか？,別の変数のメモリ内のアドレスを含む変数。,ポインタは、別のオブジェクトに到達する方法です。基本的に、これはオブジェクトのインスタンスを取得し、そのインスタンスにメッセージを渡すか、そのオブジェクトからデータを取得する方法です。ポインタは、実際にはインスタンスがメモリ内に保持されている場所のアドレスにすぎません。,什么是指针？,一个变量，包含另一个变量在内存中的地址。,指针是到达另一个对象的一种方法。本质上，这是一种获取对象实例然后向该实例传递消息或从该对象获取某些数据的方法。指针实际上只是一个实例保存在内存中的地址。,ما هو المؤشر؟,متغير يحتوي على العنوان في ذاكرة متغير آخر.,المؤشر هو وسيلة للوصول إلى كائن آخر. إنها في الأساس طريقة للاستيلاء على مثيل لكائن ثم إما تمرير رسالة ذلك المثال أو استرداد بعض البيانات من هذا الكائن. المؤشر هو في الواقع مجرد عنوان حيث يتم الاحتفاظ بمثيل في الذاكرة.,Що таке вказівник?,"Змінна, що містить адресу в пам&#39;яті іншої змінної.","Покажчик - це спосіб дістатись до іншого об’єкта. По суті, це спосіб захопити екземпляр об’єкта, а потім або передати цьому екземпляру повідомлення, або отримати деякі дані з цього об’єкта. Вказівник насправді є просто адресою того, де екземпляр зберігається в пам&#39;яті.",O que é um ponteiro?,Uma variável que contém o endereço na memória de outra variável.,"Um ponteiro é uma forma de chegar a outro objeto. Essencialmente, é uma maneira de pegar uma instância de um objeto e, em seguida, passar uma mensagem a essa instância ou recuperar alguns dados desse objeto. Um ponteiro é na verdade apenas um endereço de onde uma instância é mantida na memória.",اشاره گر چیست؟,متغیری که حاوی آدرس در حافظه متغیر دیگر است.,اشاره گر راهی است برای رسیدن به شی another دیگر. اساساً این راهی برای بدست آوردن نمونه ای از یک شی object و سپس ارسال آن نمونه از پیام یا بازیابی برخی داده ها از آن شی است. یک اشاره گر در واقع فقط آدرسی است که یک نمونه در حافظه نگهداری می شود.,Què és un punter?,Una variable que conté l&#39;adreça en memòria d&#39;una altra variable.,Un punter és una manera d’arribar a un altre objecte. Essencialment és una manera d’agafar una instància d’un objecte i després passar-li un missatge o recuperar algunes dades d’aquest objecte. Un punter és en realitat només una adreça on es guarda una instància a la memòria.,Шта је показивач?,Променљива која садржи адресу у меморији друге променљиве.,"Показивач је начин да се дође до другог објекта. У основи је то начин да се зграби инстанца објекта, а затим или проследи тој инстанци поруку или се преузму неки подаци из тог објекта. Показивач је заправо само адреса места где се инстанца чува у меморији.",Apa itu penunjuk?,Variabel yang berisi alamat dalam memori variabel lain.,Penunjuk adalah cara untuk mendapatkan objek lain. Pada dasarnya ini adalah cara untuk mengambil instance dari suatu objek dan kemudian meneruskan instance itu pesan atau mengambil beberapa data dari objek itu. Sebuah pointer sebenarnya hanyalah sebuah alamat dimana sebuah instance disimpan dalam memori.,Hva er en peker?,En variabel som inneholder adressen i minnet til en annen variabel.,"En peker er en måte å komme til et annet objekt på. I hovedsak er det en måte å ta tak i en forekomst av et objekt, og deretter enten sende den meldingen eller hente noen data fra det objektet. En peker er egentlig bare en adresse der en forekomst holdes i minnet.",포인터 란 무엇입니까?,다른 변수의 메모리에 주소를 포함하는 변수입니다.,포인터는 다른 개체를 가져 오는 방법입니다. 기본적으로 개체의 인스턴스를 가져온 다음 해당 인스턴스에 메시지를 전달하거나 해당 개체에서 일부 데이터를 검색하는 방법입니다. 포인터는 실제로 인스턴스가 메모리에있는 주소 일뿐입니다.,Mikä on osoitin?,"Muuttuja, joka sisältää osoitteen toisen muuttujan muistissa.","Osoitin on tapa päästä toiseen kohteeseen. Pohjimmiltaan se on tapa napata objektin ilmentymä ja sitten joko välittää kyseiselle ilmentymälle viesti tai noutaa uudelleen tietoja siitä objektista. Osoitin on oikeastaan vain osoite, missä esiintymä on muistissa.",Mi az a mutató?,"Olyan változó, amely egy másik változó memóriájában tartalmazza a címet.","A mutató egy másik objektum elérésének módja. Lényegében ez egy módja annak, hogy megragadjon egy objektum egy példányát, majd vagy továbbítson egy üzenetet a példánynak, vagy visszakeresjen néhány adatot az objektumból. A mutató valójában csak egy cím, ahol egy példányt a memóriában tárolnak.",Co je to ukazatel?,"Proměnná, která obsahuje adresu v paměti jiné proměnné.","Ukazatel je způsob, jak se dostat k jinému objektu. V podstatě se jedná o způsob, jak chytit instanci objektu a pak buď předat této instanci zprávu nebo načíst některá data z tohoto objektu. Ukazatel je ve skutečnosti jen adresa, kde je instance uložena v paměti.",Šta je pokazivač?,Varijabla koja sadrži adresu u memoriji druge varijable.,"Pokazivač je način da se dođe do drugog objekta. U osnovi je to način da se zgrabi instanca objekta, a zatim ili proslijedi toj instanci poruku ili se preuzmu neki podaci iz tog objekta. Pokazivač je zapravo samo adresa mjesta na kojem se instanca čuva u memoriji."
448,448,2044,11.7,Arrays declared as static are not created and initialized when a function is called and destroyed when the function terminates.,The static arrays are intialized only once when the function is called.,What is the difference between an array that is declared as static and one that is not?,5.0,Die statischen Arrays werden beim Aufruf der Funktion nur einmal initialisiert.,"Was ist der Unterschied zwischen einem Array, das als statisch deklariert ist, und einem Array, das nicht als statisch deklariert ist?",Als statisch deklarierte Arrays werden beim Aufruf einer Funktion nicht erstellt und initialisiert und beim Beenden der Funktion zerstört.,Unsa ang kalainan tali sa usa ka laray nga gideklara nga static ug usa nga dili?,Ang mga static arrays intialized kausa ra kung gitawag ang function.,Ang mga array nga gideklara nga static dili gihimo ug gisugdan kung ang usa ka function gitawag ug gubaon kung matapos na ang function.,Vad är skillnaden mellan en array som deklareras som statisk och en som inte är det?,De statiska matriserna intialiseras bara en gång när funktionen anropas.,Arrayer som deklareras som statiska skapas inte och initialiseras när en funktion anropas och förstörs när funktionen avslutas.,Quelle est la différence entre un tableau déclaré statique et un autre qui ne l&#39;est pas?,Les tableaux statiques ne sont initialisés qu&#39;une seule fois lorsque la fonction est appelée.,Les tableaux déclarés comme statiques ne sont pas créés et initialisés lorsqu&#39;une fonction est appelée et détruits lorsque la fonction se termine.,Wat is het verschil tussen een array die als statisch is gedeclareerd en een array die dat niet is?,De statische arrays worden slechts één keer geïnitialiseerd wanneer de functie wordt aangeroepen.,"Arrays die als statisch zijn gedeclareerd, worden niet gemaakt en geïnitialiseerd wanneer een functie wordt aangeroepen en vernietigd wanneer de functie wordt beëindigd.","В чем разница между массивом, объявленным как статический, и массивом, который не является статическим?",Статические массивы инициализируются только один раз при вызове функции.,"Массивы, объявленные как статические, не создаются и не инициализируются при вызове функции и не уничтожаются при завершении функции.",Qual è la differenza tra un array dichiarato come statico e uno che non lo è?,Gli array statici vengono inizializzati solo una volta quando viene chiamata la funzione.,Gli array dichiarati come statici non vengono creati e inizializzati quando una funzione viene chiamata e distrutti quando la funzione termina.,¿Cuál es la diferencia entre una matriz que se declara como estática y una que no lo es?,Las matrices estáticas se inicializan solo una vez cuando se llama a la función.,Las matrices declaradas como estáticas no se crean ni se inicializan cuando se llama a una función y se destruyen cuando la función termina.,"Jaka jest różnica między tablicą zadeklarowaną jako statyczną a taką, która nie jest?","Tablice statyczne są inicjowane tylko raz, gdy wywoływana jest funkcja.","Tablice zadeklarowane jako statyczne nie są tworzone i inicjowane, gdy funkcja jest wywoływana i niszczona po zakończeniu funkcji.",Sự khác biệt giữa mảng được khai báo là tĩnh và mảng không được khai báo là gì?,Các mảng tĩnh chỉ được intialize một lần khi hàm được gọi.,Mảng được khai báo là tĩnh không được tạo và khởi tạo khi một hàm được gọi và bị hủy khi hàm kết thúc.,静的として宣言されている配列とそうでない配列の違いは何ですか？,静的配列は、関数が呼び出されたときに1回だけ初期化されます。,静的として宣言された配列は、関数が呼び出されたときに作成および初期化されず、関数の終了時に破棄されます。,声明为静态的数组与未声明为静态的数组有什么区别？,调用函数时，静态数组仅初始化一次。,声明为静态的数组不会在调用函数时创建和初始化，并在函数终止时销毁。,ما الفرق بين المصفوفة التي تم التصريح بأنها ثابتة والمصفوفة التي لا يتم التصريح عنها؟,يتم تهيئة المصفوفات الثابتة مرة واحدة فقط عند استدعاء الوظيفة.,لا يتم إنشاء المصفوفات التي تم إعلانها على أنها ثابتة وتهيئتها عند استدعاء دالة وإتلافها عند إنهاء الوظيفة.,"У чому різниця між масивом, який оголошено статичним, і масивом, який не є?",Статичні масиви ініціалізуються лише один раз при виклику функції.,"Масиви, оголошені як статичні, не створюються та ініціалізуються при виклику функції та руйнуються при завершенні функції.",Qual é a diferença entre uma matriz que é declarada como estática e outra que não é?,"Os arrays estáticos são inicializados apenas uma vez, quando a função é chamada.",Arrays declarados como estáticos não são criados e inicializados quando uma função é chamada e destruídos quando a função termina.,چه تفاوتی بین آرایه ای که به صورت استاتیک اعلام می شود و دیگری که نیست ، چیست؟,وقتی فراخوانی تابع می شود ، آرایه های ساکن فقط یک بار intialize می شوند.,آرایه هایی که به صورت ساکن اعلام می شوند با فراخوانی تابع ایجاد و مقداردهی اولیه نمی شوند و با خاتمه عملکرد تابع از بین می رود.,Quina diferència hi ha entre una matriu que es declara estàtica i una que no ho és?,Les matrius estàtiques només s’inicialitzen una vegada quan es crida la funció.,Les matrius declarades com a estàtiques no es creen i s&#39;inicialitzen quan es crida i es destrueix una funció quan finalitza la funció.,Која је разлика између низа који је декларисан као статичан и низа који није?,Статички низови инцијализују се само једном када се функција позове.,Низови декларисани као статички не креирају се и иницијализују када се функција позове и униште када се функција завршава.,Apa perbedaan antara array yang dideklarasikan sebagai statis dan yang tidak?,Array statis diinisialisasi hanya sekali ketika fungsi dipanggil.,Array yang dideklarasikan sebagai statis tidak dibuat dan diinisialisasi ketika suatu fungsi dipanggil dan dimusnahkan ketika fungsi tersebut berakhir.,Hva er forskjellen mellom en matrise som er erklært som statisk og en som ikke er det?,De statiske matriser intialiseres bare en gang når funksjonen kalles.,Arrays deklarert som statisk blir ikke opprettet og initialisert når en funksjon kalles og ødelegges når funksjonen avsluttes.,정적으로 선언 된 배열과 그렇지 않은 배열의 차이점은 무엇입니까?,함수가 호출 될 때 정적 배열은 한 번만 초기화됩니다.,static으로 선언 된 배열은 함수가 호출 될 때 생성 및 초기화되지 않고 함수가 종료 될 때 소멸됩니다.,Mitä eroa on staattiseksi ilmoitetun taulukon ja ei-taulukon välillä?,"Staattiset taulukot intialisoidaan vain kerran, kun funktio kutsutaan.","Staattisiksi ilmoitettuja taulukoita ei luoda ja alusteta, kun funktio kutsutaan ja tuhotaan, kun toiminto päättyy.",Mi a különbség egy statikusnak nyilvánított tömb és egy nem tömb között?,"A statikus tömböket csak egyszer intializálják, amikor a függvény meghívásra kerül.","A statikusnak nyilvánított tömbök nem jönnek létre és nem inicializálódnak, ha egy függvény meghívásra kerül, és megsemmisül, amikor a függvény leáll.","Jaký je rozdíl mezi polem, které je deklarováno jako statické a tím, které není?","Statická pole jsou inicializována pouze jednou, když je funkce volána.",Pole deklarovaná jako statická nejsou vytvořena a inicializována při volání funkce a zničena při ukončení funkce.,Koja je razlika između niza koji je deklariran kao statičan i niza koji nije?,Statički nizovi incijaliziraju se samo jednom kada se funkcija pozove.,Nizovi deklarirani kao statički ne kreiraju se i inicijaliziraju kada se funkcija pozove i unište kad se funkcija završava.
449,449,1948,11.3,"By declaring the class first, the name of the variable, and then any variables that need to be put in the constructor.  Ex. Class myClass(x, y)",By using constructors.,How are objects initialized when they are created?,5.0,Durch die Verwendung von Konstruktoren.,Wie werden Objekte beim Erstellen initialisiert?,"Indem Sie zuerst die Klasse deklarieren, den Namen der Variablen und dann alle Variablen, die in den Konstruktor eingefügt werden müssen. Ex. Klasse myClass (x, y)",Giunsa ang pagpauna sa mga butang kung gihimo kini?,Pinaagi sa paggamit sa mga konstruktor.,"Pinaagi sa pagdeklara una sa klase, ang ngalan sa variable, ug pagkahuman ang bisan unsang mga variable nga kinahanglan ibutang sa konstruktor. Ex. Klase myClass (x, y)",Hur initialiseras objekt när de skapas?,Genom att använda konstruktörer.,"Genom att förklara klassen först, namnet på variabeln och sedan alla variabler som måste placeras i konstruktören. Ex. Klass myClass (x, y)",Comment les objets sont-ils initialisés lors de leur création?,En utilisant des constructeurs.,"En déclarant d&#39;abord la classe, le nom de la variable, puis toutes les variables qui doivent être placées dans le constructeur. Ex. Classe myClass (x, y)",Hoe worden objecten geïnitialiseerd wanneer ze worden gemaakt?,Door constructeurs te gebruiken.,"Door eerst de klasse te declareren, de naam van de variabele en vervolgens alle variabelen die in de constructor moeten worden geplaatst. Ex. Klasse myClass (x, y)",Как инициализируются объекты при их создании?,Используя конструкторы.,"Сначала объявляя класс, имя переменной, а затем любые переменные, которые необходимо поместить в конструктор. Ex. Класс myClass (x, y)",Come vengono inizializzati gli oggetti quando vengono creati?,Utilizzando i costruttori.,"Dichiarando prima la classe, il nome della variabile e quindi tutte le variabili che devono essere inserite nel costruttore. Ex. Classe myClass (x, y)",¿Cómo se inicializan los objetos cuando se crean?,Utilizando constructores.,"Declarando primero la clase, el nombre de la variable y luego cualquier variable que deba colocarse en el constructor. Ex. Clase myClass (x, y)",Jak są inicjalizowane obiekty podczas ich tworzenia?,Używając konstruktorów.,"Deklarując najpierw klasę, nazwę zmiennej, a następnie dowolne zmienne, które należy umieścić w konstruktorze. Dawny. Klasa myClass (x, y)",Các đối tượng được khởi tạo như thế nào khi chúng được tạo ra?,Bằng cách sử dụng các hàm tạo.,"Bằng cách khai báo lớp trước, tên của biến và sau đó là bất kỳ biến nào cần được đưa vào hàm tạo. Ví dụ. Lớp myClass (x, y)",オブジェクトは作成時にどのように初期化されますか？,コンストラクターを使用する。,最初にクラスを宣言し、次に変数の名前を宣言し、次にコンストラクターに配置する必要のある変数を宣言します。例クラスmyClass（x、y）,创建对象时如何初始化它们？,通过使用构造函数。,首先声明类，然后声明变量的名称，然后声明需要在构造函数中放入的所有变量。例如类myClass（x，y）,كيف يتم تهيئة الكائنات عند إنشائها؟,باستخدام المنشئين.,بإعلان الفئة أولاً ، اسم المتغير ، ثم أي متغيرات يجب وضعها في المُنشئ. مثال فئة myClass (x، y),Як ініціалізуються об’єкти при їх створенні?,За допомогою конструкторів.,"Оголосивши клас спочатку, ім&#39;я змінної, а потім будь-які змінні, які потрібно помістити в конструктор. Напр. Клас myClass (x, y)",Como os objetos são inicializados quando são criados?,Usando construtores.,"Declarando a classe primeiro, o nome da variável e, a seguir, quaisquer variáveis que precisem ser colocadas no construtor. Ex. Class myClass (x, y)",چگونه اشیا هنگام ایجاد مقداردهی اولیه می شوند؟,با استفاده از سازنده ها.,با اعلام کلاس ابتدا نام متغیر و سپس متغیرهایی که باید در سازنده قرار گیرند. سابق. کلاس myClass (x، y),Com s’inicialitzen els objectes quan es creen?,Mitjançant l’ús de constructors.,"En declarar la classe primer, el nom de la variable i, a continuació, les variables que calgui posar al constructor. Ex. Class myClass (x, y)",Како се објекти иницијализују када се креирају?,Коришћењем конструктора.,"Декларацијом класе прво, имена променљиве, а затим свих променљивих које треба ставити у конструктор. Пр. Класа миЦласс (к, и)",Bagaimana objek diinisialisasi saat dibuat?,Dengan menggunakan konstruktor.,"Dengan mendeklarasikan kelas terlebih dahulu, nama variabelnya, lalu variabel apa pun yang perlu dimasukkan ke dalam konstruktor. Ex. Kelas myClass (x, y)",Hvordan initialiseres objekter når de blir opprettet?,Ved å bruke konstruktører.,"Ved å erklære klassen først, navnet på variabelen, og deretter eventuelle variabler som må plasseres i konstruktøren. Eks. Klasse myClass (x, y)",객체는 생성 될 때 어떻게 초기화됩니까?,생성자를 사용하여.,"먼저 클래스를 선언하고 변수 이름을 선언 한 다음 생성자에 넣어야하는 변수를 선언합니다. 전의. 클래스 myClass (x, y)","Kuinka objektit alustetaan, kun ne luodaan?",Käyttämällä rakentajia.,"Ilmoittamalla ensin luokka, muuttujan nimi ja sitten kaikki muuttujat, jotka on lisättävä konstruktoriin. Esim. Luokka myClass (x, y)","Hogyan inicializálják az objektumokat, amikor létrehozzák őket?",Konstruktorok használatával.,"Az osztály deklarálásával először a változó nevét, majd az összes olyan változót, amelyet be kell tenni a konstruktorba. Volt. MyClass osztály (x, y)","Jak jsou inicializovány objekty, když jsou vytvořeny?",Pomocí konstruktorů.,"Nejprve deklarováním třídy název proměnné a poté všechny proměnné, které je třeba vložit do konstruktoru. Př. Třída myClass (x, y)",Kako se objekti inicijaliziraju kada se kreiraju?,Korištenjem konstruktora.,"Deklariranjem klase prvo, imena varijable, a zatim svih varijabli koje treba staviti u konstruktor. Pr. Klasa myClass (x, y)"
450,450,821,4.7,By column.,By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",1.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?",Nach Spalte.,"Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,Pinaagi sa kolum.,"Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,Efter kolumn.,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,Par colonne.,"Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,Per kolom.,Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,По столбцу.,"Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,Per colonna.,"¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,Por columna.,"W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,Według kolumny.,"Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,Theo cột.,2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,列別。,二维数组如何按行或按列存储在内存中？,按行。,按列。,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,حسب العمود.,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,За стовпчиком.,"Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,Por coluna.,آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,توسط ستون.,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,Per columna.,"Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,По колони.,"Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,Menurut kolom.,"Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,Etter kolonne.,"2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,열별.,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,Sarakkeittain.,"Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,Oszloponként.,"Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,Podle sloupce.,"Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,Po koloni.
451,451,598,3.6,recursion refers to situations in which functions call themselves. These types of functions are known as recursive functions. That being said Infinite recursion occurs when the function is designed in such a way as to call it self forever without stopping possible causes,"If the recursion step is defined incorrectly, or if the base case is not included.","When defining a recursive function, what are possible causes for infinite recursion?",3.0,Wenn der Rekursionsschritt falsch definiert ist oder wenn der Basisfall nicht enthalten ist.,Was sind mögliche Ursachen für eine unendliche Rekursion bei der Definition einer rekursiven Funktion?,"Rekursion bezieht sich auf Situationen, in denen sich Funktionen selbst aufrufen. Diese Arten von Funktionen werden als rekursive Funktionen bezeichnet. Davon abgesehen tritt eine unendliche Rekursion auf, wenn die Funktion so konzipiert ist, dass sie sich für immer selbst nennt, ohne mögliche Ursachen aufzuhalten","Kung gipiho ang usa ka recursive function, unsa ang posible nga mga hinungdan sa walay katapusan nga recursion?","Kung ang lakang sa recursion gihubit nga gihubit, o kung ang sukaranan nga kaso wala ilakip.",Ang recursion nagpasabut sa mga sitwasyon diin ang mga gimbuhaton nagtawag sa ilang kaugalingon. Ang kini nga mga klase nga pag-andar nahibal-an nga recursive function. Ang giingon nga Infinite recursion mahitabo kung ang paglihok gilaraw sa us aka paagi aron tawgon kini nga kaugalingon hangtod sa hangtod nga wala’y hunong ang mga mahimong hinungdan,Vad är möjliga orsaker till oändlig rekursion när man definierar en rekursiv funktion?,Om rekursionssteget är felaktigt definierat eller om basfallet inte ingår.,rekursion avser situationer där funktioner kallar sig själva. Dessa typer av funktioner kallas rekursiva funktioner. Med detta sagt oändlig rekursion inträffar när funktionen är utformad på ett sådant sätt att den kallar sig själv för alltid utan att stoppa möjliga orsaker,"Lors de la définition d&#39;une fonction récursive, quelles sont les causes possibles d&#39;une récursion infinie?",Si l&#39;étape de récursivité n&#39;est pas définie correctement ou si le cas de base n&#39;est pas inclus.,"la récursivité fait référence aux situations dans lesquelles les fonctions s&#39;appellent elles-mêmes. Ces types de fonctions sont appelés fonctions récursives. Cela étant dit, la récursivité infinie se produit lorsque la fonction est conçue de manière à s&#39;appeler elle-même pour toujours sans arrêter les causes possibles",Wat zijn mogelijke oorzaken voor oneindige recursie bij het definiëren van een recursieve functie?,Als de recursiestap onjuist is gedefinieerd of als het basisscenario niet is opgenomen.,"recursie verwijst naar situaties waarin functies zichzelf aanroepen. Dit soort functies staan bekend als recursieve functies. Dat gezegd hebbende, vindt oneindige recursie plaats wanneer de functie zo is ontworpen dat hij zichzelf voor altijd blijft noemen zonder mogelijke oorzaken te stoppen",Каковы возможные причины бесконечной рекурсии при определении рекурсивной функции?,"Если шаг рекурсии определен неправильно, или если базовый случай не включен.","Рекурсия относится к ситуациям, в которых функции вызывают сами себя. Эти типы функций известны как рекурсивные функции. При этом бесконечная рекурсия возникает, когда функция спроектирована таким образом, чтобы вызывать ее навсегда, не останавливая возможные причины.","Quando si definisce una funzione ricorsiva, quali sono le possibili cause della ricorsione infinita?",Se il passaggio di ricorsione è definito in modo errato o se il caso base non è incluso.,"la ricorsione si riferisce a situazioni in cui le funzioni chiamano se stesse. Questi tipi di funzioni sono noti come funzioni ricorsive. Detto questo, la ricorsione infinita si verifica quando la funzione è progettata in modo tale da chiamarla sé per sempre senza interrompere le possibili cause","Al definir una función recursiva, ¿cuáles son las posibles causas de la recursividad infinita?",Si el paso de recursividad se define incorrectamente o si no se incluye el caso base.,"la recursividad se refiere a situaciones en las que las funciones se llaman a sí mismas. Estos tipos de funciones se conocen como funciones recursivas. Dicho esto, la recursividad infinita ocurre cuando la función está diseñada de tal manera que se llama a sí misma para siempre sin detener las posibles causas.",Jakie są możliwe przyczyny nieskończonej rekursji podczas definiowania funkcji rekurencyjnej?,Jeśli krok rekursji jest zdefiniowany niepoprawnie lub jeśli przypadek podstawowy nie jest uwzględniony.,"rekursja odnosi się do sytuacji, w których funkcje wywołują siebie. Te typy funkcji są znane jako funkcje rekurencyjne. To powiedziawszy, nieskończona rekurencja występuje, gdy funkcja jest zaprojektowana w taki sposób, że nazywa ją sobą na zawsze, bez zatrzymywania możliwych przyczyn","Khi định nghĩa một hàm đệ quy, những nguyên nhân nào có thể xảy ra cho đệ quy vô hạn?","Nếu bước đệ quy được xác định không chính xác, hoặc nếu trường hợp cơ sở không được bao gồm.",đệ quy đề cập đến các tình huống trong đó các hàm gọi chính chúng. Các loại hàm này được gọi là hàm đệ quy. Điều đó đang được nói Đệ quy vô hạn xảy ra khi hàm được thiết kế theo cách gọi nó là chính nó mãi mãi mà không có các nguyên nhân có thể xảy ra,再帰関数を定義するとき、無限再帰の考えられる原因は何ですか？,再帰ステップが正しく定義されていない場合、または基本ケースが含まれていない場合。,再帰とは、関数が自分自身を呼び出す状況を指します。これらのタイプの関数は、再帰関数として知られています。とはいえ、無限再帰は、考えられる原因を停止することなく、関数が永久に自己を呼び出すように設計されている場合に発生します。,定义递归函数时，无限递归的可能原因是什么？,如果递归步骤定义不正确，或者不包括基本情况。,递归是指函数调用自身的情况。这些类型的函数称为递归函数。就是说，无限递归发生在功能被设计为永久调用自身而不停止可能原因的方式时,عند تحديد دالة عودية ، ما هي الأسباب المحتملة للعودة اللانهائية؟,إذا تم تحديد خطوة العودية بشكل غير صحيح ، أو إذا لم يتم تضمين الحالة الأساسية.,تشير العودية إلى المواقف التي تستدعي فيها الوظائف نفسها. تُعرف هذه الأنواع من الوظائف بالوظائف العودية. ومع ذلك ، تحدث العودية اللانهائية عندما يتم تصميم الوظيفة بطريقة تجعلها تطلق على نفسها إلى الأبد دون إيقاف الأسباب المحتملة,"При визначенні рекурсивної функції, які можливі причини нескінченної рекурсії?","Якщо крок рекурсії визначено неправильно, або якщо базовий випадок не включений.","рекурсія відноситься до ситуацій, в яких функції називають себе. Такі типи функцій відомі як рекурсивні функції. Сказане Нескінченна рекурсія виникає, коли функція спроектована таким чином, щоб назавжди називати її самою, не зупиняючи можливих причин","Ao definir uma função recursiva, quais são as possíveis causas para a recursão infinita?",Se a etapa de recursão for definida incorretamente ou se o caso base não estiver incluído.,"recursão refere-se a situações em que as funções chamam a si mesmas. Esses tipos de funções são conhecidos como funções recursivas. Dito isso, a recursão infinita ocorre quando a função é projetada de modo a chamá-la de self para sempre, sem interromper as possíveis causas",هنگام تعریف یک تابع بازگشتی ، علل احتمالی بازگشت بی نهایت چیست؟,اگر مرحله بازگشت به اشتباه تعریف شده باشد ، یا اگر پرونده اصلی در آن گنجانده نشده باشد.,بازگشت به موقعیت هایی گفته می شود که در آن عملکردها خود را صدا می زنند. این نوع توابع به عنوان توابع بازگشتی شناخته می شوند. گفته می شود بازگشت بی نهایت زمانی اتفاق می افتد که عملکرد به گونه ای طراحی شود که خود را برای همیشه بدون توقف علل احتمالی بنامد.,"Quan es defineix una funció recursiva, quines són les causes possibles d’una recursió infinita?",Si el pas de recursió es defineix incorrectament o si no s’inclou la minúscula o minúscula.,"La recursió es refereix a situacions en què les funcions es diuen a si mateixes. Aquest tipus de funcions es coneixen com a funcions recursives. Dit això, la recursivitat infinita es produeix quan la funció està dissenyada de manera que s&#39;anomeni jo per sempre sense aturar possibles causes.","При дефинисању рекурзивне функције, који су могући узроци бесконачне рекурзије?",Ако је корак рекурзије погрешно дефинисан или ако основни случај није укључен.,"рекурзија се односи на ситуације у којима се функције називају. Ове врсте функција су познате као рекурзивне функције. То се каже Бесконачна рекурзија се дешава када је функција дизајнирана тако да је заувек назива собом, без заустављања могућих узрока","Saat menentukan fungsi rekursif, apa kemungkinan penyebab rekursi tak hingga?","Jika langkah rekursi tidak didefinisikan dengan benar, atau jika kasus dasar tidak disertakan.","rekursi mengacu pada situasi di mana fungsi memanggil dirinya sendiri. Jenis fungsi ini dikenal sebagai fungsi rekursif. Dengan demikian, rekursi tak terbatas terjadi ketika fungsi dirancang sedemikian rupa untuk memanggilnya sendiri selamanya tanpa menghentikan kemungkinan penyebab.",Hva er mulige årsaker til uendelig rekursjon når du definerer en rekursiv funksjon?,"Hvis rekursjonstrinnet er definert feil, eller hvis basissaken ikke er inkludert.","rekursjon refererer til situasjoner der funksjoner kaller seg. Disse typer funksjoner er kjent som rekursive funksjoner. Når det er sagt, skjer uendelig rekursjon når funksjonen er utformet på en slik måte at den kaller det selv for alltid uten å stoppe mulige årsaker",재귀 함수를 정의 할 때 무한 재귀의 가능한 원인은 무엇입니까?,재귀 단계가 잘못 정의되었거나 기본 케이스가 포함되지 않은 경우.,재귀는 함수가 자신을 호출하는 상황을 나타냅니다. 이러한 유형의 함수를 재귀 함수라고합니다. Infinite recursion은 가능한 원인을 멈추지 않고 영원히 self라고 부르는 방식으로 함수를 설계했을 때 발생합니다.,Mitkä ovat mahdolliset syyt äärettömälle rekursiolle määritettäessä rekursiivista funktiota?,Jos rekursiovaihe on määritetty väärin tai jos peruskirjausta ei ole mukana.,"rekursio viittaa tilanteisiin, joissa toiminnot kutsuvat itseään. Tämän tyyppisiä toimintoja kutsutaan rekursiivisiksi funktioiksi. Loputon rekursio tapahtuu, kun toiminto on suunniteltu siten, että sitä kutsutaan itseksi ikuisesti pysäyttämättä mahdollisia syitä",A rekurzív függvény definiálásakor mi lehet a végtelen rekurzió oka?,"Ha a rekurziós lépés helytelenül van meghatározva, vagy ha az alapesetet nem tartalmazza.","a rekurzió olyan helyzetekre utal, amelyekben a funkciók önmagukat hívják. Az ilyen típusú funkciókat rekurzív függvényeknek nevezzük. Ennek ellenére a végtelen rekurzió akkor fordul elő, ha a funkciót úgy tervezték meg, hogy örökké önmagának hívja, anélkül, hogy megállítaná a lehetséges okokat",Jaké jsou možné příčiny nekonečné rekurze při definování rekurzivní funkce?,"Pokud je krok rekurze definován nesprávně, nebo pokud není zahrnut základní případ.","rekurze označuje situace, ve kterých se funkce nazývají samy. Tyto typy funkcí se označují jako rekurzivní funkce. Jak již bylo řečeno, nekonečná rekurze nastává, když je funkce navržena takovým způsobem, aby ji bylo možné navždy nazývat samo, aniž by byly zastaveny možné příčiny","Kada su definirani rekurzivne funkcije, koji su mogući uzroci beskonačne rekurzije?",Ako je korak rekurzije pogrešno definiran ili ako osnovni slučaj nije uključen.,rekurzija se odnosi na situacije u kojima se funkcije nazivaju. Ove vrste funkcija su poznate kao rekurzivne funkcije. To se kaže Beskonačna rekurzija događa se kada je funkcija dizajnirana na takav način da je zauvijek naziva bez zaustavljanja mogućih uzroka
452,452,1441,8.5,List-bases implentation is preferred. One of the main reasons is because of that the list has no fixed size.,"Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred, and why?",5.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird bevorzugt und warum?,"Die Implementierung von Listenbasen wird bevorzugt. Einer der Hauptgründe ist, dass die Liste keine feste Größe hat.","Kinsa nga pagpatuman (gipasukad sa array vs. list-based) ang gipalabi, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)",Gipalabi ang paglakip sa mga lista sa sukaranan. Usa sa mga punoan nga hinungdan tungod sa kana nga lista wala’y gidak-on nga kadak-an.,"Vilket genomförande (array-baserat kontra listbaserat) är att föredra, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),List-bas-implantering är att föredra. En av huvudorsakerna är att listan inte har någon fast storlek.,Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée et pourquoi?,"Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)",L&#39;implantation de bases de listes est préférée. L&#39;une des principales raisons est que la liste n&#39;a pas de taille fixe.,"Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)",Implementatie van lijstbasissen heeft de voorkeur. Een van de belangrijkste redenen is dat de lijst geen vaste grootte heeft.,Какая реализация (на основе массива или на основе списка) предпочтительна и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","Реализация на основе списков предпочтительна. Одна из основных причин заключается в том, что список не имеет фиксированного размера.",Quale implementazione (basata su array o basata su elenchi) è preferita e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)",L&#39;impianto di basi di lista è preferito. Uno dei motivi principali è che l&#39;elenco non ha una dimensione fissa.,¿Qué implementación (basada en matrices o basada en listas) se prefiere y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)",Se prefiere la implementación basada en listas. Una de las principales razones es que la lista no tiene un tamaño fijo.,Która implementacja (oparta na tablicach czy oparta na liście) jest preferowana i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","Preferowana jest implementacja baz list. Jednym z głównych powodów jest to, że lista nie ma stałego rozmiaru.",Triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên hơn và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)",Việc cấy ghép các cơ sở danh sách được ưu tiên. Một trong những lý do chính là vì danh sách không có kích thước cố định.,どの実装（配列ベースとリストベース）が推奨されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リストベースの実装が推奨されます。主な理由の1つは、リストに固定サイズがないためです。,首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,基于列表的配置是首选。主要原因之一是因为列表没有固定大小。,ما هو التطبيق المفضل (المستندة إلى المصفوفة مقابل القائمة) ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),يفضل ضمنية قواعد القائمة. أحد الأسباب الرئيسية هو أن القائمة ليس لها حجم ثابت.,"Яка реалізація (на основі масивів проти списку) є кращою, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","Переважною є реалізація баз списків. Однією з головних причин є те, що список не має фіксованого розміру.",Qual implementação (baseada em matriz vs. baseada em lista) é preferida e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)",A implantação de bases de lista é preferida. Um dos principais motivos é que a lista não tem tamanho fixo.,کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) ترجیح داده می شود ، و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),اجرای لیست ها ترجیح داده می شود. یکی از دلایل اصلی این است که لیست هیچ اندازه ثابتی ندارد.,Quina implementació (basada en matriu vs. basada en llistes) es prefereix i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)",Es prefereix la implantació de bases de llistes. Un dels motius principals és que la llista no té una mida fixa.,Која имплементација (заснована на низу у односу на листу) је пожељнија и зашто?,"На основу везе, јер су динамични (без ограничења величине)",Пожељна је примена база података. Један од главних разлога је тај што списак нема фиксну величину.,"Implementasi mana (berbasis larik vs. berbasis daftar) yang lebih disukai, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)",Lebih disukai implentasi basis daftar. Salah satu alasan utamanya adalah karena list tersebut tidak memiliki ukuran tetap.,"Hvilken implementering (arraybasert vs. listebasert) foretrekkes, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)",List-baser innføring er å foretrekke. En av hovedårsakene er at listen ikke har noen fast størrelse.,어떤 구현 (배열 기반 vs. 목록 기반)이 선호되며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",목록 기반 표현이 선호됩니다. 주된 이유 중 하나는 목록에 고정 된 크기가 없기 때문입니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","Listapohjaisten implantaatio on edullinen. Yksi tärkeimmistä syistä on, että luettelolla ei ole kiinteää kokoa.","Melyik megvalósítást (tömb alapú vagy lista alapú) részesítik előnyben, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","Előnyös a listaalapú implantáció. Az egyik fő oka annak, hogy a listának nincs rögzített mérete.",Která implementace (založená na poli vs. založená na seznamu) je upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","Upřednostňuje se implikace implikace seznamu. Jedním z hlavních důvodů je, že seznam nemá pevnou velikost.",Koja je implementacija (zasnovana na nizu u odnosu na listu) poželjna i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)",Poželjna je primena baza podataka. Jedan od glavnih razloga je taj što popis nema fiksnu veličinu.
453,453,2024,11.6,iteration,Through iteration.,What is the alternative way to solve a problem that could be solved through recursive functions?,5.0,Durch Iteration.,"Was ist der alternative Weg, um ein Problem zu lösen, das durch rekursive Funktionen gelöst werden könnte?",Wiederholung,Unsa ang alternatibo nga paagi aron masulbad ang usa ka problema nga mahimong masulbad pinaagi sa mga recursive function?,Pinaagi sa pag-usab.,pagsubli,Vad är det alternativa sättet att lösa ett problem som kan lösas genom rekursiva funktioner?,Genom iteration.,iteration,Quelle est la manière alternative de résoudre un problème qui pourrait être résolu par des fonctions récursives?,Par itération.,itération,Wat is de alternatieve manier om een probleem op te lossen dat kan worden opgelost met recursieve functies?,Door middel van iteratie.,iteratie,"Каков альтернативный способ решения проблемы, которую можно решить с помощью рекурсивных функций?",Через итерацию.,итерация,Qual è il modo alternativo per risolvere un problema che potrebbe essere risolto tramite funzioni ricorsive?,Attraverso l&#39;iterazione.,iterazione,¿Cuál es la forma alternativa de resolver un problema que podría resolverse mediante funciones recursivas?,A través de la iteración.,iteración,"Jaki jest alternatywny sposób rozwiązania problemu, który można rozwiązać za pomocą funkcji rekurencyjnych?",Poprzez iterację.,iteracja,Cách thay thế để giải quyết một vấn đề có thể được giải quyết thông qua các hàm đệ quy là gì?,Thông qua lặp đi lặp lại.,sự lặp lại,再帰関数を介して解決できる問題を解決するための代替方法は何ですか？,反復を通して。,反復,解决可以通过递归函数解决的问题的替代方法是什么？,通过迭代。,迭代,ما هي الطريقة البديلة لحل مشكلة يمكن حلها من خلال الدوال العودية؟,من خلال التكرار.,تكرار,"Який альтернативний спосіб вирішити проблему, яку можна було б вирішити за допомогою рекурсивних функцій?",Через ітерацію.,ітерація,Qual é a forma alternativa de resolver um problema que poderia ser resolvido por meio de funções recursivas?,Por meio de iteração.,iteração,روش جایگزین برای حل مسئله ای که می تواند از طریق توابع بازگشتی حل شود چیست؟,از طریق تکرار,تکرار,Quina és la forma alternativa de resoldre un problema que es podria resoldre mitjançant funcions recursives?,Mitjançant la iteració.,iteració,Који је алтернативни начин решавања проблема који би се могао решити рекурзивним функцијама?,Кроз итерацију.,итерација,Apa cara alternatif untuk menyelesaikan masalah yang dapat diselesaikan melalui fungsi rekursif?,Melalui iterasi.,pengulangan,Hva er den alternative måten å løse et problem som kan løses gjennom rekursive funksjoner?,Gjennom iterasjon.,iterasjon,재귀 함수를 통해 해결할 수있는 문제를 해결하는 다른 방법은 무엇입니까?,반복을 통해.,되풀이,"Mikä on vaihtoehtoinen tapa ratkaista ongelma, joka voitaisiin ratkaista rekursiivisilla toiminnoilla?",Iteraation kautta.,iterointi,Mi az alternatív megoldás a rekurzív függvényekkel megoldható probléma megoldására?,Iterációval.,ismétlés,"Jaký je alternativní způsob řešení problému, který lze vyřešit pomocí rekurzivních funkcí?",Prostřednictvím iterace.,opakování,Koji je alternativni način rješavanja problema koji bi se mogao riješiti rekurzivnim funkcijama?,Kroz iteraciju.,iteracija
454,454,165,1.6,Before they are used.,Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables),Where are variables declared in a C++ program?,2.0,Variablen können überall in einem Programm deklariert werden. Sie können innerhalb einer Funktion (lokale Variablen) oder außerhalb der Funktionen (globale Variablen) deklariert werden.,Wo werden Variablen in einem C ++ - Programm deklariert?,Bevor sie verwendet werden.,Asa man ang mga variable nga gideklara sa usa ka C ++ nga programa?,Ang mga variable mahimo ipahayag bisan diin sa usa ka programa. Mahimo sila madeklara sa sulud sa usa ka pagpaandar (mga lokal nga baryable) o sa gawas sa mga gimbuhaton (global variable),Sa wala pa sila gigamit.,Var deklareras variabler i ett C ++ - program?,Variabler kan deklareras var som helst i ett program. De kan deklareras i en funktion (lokala variabler) eller utanför funktionerna (globala variabler),Innan de används.,Où les variables sont-elles déclarées dans un programme C ++?,Les variables peuvent être déclarées n&#39;importe où dans un programme. Ils peuvent être déclarés à l&#39;intérieur d&#39;une fonction (variables locales) ou en dehors des fonctions (variables globales),Avant qu&#39;ils ne soient utilisés.,Waar worden variabelen gedeclareerd in een C ++ -programma?,Variabelen kunnen overal in een programma worden gedeclareerd. Ze kunnen worden gedeclareerd binnen een functie (lokale variabelen) of buiten de functies (globale variabelen),Voordat ze worden gebruikt.,Где объявлены переменные в программе на C ++?,Переменные можно объявлять в любом месте программы. Они могут быть объявлены внутри функции (локальные переменные) или вне функций (глобальные переменные).,"Прежде, чем они будут использованы.",Dove sono le variabili dichiarate in un programma C ++?,Le variabili possono essere dichiarate ovunque in un programma. Possono essere dichiarati all&#39;interno di una funzione (variabili locali) o all&#39;esterno delle funzioni (variabili globali),Prima che vengano utilizzati.,¿Dónde se declaran las variables en un programa C ++?,Las variables se pueden declarar en cualquier lugar de un programa. Pueden declararse dentro de una función (variables locales) o fuera de las funciones (variables globales),Antes de que se utilicen.,Gdzie są zmienne zadeklarowane w programie C ++?,Zmienne można zadeklarować w dowolnym miejscu programu. Można je zadeklarować wewnątrz funkcji (zmienne lokalne) lub poza funkcjami (zmienne globalne),Zanim zostaną użyte.,Các biến được khai báo ở đâu trong một chương trình C ++?,Các biến có thể được khai báo ở bất kỳ đâu trong chương trình. Chúng có thể được khai báo bên trong một hàm (biến cục bộ) hoặc bên ngoài hàm (biến toàn cục),Trước khi chúng được sử dụng.,C ++プログラムで変数はどこで宣言されていますか？,変数は、プログラム内のどこでも宣言できます。これらは、関数内（ローカル変数）または関数外（グローバル変数）で宣言できます。,それらが使用される前に。,C ++程序中的变量在哪里声明？,变量可以在程序中的任何位置声明。可以在函数内部（局部变量）或函数外部（全局变量）声明它们,在使用它们之前。,أين يتم التصريح عن المتغيرات في برنامج C ++؟,يمكن التصريح عن المتغيرات في أي مكان في البرنامج. يمكن التصريح عنها داخل دالة (المتغيرات المحلية) أو خارج الوظائف (المتغيرات العالمية),قبل استخدامها.,"Де змінні, оголошені в програмі на C ++?",Змінні можуть бути оголошені в будь-якому місці програми. Вони можуть бути оголошені всередині функції (локальні змінні) або поза функціями (глобальні змінні),Перед їх використанням.,Onde as variáveis são declaradas em um programa C ++?,As variáveis podem ser declaradas em qualquer lugar em um programa. Eles podem ser declarados dentro de uma função (variáveis locais) ou fora das funções (variáveis globais),Antes de serem usados.,متغیرها در یک برنامه C ++ کجا اعلام می شوند؟,متغیرها را می توان در هر کجای یک برنامه اعلام کرد. آنها را می توان در داخل یک تابع (متغیرهای محلی) یا خارج از توابع (متغیرهای جهانی) اعلام کرد,قبل از استفاده,On es declaren les variables en un programa C ++?,Les variables es poden declarar a qualsevol lloc del programa. Es poden declarar dins d&#39;una funció (variables locals) o fora de les funcions (variables globals),Abans que s’utilitzin.,Где су променљиве декларисане у програму Ц ++?,Променљиве се могу декларисати било где у програму. Могу се декларисати унутар функције (локалне променљиве) или изван функције (глобалне променљиве),Пре него што се користе.,Di mana variabel dideklarasikan dalam program C ++?,Variabel dapat dideklarasikan dimanapun dalam program. Mereka dapat dideklarasikan di dalam fungsi (variabel lokal) atau di luar fungsi (variabel global),Sebelum digunakan.,Hvor er variabler deklarert i et C ++ - program?,Variabler kan deklareres hvor som helst i et program. De kan deklareres i en funksjon (lokale variabler) eller utenfor funksjonene (globale variabler),Før de brukes.,C ++ 프로그램에서 변수는 어디에 선언되어 있습니까?,변수는 프로그램의 어느 곳에서나 선언 할 수 있습니다. 함수 내부 (로컬 변수) 또는 함수 외부 (전역 변수)에서 선언 할 수 있습니다.,그들이 사용되기 전에.,Missä muuttujat ilmoitetaan C ++ -ohjelmassa?,Muuttujat voidaan ilmoittaa missä tahansa ohjelmassa. Ne voidaan ilmoittaa funktion sisällä (paikalliset muuttujat) tai toimintojen ulkopuolella (yleiset muuttujat),Ennen kuin niitä käytetään.,Hol vannak deklarálva a változók egy C ++ programban?,A változókat bárhol deklarálhatjuk egy programban. Deklarálhatók egy függvényen belül (helyi változók) vagy a függvényeken kívül (globális változók),Mielőtt felhasználnák.,Kde jsou proměnné deklarovány v programu C ++?,Proměnné lze deklarovat kdekoli v programu. Mohou být deklarovány uvnitř funkce (lokální proměnné) nebo mimo funkce (globální proměnné),Před použitím.,Gdje su varijable deklarirane u programu C ++?,Varijable se mogu deklarirati bilo gdje u programu. Mogu se deklarirati unutar funkcije (lokalne varijable) ili izvan funkcije (globalne varijable),Prije upotrebe.
455,455,16,1.1,Program that simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.,What is the role of a prototype program in problem solving?,5.0,Simulation des Verhaltens von Teilen des gewünschten Softwareprodukts.,Welche Rolle spielt ein Prototyp-Programm bei der Problemlösung?,"Programm, das das Verhalten von Teilen des gewünschten Softwareprodukts simuliert",Unsa man ang papel sa usa ka programa nga prototype sa pagsulbad sa problema?,Aron masundog ang pamatasan sa mga bahin sa gitinguha nga produkto sa software.,Ang programa nga nagsundog sa pamatasan sa mga bahin sa gitinguha nga produkto sa software,Vilken roll har ett prototypprogram för problemlösning?,För att simulera beteendet hos delar av den önskade programvaruprodukten.,Program som simulerar beteendet hos delar av den önskade programvaruprodukten,Quel est le rôle d&#39;un programme prototype dans la résolution de problèmes?,Pour simuler le comportement de parties du produit logiciel souhaité.,Programme qui simule le comportement de parties du produit logiciel souhaité,Wat is de rol van een prototype-programma bij het oplossen van problemen?,Om het gedrag van delen van het gewenste softwareproduct te simuleren.,Programma dat het gedrag van delen van het gewenste softwareproduct simuleert,Какова роль прототипа программы в решении проблем?,Для моделирования поведения частей желаемого программного продукта.,"Программа, имитирующая поведение частей желаемого программного продукта.",Qual è il ruolo di un programma prototipo nella risoluzione dei problemi?,Per simulare il comportamento di porzioni del prodotto software desiderato.,Programma che simula il comportamento di porzioni del prodotto software desiderato,¿Cuál es el papel de un programa prototipo en la resolución de problemas?,Simular el comportamiento de partes del producto de software deseado.,Programa que simula el comportamiento de partes del producto de software deseado,Jaka jest rola programu prototypowego w rozwiązywaniu problemów?,Aby zasymulować zachowanie części żądanego oprogramowania.,Program symulujący zachowanie fragmentów żądanego oprogramowania,Vai trò của một chương trình nguyên mẫu trong việc giải quyết vấn đề là gì?,Để mô phỏng hoạt động của các phần của sản phẩm phần mềm mong muốn.,Chương trình mô phỏng hành vi của các phần của sản phẩm phần mềm mong muốn,問題解決におけるプロトタイププログラムの役割は何ですか？,目的のソフトウェア製品の一部の動作をシミュレートします。,目的のソフトウェア製品の一部の動作をシミュレートするプログラム,原型程序在解决问题中的作用是什么？,模拟所需软件产品各部分的行为。,模拟所需软件产品各部分行为的程序,ما هو دور برنامج النموذج الأولي في حل المشكلات؟,لمحاكاة سلوك أجزاء من منتج البرنامج المطلوب.,برنامج يحاكي سلوك أجزاء من منتج البرنامج المطلوب,Яка роль програми-прототипу у вирішенні проблем?,Для імітації поведінки частин бажаного програмного продукту.,"Програма, що імітує поведінку частин бажаного програмного продукту",Qual é o papel de um programa de protótipo na solução de problemas?,Para simular o comportamento de partes do produto de software desejado.,Programa que simula o comportamento de partes do produto de software desejado,نقش یک نمونه اولیه در حل مسئله چیست؟,برای شبیه سازی رفتار بخشهایی از محصول نرم افزاری مورد نظر.,برنامه ای که رفتار بخشی از محصول نرم افزاری مورد نظر را شبیه سازی می کند,Quin és el paper d’un programa prototipus en la resolució de problemes?,Per simular el comportament de parts del producte de programari desitjat.,Programa que simula el comportament de parts del producte de programari desitjat,Која је улога прототипа програма у решавању проблема?,Да симулира понашање делова жељеног софтверског производа.,Програм који симулира понашање делова жељеног софтверског производа,Apa peran program prototipe dalam pemecahan masalah?,Untuk mensimulasikan perilaku bagian dari produk perangkat lunak yang diinginkan.,Program yang mensimulasikan perilaku bagian dari produk perangkat lunak yang diinginkan,Hva er rollen som et prototypeprogram i problemløsing?,For å simulere oppførselen til deler av det ønskede programvareproduktet.,Program som simulerer oppførselen til deler av ønsket programvareprodukt,문제 해결에서 프로토 타입 프로그램의 역할은 무엇입니까?,원하는 소프트웨어 제품의 일부 동작을 시뮬레이션합니다.,원하는 소프트웨어 제품의 일부 동작을 시뮬레이션하는 프로그램,Mikä on prototyyppiohjelman rooli ongelmanratkaisussa?,Simuloidaan halutun ohjelmistotuotteen osien käyttäytymistä.,"Ohjelma, joka simuloi halutun ohjelmistotuotteen osien käyttäytymistä",Mi a szerepe a prototípus programnak a problémamegoldásban?,A kívánt szoftvertermék egyes részeinek viselkedésének szimulálása.,"Program, amely szimulálja a kívánt szoftvertermék egyes részeinek viselkedését",Jaká je role prototypového programu při řešení problémů?,Simulovat chování částí požadovaného softwarového produktu.,"Program, který simuluje chování částí požadovaného softwarového produktu",Koja je uloga prototipa programa u rješavanju problema?,Da simulira ponašanje dijelova željenog softverskog proizvoda.,Program koji simulira ponašanje dijelova željenog softverskog proizvoda
456,456,1605,9.4,"a queue can be implemented in a list by keeping track of two pointers, a head and a tail","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",How can you implement a queue with a list?,4.5,"Lassen Sie die Rückseite der Warteschlange auf das Ende der verknüpften Liste zeigen, sodass die Warteschlangenoperation am Ende der Liste ausgeführt wird, und halten Sie die Vorderseite der Warteschlange auf den Kopf der verknüpften Liste, damit die Warteschlangenoperation ausgeführt wird am Anfang der Liste.",Wie können Sie eine Warteschlange mit einer Liste implementieren?,"Eine Warteschlange kann in einer Liste implementiert werden, indem zwei Zeiger, ein Kopf und ein Schwanz, verfolgt werden",Giunsa nimo ipatuman ang usa ka pila nga adunay lista?,"Ipadayon ang likud sa pila nga nagpunting sa ikog sa nalambigit nga lista, mao nga ang enqueue nga operasyon gihimo sa katapusan sa lista, ug ipadayon ang atubangan sa pila nga nagtudlo sa ulohan sa na-link nga lista, mao nga nahuman ang operasyon sa dequeue sa pagsugod sa lista.","ang usa ka pila mahimong ipatuman sa usa ka lista pinaagi sa pagsubay sa duha nga mga panudlo, usa ka ulo ug usa ka ikog",Hur kan du implementera en kö med en lista?,"Håll den bakre delen av kön pekande mot svansen på den länkade listan, så enqueue-operationen görs i slutet av listan och håll den främre delen av kön pekande mot huvudet på den länkade listan, så att dequeue-operationen är klar i början av listan.","en kö kan implementeras i en lista genom att hålla reda på två pekare, ett huvud och en svans",Comment pouvez-vous implémenter une file d&#39;attente avec une liste?,"Gardez l&#39;arrière de la file d&#39;attente pointant vers la fin de la liste liée, de sorte que l&#39;opération de mise en file d&#39;attente soit effectuée à la fin de la liste, et gardez l&#39;avant de la file d&#39;attente pointant vers la tête de la liste liée, de sorte que l&#39;opération de retrait de la file d&#39;attente soit effectuée au début de la liste.","une file d&#39;attente peut être implémentée dans une liste en gardant la trace de deux pointeurs, une tête et une queue",Hoe implementeer je een wachtrij met een lijst?,"Houd de achterkant van de wachtrij naar de staart van de gekoppelde lijst, zodat de bewerking voor het in de wachtrij plaatsen aan het einde van de lijst wordt uitgevoerd en laat de voorkant van de wachtrij naar de kop van de gekoppelde lijst wijzen, zodat de bewerking voor het verwijderen van de wachtrij is voltooid aan het begin van de lijst.","een wachtrij kan in een lijst worden geïmplementeerd door twee wijzers bij te houden, een kop en een staart",Как можно реализовать очередь со списком?,"Задняя часть очереди должна указывать на конец связанного списка, чтобы операция постановки в очередь выполнялась в конце списка, а передняя часть очереди должна указывать на начало связанного списка, поэтому операция удаления из очереди выполняется в начале списка.","очередь может быть реализована в виде списка, отслеживая два указателя, голову и хвост",Come puoi implementare una coda con un elenco?,"Mantieni la parte posteriore della coda che punta alla coda della lista collegata, quindi l&#39;operazione di accodamento viene eseguita alla fine della lista e mantieni la parte anteriore della coda puntata all&#39;inizio della lista collegata, quindi l&#39;operazione di rimozione dalla coda è fatta all&#39;inizio della lista.","una coda può essere implementata in un elenco tenendo traccia di due puntatori, una testa e una coda",¿Cómo se puede implementar una cola con una lista?,"Mantenga la parte posterior de la cola apuntando a la cola de la lista vinculada, de modo que la operación de puesta en cola se realice al final de la lista, y mantenga la parte delantera de la cola apuntando al encabezado de la lista vinculada, para que la operación de eliminación de la cola esté lista al principio de la lista.","una cola se puede implementar en una lista haciendo un seguimiento de dos punteros, una cabeza y una cola",Jak zaimplementować kolejkę z listą?,"Utrzymuj tył kolejki skierowany na koniec połączonej listy, aby operacja umieszczania w kolejce była wykonywana na końcu listy i utrzymuj przód kolejki skierowany na początek połączonej listy, aby operacja usunięcia z kolejki została zakończona na początku listy.","kolejkę można zaimplementować w postaci listy, śledząc dwa wskaźniki, głowę i koniec",Làm thế nào bạn có thể triển khai một hàng đợi với một danh sách?,"Giữ phần phía sau của hàng đợi trỏ đến phần cuối của danh sách được liên kết, do đó, hoạt động xếp hàng được thực hiện ở cuối danh sách và giữ phần phía trước của hàng đợi trỏ đến phần đầu của danh sách được liên kết, do đó hoạt động xếp hàng được thực hiện ở đầu danh sách.","một hàng đợi có thể được triển khai trong danh sách bằng cách theo dõi hai con trỏ, phần đầu và phần đuôi",リストを使用してキューを実装するにはどうすればよいですか？,キューの後ろがリンクリストの末尾を指すようにして、エンキュー操作がリストの最後を指すようにし、キューの前をリンクリストの先頭を指すようにして、デキュー操作が行われるようにします。リストの最初に。,キューは、ヘッドとテールの2つのポインターを追跡することでリストに実装できます。,如何实现带有列表的队列？,使队列的尾部指向链接列表的末尾，因此入队操作在列表的末尾进行，使队列的前部指向链接列表的头，因此完成出队操作在列表的开头。,通过跟踪两个指针（头和尾）可以在列表中实现队列,كيف يمكنك تنفيذ قائمة انتظار مع قائمة؟,احتفظ بالجزء الخلفي من قائمة الانتظار يشير إلى ذيل القائمة المرتبطة ، بحيث تتم عملية قائمة الانتظار في نهاية القائمة ، واحتفظ بمقدمة قائمة الانتظار تشير إلى رأس القائمة المرتبطة ، بحيث تتم عملية إنهاء قائمة الانتظار في بداية القائمة.,يمكن تنفيذ قائمة انتظار في قائمة من خلال تتبع مؤشرين ، رأس وذيل,Як можна реалізувати чергу зі списком?,"Тримайте задню частину черги, спрямовану на хвіст пов’язаного списку, таким чином, операція чергування виконується в кінці списку, а передня частина черги вказує на голову пов’язаного списку, таким чином, операція скидання виконується на початку списку.","чергу може бути реалізована у списку шляхом відстеження двох покажчиків, голови та хвоста",Como você pode implementar uma fila com uma lista?,"Mantenha a parte traseira da fila apontando para o final da lista vinculada, para que a operação de enfileiramento seja feita no final da lista, e mantenha a frente da fila apontando para o início da lista vinculada, para que a operação de desenfileiramento seja feita no início da lista.","uma fila pode ser implementada em uma lista, mantendo o controle de dois ponteiros, uma cabeça e uma cauda",چگونه می توان صف را با لیست پیاده سازی کرد؟,قسمت عقب صف را به سمت انتهای لیست پیوندی نگه دارید ، بنابراین عملیات enqueue در انتهای لیست انجام می شود و قسمت جلوی صف را به سمت سر لیست پیوندی نگه دارید ، بنابراین عملیات حذف نتیجه انجام می شود در ابتدای لیست.,با پیگیری دو اشاره گر ، یک سر و یک دم ، می توان یک صف را در یک لیست پیاده کرد,Com es pot implementar una cua amb una llista?,"Mantingueu la part posterior de la cua apuntant a la cua de la llista enllaçada, de manera que l&#39;operació de cola es realitzarà al final de la llista i mantingueu la part frontal de la cua apuntant cap al cap de la llista enllaçada, de manera que l&#39;operació de cola es realitzi. al principi de la llista.","es pot implementar una cua en una llista seguint dos indicadors, un cap i una cua",Како можете да примените ред са листом?,"Задњи део реда задржите тако да показује на реп повезане листе, тако да се операција чекања обавља на крају листе, а чек ред нека буде усмјерен на главу повезане листе, тако да је операција уклањања редоследа завршена на почетку списка.","ред се може применити на листу праћењем два показивача, главе и репа",Bagaimana Anda bisa menerapkan antrian dengan daftar?,"Pertahankan bagian belakang antrian mengarah ke bagian belakang daftar tertaut, sehingga operasi antrean dilakukan di akhir daftar, dan pertahankan bagian depan antrean mengarah ke kepala daftar tertaut, sehingga operasi dequeue selesai di awal daftar.","antrian dapat diimplementasikan dalam daftar dengan melacak dua penunjuk, satu kepala dan satu ekor",Hvordan kan du implementere en kø med en liste?,"Hold baksiden av køen pekende mot halen på den koblede listen, slik at enqueue-operasjonen gjøres på slutten av listen, og hold forsiden av køen pekende mot hodet til den koblede listen, slik at dequeue-operasjonen er ferdig i begynnelsen av listen.","en kø kan implementeres i en liste ved å holde oversikt over to pekere, et hode og en hale",목록이있는 대기열을 어떻게 구현할 수 있습니까?,대기열의 뒤쪽이 연결된 목록의 끝을 가리 키도록 유지하여 대기열에 넣기 작업이 목록의 끝에서 수행되도록하고 대기열의 앞쪽이 연결된 목록의 머리를 가리 키도록 유지하여 대기열에서 빼기 작업이 수행되도록합니다. 목록의 시작 부분에.,"두 개의 포인터, 머리와 꼬리를 추적하여 목록에 큐를 구현할 수 있습니다.",Kuinka voit toteuttaa jonon luettelon kanssa?,"Pidä jonon takaosaa linkitetyn luettelon hännään päin, jotta enqueue-toiminto tehdään luettelon lopussa, ja pidä jonon etu osoittavan linkitetyn luettelon päähän, joten purkotoiminto on valmis luettelon alussa.","jono voidaan toteuttaa luettelossa pitämällä kirjaa kahdesta osoittimesta, päästä ja hännästä",Hogyan lehet megvalósítani a listát tartalmazó várólistát?,"Tartsa a sor hátulját a csatolt lista farka felé mutatva, így az enqueue műveletet a lista végén hajtja végre, és a sor elejét tartsa a linkelt lista fejére mutatva, így a dequeue művelet megtörténik a lista elején.","egy sor megvalósítható egy listában két mutató, egy fej és egy farok követésével",Jak můžete implementovat frontu se seznamem?,"Udržujte zadní část fronty směřující na konec propojeného seznamu, aby se operace zařazení do fronty prováděla na konci seznamu, a udržujte přední část fronty směřující k hlavě propojeného seznamu, aby se operace zrušení fronty prováděla na začátku seznamu.","frontu lze implementovat do seznamu sledováním dvou ukazatelů, hlavy a ocasu",Kako možete implementirati red sa popisom?,"Zadnji dio reda neka bude usmjeren na rep povezane liste, tako da se operacija čekanja vrši na kraju popisa, a prednji dio reda mora biti usmjeren na glavu povezane liste, tako da je izvršena operacija uklanjanja reda na početku liste.","red se može implementirati na listu praćenjem dva pokazivača, glave i repa"
457,457,535,3.4,"only the memory address is sent to the function, so no copy of the object sent needs to be made. It makes the function run faster, and saves memory.",It avoids making copies of large data structures when calling functions.,What is the main advantage associated with function arguments that are passed by reference?,5.0,"Beim Aufrufen von Funktionen wird vermieden, dass Kopien großer Datenstrukturen erstellt werden.","Was ist der Hauptvorteil von Funktionsargumenten, die als Referenz übergeben werden?","Es wird nur die Speicheradresse an die Funktion gesendet, sodass keine Kopie des gesendeten Objekts erstellt werden muss. Dadurch wird die Funktion schneller ausgeführt und Speicherplatz gespart.",Unsa ang punoan nga bentaha nga kauban sa mga argumento sa pag-andar nga gipasa sa pakisayran?,Naglikay kini sa paghimo mga kopya sa daghang mga istruktura sa datos kung nagtawag sa mga gimbuhaton.,"ang memory address ra ang gipadala sa pagpaandar, busa wala’y kopya sa butang nga gipadala ang kinahanglan buhaton. Kini naghimo sa pagpaandar sa labing paspas, ug makatipig handumanan.",Vad är den största fördelen med funktionsargument som skickas genom referens?,Det undviker att kopiera stora datastrukturer när du ringer till funktioner.,"endast minnesadressen skickas till funktionen, så ingen kopia av det skickade objektet behöver göras. Det gör att funktionen går snabbare och sparar minne.",Quel est le principal avantage associé aux arguments de fonction passés par référence?,Cela évite de faire des copies de grandes structures de données lors de l&#39;appel de fonctions.,"seule l&#39;adresse mémoire est envoyée à la fonction, donc aucune copie de l&#39;objet envoyé ne doit être effectuée. Cela accélère la fonction et économise de la mémoire.",Wat is het belangrijkste voordeel van functieargumenten die via verwijzing worden doorgegeven?,Het vermijdt het maken van kopieën van grote datastructuren bij het aanroepen van functies.,"alleen het geheugenadres wordt naar de functie gestuurd, dus er hoeft geen kopie van het verzonden object te worden gemaakt. Het zorgt ervoor dat de functie sneller werkt en bespaart geheugen.","Какое главное преимущество связано с аргументами функции, которые передаются по ссылке?",Это позволяет избежать копирования больших структур данных при вызове функций.,"функции отправляется только адрес памяти, поэтому копировать отправленный объект не нужно. Это ускоряет выполнение функции и экономит память.",Qual è il vantaggio principale associato agli argomenti della funzione passati per riferimento?,Evita di creare copie di grandi strutture di dati quando si chiamano funzioni.,"alla funzione viene inviato solo l&#39;indirizzo di memoria, quindi non è necessario eseguire alcuna copia dell&#39;oggetto inviato. Rende la funzione più veloce e consente di risparmiare memoria.",¿Cuál es la principal ventaja asociada con los argumentos de función que se pasan por referencia?,Evita hacer copias de grandes estructuras de datos al llamar a funciones.,"solo se envía la dirección de memoria a la función, por lo que no es necesario realizar ninguna copia del objeto enviado. Hace que la función se ejecute más rápido y ahorra memoria.","Jaka jest główna zaleta związana z argumentami funkcji, które są przekazywane przez odwołanie?",Unika tworzenia kopii dużych struktur danych podczas wywoływania funkcji.,"do funkcji przesyłany jest tylko adres pamięci, więc nie ma potrzeby wykonywania kopii przesłanego obiektu. Sprawia, że funkcja działa szybciej i oszczędza pamięć.",Ưu điểm chính được liên kết với các đối số hàm được truyền bằng tham chiếu là gì?,Nó tránh tạo bản sao của cấu trúc dữ liệu lớn khi gọi các hàm.,"chỉ địa chỉ bộ nhớ được gửi đến hàm, do đó không cần thực hiện bản sao của đối tượng được gửi. Nó làm cho chức năng chạy nhanh hơn và tiết kiệm bộ nhớ.",参照によって渡される関数の引数に関連する主な利点は何ですか？,関数を呼び出すときに、大きなデータ構造のコピーを作成することを回避します。,関数にはメモリアドレスのみが送信されるため、送信されたオブジェクトのコピーを作成する必要はありません。関数の実行が速くなり、メモリが節約されます。,与通过引用传递的函数参数相关的主要优点是什么？,避免在调用函数时复制大型数据结构。,仅将内存地址发送到函数，因此无需复制发送的对象。它使函数运行更快，并节省了内存。,ما هي الميزة الرئيسية المرتبطة بالحجج الوظيفية التي يتم تمريرها عن طريق المرجع؟,يتجنب عمل نسخ من هياكل البيانات الكبيرة عند استدعاء الوظائف.,يتم إرسال عنوان الذاكرة فقط إلى الوظيفة ، لذلك لا يلزم عمل نسخة من الكائن المرسل. فهو يجعل الوظيفة تعمل بشكل أسرع ويوفر الذاكرة.,"Яка головна перевага, пов’язана з аргументами функції, які передаються за посиланням?",Це дозволяє уникнути копіювання великих структур даних під час виклику функцій.,"функція надсилає лише адресу пам’яті, тому копію відправленого об’єкта робити не потрібно. Це пришвидшує роботу функції та економить пам’ять.",Qual é a principal vantagem associada aos argumentos de função que são passados por referência?,Ele evita fazer cópias de grandes estruturas de dados ao chamar funções.,"apenas o endereço de memória é enviado para a função, portanto, nenhuma cópia do objeto enviado precisa ser feita. Faz com que a função seja executada mais rapidamente e economiza memória.",مزیت اصلی مرتبط با آرگومانهای عملکردی که توسط مرجع منتقل می شوند چیست؟,در هنگام فراخوانی توابع از تهیه کپی از ساختارهای داده بزرگ جلوگیری می کند.,فقط آدرس حافظه به تابع ارسال می شود ، بنابراین نیازی به تهیه کپی از شی ارسال نشده نیست. باعث می شود عملکرد سریعتر اجرا شود و حافظه ذخیره می شود.,Quin és el principal avantatge associat als arguments de funció que es passen per referència?,Evita fer còpies d’estructures de dades grans quan es criden funcions.,"només s&#39;envia l&#39;adreça de memòria a la funció, de manera que no cal fer cap còpia de l&#39;objecte enviat. Fa que la funció funcioni més ràpidament i estalvia memòria.",Која је главна предност повезана са аргументима функције који се прослеђују референцом?,Избегава копирање великих структура података приликом позивања функција.,"функцији се шаље само меморијска адреса, па не треба правити копију послатог објекта. Омогућава бржу функцију и штеди меморију.",Apa keuntungan utama yang terkait dengan argumen fungsi yang diteruskan oleh referensi?,Ini menghindari membuat salinan struktur data besar saat memanggil fungsi.,"hanya alamat memori yang dikirim ke fungsi tersebut, jadi tidak ada salinan objek yang dikirim yang perlu dibuat. Itu membuat fungsi berjalan lebih cepat, dan menghemat memori.",Hva er den største fordelen forbundet med funksjonsargumenter som sendes med referanse?,Det unngår å lage kopier av store datastrukturer når du ringer til funksjoner.,"bare minneadressen blir sendt til funksjonen, så det trenger ikke lages noen kopi av objektet som sendes. Det gjør at funksjonen går raskere, og sparer minne.",참조로 전달되는 함수 인수와 관련된 주요 이점은 무엇입니까?,함수를 호출 할 때 큰 데이터 구조의 복사를 방지합니다.,메모리 주소 만 함수로 전송되므로 전송 된 객체의 사본을 만들 필요가 없습니다. 함수를 더 빠르게 실행하고 메모리를 절약합니다.,"Mikä on tärkein etu funktion argumenteille, jotka välitetään viitteenä?",Se välttää kopioiden tekemistä suurista tietorakenteista kutsuttaessa toimintoja.,"vain muistiosoite lähetetään toiminnolle, joten lähetetystä objektista ei tarvitse tehdä kopiota. Se tekee toiminnosta nopeamman ja säästää muistia.",Mi a fő előnye a hivatkozással átadott függvény-argumentumoknak?,Funkciók meghívásakor elkerüli a nagy adatstruktúrák másolatait.,"csak a memória címét küldi a függvény, így az elküldött objektumról nem kell másolatot készíteni. Ez gyorsabbá teszi a funkció futtatását és memóriát takarít meg.","Jaká je hlavní výhoda spojená s argumenty funkcí, které jsou předávány odkazem?",Při volání funkcí se vyhne vytváření kopií velkých datových struktur.,"do funkce je odeslána pouze adresa paměti, takže není třeba vytvářet žádnou kopii odeslaného objektu. Zrychluje funkci a šetří paměť.",Koja je glavna prednost povezana s argumentima funkcije koji se prosljeđuju referencom?,Izbjegava kopiranje velikih struktura podataka prilikom pozivanja funkcija.,"funkcija se šalje samo memorijska adresa, tako da ne treba praviti kopiju poslanog objekta. Čini funkciju bržom i štedi memoriju."
458,458,1505,9.1,A data structure in c++ which is a collection of data that is kept in order.  First in first out.,"A data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",What is a queue?,5.0,"Eine Datenstruktur, in der Elemente gespeichert werden können, die die Eigenschaft hat, dass das zuletzt hinzugefügte Element das letzte ist, das entfernt wird (oder das First-In-First-Out).",Was ist eine Warteschlange?,"Eine Datenstruktur in c ++, bei der es sich um eine Sammlung von Daten handelt, die in Ordnung gehalten werden. Als Erster rein, als erster raus.",Unsa ang pila?,"Ang usa ka istraktura sa datos nga mahimo magtipig mga elemento, nga adunay kabtangan nga ang katapusang nadugang nga butang mao ang ulahi nga tangtangon (o una-sa-una-nga-out)",Usa ka istruktura sa datos sa c ++ nga usa ka koleksyon sa mga datos nga gitipig nga han-ay. Una sa una paggawas.,Vad är en kö?,"En datastruktur som kan lagra element, som har den egenskapen att det senast tillagda objektet är det sista som tas bort (eller först-in-först-ut).",En datastruktur i c ++ som är en samling data som hålls i ordning. Först in först ut.,Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui peut stocker des éléments, qui a la propriété que le dernier élément ajouté sera le dernier à être supprimé (ou premier entré, premier sorti).","Une structure de données en C ++ qui est une collection de données qui sont conservées dans l&#39;ordre. Premier entré, premier sorti.",Wat is een wachtrij?,"Een datastructuur die elementen kan opslaan, die de eigenschap heeft dat het laatst toegevoegde item het laatste is dat wordt verwijderd (of first-in-first-out).","Een datastructuur in c ++, een verzameling gegevens die op orde wordt gehouden. Als eerste erin, als eerste eruit.",Что такое очередь?,"Структура данных, которая может хранить элементы, обладающая тем свойством, что последний добавленный элемент будет удален последним (или первым пришел - первым ушел).","Структура данных в C ++, которая представляет собой набор данных, которые хранятся в порядке. Первым прибыл, первым обслужен.",Cos&#39;è una coda?,"Una struttura dati che può memorizzare elementi, che ha la proprietà che l&#39;ultimo elemento aggiunto sarà l&#39;ultimo a essere rimosso (o first-in-first-out).",Una struttura dati in c ++ che è una raccolta di dati tenuti in ordine. Il primo che entra è il primo ad uscire.,¿Qué es una cola?,"Una estructura de datos que puede almacenar elementos, que tiene la propiedad de que el último elemento agregado será el último en ser eliminado (o el primero en entrar, primero en salir).",Una estructura de datos en c ++ que es una colección de datos que se mantiene en orden. Primero en entrar primero en salir.,Co to jest kolejka?,"Struktura danych, która może przechowywać elementy, która ma tę właściwość, że ostatni dodany element będzie ostatnim do usunięcia (lub pierwszy na wejściu, pierwszy na wyjściu).","Struktura danych w języku C ++, która jest zbiorem danych, które są utrzymywane w porządku. Pierwszy wchodzi pierwszy wychodzi.",Hàng đợi là gì?,"Một cấu trúc dữ liệu có thể lưu trữ các phần tử, có thuộc tính mà mục cuối cùng được thêm vào sẽ là phần tử cuối cùng bị xóa (hoặc nhập trước xuất trước).",Cấu trúc dữ liệu trong c ++ là một tập hợp dữ liệu được giữ theo thứ tự. Đến trước về trước.,キューとは何ですか？,要素を格納できるデータ構造。最後に追加されたアイテムが最後に削除される（または先入れ先出し）というプロパティがあります。,順番に保持されるデータのコレクションであるc ++のデータ構造。先入先出。,什么是队列？,可以存储元素的数据结构，其属性为最后添加的项将是最后要删除的（或先进先出）。,c ++中的数据结构，是按顺序保留的数据的集合。先进先出。,ما هو الطابور؟,بنية البيانات التي يمكنها تخزين العناصر ، والتي لها خاصية أن العنصر الأخير الذي تمت إضافته سيكون آخر عنصر تتم إزالته (أو ما يرد أولاً يخرج أولاً).,بنية بيانات في c ++ وهي عبارة عن مجموعة من البيانات يتم الاحتفاظ بها بالترتيب. أولا ما يخرج أولا.,Що таке черга?,"Структура даних, яка може зберігати елементи, яка має властивість, що останній доданий елемент буде останнім, який буде видалено (або перший-у-першому-вихід).","Структура даних на c ++, яка являє собою сукупність даних, що підтримуються в порядку. Перший у першому вийшов.",O que é uma fila?,"Uma estrutura de dados que pode armazenar elementos, que tem a propriedade de que o último item adicionado será o último a ser removido (ou primeiro a entrar, primeiro a sair).","Uma estrutura de dados em c ++ que é uma coleção de dados mantidos em ordem. Primeiro a entrar, primeiro a sair.",صف چیست؟,یک ساختار داده ای که می تواند عناصر را ذخیره کند ، این خاصیت را دارد که آخرین مورد اضافه شده آخرین موردی است که حذف می شود (یا اولین بار در اولین بار).,یک ساختار داده در c ++ که مجموعه ای از داده ها است که به ترتیب حفظ می شود. اولین ورودی اولین خروجی.,Què és una cua?,"Una estructura de dades que pot emmagatzemar elements, que té la propietat que l’últim element afegit serà l’últim que s’eliminarà (o el primer entrant-primer sortint).","Una estructura de dades en c ++ que és una col·lecció de dades que es mantenen en ordre. Primer a entrar, primer a sortir.",Шта је ред?,"Структура података која може да складишти елементе, а која има својство да ће последња додата ставка бити последња која ће бити уклоњена (или прва у првом).",Структура података на језику ц ++ која представља скуп података који се одржавају у реду. Први улази - први излази.,Apa itu antrian?,"Struktur data yang dapat menyimpan elemen, yang memiliki properti yang item terakhir ditambahkan akan menjadi yang terakhir dihapus (atau pertama masuk pertama keluar).",Struktur data di c ++ yang merupakan kumpulan data yang disimpan secara berurutan. Pertama masuk pertama keluar.,Hva er kø?,"En datastruktur som kan lagre elementer, som har den egenskapen at det siste elementet som ble lagt til, vil være det siste som blir fjernet (eller først-inn-først-ut).",En datastruktur i c ++ som er en samling av data som holdes i orden. Først inn først ut.,대기열이란 무엇입니까?,마지막으로 추가 된 항목이 제거 될 마지막 항목 (또는 선입 선출)이라는 속성을 가진 요소를 저장할 수있는 데이터 구조입니다.,순서대로 유지되는 데이터 모음 인 C ++의 데이터 구조입니다. 선입 선출.,Mikä on jono?,"Tietorakenne, joka voi tallentaa elementtejä, jolla on ominaisuus, jonka viimeinen lisätty kohde poistetaan viimeisenä (tai ensin sisään-sisään-ulos-lähtöön).","Tietorakenne muodossa c ++, joka on kokoelma tietoja, jotka pidetään järjestyksessä. Ensimmäinen sisällä ensimmäinen ulkona.",Mi a sor?,"Elemeket tárolni képes adatstruktúra, amelynek az a tulajdonsága, hogy az utoljára hozzáadott elem lesz az utolsó, amelyet eltávolítanak (vagy az első az elsőben ki-be).","A c ++ adatstruktúrája, amely rendben tartott adatgyűjtemény. Első az elsőben.",Co je to fronta?,"Datová struktura, která může ukládat prvky, která má vlastnost, že poslední přidaná položka bude poslední, která bude odebrána (nebo první-první-první-ven).","Datová struktura v jazyce C ++, což je kolekce dat, která jsou udržována v pořádku. První dovnitř první ven.",Šta je red?,"Struktura podataka koja može pohraniti elemente, koja ima svojstvo da će zadnja dodana stavka biti posljednja koja će se ukloniti (ili prva u prvom pojavljivanju).",Struktura podataka u jeziku c ++ koja predstavlja skup podataka koji se održavaju u redu. Prvi unutra prvi vani.
459,459,669,4.2,"The data class type string are designed to handle character data, and has many functions built into the class library to deal with them. An array of characters however is subject to all the same rules of any other array with no real additional functionality. Another difference is that the string class deals with the null character implicitly, unlike an array of characters, which must handle the null character explicitly.",The strings declared using an array of characters have a null element added at the end of the array.,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,5.0,Bei den mit einem Zeichenarray deklarierten Zeichenfolgen wird am Ende des Arrays ein Nullelement hinzugefügt.,"Was ist der Hauptunterschied zwischen Zeichenfolgen, die mit dem Typ string deklariert wurden, und Zeichenfolgen, die mit einem Array von Zeichen deklariert wurden?","Die Datenklassentypzeichenfolge ist für die Verarbeitung von Zeichendaten ausgelegt und verfügt über viele Funktionen, die in die Klassenbibliothek integriert sind, um diese zu verarbeiten. Ein Array von Zeichen unterliegt jedoch denselben Regeln wie jedes andere Array ohne echte zusätzliche Funktionalität. Ein weiterer Unterschied besteht darin, dass die Zeichenfolgenklasse im Gegensatz zu einem Array von Zeichen, das das Nullzeichen explizit behandeln muss, implizit mit dem Nullzeichen umgeht.",Unsa ang punoan nga kalainan tali sa mga lubid nga gideklara nga gigamit ang type string kumpara sa mga string nga gideklara gamit ang usa ka han-ay nga mga karakter?,Ang mga kuwerdas nga gideklara gamit ang usa ka han-ay sa mga karakter adunay usa ka null nga elemento nga gidugang sa katapusan sa laray.,"Ang hilo sa klase nga klase sa datos gilaraw aron makontrol ang datos sa karakter, ug adunay daghang mga gimbuhaton nga gitukod sa librarya sa klase aron atubangon kini. Ang usa ka han-ay sa mga karakter bisan pa niana napailalom sa tanan nga parehas nga mga lagda sa bisan unsang ubang mga laray nga wala’y tinuod nga dugang nga pagpaandar. Ang uban pa nga pagkalainlain mao nga ang klase sa pisi nag-atubang sa null nga karakter nga implicitly, dili lahi sa usa ka han-ay sa mga karakter, nga kinahanglan tin-aw nga magdumala sa null nga karakter.",Vad är den största skillnaden mellan strängar som deklareras med hjälp av typsträngen kontra strängar som deklareras med en rad tecken?,Strängarna som deklareras med en rad tecken har ett nollelement som läggs till i slutet av matrisen.,"Datasträngens typsträng är utformad för att hantera teckendata och har många funktioner inbyggda i klassbiblioteket för att hantera dem. En rad karaktärer är dock föremål för alla samma regler i alla andra matriser utan någon verklig ytterligare funktionalitet. En annan skillnad är att strängklassen hanterar nollkaraktären implicit, till skillnad från en rad tecken, som måste hantera nollkaraktären uttryckligen.",Quelle est la principale différence entre les chaînes déclarées à l&#39;aide de la chaîne de type et les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères?,Les chaînes déclarées à l&#39;aide d&#39;un tableau de caractères ont un élément nul ajouté à la fin du tableau.,"La chaîne de type de classe de données est conçue pour gérer les données de caractère et possède de nombreuses fonctions intégrées dans la bibliothèque de classes pour les gérer. Un tableau de caractères est cependant soumis aux mêmes règles de tout autre tableau sans réelle fonctionnalité supplémentaire. Une autre différence est que la classe string traite implicitement le caractère nul, contrairement à un tableau de caractères, qui doit gérer explicitement le caractère nul.",Wat is het belangrijkste verschil tussen strings die zijn gedeclareerd met behulp van het type string versus strings die zijn gedeclareerd met een reeks tekens?,"De strings die zijn gedeclareerd met behulp van een reeks tekens, hebben een null-element toegevoegd aan het einde van de reeks.","De dataklassetypetekenreeks is ontworpen om tekengegevens te verwerken en heeft veel functies die in de klassenbibliotheek zijn ingebouwd om hiermee om te gaan. Een array van karakters is echter onderworpen aan dezelfde regels van elke andere array zonder echte extra functionaliteit. Een ander verschil is dat de stringklasse impliciet met het null-teken omgaat, in tegenstelling tot een array van tekens, die expliciet met het null-teken moeten omgaan.","В чем основное различие между строками, объявленными с использованием строки типа, и строками, объявленными с использованием массива символов?","Строки, объявленные с использованием массива символов, имеют нулевой элемент, добавленный в конец массива.","Строка типа класса данных предназначена для обработки символьных данных и имеет множество функций, встроенных в библиотеку классов для работы с ними. Однако массив символов подчиняется всем тем же правилам, что и любой другой массив, без каких-либо реальных дополнительных функций. Другое отличие состоит в том, что строковый класс обрабатывает нулевой символ неявно, в отличие от массива символов, который должен обрабатывать нулевой символ явно.",Qual è la principale differenza tra le stringhe dichiarate utilizzando il tipo stringa e le stringhe dichiarate utilizzando un array di caratteri?,Le stringhe dichiarate utilizzando un array di caratteri hanno un elemento nullo aggiunto alla fine dell&#39;array.,"La stringa del tipo di classe di dati è progettata per gestire i dati dei caratteri e ha molte funzioni incorporate nella libreria di classi per gestirle. Tuttavia, un array di caratteri è soggetto alle stesse regole di qualsiasi altro array senza alcuna reale funzionalità aggiuntiva. Un&#39;altra differenza è che la classe string tratta implicitamente il carattere null, a differenza di un array di caratteri, che deve gestire esplicitamente il carattere null.",¿Cuál es la principal diferencia entre las cadenas declaradas con el tipo cadena y las cadenas declaradas con una matriz de caracteres?,Las cadenas declaradas usando una matriz de caracteres tienen un elemento nulo agregado al final de la matriz.,"La cadena de tipo de clase de datos está diseñada para manejar datos de caracteres y tiene muchas funciones integradas en la biblioteca de clases para tratar con ellos. Sin embargo, una matriz de caracteres está sujeta a las mismas reglas de cualquier otra matriz sin ninguna funcionalidad adicional real. Otra diferencia es que la clase de cadena trata con el carácter nulo implícitamente, a diferencia de una matriz de caracteres, que debe manejar el carácter nulo explícitamente.",Jaka jest główna różnica między ciągami zadeklarowanymi przy użyciu typu string a ciągami zadeklarowanymi przy użyciu tablicy znaków?,Ciągi zadeklarowane przy użyciu tablicy znaków mają na końcu dodany element o wartości null.,"Łańcuch typu klasy danych jest przeznaczony do obsługi danych znakowych i ma wiele funkcji wbudowanych w bibliotekę klas, aby sobie z nimi poradzić. Jednak tablica znaków podlega tym samym regułom, co każda inna tablica, bez żadnej dodatkowej funkcjonalności. Inną różnicą jest to, że klasa string zajmuje się niejawnie znakiem null, w przeciwieństwie do tablicy znaków, która musi jawnie obsługiwać znak null.",Sự khác biệt chính giữa các chuỗi được khai báo bằng cách sử dụng chuỗi kiểu so với các chuỗi được khai báo bằng cách sử dụng một mảng ký tự là gì?,Các chuỗi được khai báo bằng cách sử dụng một mảng ký tự có một phần tử rỗng được thêm vào cuối mảng.,"Chuỗi kiểu lớp dữ liệu được thiết kế để xử lý dữ liệu ký tự và có nhiều hàm được tích hợp sẵn trong thư viện lớp để xử lý chúng. Tuy nhiên, một mảng ký tự phải tuân theo tất cả các quy tắc tương tự của bất kỳ mảng nào khác mà không có chức năng bổ sung thực sự. Một sự khác biệt nữa là lớp string xử lý ngầm với ký tự null, không giống như một mảng các ký tự, phải xử lý ký tự null một cách rõ ràng.",文字列型を使用して宣言された文字列と文字の配列を使用して宣言された文字列の主な違いは何ですか？,文字の配列を使用して宣言された文字列には、配列の最後にnull要素が追加されています。,データクラスタイプの文字列は、文字データを処理するように設計されており、それらを処理するためにクラスライブラリに組み込まれた多くの関数があります。ただし、文字の配列は、他の配列と同じ規則に従い、実際の追加機能はありません。もう1つの違いは、null文字を明示的に処理する必要がある文字の配列とは異なり、文字列クラスがnull文字を暗黙的に処理することです。,使用字符串类型声明的字符串与使用字符数组声明的字符串之间的主要区别是什么？,使用字符数组声明的字符串在数组末尾添加了一个null元素。,数据类类型字符串用于处理字符数据，并且在类库中内置了许多函数来处理它们。但是，字符数组受任何其他数组的所有相同规则约束，没有真正的附加功能。另一个区别是，字符串类隐式处理空字符，这与字符数组不同，后者必须显式处理空字符。,ما هو الفرق الرئيسي بين الجمل المعلنة باستخدام سلسلة النوع مقابل الجمل المعلنة باستخدام مصفوفة من الأحرف؟,السلاسل المعلنة باستخدام مصفوفة من الأحرف لها عنصر فارغ يضاف في نهاية المصفوفة.,تم تصميم سلسلة نوع فئة البيانات للتعامل مع بيانات الأحرف ، ولها العديد من الوظائف المضمنة في مكتبة الفصل للتعامل معها. ومع ذلك ، تخضع مصفوفة من الأحرف لجميع القواعد نفسها لأي مصفوفة أخرى بدون وظائف إضافية حقيقية. الفرق الآخر هو أن فئة السلسلة تتعامل مع الحرف الفارغ ضمنيًا ، على عكس مصفوفة الأحرف ، التي يجب أن تتعامل مع الحرف الفارغ بشكل صريح.,"Яка основна різниця між рядками, оголошеними за допомогою типу string, від рядків, оголошених за допомогою масиву символів?","Рядки, оголошені за допомогою масиву символів, мають нульовий елемент, доданий в кінці масиву.","Рядок типу класу даних призначений для обробки символьних даних і має безліч функцій, вбудованих у бібліотеку класів для роботи з ними. Однак масив символів підпорядковується тим самим правилам будь-якого іншого масиву без реальної додаткової функціональності. Інша відмінність полягає в тому, що клас рядків працює з нульовим символом неявно, на відміну від масиву символів, який повинен обробляти нульовий символ явно.",Qual é a principal diferença entre strings declaradas usando o tipo string e strings declaradas usando uma matriz de caracteres?,As strings declaradas usando uma matriz de caracteres têm um elemento nulo adicionado ao final da matriz.,"A string de tipo de classe de dados é projetada para lidar com dados de caracteres e tem muitas funções embutidas na biblioteca de classes para lidar com eles. Uma matriz de caracteres, entretanto, está sujeita às mesmas regras de qualquer outra matriz, sem nenhuma funcionalidade adicional real. Outra diferença é que a classe string lida com o caractere nulo implicitamente, ao contrário de uma matriz de caracteres, que deve tratar o caractere nulo explicitamente.",تفاوت اصلی رشته های اعلام شده با استفاده از نوع رشته در مقابل رشته های اعلام شده با استفاده از آرایه ای از کاراکترها چیست؟,رشته هایی که با استفاده از یک آرایه از کاراکترها اعلان می شوند ، یک عنصر تهی در انتهای آرایه اضافه می کنند.,رشته نوع کلاس داده برای رسیدگی به داده های کاراکتر طراحی شده است و توابع بسیاری را برای مقابله با آنها در کتابخانه کلاس دارد. با این وجود یک آرایه از کاراکترها تابع همان قوانین آرایه های دیگر است و هیچ عملکرد اضافی واقعی ندارد. تفاوت دیگر این است که کلاس string به طور ضمنی با کاراکتر null سروکار دارد ، برخلاف آرایه ای از کاراکترها ، که باید صریحاً نویسه را کنترل کنند.,Quina és la diferència principal entre les cadenes declarades mitjançant el tipus de cadena i les cadenes declarades mitjançant una matriu de caràcters?,Les cadenes declarades mitjançant una matriu de caràcters tenen un element nul afegit al final de la matriu.,"La cadena de tipus de classe de dades està dissenyada per gestionar dades de caràcters i té moltes funcions integrades a la biblioteca de classes per tractar-les. Tanmateix, una matriu de caràcters està subjecta a les mateixes regles de qualsevol altra matriu sense cap funcionalitat addicional real. Una altra diferència és que la classe de cadena tracta el caràcter nul implícitament, a diferència d’una matriu de caràcters, que han de gestionar explícitament el caràcter nul.",Која је главна разлика између низова декларисаних помоћу типа стринг у односу на низове декларисаних помоћу низа знакова?,Низови декларисани помоћу низа знакова имају нулти елемент додан на крају низа.,"Низ класе података дизајниран је за руковање подацима о знаковима и има много функција уграђених у библиотеку класа да би се бавио њима. Низ знакова, међутим, подлеже истим правилима било ког другог низа без стварне додатне функционалности. Друга разлика је у томе што се класа стринг имплицитно бави нулл знаком, за разлику од низа знакова, који морају нужно обрађивати нулл карактер.",Apa perbedaan utama antara string yang dideklarasikan menggunakan tipe string versus string yang dideklarasikan menggunakan array karakter?,String yang dideklarasikan menggunakan array karakter memiliki elemen null yang ditambahkan di akhir array.,"String tipe kelas data dirancang untuk menangani data karakter, dan memiliki banyak fungsi yang dibangun ke dalam perpustakaan kelas untuk menanganinya. Namun, sebuah array karakter tunduk pada semua aturan yang sama dari array lain tanpa fungsi tambahan yang nyata. Perbedaan lainnya adalah bahwa kelas string berurusan dengan karakter null secara implisit, tidak seperti array karakter, yang harus menangani karakter null secara eksplisit.",Hva er hovedforskjellen mellom strenger deklarert ved hjelp av typestrengen versus strenger deklarert ved hjelp av en rekke tegn?,Strengene deklarert ved hjelp av en rekke tegn har et nullelement lagt til på slutten av matrisen.,"Dataklassetypestrengen er designet for å håndtere karakterdata, og har mange funksjoner innebygd i klassebiblioteket for å håndtere dem. En rekke tegn er imidlertid underlagt alle de samme reglene i alle andre matriser uten virkelig tilleggsfunksjonalitet. En annen forskjell er at strengklassen håndterer nulltegnet implisitt, i motsetning til en rekke tegn, som må håndtere nulltegnet eksplisitt.",문자열 유형을 사용하여 선언 된 문자열과 문자 배열을 사용하여 선언 된 문자열의 주요 차이점은 무엇입니까?,문자 배열을 사용하여 선언 된 문자열에는 배열 끝에 null 요소가 추가됩니다.,데이터 클래스 유형 문자열은 문자 데이터를 처리하도록 설계되었으며이를 처리하기 위해 클래스 라이브러리에 내장 된 많은 함수가 있습니다. 그러나 문자 배열에는 실제 추가 기능이없는 다른 배열의 모든 동일한 규칙이 적용됩니다. 또 다른 차이점은 문자열 클래스가 널 문자를 명시 적으로 처리해야하는 문자 배열과 달리 암시 적으로 널 문자를 처리한다는 것입니다.,Mikä on tärkein ero merkkijonolla ilmoitettujen merkkijonojen ja merkkijonoa käyttäen ilmoitettujen merkkijonojen välillä?,Merkkijonoa käyttäen ilmoitetuissa merkkijonoissa taulukon loppuun lisätään nollaelementti.,"Dataluokatyyppinen merkkijono on suunniteltu käsittelemään merkkitietoja, ja siinä on monia toimintoja, jotka on rakennettu luokan kirjastoon niiden käsittelemiseksi. Merkkiryhmään sovelletaan kuitenkin kaikkien muiden taulukoiden kaikkia samoja sääntöjä ilman todellisia lisätoimintoja. Toinen ero on, että merkkijono-luokka käsittelee nollamerkkiä implisiittisesti, toisin kuin joukko merkkejä, joiden on käsiteltävä nollamerkkiä nimenomaisesti.",Mi a fő különbség a karakterlánc használatával deklarált karakterláncok és a tömb karakterrel deklarált karakterláncok között?,A karaktertömb felhasználásával deklarált karakterláncok null elemet adnak a tömb végén.,"Az adattípus típusú karakterlánc karakteradatok kezelésére készült, és számos funkcióval rendelkezik az osztálykönyvtárban, hogy kezelje őket. Egy karaktertömbre azonban minden más tömb ugyanazon szabályai vonatkoznak, valódi további funkciók nélkül. Egy másik különbség az, hogy a karakterlánc osztály implicit módon foglalkozik a null karakterrel, ellentétben egy karaktertömbdel, amelynek kifejezetten kell kezelnie a null karaktert.",Jaký je hlavní rozdíl mezi řetězci deklarovanými pomocí řetězce typu oproti řetězcům deklarovaným pomocí pole znaků?,Řetězce deklarované pomocí pole znaků mají na konci pole přidán nulový prvek.,"Řetězec typu datové třídy je navržen pro zpracování znakových dat a má mnoho funkcí zabudovaných do knihovny tříd, aby se s nimi vypořádal. Na pole znaků se však vztahují stejná pravidla jako na jakékoli jiné pole bez dalších skutečných funkcí. Další rozdíl spočívá v tom, že třída string se implicitně zabývá znakem null, na rozdíl od řady znaků, které musí znak null explicitně zpracovat.",Koja je glavna razlika između nizova deklarisanih pomoću tipa string naspram nizova deklarisanih pomoću niza znakova?,Nizovi deklarirani pomoću niza znakova imaju nulti element dodan na kraju niza.,"Niz klase podataka dizajniran je za obradu karakternih podataka i ima mnogo funkcija ugrađenih u biblioteku klasa da bi se bavio njima. Niz znakova, međutim, podliježe istim pravilima bilo kojeg drugog niza bez stvarne dodatne funkcionalnosti. Druga razlika je u tome što se klasa niza implicitno bavi null znakom, za razliku od niza znakova koji moraju nužno obrađivati null karakter."
460,460,2309,12.6,"A queue is a data structure that inserts data into a FIFO configuration, that is, data input to the structure is always at it's end, and data taken is always from the beginning.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,What is a queue?,5.0,"Eine Datenstruktur, in der Elemente nach dem First-In-First-Out-Prinzip gespeichert werden. Die Hauptoperationen in einer Warteschlange sind Enqueue und Dequeue.",Was ist eine Warteschlange?,"Eine Warteschlange ist eine Datenstruktur, die Daten in eine FIFO-Konfiguration einfügt, dh die Dateneingabe in die Struktur ist immer am Ende und die Datenerfassung erfolgt immer von Anfang an.",Unsa ang pila?,Usa ka istruktura sa datos nga nagtipig sa mga elemento nga nagsunod sa una sa una nga prinsipyo. Ang mga punoan nga operasyon sa usa ka pila mao ang enqueue ug dequeue.,"Ang pila sa usa ka istruktura sa datos nga nagsulud sa datos sa usa ka pag-configure sa FIFO, sa ato pa, ang pag-input sa datos sa istraktura kanunay nga katapusan niini, ug ang pagkuha sa datos kanunay gikan sa sinugdanan.",Vad är en kö?,En datastruktur som lagrar element enligt principen först in först ut. Huvudoperationerna i en kö är enqueue och dequeue.,"En kö är en datastruktur som infogar data i en FIFO-konfiguration, det vill säga datainmatning till strukturen är alltid i slutet, och data som tas är alltid från början.",Qu&#39;est-ce qu&#39;une file d&#39;attente?,"Une structure de données qui stocke des éléments selon le principe du premier entré, premier sorti. Les principales opérations dans une file d&#39;attente sont la mise en file d&#39;attente et le retrait de la file d&#39;attente.","Une file d&#39;attente est une structure de données qui insère des données dans une configuration FIFO, c&#39;est-à-dire que l&#39;entrée de données dans la structure est toujours à sa fin et que les données prises partent toujours du début.",Wat is een wachtrij?,Een datastructuur waarin elementen worden opgeslagen volgens het first in first out-principe. De belangrijkste bewerkingen in een wachtrij zijn in de wachtrij plaatsen en uit de wachtrij halen.,"Een wachtrij is een gegevensstructuur die gegevens invoegt in een FIFO-configuratie, dat wil zeggen dat de gegevensinvoer in de structuur altijd aan het einde is en de gegevens die worden genomen altijd vanaf het begin.",Что такое очередь?,"Структура данных, в которой хранятся элементы по принципу «первым пришел - первым ушел». Основные операции в очереди - постановка в очередь и удаление из очереди.","Очередь - это структура данных, которая вставляет данные в конфигурацию FIFO, то есть данные, вводимые в структуру, всегда находятся в ее конце, а данные принимаются всегда с начала.",Cos&#39;è una coda?,Una struttura dati che memorizza gli elementi seguendo il principio first in first out. Le operazioni principali in una coda sono accodamento e rimozione dalla coda.,"Una coda è una struttura di dati che inserisce i dati in una configurazione FIFO, ovvero, l&#39;input dei dati nella struttura è sempre alla sua fine ei dati presi sono sempre dall&#39;inizio.",¿Qué es una cola?,"Una estructura de datos que almacena elementos siguiendo el principio de primero en entrar, primero en salir. Las operaciones principales en una cola son poner en cola y sacar de cola.","Una cola es una estructura de datos que inserta datos en una configuración FIFO, es decir, la entrada de datos a la estructura siempre está al final y los datos que se toman siempre son desde el principio.",Co to jest kolejka?,"Struktura danych przechowująca elementy zgodnie z zasadą pierwsze weszło, pierwsze wyszło. Główne operacje w kolejce to enqueue i dequeue.","Kolejka to struktura danych, która wstawia dane do konfiguracji FIFO, to znaczy dane wprowadzane do struktury zawsze znajdują się na jej końcu, a dane pobierane są zawsze od początku.",Hàng đợi là gì?,Một cấu trúc dữ liệu lưu trữ các phần tử tuân theo nguyên tắc nhập trước xuất trước. Các thao tác chính trong hàng đợi là enqueue và dequeue.,"Hàng đợi là một cấu trúc dữ liệu chèn dữ liệu vào cấu hình FIFO, tức là, dữ liệu đầu vào cho cấu trúc luôn ở cuối và dữ liệu được lấy luôn là từ đầu.",キューとは何ですか？,先入れ先出しの原則に従って要素を格納するデータ構造。キュー内の主な操作は、エンキューとデキューです。,キューは、FIFO構成にデータを挿入するデータ構造です。つまり、構造へのデータ入力は常に最後にあり、取得されるデータは常に最初からです。,什么是队列？,遵循先进先出原则存储元素的数据结构。队列中的主要操作是入队和出队。,队列是一种将数据插入FIFO配置的数据结构，也就是说，输入到该结构的数据始终在其末端，而获取的数据始终是从头开始。,ما هو الطابور؟,هيكل بيانات يخزن العناصر التي تتبع مبدأ الوارد أولاً يصرف أولاً. العمليات الرئيسية في قائمة الانتظار هي قائمة الانتظار وإلغاء الصف.,قائمة الانتظار هي بنية بيانات تُدخل البيانات في تكوين FIFO ، أي أن إدخال البيانات إلى الهيكل دائمًا في نهايته ، والبيانات المأخوذة دائمًا من البداية.,Що таке черга?,"Структура даних, яка зберігає елементи, дотримуючись принципу першого в першому вихід. Основні операції в черзі - це чергування та вилучення.","Черга - це структура даних, яка вставляє дані у конфігурацію FIFO, тобто введення даних у структуру завжди знаходиться в її кінці, а дані беруться завжди з самого початку.",O que é uma fila?,"Uma estrutura de dados que armazena elementos seguindo o princípio do primeiro a entrar, primeiro a sair. As principais operações em uma fila são enfileirar e retirar da fila.","Uma fila é uma estrutura de dados que insere dados em uma configuração FIFO, ou seja, a entrada de dados na estrutura está sempre no final e os dados coletados estão sempre no início.",صف چیست؟,یک ساختار داده که عناصر پیروی از اصل اول در اولین را ذخیره می کند. عملیات اصلی در یک صف ، enqueue و dequeue است.,صف یک ساختار داده است که داده را به یک پیکربندی FIFO وارد می کند ، یعنی ورودی داده به ساختار همیشه در انتهای آن است و داده های گرفته شده همیشه از ابتدا هستند.,Què és una cua?,Una estructura de dades que emmagatzema elements seguint el principi first in first out. Les operacions principals en una cua són enqueue i dequeue.,"Una cua és una estructura de dades que insereix dades en una configuració FIFO, és a dir, l&#39;entrada de dades a l&#39;estructura sempre està al final i les dades preses sempre des del principi.",Шта је ред?,Структура података која чува елементе следећи принцип први у првом излазу. Главне операције у реду су ред и декуеуе.,"Ред је структура података која убацује податке у ФИФО конфигурацију, односно унос података у структуру је увек на њеном крају, а подаци се узимају увек од почетка.",Apa itu antrian?,Struktur data yang menyimpan elemen mengikuti prinsip pertama masuk pertama keluar. Operasi utama dalam antrian adalah enqueue dan dequeue.,"Antrian adalah struktur data yang memasukkan data ke dalam konfigurasi FIFO, yaitu input data ke struktur selalu berada di ujungnya, dan data yang diambil selalu dari awal.",Hva er kø?,En datastruktur som lagrer elementer etter først inn først ut prinsippet. Hovedoperasjonene i køen er enqueue og dequeue.,"En kø er en datastruktur som setter inn data i en FIFO-konfigurasjon, det vil si at datainndata til strukturen alltid er på slutten, og dataene som tas er alltid fra begynnelsen.",대기열이란 무엇입니까?,선입 선출 원칙에 따라 요소를 저장하는 데이터 구조입니다. 대기열의 주요 작업은 대기열에 넣기 및 대기열에서 빼기입니다.,"큐는 FIFO 구성에 데이터를 삽입하는 데이터 구조입니다. 즉, 구조에 대한 데이터 입력은 항상 끝에 있고 가져온 데이터는 항상 처음부터입니다.",Mikä on jono?,"Tietorakenne, joka tallentaa elementtejä noudattaen ensimmäisenä ensin ulos -periaatetta. Jonon päätoiminnot ovat enqueue ja dequeue.","Jono on tietorakenne, joka lisää tietoja FIFO-kokoonpanoon, toisin sanoen tietojen syöttö rakenteeseen on aina lopussa ja otettu tieto on aina alusta.",Mi a sor?,"Olyan adatstruktúra, amely elemeket tárol az első az elsőben ki elv alapján. A sorban a fő műveletek az enqueue és a dequeue.","A várakozási sor egy olyan adatszerkezet, amely beilleszti az adatokat egy FIFO-konfigurációba, vagyis a struktúrába történő adatbevitel mindig a végén van, a felvett adatok pedig mindig a kezdetektől fogva.",Co je to fronta?,"Datová struktura, která ukládá prvky podle principu prvního do prvního. Hlavní operace ve frontě jsou zařazení do fronty a zařazení do fronty.","Fronta je datová struktura, která vloží data do konfigurace FIFO, to znamená, že vstup dat do struktury je vždy na jejím konci a odebraná data jsou vždy od začátku.",Šta je red?,Struktura podataka koja pohranjuje elemente slijedeći princip prvi u prvom izlazu. Glavne operacije u redu su enqueque i dequeue.,"Red je struktura podataka koja ubacuje podatke u FIFO konfiguraciju, odnosno unos podataka u strukturu uvijek je na kraju, a podaci se uzimaju uvijek s početka."
461,461,2407,12.9,"if the node is a leaf it can simply be deallocated/deleted from memory, and its parent's reference to it changed to NULL. If the node has a single child, the pointer to it should be made to point to its child before deleting the node. Should the node have two children, the easiest solution may be to copy the node's entire subtree to a new array or tree, delete the node and all descendants, then add the elements taken from the subtree back into the main tree.","Find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",How do you delete a node from a binary search tree?,4.5,Suchen Sie den Knoten und ersetzen Sie ihn durch den Knoten ganz links aus seinem rechten Teilbaum (oder den Knoten ganz rechts aus seinem linken Teilbaum).,Wie löscht man einen Knoten aus einem binären Suchbaum?,"Wenn der Knoten ein Blatt ist, kann er einfach freigegeben / aus dem Speicher gelöscht werden, und der Verweis des übergeordneten Knotens darauf wird in NULL geändert. Wenn der Knoten ein einzelnes untergeordnetes Element hat, sollte der Zeiger darauf auf sein untergeordnetes Element verweisen, bevor der Knoten gelöscht wird. Wenn der Knoten zwei untergeordnete Knoten hat, besteht die einfachste Lösung darin, den gesamten Teilbaum des Knotens in ein neues Array oder einen neuen Baum zu kopieren, den Knoten und alle Nachkommen zu löschen und die aus dem Teilbaum entnommenen Elemente wieder in den Hauptbaum einzufügen.",Giunsa nimo matanggal ang usa ka node gikan sa usa ka puno nga pagpangita sa binary?,"Pangita-a ang node, dayon pulihan kini sa labing wala nga node gikan sa tuo nga subtree (o sa tuo nga node gikan sa wala nga subtree).","kung ang node usa ka dahon mahimo ra nga makigsulti / matangtang gikan sa memorya, ug ang pakigsulti sa ginikanan niini giusab ngadto sa NULL. Kung ang node adunay us aka anak, ang tudlo niini kinahanglan nga itudlo sa iyang anak sa wala pa i-delete ang node. Kung ang node adunay duha nga mga anak, ang labing kadali nga solusyon mahimong ang pagkopya sa tibuuk nga subtree sa node sa usa ka bag-ong laray o punoan, tangtanga ang node ug tanan nga mga kaliwatan, pagkahuman idugang ang mga elemento nga gikuha gikan sa subtree balik sa punoan nga punoan.",Hur tar du bort en nod från ett binärt sökträd?,Hitta noden och ersätt den sedan med den vänstra noden från dess högra underträd (eller den längst till höger från dess vänstra underträd).,"om noden är ett blad kan den helt enkelt omplaceras / raderas från minnet, och dess förälders hänvisning till det ändras till NULL. Om noden har ett enda barn bör pekaren till den göras så att den pekar på sitt barn innan den raderas. Om noden har två barn kan den enklaste lösningen vara att kopiera nodens hela underträd till en ny matris eller ett nytt träd, ta bort noden och alla ättlingar och sedan lägga till elementen som tas från underträdet tillbaka till huvudträdet.",Comment supprimer un nœud d&#39;un arbre de recherche binaire?,"Trouvez le nœud, puis remplacez-le par le nœud le plus à gauche de son sous-arbre droit (ou le nœud le plus à droite de son sous-arbre gauche).","si le nœud est une feuille, il peut simplement être désalloué / supprimé de la mémoire, et la référence de son parent à celui-ci est changée en NULL. Si le nœud a un seul enfant, le pointeur vers celui-ci doit pointer vers son enfant avant de supprimer le nœud. Si le nœud a deux enfants, la solution la plus simple peut être de copier l&#39;intégralité du sous-arbre du nœud dans un nouveau tableau ou arbre, de supprimer le nœud et tous les descendants, puis de rajouter les éléments extraits du sous-arbre dans l&#39;arborescence principale.",Hoe verwijder je een knooppunt uit een binaire zoekboom?,Zoek het knooppunt en vervang het door het meest linkse knooppunt van de rechter substructuur (of het meest rechtse knooppunt van de linker substructuur).,"als het knooppunt een blad is, kan het eenvoudig worden ontkoppeld / verwijderd uit het geheugen, en de verwijzing van de ouder ernaar is veranderd in NULL. Als het knooppunt een enkel kind heeft, moet de aanwijzer naar het onderliggende knooppunt wijzen voordat het knooppunt wordt verwijderd. Als het knooppunt twee kinderen heeft, kan de eenvoudigste oplossing zijn om de volledige substructuur van het knooppunt naar een nieuwe array of boom te kopiëren, het knooppunt en alle afstammelingen te verwijderen en vervolgens de elementen uit de substructuur weer toe te voegen aan de hoofdboom.",Как удалить узел из двоичного дерева поиска?,"Найдите узел, затем замените его крайним левым узлом из его правого поддерева (или крайним правым узлом из его левого поддерева).","если узел является листом, его можно просто освободить / удалить из памяти, а его родительская ссылка на него изменится на NULL. Если у узла есть единственный дочерний элемент, перед удалением узла указатель на него должен указывать на его дочерний элемент. Если у узла есть двое потомков, самым простым решением может быть копирование всего поддерева узла в новый массив или дерево, удаление узла и всех потомков, а затем добавление элементов, взятых из поддерева, обратно в главное дерево.",Come si elimina un nodo da un albero di ricerca binario?,"Trova il nodo, quindi sostituiscilo con il nodo più a sinistra dal sottoalbero destro (o il nodo più a destra dal sottoalbero sinistro).","se il nodo è una foglia, può essere semplicemente deallocato / cancellato dalla memoria e il riferimento del suo genitore ad esso cambiato in NULL. Se il nodo ha un singolo figlio, il puntatore ad esso dovrebbe essere fatto puntare al suo figlio prima di eliminare il nodo. Se il nodo ha due figli, la soluzione più semplice potrebbe essere quella di copiare l&#39;intero sottoalbero del nodo in un nuovo array o albero, eliminare il nodo e tutti i discendenti, quindi aggiungere gli elementi presi dal sottoalbero nell&#39;albero principale.",¿Cómo se elimina un nodo de un árbol de búsqueda binario?,"Encuentre el nodo, luego reemplácelo con el nodo más a la izquierda de su subárbol derecho (o el nodo más a la derecha de su subárbol izquierdo).","si el nodo es una hoja, simplemente se puede desasignar / eliminar de la memoria, y la referencia de su padre a él se cambia a NULL. Si el nodo tiene un solo hijo, se debe hacer que el puntero apunte a su hijo antes de eliminar el nodo. Si el nodo tiene dos hijos, la solución más fácil puede ser copiar el subárbol completo del nodo en una nueva matriz o árbol, eliminar el nodo y todos los descendientes, luego agregar los elementos tomados del subárbol nuevamente al árbol principal.",Jak usunąć węzeł z drzewa wyszukiwania binarnego?,"Znajdź węzeł, a następnie zastąp go skrajnym lewym węzłem z jego prawego poddrzewa (lub skrajnym prawym węzłem z lewego poddrzewa).","jeśli węzeł jest liściem, można go po prostu zwolnić / usunąć z pamięci, a odniesienie do niego elementu nadrzędnego zmienione na NULL. Jeśli węzeł ma jedno dziecko, wskaźnik do niego powinien wskazywać na jego dziecko przed usunięciem węzła. Jeśli węzeł ma dwoje dzieci, najłatwiejszym rozwiązaniem może być skopiowanie całego poddrzewa węzła do nowej tablicy lub drzewa, usunięcie węzła i wszystkich potomków, a następnie dodanie elementów pobranych z poddrzewa z powrotem do głównego drzewa.",Làm cách nào để xóa một nút khỏi cây tìm kiếm nhị phân?,"Tìm nút, sau đó thay thế nó bằng nút ngoài cùng bên trái từ cây con bên phải của nó (hoặc nút ngoài cùng bên phải từ cây con bên trái của nó).","nếu nút là một lá, nó có thể đơn giản được phân bổ / xóa khỏi bộ nhớ, và tham chiếu cha của nó đến nó được thay đổi thành NULL. Nếu nút có một nút con, con trỏ tới nó phải được thực hiện để trỏ đến nút con của nó trước khi xóa nút. Nếu nút có hai con, giải pháp đơn giản nhất có thể là sao chép toàn bộ cây con của nút sang một mảng hoặc cây mới, xóa nút và tất cả các phần tử con, sau đó thêm các phần tử lấy từ cây con trở lại cây chính.",二分探索木からノードを削除するにはどうすればよいですか？,ノードを見つけて、右のサブツリーの左端のノード（または左のサブツリーの右端のノード）に置き換えます。,ノードがリーフの場合は、単にメモリから割り当てを解除/削除することができ、その親のノードへの参照はNULLに変更されます。ノードに子が1つある場合は、ノードを削除する前に、ノードへのポインターがその子を指すようにする必要があります。ノードに2つの子がある場合、最も簡単な解決策は、ノードのサブツリー全体を新しい配列またはツリーにコピーし、ノードとすべての子孫を削除してから、サブツリーから取得した要素をメインツリーに追加することです。,如何从二叉搜索树中删除节点？,找到该节点，然后将其替换为其右侧子树中最左边的节点（或左侧子树中最右边的节点）。,如果该节点是叶子，则可以简单地从内存中对其进行释放/删除，并且其父节点对其的引用将更改为NULL。如果该节点只有一个子节点，则在删除该节点之前，应使其指向该节点的指针。如果节点有两个子节点，最简单的解决方案可能是将节点的整个子树复制到新的数组或树中，删除该节点和所有后代，然后将子树中的元素添加回主树中。,كيف تحذف عقدة من شجرة البحث الثنائية؟,ابحث عن العقدة ، ثم استبدلها بالعقدة الموجودة في أقصى اليسار من شجرتها الفرعية اليمنى (أو العقدة الموجودة في أقصى اليمين من شجرتها الفرعية اليسرى).,إذا كانت العقدة عبارة عن طرفية ، فيمكن ببساطة إلغاء تخصيصها / حذفها من الذاكرة ، وتغيير مرجع الأصل إليها إلى NULL. إذا كانت العقدة تحتوي على طفل واحد ، فيجب أن يتم وضع المؤشر عليها للإشارة إلى العنصر الفرعي قبل حذف العقدة. إذا كان للعقدة طفلان ، فقد يكون الحل الأسهل هو نسخ الشجرة الفرعية للعقدة بأكملها إلى مصفوفة أو شجرة جديدة ، وحذف العقدة وجميع الأحفاد ، ثم إضافة العناصر المأخوذة من الشجرة الفرعية مرة أخرى إلى الشجرة الرئيسية.,Як видалити вузол з бінарного дерева пошуку?,"Знайдіть вузол, а потім замініть його на крайній лівий вузол з правого піддерева (або крайній правий вузол з лівого піддерева).","якщо вузол є листом, його можна просто вивільнити / видалити з пам&#39;яті, а посилання його батьків на нього змінити на NULL. Якщо вузол має єдину дочірню організацію, перед видаленням вузла слід зробити так, щоб вказівник на нього вказував на його дочірню організацію. Якщо вузол має двох дітей, найпростішим рішенням може бути скопіювати все піддерево вузла в новий масив або дерево, видалити вузол і всіх нащадків, а потім додати елементи, взяті з піддерева, назад у головне дерево.",Como você exclui um nó de uma árvore de pesquisa binária?,Encontre o nó e substitua-o pelo nó mais à esquerda de sua subárvore direita (ou o nó mais à direita de sua subárvore esquerda).,"se o nó for uma folha, ele pode simplesmente ser desalocado / excluído da memória, e a referência de seu pai a ele alterada para NULL. Se o nó tiver um único filho, o ponteiro para ele deve apontar para seu filho antes de excluir o nó. Se o nó tiver dois filhos, a solução mais fácil pode ser copiar toda a subárvore do nó para uma nova matriz ou árvore, excluir o nó e todos os descendentes e, em seguida, adicionar os elementos retirados da subárvore de volta à árvore principal.",چگونه می توان یک گره را از یک درخت جستجوی دودویی حذف کرد؟,گره را پیدا کنید ، سپس آن را با سمت چپ گره از زیر درخت راست آن (یا سمت راست ترین گره از زیر درخت چپ آن) جایگزین کنید.,اگر گره یک برگ باشد ، می توان آن را به راحتی از حافظه جدا کرد و حذف کرد و ارجاع والدین آن به NULL تغییر یافت. اگر گره دارای یک فرزند واحد باشد ، باید اشاره گر آن باشد تا قبل از حذف گره ، به فرزند خود اشاره کند. اگر گره دارای دو فرزند باشد ، ممکن است آسانترین راه حل این باشد که کل زیر درخت گره را در یک آرایه یا درخت جدید کپی کنید ، گره و همه فرزندان را حذف کنید ، سپس عناصر گرفته شده از زیر درخت را دوباره به درخت اصلی اضافه کنید.,Com esborra un node d&#39;un arbre de cerca binari?,"Cerqueu el node i, a continuació, substituïu-lo pel node més esquerre del subarbre dret (o el node més dret del subarbre esquerre).","si el node és un full, simplement es pot distribuir o eliminar de la memòria i canviar la referència del pare a NULL. Si el node té un únic fill, s&#39;hauria de fer que el punter assenyalés el seu fill abans de suprimir-lo. Si el node té dos fills, la solució més fàcil pot ser copiar tot el subarbre del node a una nova matriu o arbre, suprimir el node i tots els descendents i, a continuació, afegir els elements presos del subarbre a l’arbre principal.",Како се брише чвор са бинарног стабла претраживања?,"Пронађите чвор, а затим га замените крајњим левим чвором из његовог десног подстабла (или најдеснијим чвором из његовог левог подстабла).","ако је чвор лист, он се једноставно може ослободити / избрисати из меморије, а референца родитеља на њега је промењена у НУЛЛ. Ако чвор има једно дете, показивач на њега треба усмерити на његово дете пре брисања чвора. Ако чвор има двоје деце, најлакше решење може бити копирање целокупног подстабла чвора у нови низ или стабло, брисање чвора и свих потомака, а затим додавање елемената преузетих из подстабла натраг у главно стабло.",Bagaimana Anda menghapus node dari pohon pencarian biner?,"Temukan node, lalu ganti dengan node paling kiri dari sub pohon kanannya (atau node paling kanan dari subtree kiri).","jika node adalah sebuah leaf, node tersebut dapat dengan mudah dialokasikan / dihapus dari memori, dan referensi induknya diubah menjadi NULL. Jika node memiliki satu anak, penunjuk ke node tersebut harus diarahkan ke anaknya sebelum menghapus node. Jika node memiliki dua anak, solusi termudah mungkin adalah dengan menyalin seluruh subpohon node ke array atau pohon baru, menghapus node dan semua turunannya, lalu menambahkan elemen yang diambil dari subpohon kembali ke pohon utama.",Hvordan sletter du en node fra et binært søketre?,"Finn noden, og erstatt den med noden lengst til venstre fra høyre undertre (eller den høyre noden fra venstre undertre).","hvis noden er et blad, kan den rett og slett distribueres / slettes fra minnet, og foreldrenes henvisning til den endres til NULL. Hvis noden har et enkelt barn, bør pekeren til den få den til å peke på barnet sitt før du sletter noden. Hvis noden har to barn, kan den enkleste løsningen være å kopiere nodens hele undertre til en ny matrise eller et nytt tre, slette noden og alle etterkommere, og deretter legge elementene hentet fra undertreet tilbake til hovedtreet.",이진 검색 트리에서 노드를 어떻게 삭제합니까?,노드를 찾은 다음 오른쪽 하위 트리에서 가장 왼쪽 노드 (또는 왼쪽 하위 트리에서 가장 오른쪽 노드)로 교체합니다.,노드가 리프 인 경우 단순히 메모리에서 할당 해제 / 삭제할 수 있으며 부모의 참조가 NULL로 변경됩니다. 노드에 단일 자식이있는 경우 노드를 삭제하기 전에 해당 자식을 가리 키도록 포인터를 만들어야합니다. 노드에 두 개의 자식이있는 경우 가장 쉬운 해결책은 노드의 전체 하위 트리를 새 배열이나 트리에 복사하고 노드와 모든 하위 항목을 삭제 한 다음 하위 트리에서 가져온 요소를 다시 기본 트리에 추가하는 것입니다.,Kuinka poistat solmun binaarihakupuusta?,Etsi solmu ja korvaa se sitten oikean alipuun vasemmanpuoleisella solmulla (tai vasemman alipuun oikeanpuoleisimmalla solmulla).,"jos solmu on lehti, se voidaan yksinkertaisesti jakaa / poistaa muistista, ja sen vanhemman viittaus siihen muuttuu NULL: ksi. Jos solmulla on yksi lapsi, sen osoitin tulisi osoittaa osoittamaan lapselleen ennen solmun poistamista. Jos solmussa on kaksi lasta, helpoin ratkaisu voi olla kopioida solmun koko alipuu uudelle taulukolle tai puulle, poistaa solmu ja kaikki jälkeläiset ja lisätä sitten alipuusta otetut elementit takaisin pääpuuhun.",Hogyan lehet törölni egy csomópontot a bináris keresési fáról?,"Keresse meg a csomópontot, majd cserélje le a bal alsó csomópontra a jobb alfájáról (vagy a bal szélső csomópontjáról a bal alfáról).","ha a csomópont levél, akkor egyszerűen el lehet osztani / törölni a memóriából, és a szülő hivatkozása NULL-re változik. Ha a csomópontnak egyetlen gyermeke van, akkor a csomópont törlése előtt rá kell mutatni a mutatót a gyermekére. Ha a csomópontnak két gyermeke van, akkor a legegyszerűbb megoldás az, ha a csomópont teljes részfáját átmásolja egy új tömbbe vagy fába, törli a csomópontot és az összes leszármazottat, majd az alfából vett elemeket visszahelyezi a fő fába.",Jak odstraníte uzel z binárního vyhledávacího stromu?,Najděte uzel a poté jej nahraďte uzlem zcela vlevo z pravého podstromu (nebo uzlem zcela vpravo z levého podstromu).,"pokud je uzel list, lze jej jednoduše uvolnit / odstranit z paměti a odkaz jeho rodiče na něj se změnil na NULL. Pokud má uzel jediné dítě, měl by být ukazatel na něj před odstraněním uzlu proveden tak, aby ukazoval na jeho dítě. Pokud má uzel dvě děti, nejjednodušším řešením může být zkopírovat celý podstrom uzlu do nového pole nebo stromu, odstranit uzel a všechny potomky a poté přidat prvky převzaté ze podstromu zpět do hlavního stromu.",Kako se briše čvor s binarnog stabla pretraživanja?,"Pronađite čvor, a zatim ga zamijenite krajnjim lijevim čvorom iz njegovog desnog podstabla (ili najdesnijim čvorom s lijevog podstabla).","ako je čvor list, može se jednostavno osloboditi / izbrisati iz memorije, a referenca roditelja na njega promijenila je u NULL. Ako čvor ima jedno dijete, pokazivač na njega treba učiniti usmjerenim na njegovo dijete prije brisanja čvora. Ako čvor ima dvoje djece, najlakše rješenje može biti kopiranje cijelog podstabla čvora u novi niz ili stablo, brisanje čvora i svih potomaka, a zatim dodavanje elemenata preuzetih iz podstabla natrag u glavno stablo."
462,462,1447,8.5,A list-based implementation is preferred because the list is more  flexible than a array.,"Link-based, because they are dynamic (no size constraints)","Which implementation (array-based vs. list-based) is preferred, and why?",5.0,"Linkbasiert, weil sie dynamisch sind (keine Größenbeschränkungen)",Welche Implementierung (Array-basiert vs. Listen-basiert) wird bevorzugt und warum?,"Eine listenbasierte Implementierung wird bevorzugt, da die Liste flexibler als ein Array ist.","Kinsa nga pagpatuman (gipasukad sa array vs. list-based) ang gipalabi, ug ngano?","Pinahiuyon sa link, tungod kay kini kusog (walay mga pagpugong sa gidak-on)",Gipalabi ang usa ka pagpatuman nga nakabase sa lista tungod kay ang lista labi ka nabalhin kaysa usa ka laray.,"Vilket genomförande (array-baserat kontra listbaserat) är att föredra, och varför?",Länkbaserad eftersom de är dynamiska (inga storleksbegränsningar),En listbaserad implementering är att föredra eftersom listan är mer flexibel än en array.,Quelle implémentation (basée sur un tableau ou basée sur une liste) est préférée et pourquoi?,"Basés sur les liens, car ils sont dynamiques (aucune contrainte de taille)",Une implémentation basée sur une liste est préférable car la liste est plus flexible qu&#39;un tableau.,"Welke implementatie (array-gebaseerd versus lijst-gebaseerd) heeft de voorkeur, en waarom?","Link-gebaseerd, omdat ze dynamisch zijn (geen beperkingen qua grootte)",Een op lijst gebaseerde implementatie heeft de voorkeur omdat de lijst flexibeler is dan een array.,Какая реализация (на основе массива или на основе списка) предпочтительна и почему?,"На основе ссылок, потому что они динамические (без ограничений по размеру)","Реализация на основе списка предпочтительнее, потому что список более гибкий, чем массив.",Quale implementazione (basata su array o basata su elenchi) è preferita e perché?,"Basati su link, perché sono dinamici (nessun vincolo di dimensione)",È preferibile un&#39;implementazione basata su elenco perché l&#39;elenco è più flessibile di un array.,¿Qué implementación (basada en matrices o basada en listas) se prefiere y por qué?,"Basado en enlaces, porque son dinámicos (sin restricciones de tamaño)",Se prefiere una implementación basada en listas porque la lista es más flexible que una matriz.,Która implementacja (oparta na tablicach czy oparta na liście) jest preferowana i dlaczego?,"Oparte na łączach, ponieważ są dynamiczne (bez ograniczeń rozmiaru)","Preferowana jest implementacja oparta na liście, ponieważ lista jest bardziej elastyczna niż tablica.",Triển khai nào (dựa trên mảng so với dựa trên danh sách) được ưu tiên hơn và tại sao?,"Dựa trên liên kết, vì chúng động (không có ràng buộc về kích thước)",Triển khai dựa trên danh sách được ưu tiên hơn vì danh sách linh hoạt hơn một mảng.,どの実装（配列ベースとリストベース）が推奨されますか、またその理由は何ですか？,リンクベース、動的であるため（サイズの制約なし）,リストは配列よりも柔軟性があるため、リストベースの実装が推奨されます。,首选哪种实现方式（基于数组还是基于列表），为什么？,基于链接，因为它们是动态的（无大小限制）,首选基于列表的实现，因为列表比数组更灵活。,ما هو التطبيق المفضل (المستندة إلى المصفوفة مقابل القائمة) ، ولماذا؟,تعتمد على الارتباط ، لأنها ديناميكية (لا توجد قيود على الحجم),يُفضل التنفيذ المستند إلى القائمة لأن القائمة أكثر مرونة من المصفوفة.,"Яка реалізація (на основі масивів проти списку) є кращою, і чому?","На основі посилань, оскільки вони динамічні (без обмежень розміру)","Реалізація на основі списку є кращою, оскільки список є більш гнучким, ніж масив.",Qual implementação (baseada em matriz vs. baseada em lista) é preferida e por quê?,"Baseados em links, porque são dinâmicos (sem restrições de tamanho)",Uma implementação baseada em lista é preferida porque a lista é mais flexível do que uma matriz.,کدام پیاده سازی (مبتنی بر آرایه در مقابل لیست) ترجیح داده می شود ، و چرا؟,مبتنی بر پیوند ، زیرا پویا هستند (محدودیتی در اندازه ندارند),اجرای مبتنی بر لیست ترجیح داده می شود زیرا لیست انعطاف پذیرتر از آرایه است.,Quina implementació (basada en matriu vs. basada en llistes) es prefereix i per què?,"Basats en enllaços, perquè són dinàmics (sense restriccions de mida)",Es prefereix una implementació basada en llistes perquè la llista és més flexible que una matriu.,Која имплементација (заснована на низу у односу на листу) је пожељнија и зашто?,"На основу везе, јер су динамични (без ограничења величине)","Пожељна је имплементација заснована на листи, јер је листа флексибилнија од низа.","Implementasi mana (berbasis larik vs. berbasis daftar) yang lebih disukai, dan mengapa?","Berbasis tautan, karena dinamis (tidak ada batasan ukuran)",Implementasi berbasis daftar lebih disukai karena daftar lebih fleksibel daripada array.,"Hvilken implementering (arraybasert vs. listebasert) foretrekkes, og hvorfor?","Koblingsbasert, fordi de er dynamiske (ingen størrelsesbegrensninger)",En listebasert implementering foretrekkes fordi listen er mer fleksibel enn en matrise.,어떤 구현 (배열 기반 vs. 목록 기반)이 선호되며 그 이유는 무엇입니까?,"링크 기반, 동적이기 때문에 (크기 제한 없음)",목록 기반 구현은 목록이 배열보다 더 유연하기 때문에 선호됩니다.,Mikä toteutus (taulukko- tai luettelopohjainen) on suositeltava ja miksi?,"Linkkipohjainen, koska ne ovat dynaamisia (ei kokorajoituksia)","Luettelopohjainen toteutus on suositeltava, koska luettelo on joustavampi kuin taulukko.","Melyik megvalósítást (tömb alapú vagy lista alapú) részesítik előnyben, és miért?","Link-alapú, mert dinamikusak (nincs méretkorlátozás)","A lista alapú megvalósítást részesítik előnyben, mert a lista rugalmasabb, mint egy tömb.",Která implementace (založená na poli vs. založená na seznamu) je upřednostňována a proč?,"Na základě odkazů, protože jsou dynamické (žádná omezení velikosti)","Preferována je implementace založená na seznamu, protože seznam je flexibilnější než pole.",Koja je implementacija (zasnovana na nizu u odnosu na listu) poželjna i zašto?,"Temeljeni na vezama, jer su dinamični (bez ograničenja veličine)",Poželjna je implementacija zasnovana na popisu jer je lista fleksibilnija od niza.
463,463,1986,11.5,It's a function that calls itself. It runs multiple times until the base case is reached.,A function that calls itself.,What is a recursive function?,5.0,"Eine Funktion, die sich selbst aufruft.",Was ist eine rekursive Funktion?,"Es ist eine Funktion, die sich selbst aufruft. Es wird mehrmals ausgeführt, bis der Basisfall erreicht ist.",Unsa ang usa ka recursive function?,Usa ka kalihokan nga nagtawag sa kaugalingon.,Kini usa ka function nga nagtawag sa kaugalingon. Nagdagan kini daghang beses hangtod nga naabut ang base case.,Vad är en rekursiv funktion?,En funktion som kallar sig själv.,Det är en funktion som kallar sig själv. Det körs flera gånger tills basfallet nås.,Qu&#39;est-ce qu&#39;une fonction récursive?,Une fonction qui s&#39;appelle.,C&#39;est une fonction qui s&#39;appelle. Il s&#39;exécute plusieurs fois jusqu&#39;à ce que le cas de base soit atteint.,Wat is een recursieve functie?,Een functie die zichzelf aanroept.,Het is een functie die zichzelf aanroept. Het draait meerdere keren totdat het basisscenario is bereikt.,Что такое рекурсивная функция?,"Функция, которая вызывает сама себя.","Это функция, которая вызывает сама себя. Он запускается несколько раз, пока не будет достигнут базовый вариант.",Cos&#39;è una funzione ricorsiva?,Una funzione che chiama se stessa.,È una funzione che chiama se stessa. Viene eseguito più volte finché non viene raggiunto il caso base.,¿Qué es una función recursiva?,Una función que se llama a sí misma.,Es una función que se llama a sí misma. Se ejecuta varias veces hasta que se alcanza el caso base.,Co to jest funkcja rekurencyjna?,"Funkcja, która sama siebie wywołuje.","To funkcja, która sama siebie wywołuje. Działa wiele razy, aż do osiągnięcia przypadku podstawowego.",Hàm đệ quy là gì?,Một chức năng gọi chính nó.,Đó là một hàm gọi chính nó. Nó chạy nhiều lần cho đến khi đạt được trường hợp cơ sở.,再帰関数とは何ですか？,自分自身を呼び出す関数。,それはそれ自体を呼び出す関数です。基本ケースに到達するまで、複数回実行されます。,什么是递归函数？,调用自身的函数。,这是一个自我调用的函数。它会运行多次，直到达到基本情况为止。,ما هي الوظيفة العودية؟,وظيفة تستدعي نفسها.,إنها وظيفة تستدعي نفسها. يتم تشغيله عدة مرات حتى يتم الوصول إلى الحالة الأساسية.,Що таке рекурсивна функція?,"Функція, яка викликає себе.","Це функція, яка викликає себе. Він працює кілька разів, поки не буде досягнуто базовий випадок.",O que é uma função recursiva?,Uma função que chama a si mesma.,É uma função que chama a si mesma. Ele é executado várias vezes até que o caso base seja alcançado.,تابع بازگشتی چیست؟,تابعی که خودش را صدا می زند.,این تابعی است که خود را فراخوانی می کند. چندین بار اجرا می شود تا زمانی که به مورد اصلی برسید.,Què és una funció recursiva?,Una funció que s’autodenomina.,És una funció que s’autoanomena. S’executa diverses vegades fins que s’arriba a la casella base.,Шта је рекурзивна функција?,Функција која себе позива.,То је функција која себе назива. Покреће се више пута док се не постигне основни случај.,Apa itu fungsi rekursif?,Fungsi yang memanggil dirinya sendiri.,Itu adalah fungsi yang memanggil dirinya sendiri. Ini berjalan beberapa kali hingga kasus dasar tercapai.,Hva er en rekursiv funksjon?,En funksjon som kaller seg selv.,Det er en funksjon som kaller seg selv. Den går flere ganger til basissaken er nådd.,재귀 함수 란 무엇입니까?,자신을 호출하는 함수.,자신을 호출하는 함수입니다. 기본 케이스에 도달 할 때까지 여러 번 실행됩니다.,Mikä on rekursiivinen toiminto?,"Toiminto, joka kutsuu itseään.","Se on toiminto, joka kutsuu itseään. Se toimii useita kertoja, kunnes peruskokemus on saavutettu.",Mi az a rekurzív függvény?,"Olyan funkció, amely önmagát hívja.","Ez egy olyan funkció, amely önmagát hívja. Többször fut, amíg el nem érik az alapesetet.",Co je rekurzivní funkce?,"Funkce, která si říká sama.","Je to funkce, která si říká. Spouští se několikrát, dokud není dosaženo základního případu.",Šta je rekurzivna funkcija?,Funkcija koja sebe poziva.,To je funkcija koja sebe naziva. Izvodi se više puta dok se ne postigne osnovni slučaj.
464,464,2276,12.5,link lists dont have a fixed size,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",What is the advantage of linked lists over arrays?,5.0,"Verknüpfte Listen sind dynamische Strukturen, mit denen eine variable Anzahl von Elementen gespeichert werden kann.",Was ist der Vorteil von verknüpften Listen gegenüber Arrays?,Linklisten haben keine feste Größe,Unsa ang bentaha sa mga nalambigit nga lista sa mga pag-array?,"Ang mga nalista nga lista usa ka dinamikong istruktura, nga nagtugot sa usa ka variable number sa mga elemento nga matipigan.",ang mga lista sa link wala’y usa ka takdang gidak-on,Vilken är fördelen med länkade listor framför matriser?,Länkade listor är dynamiska strukturer som gör det möjligt att lagra ett varierande antal element.,länklistor har inte en fast storlek,Quel est l&#39;avantage des listes chaînées par rapport aux tableaux?,"Les listes liées sont des structures dynamiques, qui permettent de stocker un nombre variable d&#39;éléments.",les listes de liens n&#39;ont pas de taille fixe,Wat is het voordeel van gekoppelde lijsten ten opzichte van arrays?,Gelinkte lijsten zijn dynamische structuren waarmee een variabel aantal elementen kan worden opgeslagen.,linklijsten hebben geen vaste grootte,В чем преимущество связанных списков перед массивами?,"Связанные списки - это динамические структуры, которые позволяют хранить переменное количество элементов.",списки ссылок не имеют фиксированного размера,Qual è il vantaggio degli elenchi collegati rispetto agli array?,"Gli elenchi collegati sono strutture dinamiche, che consentono di memorizzare un numero variabile di elementi.",gli elenchi di collegamenti non hanno una dimensione fissa,¿Cuál es la ventaja de las listas enlazadas sobre las matrices?,Las listas enlazadas son estructuras dinámicas que permiten almacenar un número variable de elementos.,las listas de enlaces no tienen un tamaño fijo,Jaka jest przewaga połączonych list nad tablicami?,"Listy połączone to struktury dynamiczne, które pozwalają na przechowywanie zmiennej liczby elementów.",listy linków nie mają stałego rozmiaru,Lợi thế của danh sách liên kết so với mảng là gì?,"Danh sách được liên kết là cấu trúc động, cho phép lưu trữ một số phần tử thay đổi.",danh sách liên kết không có kích thước cố định,配列に対するリンクリストの利点は何ですか？,リンクリストは動的な構造であり、可変数の要素を格納できます。,リンクリストのサイズは固定されていません,链表相对于数组的优势是什么？,链接列表是动态结构，可以存储可变数量的元素。,链接列表没有固定大小,ما هي ميزة القوائم المرتبطة على المصفوفات؟,القوائم المرتبطة عبارة عن هياكل ديناميكية تسمح بتخزين عدد متغير من العناصر.,قوائم الروابط ليس لها حجم ثابت,У чому перевага зв’язаних списків перед масивами?,"Зв’язані списки - це динамічні структури, які дозволяють зберігати змінну кількість елементів.",списки посилань не мають фіксованого розміру,Qual é a vantagem das listas vinculadas sobre os arrays?,Listas vinculadas são estruturas dinâmicas que permitem o armazenamento de um número variável de elementos.,as listas de links não têm tamanho fixo,مزیت لیست های پیوندی نسبت به آرایه ها چیست؟,لیست های پیوندی ساختارهای پویایی هستند که اجازه می دهند تعداد متغیری از عناصر ذخیره شوند.,لیست های پیوند اندازه ثابت ندارند,Quin avantatge tenen les llistes enllaçades sobre les matrius?,Les llistes enllaçades són estructures dinàmiques que permeten emmagatzemar un nombre variable d’elements.,les llistes d&#39;enllaços no tenen una mida fixa,Која је предност повезаних листа над низовима?,"Повезане листе су динамичке структуре, које омогућавају чување променљивог броја елемената.",листе веза немају фиксну величину,Apa keuntungan dari daftar tertaut dibandingkan array?,"Daftar tertaut adalah struktur dinamis, yang memungkinkan penyimpanan sejumlah elemen variabel.",daftar tautan tidak memiliki ukuran tetap,Hva er fordelen med koblede lister i forhold til matriser?,"Koblede lister er dynamiske strukturer, som gjør det mulig å lagre et variabelt antall elementer.",lenklister har ikke en fast størrelse,배열에 비해 연결된 목록의 장점은 무엇입니까?,"연결된 목록은 동적 구조로, 다양한 수의 요소를 저장할 수 있습니다.",링크 목록은 크기가 고정되어 있지 않습니다.,Mikä on linkitettyjen luetteloiden etu matriiseihin verrattuna?,"Linkitetyt luettelot ovat dynaamisia rakenteita, joiden avulla voidaan tallentaa vaihteleva määrä elementtejä.",linkkiluetteloilla ei ole kiinteää kokoa,Mi az előnye a kapcsolt listáknak a tömbökkel szemben?,"Az összekapcsolt listák dinamikus struktúrák, amelyek változó számú elem tárolását teszik lehetővé.",a linklistáknak nincs rögzített mérete,Jaká je výhoda propojených seznamů oproti polím?,"Propojené seznamy jsou dynamické struktury, které umožňují uložit proměnný počet prvků.",seznamy odkazů nemají pevnou velikost,Koja je prednost povezanih lista nad nizovima?,"Povezane liste su dinamičke strukture, koje omogućuju pohranjivanje promjenjivog broja elemenata.",popisi veza nemaju fiksnu veličinu
465,465,1112,6.7,It contains the address of the function in memory.,The address of the location in memory where the function code resides.,What is a function pointer?,5.0,"Die Adresse des Speicherorts, an dem sich der Funktionscode befindet.",Was ist ein Funktionszeiger?,Es enthält die Adresse der Funktion im Speicher.,Unsa ang usa ka function pointer?,Ang adres sa lokasyon sa panumduman diin nagpuyo ang function code.,Naglangkob kini sa adres sa pagpaandar sa memorya.,Vad är en funktionspekare?,Adressen till platsen i minnet där funktionskoden finns.,Den innehåller funktionen för funktionen i minnet.,Qu&#39;est-ce qu&#39;un pointeur de fonction?,L&#39;adresse de l&#39;emplacement en mémoire où réside le code de fonction.,Il contient l&#39;adresse de la fonction en mémoire.,Wat is een functie-aanwijzer?,Het adres van de locatie in het geheugen waar de functiecode zich bevindt.,Het bevat het adres van de functie in het geheugen.,Что такое указатель на функцию?,"Адрес места в памяти, где находится код функции.",Он содержит адрес функции в памяти.,Cos&#39;è un puntatore a funzione?,L&#39;indirizzo della posizione in memoria in cui risiede il codice funzione.,Contiene l&#39;indirizzo della funzione in memoria.,¿Qué es un puntero de función?,La dirección de la ubicación en la memoria donde reside el código de función.,Contiene la dirección de la función en la memoria.,Co to jest wskaźnik funkcji?,"Adres lokalizacji w pamięci, w której znajduje się kod funkcji.",Zawiera adres funkcji w pamięci.,Con trỏ hàm là gì?,Địa chỉ của vị trí trong bộ nhớ nơi mã hàm cư trú.,Nó chứa địa chỉ của hàm trong bộ nhớ.,関数ポインタとは何ですか？,機能コードが存在するメモリ内の場所のアドレス。,これには、メモリ内の関数のアドレスが含まれています。,什么是函数指针？,功能代码所在的内存位置的地址。,它包含内存中函数的地址。,ما هو مؤشر الوظيفة؟,عنوان الموقع في الذاكرة حيث يوجد رمز الوظيفة.,يحتوي على عنوان الوظيفة في الذاكرة.,Що таке покажчик функції?,"Адреса місця в пам&#39;яті, де знаходиться код функції.",Він містить адресу функції в пам&#39;яті.,O que é um ponteiro de função?,O endereço do local na memória onde o código de função reside.,Ele contém o endereço da função na memória.,نشانگر عملکرد چیست؟,آدرس مکانی در حافظه که کد عملکرد در آن قرار دارد.,حاوی آدرس عملکرد در حافظه است.,Què és un punter de funció?,L&#39;adreça de la ubicació a la memòria on resideix el codi de funció.,Conté l&#39;adreça de la funció a la memòria.,Шта је показивач функције?,Адреса локације у меморији на којој се налази код функције.,Садржи адресу функције у меморији.,Apa itu penunjuk fungsi?,Alamat lokasi di memori tempat kode fungsi berada.,Ini berisi alamat fungsi dalam memori.,Hva er en funksjonspeker?,Adressen til stedet i minnet der funksjonskoden ligger.,Den inneholder adressen til funksjonen i minnet.,함수 포인터 란 무엇입니까?,기능 코드가있는 메모리의 위치 주소입니다.,메모리에있는 함수의 주소를 포함합니다.,Mikä on funktion osoitin?,"Sen muistin sijainnin osoite, jossa toimintokoodi sijaitsee.",Se sisältää muistissa olevan toiminnon osoitteen.,Mi az a funkciómutató?,"A memória azon helyének címe, ahol a funkciókód található.",Ez tartalmazza a memóriában lévő funkció címét.,Co je ukazatel funkce?,"Adresa umístění v paměti, kde se nachází funkční kód.",Obsahuje adresu funkce v paměti.,Što je pokazivač funkcije?,Adresa lokacije u memoriji na kojoj se nalazi kôd funkcije.,Sadrži adresu funkcije u memoriji.
466,466,557,3.5,"They have the same name, just different parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,3.5,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,"Sie haben den gleichen Namen, nur unterschiedliche Parameter.",Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.","Adunay parehas sila nga ngalan, lainlain ra nga mga parameter.",Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,"De har samma namn, bara olika parametrar.",Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.","Ils ont le même nom, juste des paramètres différents.",Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.","Ze hebben dezelfde naam, alleen verschillende parameters.",Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.","У них одинаковое название, только разные параметры.",Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.","Hanno lo stesso nome, solo parametri diversi.",¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.","Tienen el mismo nombre, solo diferentes parámetros.",W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.","Mają tę samą nazwę, tylko różne parametry.",Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.","Chúng có cùng tên, chỉ khác các thông số.",オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,それらは同じ名前ですが、パラメータが異なります。,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,它们具有相同的名称，只是参数不同。,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,لديهم نفس الاسم ، فقط معلمات مختلفة.,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.","Вони мають однакову назву, просто різні параметри.",Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.","Eles têm o mesmo nome, apenas parâmetros diferentes.",توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,آنها یک نام دارند ، فقط پارامترهای مختلف دارند.,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.","Tenen el mateix nom, només paràmetres diferents.",Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.","Имају исто име, само различите параметре.",Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.","Mereka memiliki nama yang sama, hanya parameter yang berbeda.",Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.","De har samme navn, bare forskjellige parametere.",오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,이름은 같고 매개 변수 만 다릅니다.,Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.","Heillä on sama nimi, vain erilaiset parametrit.",Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.","Ugyanaz a nevük, csak különböző paramétereik vannak.",Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.","Mají stejný název, jen různé parametry.",Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.","Imaju isto ime, samo različite parametre."
467,467,1264,7.6,they can traverse in both directions,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",What is the main advantage of a doubly-linked list over a basic linked list?,3.5,"Alle Lösch- und Einfügevorgänge können in konstanter Zeit ausgeführt werden, einschließlich der Vorgänge, die vor einem bestimmten Ort in der Liste oder am Ende der Liste ausgeführt werden.",Was ist der Hauptvorteil einer doppelt verknüpften Liste gegenüber einer einfachen verknüpften Liste?,Sie können in beide Richtungen fahren,Unsa man ang punoan nga bentaha sa usa ka lista nga doble nga nalambigit sa usa ka sukaranan nga lista nga nalambigit?,"Ang tanan nga mga operasyon sa pagtangtang ug pagsulud mahimo nga buhaton sa kanunay nga oras, lakip ang mga operasyon nga gihimo sa wala pa ang usa ka gihatag nga lokasyon sa lista o sa katapusan sa lista.",mahimo silang molatas sa parehas nga direksyon,Vad är den största fördelen med en dubbelt länkad lista jämfört med en grundlänkad lista?,"Alla raderings- och insättningsoperationer kan utföras i konstant tid, inklusive de operationer som utförs före en viss plats i listan eller i slutet av listan.",de kan korsa i båda riktningarna,Quel est le principal avantage d&#39;une liste à double lien par rapport à une liste liée de base?,"Toutes les opérations de suppression et d&#39;insertion peuvent être effectuées en temps constant, y compris les opérations effectuées avant un emplacement donné dans la liste ou à la fin de la liste.",ils peuvent traverser dans les deux sens,Wat is het belangrijkste voordeel van een dubbelgekoppelde lijst ten opzichte van een standaard gekoppelde lijst?,"Alle verwijderings- en invoegbewerkingen kunnen in constante tijd worden uitgevoerd, inclusief de bewerkingen die vóór een bepaalde locatie in de lijst of aan het einde van de lijst worden uitgevoerd.",ze kunnen in beide richtingen reizen,В чем главное преимущество двусвязного списка перед базовым связанным списком?,"Все операции удаления и вставки могут выполняться в постоянное время, включая операции, выполняемые перед заданным местом в списке или в конце списка.",они могут двигаться в обоих направлениях,Qual è il vantaggio principale di un elenco a doppio collegamento rispetto a un elenco collegato di base?,"Tutte le operazioni di cancellazione e inserimento possono essere eseguite in tempo costante, comprese quelle eseguite prima di una data posizione nella lista o alla fine della lista.",possono attraversare in entrambe le direzioni,¿Cuál es la principal ventaja de una lista enlazada doble sobre una lista enlazada básica?,"Todas las operaciones de eliminación e inserción se pueden realizar en tiempo constante, incluidas aquellas operaciones realizadas antes de una ubicación determinada en la lista o al final de la lista.",pueden atravesar en ambas direcciones,Jaka jest główna zaleta listy podwójnie połączonej w porównaniu z listą podstawową?,"Wszystkie operacje usuwania i wstawiania mogą być wykonywane w stałym czasie, w tym operacje wykonywane przed daną lokalizacją na liście lub na końcu listy.",mogą przechodzić w obu kierunkach,Ưu điểm chính của danh sách liên kết đôi so với danh sách liên kết cơ bản là gì?,"Tất cả các thao tác xóa và chèn có thể được thực hiện trong thời gian không đổi, bao gồm các thao tác được thực hiện trước một vị trí nhất định trong danh sách hoặc ở cuối danh sách.",họ có thể đi qua cả hai hướng,基本的なリンクリストに対する二重リンクリストの主な利点は何ですか？,リスト内の特定の場所の前またはリストの最後で実行される操作を含め、すべての削除および挿入操作は一定時間で実行できます。,彼らは両方向に横断することができます,与基本链表相比，双链表的主要优点是什么？,所有删除和插入操作都可以在固定时间内执行，包括那些在列表中给定位置之前或列表结尾处执行的操作。,他们可以双向穿越,ما هي الميزة الرئيسية لقائمة مرتبطة بشكل مزدوج على قائمة مرتبطة أساسية؟,يمكن إجراء جميع عمليات الحذف والإدراج في وقت ثابت ، بما في ذلك تلك العمليات التي يتم إجراؤها قبل موقع معين في القائمة أو في نهاية القائمة.,يمكنهم اجتياز كلا الاتجاهين,Яка головна перевага подвійно пов’язаного списку перед основним пов’язаним списком?,"Всі операції видалення та вставки можуть виконуватися за постійний час, включаючи ті операції, що виконуються до певного місця у списку або в кінці списку.",вони можуть рухатися в обох напрямках,Qual é a principal vantagem de uma lista duplamente vinculada em relação a uma lista vinculada básica?,"Todas as operações de exclusão e inserção podem ser realizadas em tempo constante, incluindo aquelas realizadas antes de um determinado local na lista ou no final da lista.",eles podem atravessar em ambas as direções,مزیت اصلی لیست پیوندی مضاعف نسبت به لیست پیوندی اساسی چیست؟,تمام عملیات حذف و درج را می توان در یک زمان ثابت انجام داد ، از جمله عملیات انجام شده قبل از یک مکان مشخص در لیست یا در انتهای لیست.,آنها می توانند از هر دو جهت عبور کنند,Quin és l’avantatge principal d’una llista doblement enllaçada respecte d’una llista enllaçada bàsica?,"Totes les operacions de supressió i inserció es poden realitzar en temps constant, incloses les operacions realitzades abans d&#39;una ubicació determinada a la llista o al final de la llista.",poden travessar en ambdues direccions,Шта је главна предност двоструко повезане листе у односу на основну повезану листу?,"Све операције брисања и уметања могу се изводити у константном времену, укључујући оне радње извршене пре дате локације на листи или на крају листе.",могу се кретати у оба смера,Apa keuntungan utama dari daftar tertaut ganda dibandingkan daftar tertaut dasar?,"Semua operasi penghapusan dan penyisipan dapat dilakukan dalam waktu yang konstan, termasuk operasi yang dilakukan sebelum lokasi tertentu dalam daftar atau di akhir daftar.",mereka dapat melintasi kedua arah,Hva er hovedfordelen med en dobbeltkoblet liste fremfor en grunnleggende koblet liste?,"Alle slettings- og innsettingsoperasjoner kan utføres i konstant tid, inkludert de operasjonene som er utført før et gitt sted i listen eller på slutten av listen.",de kan krysse i begge retninger,기본 연결 목록에 비해 이중 연결 목록의 주요 이점은 무엇입니까?,모든 삭제 및 삽입 작업은 목록의 지정된 위치 이전이나 목록 끝에 수행되는 작업을 포함하여 일정한 시간에 수행 될 수 있습니다.,양방향으로 횡단 할 수 있습니다.,Mikä on kaksinkertaisesti linkitetyn luettelon tärkein etu linkitettyyn perusluetteloon nähden?,"Kaikki poisto- ja lisäystoiminnot voidaan suorittaa vakiona, mukaan lukien ne toimet, jotka on suoritettu ennen tiettyä sijaintia luettelossa tai luettelon lopussa.",ne voivat kulkea molempiin suuntiin,Mi a kettős linkelésű lista fő előnye az alap linkelt listához képest?,"Az összes törlési és beillesztési művelet állandó időben végezhető el, beleértve azokat a műveleteket is, amelyeket a lista egy adott helye előtt vagy a lista végén hajtottak végre.",mindkét irányban haladhatnak,Jaká je hlavní výhoda dvojnásobně propojeného seznamu oproti základnímu?,"Všechny operace mazání a vkládání lze provádět v konstantním čase, včetně operací prováděných před daným místem v seznamu nebo na konci seznamu.",mohou procházet oběma směry,Koja je glavna prednost dvostruko povezane liste u odnosu na osnovnu povezanu listu?,"Sve operacije brisanja i umetanja mogu se izvoditi u stalnom vremenu, uključujući one operacije izvršene prije zadate lokacije na popisu ili na kraju liste.",mogu se kretati u oba smjera
468,468,2207,12.2,"adding a time marker at the before the algorithm is called and another time marker immediately after so that you have the change in time, then you can calculate the efficiency by the speed of the computers cpu.",Implement the algorithm and measure the physical running time.,What is the experimental approach for measuring the running time of an algorithm?,3.5,Implementieren Sie den Algorithmus und messen Sie die physische Laufzeit.,Was ist der experimentelle Ansatz zur Messung der Laufzeit eines Algorithmus?,"Wenn Sie eine Zeitmarke hinzufügen, bevor der Algorithmus aufgerufen wird, und eine weitere Zeitmarke unmittelbar danach, damit Sie die Zeit ändern können, können Sie die Effizienz anhand der Geschwindigkeit der Computer-CPU berechnen.",Unsa ang eksperimento nga pamaagi alang sa pagsukot sa oras sa pagdagan sa usa ka algorithm?,Ipatuman ang algorithm ug sukdon ang pisikal nga oras sa pagdagan.,"Pagdugang usa ka marka sa oras sa wala pa tawgon ang algorithm ug uban pa nga marka sa oras pagkahuman aron adunay ka pagbag-o sa oras, pagkahuman makalkula nimo ang kahusayan pinaagi sa katulin sa mga computer cpu.",Vad är det experimentella tillvägagångssättet för att mäta en algoritms körtid?,Implementera algoritmen och mät den fysiska körtiden.,"lägga till en tidsmarkör vid innan algoritmen anropas och en annan tidsmarkör omedelbart efter så att du får ändringen i tid, då kan du beräkna effektiviteten med datorns datorns hastighet.",Quelle est l&#39;approche expérimentale pour mesurer le temps d&#39;exécution d&#39;un algorithme?,Implémentez l&#39;algorithme et mesurez le temps de fonctionnement physique.,"en ajoutant un marqueur de temps avant l&#39;appel de l&#39;algorithme et un autre marqueur de temps immédiatement après afin que vous ayez le changement de temps, vous pouvez alors calculer l&#39;efficacité par la vitesse du processeur de l&#39;ordinateur.",Wat is de experimentele benadering voor het meten van de looptijd van een algoritme?,Implementeer het algoritme en meet de fysieke looptijd.,"door een tijdmarkering toe te voegen voordat het algoritme wordt aangeroepen en een andere tijdmarkering onmiddellijk daarna, zodat je de verandering in de tijd hebt, dan kun je de efficiëntie berekenen aan de hand van de snelheid van de computer-cpu.",Каков экспериментальный подход к измерению времени работы алгоритма?,Реализуйте алгоритм и измерьте физическое время работы.,"добавив маркер времени перед вызовом алгоритма и еще один маркер времени сразу после, чтобы у вас было изменение во времени, тогда вы можете рассчитать эффективность по скорости процессора компьютера.",Qual è l&#39;approccio sperimentale per misurare il tempo di esecuzione di un algoritmo?,Implementa l&#39;algoritmo e misura il tempo di esecuzione fisico.,"aggiungendo un marcatore di tempo prima che l&#39;algoritmo venga chiamato e un altro marcatore di tempo immediatamente dopo in modo da avere il cambio di tempo, quindi è possibile calcolare l&#39;efficienza dalla velocità della CPU del computer.",¿Cuál es el enfoque experimental para medir el tiempo de ejecución de un algoritmo?,Implemente el algoritmo y mida el tiempo de ejecución físico.,"agregando un marcador de tiempo antes de que se llame al algoritmo y otro marcador de tiempo inmediatamente después para que tenga el cambio en el tiempo, luego puede calcular la eficiencia por la velocidad de la CPU de la computadora.",Jakie jest eksperymentalne podejście do pomiaru czasu działania algorytmu?,Zaimplementuj algorytm i zmierz fizyczny czas pracy.,"dodanie znacznika czasu przed wywołaniem algorytmu i innego znacznika czasu bezpośrednio po, aby mieć zmianę w czasie, wtedy można obliczyć wydajność na podstawie prędkości procesora komputera.",Phương pháp thử nghiệm để đo thời gian chạy của một thuật toán là gì?,Thực hiện thuật toán và đo thời gian chạy vật lý.,"thêm một mốc thời gian trước khi thuật toán được gọi và một mốc thời gian khác ngay sau đó để bạn có sự thay đổi trong thời gian, sau đó bạn có thể tính hiệu quả theo tốc độ của cpu máy tính.",アルゴリズムの実行時間を測定するための実験的アプローチは何ですか？,アルゴリズムを実装し、物理的な実行時間を測定します。,アルゴリズムが呼び出される前にタイムマーカーを追加し、直後に別のタイムマーカーを追加して時間の変化を確認すると、コンピューターのCPUの速度によって効率を計算できます。,测量算法运行时间的实验方法是什么？,实施算法并测量物理运行时间。,在调用算法之前的时间添加一个时间标记，然后在调用算法的时间之后添加另一个时间标记，这样您就可以更改时间，然后可以通过计算机cpu的速度来计算效率。,ما هي الطريقة التجريبية لقياس وقت تشغيل الخوارزمية؟,تنفيذ الخوارزمية وقياس وقت التشغيل الفعلي.,إضافة علامة وقت في ما قبل استدعاء الخوارزمية وعلامة وقت أخرى بعد ذلك مباشرة بحيث يكون لديك التغيير في الوقت ، ثم يمكنك حساب الكفاءة من خلال سرعة وحدة المعالجة المركزية لأجهزة الكمبيوتر.,Який експериментальний підхід для вимірювання часу роботи алгоритму?,Впровадити алгоритм і виміряти фізичний час роботи.,"додаючи маркер часу до того, як алгоритм викликається, і інший маркер часу відразу після, щоб ви мали зміну в часі, тоді ви можете розрахувати ефективність за швидкістю процесора комп&#39;ютерів.",Qual é a abordagem experimental para medir o tempo de execução de um algoritmo?,Implemente o algoritmo e meça o tempo de execução físico.,"adicionando um marcador de tempo antes de o algoritmo ser chamado e outro marcador de tempo imediatamente depois para que você tenha a mudança no tempo, então você pode calcular a eficiência pela velocidade da CPU do computador.",روش آزمایشی برای اندازه گیری زمان اجرای یک الگوریتم چیست؟,الگوریتم را پیاده سازی کنید و زمان دویدن فیزیکی را اندازه بگیرید.,اضافه کردن یک نشانگر زمان در الگوریتم قبل از فراخوانی الگوریتم و یک نشانگر زمان دیگر بلافاصله پس از آن ، بنابراین شما می توانید زمان را تغییر دهید ، سپس می توانید بازده را با سرعت پردازنده های رایانه محاسبه کنید.,Quin és l&#39;enfocament experimental per mesurar el temps d&#39;execució d&#39;un algorisme?,Implementar l&#39;algorisme i mesurar el temps d&#39;execució física.,"afegint un marcador de temps abans que es cridi l&#39;algorisme i un altre marcador de temps immediatament després perquè tingueu el canvi de temps, podreu calcular l&#39;eficiència per la velocitat de la CPU de l&#39;ordinador.",Који је експериментални приступ за мерење времена рада алгоритма?,Имплементирајте алгоритам и измерите физичко време рада.,"додавањем временског маркера пре него што се алгоритам позове и другог временског маркера непосредно након, тако да имате временску промену, тада можете израчунати ефикасност брзином процесора рачунара.",Apa pendekatan eksperimental untuk mengukur waktu berjalan suatu algoritma?,Menerapkan algoritma dan mengukur waktu berjalan fisik.,"menambahkan penanda waktu sebelum algoritma dipanggil dan penanda waktu lain segera setelahnya sehingga Anda memiliki perubahan waktu, maka Anda dapat menghitung efisiensi dengan kecepatan cpu komputer.",Hva er den eksperimentelle tilnærmingen for å måle kjøretid for en algoritme?,Implementere algoritmen og måle den fysiske kjøretiden.,"legge til en tidsmarkør før algoritmen blir kalt og en annen tidsmarkør umiddelbart etter slik at du har endringen i tid, så kan du beregne effektiviteten med datamaskinens CPU-hastighet.",알고리즘의 실행 시간을 측정하기위한 실험적 접근 방식은 무엇입니까?,알고리즘을 구현하고 실제 실행 시간을 측정합니다.,알고리즘이 호출되기 전에 시간 마커를 추가하고 그 직후에 다른 시간 마커를 추가하여 시간의 변화를 확인한 다음 컴퓨터 CPU의 속도로 효율성을 계산할 수 있습니다.,Mikä on kokeellinen lähestymistapa algoritmin käyntiajan mittaamiseen?,Toteuta algoritmi ja mittaa fyysinen ajoaika.,"lisäämällä aikamerkin ennen algoritmin kutsumista ja toisen aikamerkin heti sen jälkeen, jotta sinulla on muutos ajassa, voit laskea tehokkuuden tietokoneiden suorittimen nopeudella.",Mi a kísérleti megközelítés az algoritmus futási idejének mérésére?,Végezze el az algoritmust és mérje meg a fizikai futási időt.,"hozzáad egy időjelzőt az algoritmus meghívása előtt, és egy másik időjelzőt közvetlenül utána, hogy meg legyen az időbeli változás, akkor kiszámíthatja a hatékonyságot a számítógépek CPU sebességével.",Jaký je experimentální přístup k měření doby chodu algoritmu?,Implementujte algoritmus a změřte fyzickou dobu chodu.,"přidáním časové značky před voláním algoritmu a další časové značky bezprostředně poté, abyste měli změnu v čase, pak můžete vypočítat účinnost podle rychlosti procesoru počítače.",Koji je eksperimentalni pristup za mjerenje vremena rada algoritma?,Implementirajte algoritam i izmjerite fizičko vrijeme izvođenja.,"dodavanje vremenskog markera prije pozivanja algoritma i drugog vremenskog markera neposredno nakon tako da imate promjenu u vremenu, a zatim možete izračunati efikasnost brzinom procesora računara."
469,469,1230,7.4,the pointer to the first element is passed to a function,By reference.,How are linked lists passed as arguments to a function?,4.0,Durch Bezugnahme.,Wie werden verknüpfte Listen als Argumente an eine Funktion übergeben?,Der Zeiger auf das erste Element wird an eine Funktion übergeben,Giunsa ang pagpasa sa mga lista nga gilakip ingon mga pangatarungan sa usa ka kalihokan?,Pinaagi sa pakisayran.,ang tudlo sa una nga elemento gipasa sa usa ka kalihokan,Hur skickas länkade listor som argument till en funktion?,Genom hänvisning.,pekaren till det första elementet skickas till en funktion,Comment les listes chaînées sont-elles transmises comme arguments à une fonction?,Par référence.,le pointeur vers le premier élément est passé à une fonction,Hoe worden gekoppelde lijsten als argumenten aan een functie doorgegeven?,Door verwijzing.,de pointer naar het eerste element wordt doorgegeven aan een functie,Как связанные списки передаются в качестве аргументов функции?,По ссылке.,указатель на первый элемент передается в функцию,Come vengono passati gli elenchi collegati come argomenti a una funzione?,Come riferimento.,il puntatore al primo elemento viene passato a una funzione,¿Cómo se pasan las listas enlazadas como argumentos a una función?,Por referencia.,el puntero al primer elemento se pasa a una función,W jaki sposób połączone listy są przekazywane jako argumenty do funkcji?,Przez odniesienie.,wskaźnik do pierwszego elementu jest przekazywany do funkcji,Làm cách nào để danh sách được liên kết được truyền dưới dạng đối số cho một hàm?,Bằng cách tham khảo.,con trỏ đến phần tử đầu tiên được chuyển đến một hàm,リンクリストはどのように引数として関数に渡されますか？,参照による。,最初の要素へのポインタが関数に渡されます,链表如何作为参数传递给函数？,引用。,指向第一个元素的指针传递给函数,كيف يتم تمرير القوائم المرتبطة كوسائط إلى دالة؟,بالتزكية.,يتم تمرير المؤشر إلى العنصر الأول إلى دالة,Як зв’язані списки передаються як аргументи функції?,За посиланням.,покажчик на перший елемент передається функції,Como as listas vinculadas são passadas como argumentos para uma função?,Por referência.,o ponteiro para o primeiro elemento é passado para uma função,چگونه لیست های پیوندی به عنوان آرگومان به یک تابع منتقل می شوند؟,با مرجع.,نشانگر به اولین عنصر به یک تابع منتقل می شود,Com es passen les llistes enllaçades com a arguments a una funció?,Per referència.,el punter al primer element es passa a una funció,Како се повезане листе прослеђују као аргументи функцији?,По референци.,показивач на први елемент преноси се на функцију,Bagaimana daftar tertaut diteruskan sebagai argumen ke suatu fungsi?,Dengan referensi.,penunjuk ke elemen pertama dilewatkan ke suatu fungsi,Hvordan blir koblede lister overført som argumenter til en funksjon?,Med referanse.,pekeren til det første elementet blir sendt til en funksjon,연결 목록은 함수에 인수로 어떻게 전달됩니까?,참고로.,첫 번째 요소에 대한 포인터가 함수에 전달됩니다.,Kuinka linkitetyt luettelot välitetään argumentteina funktiolle?,Viittaamalla.,ensimmäisen elementin osoitin välitetään funktiolle,Hogyan továbbítják a függvényhez argumentumként hivatkozott listákat?,Referencia alapján.,az első elem mutatója átkerül egy függvényhez,Jak jsou propojené seznamy předávány funkci jako argumenty?,Odkazem.,ukazatel na první prvek je předán funkci,Kako se povezane liste prosljeđuju kao argumenti funkciji?,Po referenci.,pokazivač na prvi element prenosi se na funkciju
470,470,2076,11.8,String contains a word where as char can contain phrases or a string of characters.,The char[] will automatically add a null \0 character at the end of the string.,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,2.0,Das Zeichen [] fügt am Ende der Zeichenfolge automatisch ein Nullzeichen \ 0 hinzu.,"Was ist der Hauptunterschied zwischen einer Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, und einer Variablen vom Typ char []?","Zeichenfolge enthält ein Wort, wobei als Zeichen Phrasen oder eine Zeichenfolge enthalten kann.",Unsa ang punoan nga kalainan tali sa usa ka hilo sa mga karakter nga mabasa sa usa ka variable sa type string kumpara sa variable sa type char []?,Ang char [] awtomatikong magdugang usa ka null \ 0 nga karakter sa katapusan sa pisi.,Ang hilo adunay sulud nga pulong diin ang char mahimong maglangkob sa mga hugpong sa mga pulong o sa usa ka hilo sa mga karakter.,Vad är den största skillnaden mellan en teckensträng som läses in i en variabel av typsträng kontra en variabel av typen char []?,Tecknet [] lägger automatiskt till ett null \ 0-tecken i slutet av strängen.,Sträng innehåller ett ord där som char kan innehålla fraser eller en rad tecken.,Quelle est la principale différence entre une chaîne de caractères lue dans une variable de type string et une variable de type char []?,Le char [] ajoutera automatiquement un caractère nul \ 0 à la fin de la chaîne.,String contient un mot où comme char peut contenir des phrases ou une chaîne de caractères.,Wat is het belangrijkste verschil tussen een reeks tekens die wordt ingelezen in een variabele van het type string versus een variabele van het type char []?,Het teken [] voegt automatisch een nul \ 0 teken toe aan het einde van de string.,String bevat een woord waarbij as char woordgroepen of een reeks tekens kan bevatten.,"В чем основное отличие между строкой символов, считываемой в переменную типа string, и переменной типа char []?",Char [] автоматически добавит нулевой символ \ 0 в конец строки.,"Строка содержит слово, где as char может содержать фразы или строку символов.",Qual è la principale differenza tra una stringa di caratteri che viene letta in una variabile di tipo stringa e una variabile di tipo char []?,Il carattere [] aggiungerà automaticamente un carattere null \ 0 alla fine della stringa.,String contiene una parola dove as char può contenere frasi o una stringa di caratteri.,¿Cuál es la principal diferencia entre una cadena de caracteres que se lee en una variable de tipo cadena y una variable de tipo char []?,El char [] agregará automáticamente un carácter nulo \ 0 al final de la cadena.,String contiene una palabra donde char puede contener frases o una cadena de caracteres.,"Jaka jest główna różnica między ciągiem znaków, który jest wczytywany do zmiennej typu string, a zmienną typu char []?",Znak [] automatycznie doda znak null \ 0 na końcu ciągu.,"Ciąg zawiera słowo, w którym as char może zawierać frazy lub ciąg znaków.",Sự khác biệt chính giữa một chuỗi ký tự được đọc thành một biến kiểu chuỗi so với một biến kiểu char [] là gì?,Char [] sẽ tự động thêm ký tự null \ 0 vào cuối chuỗi.,Chuỗi chứa một từ trong đó char có thể chứa các cụm từ hoặc một chuỗi ký tự.,string型の変数とchar []型の変数に読み込まれる文字列の主な違いは何ですか？,char []は、文字列の最後にnull \ 0文字を自動的に追加します。,文字列には単語が含まれますが、charにはフレーズまたは文字列を含めることができます。,读入string类型的变量与char []类型的变量的字符串之间的主要区别是什么？,char []将在字符串的末尾自动添加一个空\ 0字符。,字符串包含一个单词，其中char可以包含短语或字符串。,ما هو الفرق الرئيسي بين سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة مقابل متغير من النوع char []؟,سيضيف الحرف [] تلقائيًا حرفًا فارغًا \ 0 في نهاية السلسلة.,سلسلة تحتوي على كلمة حيث يمكن أن يحتوي الحرف على عبارات أو سلسلة من الأحرف.,"Яка основна різниця між рядком символів, який зчитується у змінну типу string від змінної типу char []?",Char [] автоматично додасть нульовий символ \ 0 в кінці рядка.,"Рядок містить слово, де як char може містити фрази або рядок символів.",Qual é a principal diferença entre uma string de caracteres que é lida em uma variável do tipo string e uma variável do tipo char []?,O char [] adicionará automaticamente um caractere nulo \ 0 no final da string.,String contém uma palavra onde as char pode conter frases ou uma string de caracteres.,تفاوت اصلی یک رشته از کاراکترها در یک متغیر از نوع نوع در مقابل یک متغیر از نوع char [] چیست؟,char [] به طور خودکار در انتهای رشته یک کاراکتر null \ 0 اضافه می کند.,رشته شامل کلمه ای است که به عنوان char می تواند شامل عبارات یا رشته ای از کاراکترها باشد.,Quina és la diferència principal entre una cadena de caràcters que es llegeix en una variable de tipus cadena versus una variable de tipus char []?,El caràcter [] afegirà automàticament un caràcter \ 0 nul al final de la cadena.,La cadena conté una paraula on el caràcter pot contenir frases o una cadena de caràcters.,Која је главна разлика између низа знакова који се читају у променљиву типа стринг у односу на променљиву типа цхар []?,Цхар [] ће аутоматски додати нулл \ 0 знак на крају низа.,Стринг садржи реч где цхар може садржати фразе или низ знакова.,Apa perbedaan utama antara string karakter yang dibaca menjadi variabel tipe string versus variabel tipe char []?,Karakter [] secara otomatis akan menambahkan karakter null \ 0 di akhir string.,String berisi sebuah kata dimana char bisa berisi frase atau string karakter.,Hva er hovedforskjellen mellom en streng med tegn som leses inn i en variabel av typen streng versus en variabel av typen char []?,Char [] vil automatisk legge til et null \ 0 tegn på slutten av strengen.,String inneholder et ord der som char kan inneholde setninger eller en streng med tegn.,문자열 유형의 변수와 char [] 유형의 변수로 읽어들이는 문자열의 주요 차이점은 무엇입니까?,char []는 문자열 끝에 null \ 0 문자를 자동으로 추가합니다.,문자열에는 단어가 포함되며 문자에는 구 또는 문자열이 포함될 수 있습니다.,"Mikä on tärkein ero merkkijonossa, joka luetaan merkkijonon muuttujaksi tyypin char [] muuttujaan?",Char [] lisää merkkijonon loppuun tyhjän merkin 0.,"Merkkijono sisältää sanan, jossa char voi sisältää lauseita tai merkkijonon.","Mi a fő különbség a karakterláncok között, amelyeket string típusú változóba olvasnak, és a char [] típusú változókba?",A char [] automatikusan hozzáad egy null \ 0 karaktert a karakterlánc végéhez.,"A karakterlánc tartalmaz egy szót, ahol a char tartalmazhat kifejezéseket vagy karakterláncokat.","Jaký je hlavní rozdíl mezi řetězcem znaků, který je načten do proměnné typu řetězec oproti proměnné typu char []?",Znak [] automaticky přidá znak null \ 0 na konec řetězce.,"Řetězec obsahuje slovo, kde jako znak může obsahovat fráze nebo řetězec znaků.",Koja je glavna razlika između niza znakova koji se čitaju u varijablu tipa string u odnosu na varijablu tipa char []?,Char [] automatski će dodati null \ 0 znak na kraju niza.,Niz sadrži riječ gdje char može sadržavati fraze ili niz znakova.
471,471,102,1.4,In the Main function..?,At the main function.,Where do C++ programs begin to execute?,5.0,Bei der Hauptfunktion.,Wo beginnen C ++ - Programme mit der Ausführung?,In der Hauptfunktion ..?,Asa magsugod ang pagpatuman sa mga programa sa C ++?,Sa punoan nga kalihokan.,Sa Panguna nga gimbuhaton ..?,Var börjar C ++ - program att köras?,Vid huvudfunktionen.,I huvudfunktionen ..?,Où les programmes C ++ commencent-ils à s&#39;exécuter?,À la fonction principale.,Dans la fonction principale ..?,Waar beginnen C ++ -programma&#39;s te worden uitgevoerd?,Bij de belangrijkste functie.,In de hoofdfunctie ..?,Где начинают выполняться программы на C ++?,В основной функции.,В функции Main ..?,Dove iniziano a essere eseguiti i programmi C ++?,Alla funzione principale.,Nella funzione Main ..?,¿Dónde comienzan a ejecutarse los programas C ++?,En la función principal.,En la función principal ..?,Gdzie programy C ++ zaczynają się wykonywać?,W głównej funkcji.,W funkcji głównej ..?,Các chương trình C ++ bắt đầu thực thi ở đâu?,Tại chức năng chính.,Trong chức năng Chính ..?,C ++プログラムはどこから実行を開始しますか？,主な機能で。,メイン機能で..？,C ++程序在哪里开始执行？,在主要功能上。,在主要功能..？,من أين تبدأ برامج C ++ في التنفيذ؟,في الوظيفة الرئيسية.,في الوظيفة الرئيسية ..؟,Де програми С ++ починають виконуватися?,На головній функції.,У головній функції ..?,Onde os programas C ++ começam a ser executados?,Na função principal.,Na função principal ..?,برنامه های C ++ از کجا شروع به اجرا می کنند؟,در عملکرد اصلی.,در عملکرد اصلی ..؟,On comencen a executar-se els programes C ++?,A la funció principal.,A la funció principal ..?,Где почињу да се извршавају програми Ц ++?,На главној функцији.,У главној функцији ..?,Di mana program C ++ mulai dijalankan?,Di fungsi utama.,Dalam fungsi Utama ..?,Hvor begynner C ++ -programmer å kjøres?,Ved hovedfunksjonen.,I hovedfunksjonen ..?,C ++ 프로그램은 어디에서 실행되기 시작합니까?,주요 기능에서.,주요 기능에서 ..?,Missä C ++ -ohjelmat alkavat suorittaa?,Päätoiminnossa.,Päätoiminnossa ..?,Hol kezdődnek a C ++ programok futtatása?,A fő funkciónál.,A Fő funkcióban ..?,Kde se programy C ++ začínají spouštět?,Na hlavní funkci.,V hlavní funkci ..?,Gdje se počinju izvršavati programi C ++?,Na glavnoj funkciji.,U glavnoj funkciji ..?
472,472,771,4.5,all dimensions but the first,"All the dimensions, except the first one.",How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,5.0,Alle Dimensionen außer der ersten.,"Wie viele Dimensionen müssen angegeben werden, wenn ein mehrdimensionales Array als Argument an eine Funktion übergeben wird?",alle Dimensionen außer der ersten,Pila ka mga sukat ang kinahanglan nga ipiho sa diha nga ang pagpasa sa usa ka multi-dimensional array ingon usa ka argumento sa usa ka kalihokan?,"Ang tanan nga mga sukat, gawas sa una.",tanan nga sukat apan ang una,Hur många dimensioner måste anges när du skickar en flerdimensionell matris som ett argument till en funktion?,"Alla mått, förutom den första.",alla dimensioner utom den första,Combien de dimensions doivent être spécifiées lors du passage d&#39;un tableau multidimensionnel comme argument à une fonction?,"Toutes les dimensions, sauf la première.",toutes les dimensions sauf la première,Hoeveel dimensies moeten worden opgegeven bij het doorgeven van een multidimensionale array als argument aan een functie?,"Alle afmetingen, behalve de eerste.",alle afmetingen behalve de eerste,Сколько измерений необходимо указать при передаче многомерного массива в качестве аргумента функции?,"Все размеры, кроме первого.","все размеры, кроме первого",Quante dimensioni devono essere specificate quando si passa un array multidimensionale come argomento a una funzione?,"Tutte le dimensioni, tranne la prima.",tutte le dimensioni tranne la prima,¿Cuántas dimensiones se deben especificar al pasar una matriz multidimensional como argumento a una función?,"Todas las dimensiones, excepto la primera.",todas las dimensiones menos la primera,Ile wymiarów należy podać podczas przekazywania wielowymiarowej tablicy jako argumentu do funkcji?,"Wszystkie wymiary, z wyjątkiem pierwszego.",wszystkie wymiary oprócz pierwszego,Có bao nhiêu kích thước cần được chỉ định khi chuyển một mảng nhiều chiều làm đối số cho một hàm?,"Tất cả các kích thước, ngoại trừ kích thước đầu tiên.",tất cả các thứ nguyên nhưng thứ nhất,多次元配列を引数として関数に渡す場合、いくつの次元を指定する必要がありますか？,最初の寸法を除くすべての寸法。,最初を除くすべての次元,将多维数组作为参数传递给函数时，需要指定多少维？,除第一个尺寸外的所有尺寸。,除第一个尺寸外的所有尺寸,كم عدد الأبعاد التي يجب تحديدها عند تمرير مصفوفة متعددة الأبعاد كوسيطة لدالة؟,كل الأبعاد ماعدا الأول.,كل الأبعاد ما عدا الأولى,Скільки вимірів потрібно вказати при передачі багатовимірного масиву як аргументу функції?,"Усі розміри, крім першого.","усі розміри, крім першого",Quantas dimensões precisam ser especificadas ao passar uma matriz multidimensional como um argumento para uma função?,"Todas as dimensões, exceto a primeira.",todas as dimensões menos a primeira,هنگام عبور از یک آرایه چند بعدی به عنوان آرگومان به یک تابع ، چند بعد باید مشخص شود؟,همه ابعاد ، به جز اولین مورد.,همه ابعاد اما اولین,Quantes dimensions cal especificar quan es passa una matriu multidimensional com a argument a una funció?,"Totes les dimensions, excepte la primera.",totes les dimensions menys la primera,Колико димензија треба навести приликом прослеђивања вишедимензионалног низа као аргумента функцији?,"Све димензије, осим прве.",све димензије осим прве,Berapa banyak dimensi yang perlu ditentukan saat meneruskan larik multi-dimensi sebagai argumen ke suatu fungsi?,"Semua dimensi, kecuali yang pertama.",semua dimensi kecuali yang pertama,Hvor mange dimensjoner må spesifiseres når du overfører en flerdimensjonal matrise som et argument til en funksjon?,"Alle dimensjoner, unntatt den første.","alle dimensjoner, men den første",다차원 배열을 함수에 인수로 전달할 때 몇 개의 차원을 지정해야합니까?,첫 번째를 제외한 모든 치수.,첫 번째를 제외한 모든 차원,"Kuinka monta ulottuvuutta on määritettävä, kun välitetään moniulotteinen taulukko argumenttina funktiolle?","Kaikki mitat, paitsi ensimmäinen.",kaikki mitat paitsi ensimmäinen,"Hány dimenziót kell megadni, amikor egy többdimenziós tömböt argumentumként átadunk egy függvénynek?","Minden dimenzió, az első kivételével.","minden dimenzió, kivéve az elsőt",Kolik dimenzí je třeba zadat při předávání vícerozměrného pole jako argumentu funkci?,"Všechny rozměry, kromě prvního.",všechny rozměry kromě první,Koliko dimenzija treba navesti prilikom prosljeđivanja višedimenzionalnog niza kao argumenta funkcije?,"Sve dimenzije, osim prve.",sve dimenzije osim prve
473,473,1260,7.5,"A circular linked list does not have a last element. Instead, it's last item points to the head of the list.",The last element in a circular linked list points to the head of the list.,What is the difference between a circular linked list and a basic linked list?,5.0,Das letzte Element in einer kreisförmig verknüpften Liste zeigt auf den Kopf der Liste.,Was ist der Unterschied zwischen einer zirkulären verknüpften Liste und einer einfachen verknüpften Liste?,Eine zirkuläre verknüpfte Liste enthält kein letztes Element. Stattdessen zeigt das letzte Element auf den Kopf der Liste.,Unsa ang kalainan sa us aka lista nga nalakip sa lingin ug us aka sukaranan nga nalakip nga lista?,Ang ulahi nga elemento sa usa ka lista nga nalakip sa lingin nagtudlo sa ulo sa lista.,"Ang usa ka lista nga nalakip sa lingin wala’y katapusan nga elemento. Hinuon, kini ang ulahi nga butang nga nagpunting sa ulohan sa lista.",Vad är skillnaden mellan en cirkulär länkad lista och en grundlänkad lista?,Det sista elementet i en cirkulär länkad lista pekar på listans huvud.,En cirkulär länkad lista har inte ett sista element. Istället är det sista objektet som pekar på listans huvud.,Quelle est la différence entre une liste chaînée circulaire et une liste chaînée de base?,Le dernier élément d&#39;une liste liée circulaire pointe vers la tête de la liste.,"Une liste chaînée circulaire n&#39;a pas de dernier élément. Au lieu de cela, c&#39;est le dernier élément qui pointe vers la tête de la liste.",Wat is het verschil tussen een circulaire gekoppelde lijst en een basis gekoppelde lijst?,Het laatste element in een circulaire gekoppelde lijst wijst naar de kop van de lijst.,Een circulaire gekoppelde lijst heeft geen laatste element. In plaats daarvan verwijst het laatste item naar de kop van de lijst.,В чем разница между круговым связанным списком и основным связанным списком?,Последний элемент в круговом связном списке указывает на заголовок списка.,В круговом связном списке нет последнего элемента. Вместо этого последний элемент указывает на начало списка.,Qual è la differenza tra un elenco collegato circolare e un elenco collegato di base?,L&#39;ultimo elemento in un elenco collegato circolare punta all&#39;inizio dell&#39;elenco.,"Un elenco collegato circolare non ha un ultimo elemento. Invece, l&#39;ultimo elemento punta all&#39;inizio dell&#39;elenco.",¿Cuál es la diferencia entre una lista enlazada circular y una lista enlazada básica?,El último elemento de una lista enlazada circular apunta al encabezado de la lista.,"Una lista enlazada circular no tiene un último elemento. En cambio, su último elemento apunta al encabezado de la lista.",Jaka jest różnica między listą połączoną cyklicznie a listą podstawową?,Ostatni element na okrągłej liście połączonej wskazuje na początek listy.,Lista połączona cyklicznie nie ma ostatniego elementu. Zamiast tego ostatnia pozycja wskazuje na początek listy.,Sự khác biệt giữa danh sách liên kết vòng tròn và danh sách liên kết cơ bản là gì?,Phần tử cuối cùng trong danh sách được liên kết hình tròn trỏ đến phần đầu của danh sách.,"Danh sách liên kết vòng tròn không có phần tử cuối cùng. Thay vào đó, mục cuối cùng trỏ đến đầu danh sách.",循環リンクリストと基本リンクリストの違いは何ですか？,循環リンクリストの最後の要素は、リストの先頭を指します。,循環リンクリストには最後の要素がありません。代わりに、最後の項目がリストの先頭を指します。,循环链表和基本链表有什么区别？,循环链接列表中的最后一个元素指向列表的开头。,循环链表没有最后一个元素。相反，它的最后一项指向列表的开头。,ما الفرق بين قائمة مرتبطة دائرية وقائمة مرتبطة أساسية؟,يشير العنصر الأخير في قائمة مرتبطة دائرية إلى رأس القائمة.,لا تحتوي القائمة المرتبطة الدائرية على عنصر أخير. بدلاً من ذلك ، يشير العنصر الأخير إلى رأس القائمة.,Яка різниця між круговим пов&#39;язаним списком та основним пов&#39;язаним списком?,Останній елемент у круговому зв’язаному списку вказує на головку списку.,Круговий зв’язаний список не має останнього елемента. Натомість останній пункт вказує на голову списку.,Qual é a diferença entre uma lista ligada circular e uma lista ligada básica?,O último elemento em uma lista ligada circular aponta para o topo da lista.,"Uma lista ligada circular não possui um último elemento. Em vez disso, seu último item aponta para o topo da lista.",تفاوت بین یک لیست پیوندی دایره ای و یک لیست پیوندی اساسی چیست؟,آخرین عنصر در یک لیست دایره ای مرتبط به سر لیست نشان می دهد.,لیست پیوندی دایره ای آخرین عنصر را ندارد. درعوض ، آخرین آیتم به سر لیست اشاره دارد.,Quina diferència hi ha entre una llista enllaçada circular i una llista enllaçada bàsica?,L&#39;últim element d&#39;una llista enllaçada circular apunta al cap de llista.,"Una llista circular enllaçada no té un darrer element. En el seu lloc, l’últim element apunta al cap de llista.",Која је разлика између кружно повезане листе и основне повезане листе?,Последњи елемент у кружно повезаној листи показује на главу листе.,"Кружно повезана листа нема последњи елемент. Уместо тога, последња ставка указује на врх листе.",Apa perbedaan antara daftar tertaut melingkar dan daftar tertaut dasar?,Elemen terakhir dalam daftar tertaut melingkar mengarah ke kepala daftar.,"Daftar tertaut melingkar tidak memiliki elemen terakhir. Sebaliknya, item terakhir itu menunjuk ke kepala daftar.",Hva er forskjellen mellom en sirkulær koblet liste og en grunnleggende koblet liste?,Det siste elementet i en sirkulær koblet liste peker mot hodet på listen.,En sirkulær koblet liste har ikke et siste element. I stedet peker det siste punktet på hodet på listen.,순환 연결 목록과 기본 연결 목록의 차이점은 무엇입니까?,순환 연결 목록의 마지막 요소는 목록의 헤드를 가리 킵니다.,순환 연결 목록에는 마지막 요소가 없습니다. 대신 마지막 항목이 목록의 맨 위를 가리 킵니다.,Mitä eroa on pyöreällä linkitetyllä luettelolla linkitetyllä perusluettelolla?,Pyöreän linkitetyn luettelon viimeinen elementti osoittaa luettelon päähän.,Pyöreässä linkitetyssä luettelossa ei ole viimeistä elementtiä. Sen sijaan viimeinen kohde osoittaa luettelon kärkeen.,Mi a különbség a kör alakú linkelt lista és az alap linkelt lista között?,A kör alakú összekapcsolt lista utolsó eleme a lista fejére mutat.,A kör alakú linkelt listának nincs utolsó eleme. Ehelyett az utolsó elem a lista fejére mutat.,Jaký je rozdíl mezi cyklicky propojeným seznamem a základním propojeným seznamem?,Poslední prvek v kruhovém propojeném seznamu ukazuje na záhlaví seznamu.,Kruhový propojený seznam nemá poslední prvek. Místo toho je to poslední položka směřující do záhlaví seznamu.,Koja je razlika između kružno povezane liste i osnovne povezane liste?,Posljednji element na kružno povezanoj listi usmjerava na glavu popisa.,"Kružno povezana lista nema posljednji element. Umjesto toga, posljednja stavka ukazuje na glavu liste."
474,474,499,3.3,"The complier includes copies of inline functions instead of making function calls, but usually only with very small functions.",It makes a copy of the function code in every place where a function call is made.,How does the compiler handle inline functions?,5.0,"Es erstellt eine Kopie des Funktionscodes an jeder Stelle, an der ein Funktionsaufruf erfolgt.",Wie geht der Compiler mit Inline-Funktionen um?,"Der Complier enthält Kopien von Inline-Funktionen, anstatt Funktionsaufrufe zu tätigen, normalerweise jedoch nur mit sehr kleinen Funktionen.",Giunsa ang pag-andar sa compiler sa mga inline function?,Naghimo kini usa ka kopya sa function code sa matag lugar diin gihimo ang usa ka function call.,"Nag-upod ang nagsunod sa mga kopya sa mga naka-linya nga lihok imbis nga magtawag sa pag-andar, apan kasagaran sa gagmay ra nga mga gimbuhaton.",Hur hanterar kompilatorn integrerade funktioner?,Det gör en kopia av funktionskoden på varje plats där ett funktionssamtal görs.,"Följaren innehåller kopior av inline-funktioner istället för att ringa funktionssamtal, men vanligtvis bara med mycket små funktioner.",Comment le compilateur gère-t-il les fonctions en ligne?,Il fait une copie du code de fonction à chaque endroit où un appel de fonction est effectué.,"Le complicateur inclut des copies des fonctions en ligne au lieu de faire des appels de fonction, mais généralement uniquement avec de très petites fonctions.",Hoe gaat de compiler om met inline-functies?,Het maakt een kopie van de functiecode op elke plaats waar een functieaanroep wordt gedaan.,"De complier bevat kopieën van inline-functies in plaats van functieaanroepen te doen, maar meestal alleen met zeer kleine functies.",Как компилятор обрабатывает встроенные функции?,"Он создает копию кода функции в каждом месте, где выполняется вызов функции.","Компилятор включает копии встроенных функций вместо вызовов функций, но обычно только с очень маленькими функциями.",In che modo il compilatore gestisce le funzioni inline?,Crea una copia del codice della funzione in ogni luogo in cui viene effettuata una chiamata di funzione.,"Il compilatore include copie di funzioni inline invece di effettuare chiamate di funzione, ma di solito solo con funzioni molto piccole.",¿Cómo maneja el compilador las funciones en línea?,Hace una copia del código de función en cada lugar donde se realiza una llamada de función.,"El compilador incluye copias de funciones en línea en lugar de realizar llamadas a funciones, pero generalmente solo con funciones muy pequeñas.",Jak kompilator obsługuje funkcje wbudowane?,"Tworzy kopię kodu funkcji w każdym miejscu, w którym wykonywane jest wywołanie funkcji.","Kompilator zawiera kopie funkcji wbudowanych zamiast wywoływania funkcji, ale zwykle tylko z bardzo małymi funkcjami.",Trình biên dịch xử lý các hàm nội tuyến như thế nào?,Nó tạo một bản sao của mã hàm ở mọi nơi thực hiện lệnh gọi hàm.,"Trình biên dịch bao gồm các bản sao của các hàm nội tuyến thay vì thực hiện các lệnh gọi hàm, nhưng thường chỉ với các hàm rất nhỏ.",コンパイラはインライン関数をどのように処理しますか？,関数呼び出しが行われるすべての場所に関数コードのコピーを作成します。,コンパイラには、関数呼び出しを行う代わりにインライン関数のコピーが含まれますが、通常は非常に小さな関数のみが含まれます。,编译器如何处理内联函数？,它会在每个进行函数调用的地方复制功能代码。,编译器包括内联函数的副本，而不是进行函数调用，但通常仅包含非常小的函数。,كيف يتعامل المترجم مع الوظائف المضمنة؟,يقوم بعمل نسخة من رمز الوظيفة في كل مكان يتم فيه إجراء مكالمة دالة.,يشتمل المحول البرمجي على نسخ من الوظائف المضمنة بدلاً من إجراء استدعاءات وظيفية ، ولكن عادةً مع وظائف صغيرة جدًا فقط.,Як компілятор обробляє вбудовані функції?,"Він робить копію коду функції в кожному місці, де здійснюється виклик функції.","Комплієр включає копії вбудованих функцій замість здійснення викликів функцій, але, як правило, лише з дуже маленькими функціями.",Como o compilador lida com funções embutidas?,Ele faz uma cópia do código de função em cada lugar onde uma chamada de função é feita.,"O compilador inclui cópias de funções embutidas em vez de fazer chamadas de função, mas geralmente apenas com funções muito pequenas.",چگونه کامپایلر توابع درون خطی را اداره می کند؟,در هر مکانی که تماس تابع برقرار می شود ، کپی از کد عملکرد ایجاد می کند.,کامپایلر به جای برقراری تماس عملکردی ، شامل کپی هایی از توابع درون خطی است ، اما معمولاً فقط با عملکردهای بسیار کوچک.,Com gestiona el compilador les funcions en línia?,Fa una còpia del codi de la funció a tots els llocs on es fa una trucada a la funció.,"El complidor inclou còpies de funcions en línia en lloc de fer trucades a funcions, però normalment només amb funcions molt petites.",Како компајлер рукује уграђеним функцијама?,Копира функцијски код на сваком месту на којем се врши функцијски позив.,"Компајлер укључује копије уграђених функција уместо упућивања позива функција, али обично само са врло малим функцијама.",Bagaimana kompilator menangani fungsi sebaris?,Itu membuat salinan kode fungsi di setiap tempat di mana panggilan fungsi dilakukan.,"Penyusun menyertakan salinan fungsi sebaris alih-alih melakukan panggilan fungsi, tetapi biasanya hanya dengan fungsi yang sangat kecil.",Hvordan håndterer kompilatoren innebygde funksjoner?,Den lager en kopi av funksjonskoden hvert sted der en funksjonsanrop blir foretatt.,"Samsvareren inkluderer kopier av innebygde funksjoner i stedet for å ringe funksjon, men vanligvis bare med veldig små funksjoner.",컴파일러는 인라인 함수를 어떻게 처리합니까?,함수 호출이 이루어지는 모든 위치에서 함수 코드의 복사본을 만듭니다.,컴파일러는 함수를 호출하는 대신 인라인 함수의 복사본을 포함하지만 일반적으로 매우 작은 함수 만 사용합니다.,Kuinka kääntäjä käsittelee sisäisiä toimintoja?,"Se tekee kopion toimintokoodista jokaisessa paikassa, jossa toimintopuhelu soitetaan.","Täydentävä sisältää kopioita sisäisistä toiminnoista toimintokutsujen soittamisen sijaan, mutta yleensä vain hyvin pienillä toiminnoilla.",Hogyan kezeli a fordító az inline funkciókat?,"Másolatot készít a funkciókódról minden olyan helyen, ahol egy függvényhívást kezdeményeznek.","A megfelelt funkció az inline függvények másolatait tartalmazza a funkcióhívások helyett, de általában csak nagyon kicsi funkciókkal.",Jak kompilátor zpracovává vložené funkce?,"Vytvoří kopii kódu funkce na každém místě, kde se uskutečňuje volání funkce.","Komplér obsahuje kopie vložených funkcí namísto volání funkcí, ale obvykle pouze s velmi malými funkcemi.",Kako kompajler rukuje ugrađenim funkcijama?,Izrađuje kopiju funkcijskog koda na svakom mjestu na kojem se vrši funkcijski poziv.,"Komplier uključuje kopije ugrađenih funkcija umjesto pozivanja funkcija, ali obično samo s vrlo malim funkcijama."
475,475,812,4.7,Multi-dimensional arrays are stored in memory by rows.,By rows.,"How are bi-dimensional arrays stored in memory, by rows or by columns?",5.0,Nach Zeilen.,"Wie werden zweidimensionale Arrays im Speicher, nach Zeilen oder nach Spalten gespeichert?",Mehrdimensionale Arrays werden zeilenweise im Speicher gespeichert.,"Giunsa gitipig ang bi-dimensional arrays sa memorya, pinaagi sa mga laray o mga haligi?",Pinaagi sa mga laray.,Ang mga multi-dimensional arrays gitipig sa panumduman pinaagi sa mga laray.,"Hur lagras tvådimensionella matriser i minnet, i rader eller i kolumner?",Efter rader.,Flerdimensionella matriser lagras i minnet av rader.,"Comment les tableaux bidimensionnels sont-ils stockés en mémoire, par lignes ou par colonnes?",Par rangées.,Les tableaux multidimensionnels sont stockés en mémoire par lignes.,"Hoe worden tweedimensionale arrays in het geheugen opgeslagen, per rijen of per kolommen?",Door rijen.,Multidimensionale arrays worden in rijen in het geheugen opgeslagen.,Как двумерные массивы хранятся в памяти по строкам или по столбцам?,По рядам.,Многомерные массивы хранятся в памяти по строкам.,"Come vengono archiviati gli array bidimensionali in memoria, per righe o per colonne?",Per righe.,Gli array multidimensionali vengono archiviati in memoria per righe.,"¿Cómo se almacenan las matrices bidimensionales en la memoria, por filas o por columnas?",Por filas.,Las matrices multidimensionales se almacenan en la memoria por filas.,"W jaki sposób dwuwymiarowe tablice są przechowywane w pamięci, według wierszy lub kolumn?",Rzędy.,Tablice wielowymiarowe są przechowywane w pamięci w wierszach.,"Mảng hai chiều được lưu trữ như thế nào trong bộ nhớ, theo hàng hoặc theo cột?",Theo hàng.,Mảng nhiều chiều được lưu trong bộ nhớ theo từng hàng.,2次元配列は、行ごと、または列ごとにどのようにメモリに格納されますか？,行ごと。,多次元配列は、行ごとにメモリに格納されます。,二维数组如何按行或按列存储在内存中？,按行。,多维数组按行存储在内存中。,كيف يتم تخزين المصفوفات ثنائية الأبعاد في الذاكرة ، بواسطة الصفوف أو الأعمدة؟,بالصفوف.,يتم تخزين المصفوفات متعددة الأبعاد في الذاكرة بالصفوف.,"Як двовимірні масиви зберігаються в пам&#39;яті, у рядках чи стовпцях?",По рядах.,Багатовимірні масиви зберігаються в пам&#39;яті рядками.,"Como os arrays bidimensionais são armazenados na memória, por linhas ou colunas?",Por linhas.,Matrizes multidimensionais são armazenadas na memória por linhas.,آرایه های دو بعدی چگونه توسط ردیف ها یا ستون ها در حافظه ذخیره می شوند؟,توسط ردیف ها.,آرایه های چند بعدی توسط ردیف ها در حافظه ذخیره می شوند.,"Com s’emmagatzemen matrius bidimensionals a la memòria, per files o per columnes?",Per files.,Les matrius multidimensionals s’emmagatzemen a la memòria per files.,"Како се дводимензионални низови чувају у меморији, по редовима или колонама?",По редовима.,Вишедимензионални низови се у меморију чувају по редовима.,"Bagaimana array bi-dimensional disimpan dalam memori, per baris atau per kolom?",Menurut baris.,Array multi-dimensi disimpan dalam memori per baris.,"Hvordan lagres todimensjonale matriser i minnet, etter rader eller kolonner?",Etter rader.,Flerdimensjonale matriser lagres i minnet av rader.,"2 차원 배열은 메모리, 행 또는 열에 어떻게 저장됩니까?",행별.,다차원 배열은 행별로 메모리에 저장됩니다.,"Kuinka kaksiulotteiset taulukot tallennetaan muistiin, riveittäin tai sarakkeittain?",Riveittäin.,Moniulotteiset taulukot tallennetaan muistiin riveittäin.,"Hogyan tárolják a kétdimenziós tömbök a memóriában, sorok vagy oszlopok szerint?",Sorok szerint.,A többdimenziós tömböket soronként tárolják a memóriában.,"Jak jsou dvourozměrná pole uložena v paměti, podle řádků nebo sloupců?",Řádky.,Vícedimenzionální pole jsou uložena v paměti po řádcích.,"Kako se dvodimenzionalni nizovi pohranjuju u memoriju, po redovima ili po stupcima?",Po redovima.,Višedimenzionalni nizovi pohranjuju se u memoriju po redovima.
476,476,421,3.1,The portion of the function prototyp tha has the function name and the arguments but NOT the return type.,The name of the function and the types of the parameters.,What does a function signature include?,5.0,Der Name der Funktion und die Arten der Parameter.,Was beinhaltet eine Funktionssignatur?,"Der Teil des Funktionsprototyps, der den Funktionsnamen und die Argumente enthält, jedoch NICHT den Rückgabetyp.",Unsa man ang kauban sa pirma sa pag-andar?,Ang ngalan sa pagpaandar ug ang mga lahi sa mga parameter.,Ang bahin sa function prototyp tha adunay ngalan nga gimbuhaton ug mga argumento apan DILI ang tipo sa pagbalik.,Vad inkluderar en funktionssignatur?,Funktionens namn och typ av parametrar.,Delen av funktionsprototypen tha har funktionsnamnet och argumenten men INTE returtypen.,Que comprend une signature de fonction?,Le nom de la fonction et les types des paramètres.,La partie du prototyp de fonction qui a le nom de la fonction et les arguments mais PAS le type de retour.,Wat omvat een functiehandtekening?,De naam van de functie en de typen parameters.,"Het gedeelte van de functie prototyp tha heeft de functienaam en de argumenten, maar NIET het retourtype.",Что включает в себя сигнатура функции?,Имя функции и типы параметров.,"Часть прототипа функции содержит имя функции и аргументы, но НЕ тип возвращаемого значения.",Cosa include una firma di funzione?,Il nome della funzione e i tipi di parametri.,La parte del prototipo della funzione che ha il nome della funzione e gli argomenti ma NON il tipo restituito.,¿Qué incluye una firma de función?,El nombre de la función y los tipos de parámetros.,"La parte del prototipo de función que tiene el nombre de la función y los argumentos, pero NO el tipo de retorno.",Co obejmuje podpis funkcji?,Nazwa funkcji i typy parametrów.,"Część prototypu funkcji, która ma nazwę funkcji i argumenty, ale NIE typ zwracany.",Chữ ký hàm bao gồm những gì?,Tên của hàm và các loại tham số.,Phần của nguyên mẫu hàm tha có tên hàm và các đối số nhưng KHÔNG phải kiểu trả về.,関数シグネチャには何が含まれていますか？,関数の名前とパラメーターのタイプ。,関数のプロトタイプthaの部分には、関数名と引数がありますが、戻り値の型はありません。,功能签名包括什么？,函数的名称和参数的类型。,函数原型的一部分具有函数名称和参数，但没有返回类型。,ماذا يتضمن توقيع الوظيفة؟,اسم الوظيفة وأنواع المعلمات.,يحتوي جزء من نموذج الوظيفة على اسم الوظيفة والوسيطات وليس نوع الإرجاع.,Що включає підпис функції?,Назва функції та типи параметрів.,"Частина прототипу функції, яка має ім&#39;я функції та аргументи, але НЕ тип повернення.",O que inclui uma assinatura de função?,O nome da função e os tipos de parâmetros.,"A parte do protótipo da função que tem o nome da função e os argumentos, mas NÃO o tipo de retorno.",امضای عملکرد شامل چه مواردی است؟,نام عملکرد و انواع پارامترها.,بخشی از نمونه اولیه تابع دارای نام تابع و آرگومان ها است اما نوع بازگشتی ندارد.,Què inclou una signatura de funció?,El nom de la funció i els tipus de paràmetres.,"La part del prototip de funció que té el nom de la funció i els arguments, però NO el tipus de retorn.",Шта укључује потпис функције?,Назив функције и врсте параметара.,"Дио прототипа функције који има име функције и аргументе, али НЕ и тип повратка.",Apa yang termasuk dalam tanda tangan fungsi?,Nama fungsi dan jenis parameter.,Bagian dari prototipe fungsi yang memiliki nama fungsi dan argumen tetapi BUKAN tipe yang dikembalikan.,Hva inkluderer en funksjonssignatur?,Funksjonens navn og parametertypene.,"Delen av funksjonsprototypen tha har funksjonsnavnet og argumentene, men IKKE returtypen.",함수 서명에는 무엇이 포함됩니까?,함수의 이름과 매개 변수의 유형.,함수 프로토 타입의 일부에는 함수 이름과 인수가 있지만 반환 유형은 없습니다.,Mitä funktion allekirjoitus sisältää?,Funktion nimi ja parametrien tyypit.,"Funktion prototyypin osalla tha on funktion nimi ja argumentit, mutta EI palautustyyppi.",Mit tartalmaz a függvény aláírása?,A függvény neve és a paraméterek típusai.,"A tha függvény prototípusának része tartalmazza a függvény nevét és argumentumait, de NEM a visszatérési típust.",Co zahrnuje podpis funkce?,Název funkce a typy parametrů.,"Část prototypu funkce má název funkce a argumenty, ale NE návratový typ.",Što uključuje potpis funkcije?,Ime funkcije i vrste parametara.,"Dio prototipa funkcije koji ima ime funkcije i argumente, ali NE i povratni tip."
477,477,563,3.5,paremeters,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",How are overloaded functions differentiated by the compiler?,4.5,"Basierend auf der Funktionssignatur. Wenn eine überladene Funktion aufgerufen wird, findet der Compiler die Funktion, deren Signatur dem angegebenen Funktionsaufruf am nächsten kommt.",Wie werden überladene Funktionen vom Compiler unterschieden?,Parameter,Giunsa ang kalainan sa mga overloaded function sa tagtipon?,"Pinauyon sa pirma sa pag-andar. Kung gitawag ang usa ka overloaded function, makit-an sa compiler ang function nga ang pirma labing duul sa gihatag nga tawag sa pag-andar.",paremeter,Hur differentieras överbelastade funktioner av kompilatorn?,Baserat på funktionssignaturen. När en överbelastad funktion anropas hittar kompilatorn den funktion vars signatur är närmast det angivna funktionsanropet.,paremetrar,Comment les fonctions surchargées sont-elles différenciées par le compilateur?,"Basé sur la signature de la fonction. Lorsqu&#39;une fonction surchargée est appelée, le compilateur trouvera la fonction dont la signature est la plus proche de l&#39;appel de fonction donné.",paremètres,Hoe onderscheiden overbelaste functies zich door de compiler?,"Gebaseerd op de functiehandtekening. Wanneer een overbelaste functie wordt aangeroepen, zal de compiler de functie vinden waarvan de handtekening het dichtst bij de gegeven functieaanroep ligt.",paremeters,Как компилятор различает перегруженные функции?,"На основе сигнатуры функции. Когда вызывается перегруженная функция, компилятор найдет функцию, сигнатура которой наиболее близка к данному вызову функции.",параметры,Come vengono differenziate le funzioni sovraccaricate dal compilatore?,"Basato sulla firma della funzione. Quando viene chiamata una funzione sovraccarica, il compilatore troverà la funzione la cui firma è più vicina alla chiamata di funzione data.",paremetri,¿Cómo diferencia el compilador las funciones sobrecargadas?,"Basado en la firma de la función. Cuando se llama a una función sobrecargada, el compilador encontrará la función cuya firma es más cercana a la llamada de función dada.",parámetros,W jaki sposób kompilator rozróżnia przeciążone funkcje?,"Na podstawie sygnatury funkcji. Po wywołaniu przeciążonej funkcji kompilator znajdzie funkcję, której podpis jest najbliższy danemu wywołaniu funkcji.",parometry,Trình biên dịch phân biệt các hàm quá tải như thế nào?,"Dựa trên chữ ký chức năng. Khi một hàm quá tải được gọi, trình biên dịch sẽ tìm hàm có chữ ký gần nhất với lệnh gọi hàm đã cho.",paremeters,オーバーロードされた関数はコンパイラによってどのように区別されますか？,関数シグネチャに基づきます。オーバーロードされた関数が呼び出されると、コンパイラーは、指定された関数呼び出しに最も近いシグニチャーを持つ関数を見つけます。,パレメーター,编译器如何区分重载函数？,基于功能签名。调用重载函数时，编译器将找到其签名最接近给定函数调用的函数。,参数表,كيف يتم التفريق بين الوظائف ذات التحميل الزائد بواسطة المترجم؟,بناء على توقيع الوظيفة. عندما يتم استدعاء دالة محملة بشكل زائد ، سيجد المترجم الوظيفة التي يكون توقيعها أقرب إلى استدعاء الوظيفة المحدد.,المعلمات,Як перевантажені функції диференціюються компілятором?,"На основі підпису функції. Коли викликається перевантажена функція, компілятор знайде функцію, підпис якої найближчий до даного виклику функції.",параметри,Como as funções sobrecarregadas são diferenciadas pelo compilador?,"Com base na assinatura da função. Quando uma função sobrecarregada é chamada, o compilador encontrará a função cuja assinatura está mais próxima da chamada de função fornecida.",parâmetros,توابع اضافه بار چگونه توسط کامپایلر متمایز می شوند؟,بر اساس امضای عملکرد هنگامی که یک تابع بیش از حد فراخوانی می شود ، کامپایلر تابعی را پیدا می کند که امضای آن نزدیک به تماس تابع داده شده باشد.,پارامترها,Com es diferencien les funcions sobrecarregades pel compilador?,"Basat en la signatura de la funció. Quan es crida una funció sobrecarregada, el compilador trobarà la funció la signatura de la qual es troba més a prop de la trucada de funció donada.",paràmetres,Како компајлер разликује преоптерећене функције?,"На основу потписа функције. Када се позове преоптерећена функција, преводилац ће пронаћи функцију чији је потпис најближи датом позиву функције.",пареметри,Bagaimana fungsi yang kelebihan beban dibedakan oleh kompilator?,"Berdasarkan tanda tangan fungsi. Saat fungsi yang kelebihan beban dipanggil, kompilator akan menemukan fungsi yang tanda tangannya paling dekat dengan panggilan fungsi yang diberikan.",paremeter,Hvordan differensieres overbelastede funksjoner av kompilatoren?,"Basert på funksjonssignaturen. Når en overbelastet funksjon kalles, vil kompilatoren finne funksjonen hvis signatur er nærmest det gitte funksjonsanropet.",paremetre,오버로드 된 함수는 컴파일러에서 어떻게 구별됩니까?,함수 서명을 기반으로합니다. 오버로드 된 함수가 호출되면 컴파일러는 서명이 주어진 함수 호출에 가장 가까운 함수를 찾습니다.,매개 변수,Kuinka kääntäjä erottaa ylikuormitetut toiminnot?,"Perustuu funktion allekirjoitukseen. Kun ylikuormitettu toiminto kutsutaan, kääntäjä löytää toiminnon, jonka allekirjoitus on lähinnä annettua funktiokutsu.",paremeters,Hogyan különbözteti meg a fordító a túlterhelt függvényeket?,"A függvény aláírása alapján. Túlterhelt függvény meghívásakor a fordító megtalálja azt a függvényt, amelynek aláírása a legközelebb van az adott függvényhíváshoz.",paremeters,Jak jsou přetížené funkce rozlišeny kompilátorem?,"Na základě podpisu funkce. Při volání přetížené funkce kompilátor najde funkci, jejíž podpis je nejblíže danému volání funkce.",paremetry,Kako kompajler razlikuje preopterećene funkcije?,"Na osnovu potpisa funkcije. Kada se pozove preopterećena funkcija, kompajler će pronaći funkciju čiji je potpis najbliži zadanom pozivu funkcije.",paremetri
478,478,280,2.3,Constructors don't have a return type.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,4.0,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,Konstruktoren haben keinen Rückgabetyp.,Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.",Ang mga magtutukod wala’y klase sa pagbalik.,Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.",Konstruktörer har ingen returtyp.,Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.",Les constructeurs n&#39;ont pas de type de retour.,Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.",Constructeurs hebben geen retourtype.,В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.",Конструкторы не имеют возвращаемого типа.,Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.",I costruttori non hanno un tipo restituito.,¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.",Los constructores no tienen un tipo de retorno.,Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.",Konstruktory nie mają typu zwracanego.,Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.",Các hàm tạo không có kiểu trả về.,コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターには戻り値の型がありません。,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数没有返回类型。,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,ليس للمُنشئين نوع إرجاع.,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.",Конструктори не мають типу повернення.,Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.",Os construtores não têm um tipo de retorno.,تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,سازندگان نوع بازگشتی ندارند.,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.",Els constructors no tenen un tipus de retorn.,Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.",Конструктори немају тип повратка.,Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.",Konstruktor tidak memiliki tipe pengembalian.,Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.",Konstruktører har ikke returtype.,생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자에는 반환 유형이 없습니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.",Rakentajilla ei ole palautustyyppiä.,Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.",A kivitelezőknek nincs visszatérési típusuk.,Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.",Konstruktory nemají návratový typ.,Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.",Konstruktori nemaju tip povratka.
479,479,1197,7.3,Take up less memory and are contiguously stored,"The elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",What is the main advantage of arrays over linked lists?,4.0,"Auf die Elemente in einem Array kann direkt zugegriffen werden (im Gegensatz zu verknüpften Listen, die eine iterative Durchquerung erfordern).",Was ist der Hauptvorteil von Arrays gegenüber verknüpften Listen?,Nehmen Sie weniger Speicherplatz in Anspruch und werden zusammenhängend gespeichert,Unsa man ang punoan nga bentaha sa mga han-ay sa mga nalambigit nga lista?,"Ang mga elemento sa usa ka laray mahimong direkta nga ma-access (sukwahi sa mga nalambigit nga lista, nga nanginahanglan iterative traversal).",Pagkuha og gamay nga memorya ug naa sa tupad nga gitipig,Vad är den största fördelen med matriser jämfört med länkade listor?,"Elementen i en matris kan nås direkt (i motsats till länkade listor, som kräver iterativ genomgång).",Ta upp mindre minne och lagras kontinuerligt,Quel est le principal avantage des tableaux par rapport aux listes chaînées?,"Les éléments d&#39;un tableau sont accessibles directement (par opposition aux listes chaînées, qui nécessitent un parcours itératif).",Occupent moins de mémoire et sont stockés de manière contiguë,Wat is het belangrijkste voordeel van arrays ten opzichte van gekoppelde lijsten?,"De elementen in een array zijn direct toegankelijk (in tegenstelling tot gekoppelde lijsten, die iteratief moeten doorlopen).",Neem minder geheugen in beslag en worden aaneengesloten opgeslagen,В чем основное преимущество массивов перед связанными списками?,"К элементам в массиве можно обращаться напрямую (в отличие от связанных списков, требующих итеративного обхода).",Занимают меньше памяти и хранятся непрерывно,Qual è il vantaggio principale degli array rispetto agli elenchi collegati?,"È possibile accedere direttamente agli elementi di un array (al contrario degli elenchi collegati, che richiedono un attraversamento iterativo).",Occupano meno memoria e vengono archiviati in modo contiguo,¿Cuál es la principal ventaja de las matrices sobre las listas enlazadas?,"Se puede acceder directamente a los elementos de una matriz (a diferencia de las listas vinculadas, que requieren un recorrido iterativo).",Ocupan menos memoria y se almacenan de forma contigua,Jaka jest główna zaleta tablic w porównaniu z listami połączonymi?,"Do elementów tablicy można uzyskać bezpośredni dostęp (w przeciwieństwie do połączonych list, które wymagają iteracyjnego przechodzenia).",Zajmują mniej pamięci i są zapisywane w sposób ciągły,Ưu điểm chính của mảng so với danh sách liên kết là gì?,"Các phần tử trong một mảng có thể được truy cập trực tiếp (trái ngược với danh sách được liên kết, yêu cầu truyền tải lặp đi lặp lại).",Chiếm ít bộ nhớ hơn và được lưu trữ liên tục,リンクリストに対する配列の主な利点は何ですか？,配列内の要素には直接アクセスできます（反復トラバーサルを必要とするリンクリストとは対照的です）。,使用するメモリが少なく、連続して保存されます,与链接列表相比，数组的主要优点是什么？,数组中的元素可以直接访问（与链表相反，后者需要迭代遍历）。,占用更少的内存并连续存储,ما هي الميزة الرئيسية للمصفوفات على القوائم المرتبطة؟,يمكن الوصول إلى العناصر الموجودة في المصفوفة مباشرةً (على عكس القوائم المرتبطة التي تتطلب اجتيازًا تكراريًا).,تشغل ذاكرة أقل ويتم تخزينها بشكل متصل,Яка головна перевага масивів над пов’язаними списками?,"До елементів у масиві можна отримати прямий доступ (на відміну від зв’язаних списків, які вимагають ітеративного обходу).",Займають менше пам&#39;яті і постійно зберігаються,Qual é a principal vantagem dos arrays em relação às listas vinculadas?,"Os elementos em uma matriz podem ser acessados diretamente (em oposição às listas vinculadas, que exigem travessia iterativa).",Ocupam menos memória e são armazenados de forma contígua,مزیت اصلی آرایه ها نسبت به لیست های پیونددار چیست؟,به عناصر موجود در یک آرایه می توان مستقیماً دسترسی داشت (در مقابل لیست های پیوندی که به پیمایش تکراری نیاز دارند).,حافظه کمتری را اشغال می کند و به طور پیوسته ذخیره می شود,Quin és el principal avantatge de les matrius sobre les llistes enllaçades?,"Es pot accedir directament als elements d’una matriu (a diferència de les llistes enllaçades, que requereixen un recorregut iteratiu).",Ocupeu menys memòria i s’emmagatzemen contigüament,Која је главна предност низа у односу на повезане листе?,"Елементима у низу може се приступити директно (за разлику од повезаних листа, које захтевају итеративно обилажење).",Заузимају мање меморије и непрекидно се чувају,Apa keuntungan utama array dibandingkan daftar tertaut?,"Elemen-elemen dalam sebuah array dapat diakses secara langsung (sebagai kebalikan dari daftar tertaut, yang membutuhkan traversal berulang).",Gunakan lebih sedikit memori dan disimpan secara berdekatan,Hva er den største fordelen med matriser i forhold til koblede lister?,"Elementene i en matrise kan fås direkte (i motsetning til koblede lister, som krever iterativ gjennomgang).",Ta opp mindre minne og lagres sammenhengende,연결된 목록에 비해 배열의 주요 이점은 무엇입니까?,배열의 요소는 직접 액세스 할 수 있습니다 (반복 순회가 필요한 연결 목록과 반대).,적은 메모리를 차지하고 연속적으로 저장됩니다.,Mikä on matriisien tärkein etu linkitettyihin luetteloihin nähden?,"Taulukon elementteihin pääsee suoraan (toisin kuin linkitetyt luettelot, jotka edellyttävät iteratiivista kulkua).",Ota vähemmän muistia ja ne tallennetaan vierekkäin,Mi a tömbök fő előnye a kapcsolt listákkal szemben?,"A tömb elemeihez közvetlenül lehet hozzáférni (szemben az összekapcsolt listákkal, amelyek iteratív bejárást igényelnek).","Kevesebb memóriát foglal el, és egymás mellett vannak tárolva",Jaká je hlavní výhoda polí oproti propojeným seznamům?,"K prvkům v poli lze přistupovat přímo (na rozdíl od propojených seznamů, které vyžadují iterativní procházení).",Zabírají méně paměti a jsou souvisle ukládány,Koja je glavna prednost polja nad povezanim listama?,"Elementima u nizu može se pristupiti izravno (za razliku od povezanih lista, koje zahtijevaju iterativno obilaženje).",Zauzimaju manje memorije i neprekidno se čuvaju
480,480,693,4.3,-Arrays are passed by reference         -Individual array elements passed by value        -Functions that take arrays as arguments         -Function prototypes may include parameter names        -const array parameters,by reference.,How are arrays passed to functions?,5.0,durch Bezugnahme.,Wie werden Arrays an Funktionen übergeben?,"-Arrays werden als Referenz übergeben -Individuelle Array-Elemente werden als Wert übergeben -Funktionen, die Arrays als Argumente verwenden -Funktionsprototypen können Parameternamen -const-Array-Parameter enthalten",Giunsa ang pagpasa sa mga array sa mga gimbuhaton?,pinaagi sa pakisayran.,-Ang mga pag-atake gipasa sa reperensiya. Ang mga elemento sa indibidwal nga laray nga gipasa sa kantidad -Mga pag-andar nga magkuha sa mga array ingon mga pangatarungan -Ang mga prototype sa pagpaandar mahimong maglakip sa mga ngalan sa parameter -konstart sa mga parameter,Hur skickas matriser till funktioner?,genom hänvisning.,-Arrays skickas med referens -Individuella arrayelement som skickas av värde -Funktioner som tar arrays som argument -Function prototyper kan inkludera parameternamn -const arrayparametrar,Comment les tableaux sont-ils passés aux fonctions?,par référence.,-Les tableaux sont passés par référence -Éléments de tableau individuels passés par valeur -Fonctions qui prennent des tableaux comme arguments -Les prototypes de fonctions peuvent inclure des noms de paramètres -const paramètres de tableau,Hoe worden arrays doorgegeven aan functies?,door verwijzing.,-Arrays worden doorgegeven via referentie -Individuele array-elementen doorgegeven door waarde -Functies die arrays als argumenten aannemen -Functieprototypes kunnen parameternamen bevatten -const-array-parameters,Как массивы передаются функциям?,по ссылке.,"-Массивы передаются по ссылке -Отдельные элементы массива, передаваемые по значению -Функции, принимающие массивы в качестве аргументов -Прототипы функций могут включать имена параметров -константные параметры массива",Come vengono passati gli array alle funzioni?,come riferimento.,-Gli array vengono passati per riferimento -I singoli elementi di array passati per valore -Funzioni che accettano array come argomenti -I prototipi di funzioni possono includere nomi di parametri -const parametri di array,¿Cómo se pasan las matrices a las funciones?,por referencia.,-Las matrices se pasan por referencia -Elementos de matriz individuales pasados por valor -Funciones que toman matrices como argumentos -Los prototipos de funciones pueden incluir nombres de parámetros -Parámetros de matriz constante,W jaki sposób tablice są przekazywane do funkcji?,przez odniesienie.,"-Tablice są przekazywane przez referencję -Poszczególne elementy tablicy przekazywane przez wartość -Funkcje, które przyjmują tablice jako argumenty -Prototypy funkcji mogą zawierać nazwy parametrów -const parametry tablicy",Mảng được truyền cho các hàm như thế nào?,bằng cách tham khảo.,-Các mảng được truyền bằng tham chiếu -Các phần tử mảng riêng lẻ được truyền bởi giá trị -Các hàm nhận mảng làm đối số -Các nguyên mẫu hàm có thể bao gồm tên tham số -biểu tượng mảng tham số,配列はどのように関数に渡されますか？,参照による。,-配列は参照によって渡されます-値によって渡される個々の配列要素-配列を引数として受け取る関数-関数プロトタイプにはパラメーター名が含まれる場合があります-const配列パラメーター,数组如何传递给函数？,引用。,-通过引用传递数组-通过值传递单个数组元素-以数组为参数的函数-函数原型可能包含参数名称-常量数组参数,كيف يتم تمرير المصفوفات إلى الوظائف؟,بالتزكية.,- يتم تمرير المصفوفات من خلال المرجع - عناصر المصفوفات الفردية التي يتم تمريرها بواسطة القيمة - الوظائف التي تأخذ المصفوفات كوسيطات - قد تتضمن النماذج الأولية للوظائف أسماء المعلمات - معلمات المصفوفات المكونة,Як масиви передаються функціям?,за посиланням.,"-Масиви передаються за посиланням -Індивідуальні елементи масиву, передані за значенням -Функції, які приймають масиви як аргументи -Функції-прототипи можуть включати імена параметрів -Конст параметрів масиву",Como os arrays são passados para as funções?,por referência.,-As matrizes são passadas por referência -Elementos individuais da matriz passados por valor -Funções que recebem as matrizes como argumentos -Protótipos de função podem incluir nomes de parâmetros -parâmetros de matriz de conjunto,چگونه آرایه ها به توابع منتقل می شوند؟,با مرجع.,-آرایه ها توسط مرجع منتقل می شوند -عناصر آرایه منفرد با مقدار عبور می شوند -عملکردهایی که آرایه ها را به عنوان آرگومان در نظر می گیرند -اول نمونه های عملکرد ممکن است شامل نام پارامترها باشد -پارامترهای آرایه ثابت,Com es passen les matrius a les funcions?,per referència.,-Les matrius es passen per referència -Els elements de matriu individuals passen per valor -Funcions que prenen matrius com a arguments -Els prototips de funcions poden incloure noms de paràmetres -paràmetres de matriu constants,Како се низови преносе функцијама?,по референци.,-Масови се прослеђују референцом -Појединачни елементи низа прослеђени вредношћу -Функције које узимају низове као аргументе -Функцијски прототипи могу садржавати имена параметара -конст параметри низа,Bagaimana array diteruskan ke fungsi?,dengan referensi.,-Array dilewatkan oleh referensi -Elemen array individual yang diteruskan oleh nilai -Fungsi yang menjadikan array sebagai argumen -Prototipe fungsi dapat menyertakan nama parameter -parameter array -const,Hvordan overføres matriser til funksjoner?,som referanse.,-Arrayer sendes med referanse -Individuelle matriseelementer sendt av verdi -Funksjoner som tar arrays som argumenter -Function prototyper kan inkludere parameternavn -const array parametere,배열은 함수에 어떻게 전달됩니까?,참고로.,-배열은 참조로 전달됩니다.-값으로 전달되는 개별 배열 요소-배열을 인수로 사용하는 함수-함수 프로토 타입에는 매개 변수 이름이 포함될 수 있습니다. -const 배열 매개 변수,Kuinka taulukot välitetään funktioille?,viittaamalla.,"-Ryhmät välitetään viitteellä -Yksittäiset taulukon elementit, jotka arvo välittää -Toiminnot, jotka ottavat matriiseja argumentteina -Toimintojen prototyypit voivat sisältää parametrien nimet",Hogyan adják át a tömbök a függvényeknek?,referencia alapján.,-A tömböket referencia útján adjuk át -Egy egyedi tömb elemeket adunk át értékkel,Jak jsou pole předávána funkcím?,Odkazem.,"-Pole jsou předávány odkazem -Individuální prvky pole předávané hodnotou -Funkce, které berou pole jako argumenty -Funkční prototypy mohou obsahovat názvy parametrů -konst parametry pole",Kako se nizovi prenose funkcijama?,putem reference.,-Masovi se prosljeđuju referencom -Pojedinačni elementi niza prosljeđeni vrijednošću -Funkcije koje uzimaju nizove kao argumente -Funkcijski prototipi mogu sadržavati imena parametara -const parametri niza
481,481,906,5.3,"n operations, where n is the number of items.",N (the length of the array) operations achieved for a sorted array.,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",4.0,"N (die Länge des Arrays) Operationen, die für ein sortiertes Array erzielt wurden.","Wie viele Operationen müssen für die Einfügungssortierung in einem Best-Case-Szenario ausgeführt werden, und in welchem Best-Case-Szenario?","n Operationen, wobei n die Anzahl der Elemente ist.","Unsa ang gidaghanon sa mga operasyon alang sa pagsulud nga sulud sa ilalum sa usa ka labing maayo nga kahimtang nga sitwasyon, ug unsa ang labing maayo nga sitwasyon nga hitabo?",N (ang gitas-on sa laray) nakamit ang mga operasyon alang sa usa ka gihan-ay nga laray.,"n operasyon, diin n ang ihap sa mga butang.","Vad är antalet operationer för insättningssortering under ett bästa fall, och vad är det bästa fallet?",N (längden på matrisen) som uppnåtts för en sorterad matris.,"n-operationer, där n är antalet artiklar.",Quel est le nombre d&#39;opérations pour le tri par insertion dans le meilleur des cas et quel est le meilleur des cas?,N (la longueur du tableau) opérations réalisées pour un tableau trié.,"n opérations, où n est le nombre d&#39;éléments.","Wat is het aantal bewerkingen voor invoegsortering in het beste geval, en wat is het beste scenario?",N (de lengte van de array) bewerkingen die zijn bereikt voor een gesorteerde array.,"n bewerkingen, waarbij n het aantal items is.",Каково количество операций сортировки вставкой в лучшем случае и в каком сценарии лучше всего?,"N (длина массива) операций, выполненных для отсортированного массива.","n операций, где n - количество элементов.",Qual è il numero di operazioni per l&#39;ordinamento per inserzione in uno scenario migliore e qual è lo scenario migliore?,N (la lunghezza dell&#39;array) operazioni ottenute per un array ordinato.,"n operazioni, dove n è il numero di elementi.",¿Cuál es la cantidad de operaciones para la ordenación por inserción en el mejor de los casos y cuál es el mejor de los casos?,N (la longitud de la matriz) operaciones logradas para una matriz ordenada.,"n operaciones, donde n es el número de elementos.",Jaka jest liczba operacji sortowania przez wstawianie w ramach najlepszego scenariusza i jaki jest najlepszy scenariusz?,N (długość tablicy) operacji uzyskanych dla posortowanej tablicy.,"n operacji, gdzie n to liczba elementów.",Số hoạt động để sắp xếp chèn trong trường hợp tốt nhất là bao nhiêu và trường hợp tốt nhất là gì?,N (độ dài của mảng) hoạt động đạt được cho một mảng đã sắp xếp.,"n phép toán, với n là số mục.",最良のシナリオでの挿入ソートの操作数と、最良のシナリオは何ですか？,ソートされた配列に対して達成されたN（配列の長さ）操作。,n回の操作。nはアイテムの数です。,在最佳情况下，插入排序的操作数是多少？最佳情况是什么？,已排序的数组完成了N次（数组的长度）操作。,n次运算，其中n是项数。,ما هو عدد العمليات لفرز الإدراج ضمن سيناريو أفضل حالة ، وما هو أفضل سيناريو؟,تم تحقيق N (طول المصفوفة) لعمليات مصفوفة مرتبة.,n عمليات ، حيث n هو عدد العناصر.,"Яка кількість операцій для сортування вставки за найкращим сценарієм, і який найкращий варіант?","N (довжина масиву) операції, досягнуті для відсортованого масиву.","n операцій, де n - кількість предметів.",Qual é o número de operações para classificação por inserção em um cenário de melhor caso e qual é o cenário de melhor caso?,N (o comprimento da matriz) operações obtidas para uma matriz classificada.,"n operações, onde n é o número de itens.",تعداد عملیات برای مرتب سازی درج در یک سناریوی بهترین حالت چقدر است و بهترین سناریو کدام است؟,N (طول آرایه) عملیاتی که برای یک آرایه مرتب شده بدست می آید.,n عملیات ، جایی که n تعداد موارد است.,Quin és el nombre d&#39;operacions per ordenar la inserció en un escenari del millor cas i quin és el millor cas?,N (la longitud de la matriu) operacions aconseguides per a una matriu ordenada.,"n operacions, on n és el nombre d’elements.","Који је број операција за сортирање уметања у најбољем случају, а који у најбољем случају?",Н (дужина низа) операција постигнутих за сортирани низ.,"н операција, где је н број предмета.","Berapa jumlah operasi untuk pengurutan penyisipan dalam skenario kasus terbaik, dan apa skenario kasus terbaik?",Operasi N (panjang array) dicapai untuk array yang diurutkan.,"n operasi, di mana n adalah jumlah item.","Hva er antall operasjoner for innsettingssortering under et best-case-scenario, og hva er best-case-scenariet?",N (lengden på matrisen) operasjoner oppnådd for en sortert matrise.,"n operasjoner, hvor n er antall elementer.",최상의 시나리오에서 삽입 정렬을위한 작업의 수와 최상의 시나리오는 무엇입니까?,정렬 된 배열에 대해 수행 된 N (배열의 길이) 작업.,"n 연산, 여기서 n은 항목 수입니다.",Mikä on parhaan mahdollisen skenaarion mukaan lisättävien toimintojen määrä ja mikä on paras tapaus?,"N (matriisin pituus) operaatiota, jotka on saatu lajitellulle taulukolle.","n operaatiota, joissa n on alkioiden lukumäärä.","Mennyi a beillesztési műveletek száma a legjobb forgatókönyv szerint, és mi a legjobb eset?",N (a tömb hossza) rendezett tömbnél elért műveletek.,"n művelet, ahol n az elemek száma.",Jaký je počet operací pro třídění vložení v případě nejlepšího scénáře a jaký je nejlepší případ?,N (délka pole) operace dosažené pro tříděné pole.,"n operací, kde n je počet položek.","Koji je broj operacija za sortiranje umetanja u najboljem scenariju, a koji je najbolji slučaj?",N (dužina niza) operacija postignutih za sortirani niz.,"n operacija, gdje je n broj stavki."
482,482,965,6.1,A pointer is a variable that contains the memory address of a variable that has a value.,A variable that contains the address in memory of another variable.,What is a pointer?,5.0,"Eine Variable, die die Adresse im Speicher einer anderen Variablen enthält.",Was ist ein Zeiger?,"Ein Zeiger ist eine Variable, die die Speicheradresse einer Variablen mit einem Wert enthält.",Unsa ang usa ka pointer?,Usa ka variable nga adunay sulud nga panumduman sa uban pa nga variable.,Ang usa ka pointer usa ka variable nga adunay sulud nga memorya sa usa ka variable nga adunay kantidad.,Vad är en pekare?,En variabel som innehåller adressen i minnet för en annan variabel.,En pekare är en variabel som innehåller minnesadressen till en variabel som har ett värde.,Qu&#39;est-ce qu&#39;un pointeur?,Une variable qui contient l&#39;adresse en mémoire d&#39;une autre variable.,Un pointeur est une variable qui contient l&#39;adresse mémoire d&#39;une variable qui a une valeur.,Wat is een aanwijzer?,Een variabele die het adres in het geheugen van een andere variabele bevat.,Een pointer is een variabele die het geheugenadres bevat van een variabele die een waarde heeft.,Что такое указатель?,"Переменная, содержащая адрес в памяти другой переменной.","Указатель - это переменная, которая содержит адрес памяти переменной, имеющей значение.",Cos&#39;è un puntatore?,Una variabile che contiene l&#39;indirizzo in memoria di un&#39;altra variabile.,Un puntatore è una variabile che contiene l&#39;indirizzo di memoria di una variabile che ha un valore.,¿Qué es un puntero?,Una variable que contiene la dirección en memoria de otra variable.,Un puntero es una variable que contiene la dirección de memoria de una variable que tiene un valor.,Co to jest wskaźnik?,"Zmienna, która zawiera adres w pamięci innej zmiennej.","Wskaźnik to zmienna zawierająca adres pamięci zmiennej, która ma wartość.",Con trỏ là gì?,Một biến chứa địa chỉ trong bộ nhớ của một biến khác.,Con trỏ là một biến chứa địa chỉ bộ nhớ của một biến có giá trị.,ポインタとは何ですか？,別の変数のメモリ内のアドレスを含む変数。,ポインタは、値を持つ変数のメモリアドレスを含む変数です。,什么是指针？,一个变量，包含另一个变量在内存中的地址。,指针是一个变量，它包含具有值的变量的内存地址。,ما هو المؤشر؟,متغير يحتوي على العنوان في ذاكرة متغير آخر.,المؤشر هو متغير يحتوي على عنوان ذاكرة متغير له قيمة.,Що таке вказівник?,"Змінна, що містить адресу в пам&#39;яті іншої змінної.","Покажчик - це змінна, що містить адресу пам&#39;яті змінної, що має значення.",O que é um ponteiro?,Uma variável que contém o endereço na memória de outra variável.,Um ponteiro é uma variável que contém o endereço de memória de uma variável que possui um valor.,اشاره گر چیست؟,متغیری که حاوی آدرس در حافظه متغیر دیگر است.,اشاره گر متغیری است که حاوی آدرس حافظه متغیری است که دارای مقدار است.,Què és un punter?,Una variable que conté l&#39;adreça en memòria d&#39;una altra variable.,Un punter és una variable que conté l&#39;adreça de memòria d&#39;una variable que té un valor.,Шта је показивач?,Променљива која садржи адресу у меморији друге променљиве.,Показивач је променљива која садржи меморијску адресу променљиве која има вредност.,Apa itu penunjuk?,Variabel yang berisi alamat dalam memori variabel lain.,Pointer adalah variabel yang berisi alamat memori dari variabel yang memiliki nilai.,Hva er en peker?,En variabel som inneholder adressen i minnet til en annen variabel.,En peker er en variabel som inneholder minneadressen til en variabel som har en verdi.,포인터 란 무엇입니까?,다른 변수의 메모리에 주소를 포함하는 변수입니다.,포인터는 값이있는 변수의 메모리 주소를 포함하는 변수입니다.,Mikä on osoitin?,"Muuttuja, joka sisältää osoitteen toisen muuttujan muistissa.","Osoitin on muuttuja, joka sisältää muuttujan muistiosoitteen, jolla on arvo.",Mi az a mutató?,"Olyan változó, amely egy másik változó memóriájában tartalmazza a címet.","A mutató egy olyan változó, amely egy értéket tartalmazó változó memória címét tartalmazza.",Co je to ukazatel?,"Proměnná, která obsahuje adresu v paměti jiné proměnné.","Ukazatel je proměnná, která obsahuje adresu paměti proměnné, která má hodnotu.",Šta je pokazivač?,Varijabla koja sadrži adresu u memoriji druge varijable.,Pokazivač je varijabla koja sadrži memorijsku adresu varijable koja ima vrijednost.
483,483,2083,11.8,"An array of strings reads the string literals, meaning anything within ""quotes"". A char array reads a string as each individual character.",The char[] will automatically add a null \0 character at the end of the string.,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,2.0,Das Zeichen [] fügt am Ende der Zeichenfolge automatisch ein Nullzeichen \ 0 hinzu.,"Was ist der Hauptunterschied zwischen einer Zeichenfolge, die in eine Variable vom Typ Zeichenfolge eingelesen wird, und einer Variablen vom Typ char []?",Ein Array von Zeichenfolgen liest die Zeichenfolgenliterale und bedeutet alles in &quot;Anführungszeichen&quot;. Ein char-Array liest eine Zeichenfolge als jedes einzelne Zeichen.,Unsa ang punoan nga kalainan tali sa usa ka hilo sa mga karakter nga mabasa sa usa ka variable sa type string kumpara sa variable sa type char []?,Ang char [] awtomatikong magdugang usa ka null \ 0 nga karakter sa katapusan sa pisi.,"Gibasa sa usa ka han-ay nga mga kwerdas ang mga string literal, nga nagpasabut bisan unsa sa sulud sa &quot;mga kinutlo&quot;. Gibasa sa usa ka char array ang usa ka string sama sa matag indibidwal nga karakter.",Vad är den största skillnaden mellan en teckensträng som läses in i en variabel av typsträng kontra en variabel av typen char []?,Tecknet [] lägger automatiskt till ett null \ 0-tecken i slutet av strängen.,"En rad strängar läser strängens bokstäver, vilket betyder allt inom &quot;citat&quot;. En char-array läser en sträng som varje enskild karaktär.",Quelle est la principale différence entre une chaîne de caractères lue dans une variable de type string et une variable de type char []?,Le char [] ajoutera automatiquement un caractère nul \ 0 à la fin de la chaîne.,"Un tableau de chaînes lit les littéraux de chaîne, ce qui signifie tout ce qui se trouve entre &quot;guillemets&quot;. Un tableau char lit une chaîne comme chaque caractère individuel.",Wat is het belangrijkste verschil tussen een reeks tekens die wordt ingelezen in een variabele van het type string versus een variabele van het type char []?,Het teken [] voegt automatisch een nul \ 0 teken toe aan het einde van de string.,"Een reeks strings leest de letterlijke tekenreeks, wat betekent dat alles tussen &quot;aanhalingstekens&quot; staat. Een char-array leest een string als elk afzonderlijk teken.","В чем основное отличие между строкой символов, считываемой в переменную типа string, и переменной типа char []?",Char [] автоматически добавит нулевой символ \ 0 в конец строки.,"Массив строк считывает строковые литералы, означающие все, что находится в «кавычках». Массив char считывает строку как каждый отдельный символ.",Qual è la principale differenza tra una stringa di caratteri che viene letta in una variabile di tipo stringa e una variabile di tipo char []?,Il carattere [] aggiungerà automaticamente un carattere null \ 0 alla fine della stringa.,"Un array di stringhe legge i letterali stringa, ovvero qualsiasi cosa racchiusa tra &quot;virgolette&quot;. Un array di caratteri legge una stringa come ogni singolo carattere.",¿Cuál es la principal diferencia entre una cadena de caracteres que se lee en una variable de tipo cadena y una variable de tipo char []?,El char [] agregará automáticamente un carácter nulo \ 0 al final de la cadena.,"Una matriz de cadenas lee los literales de cadena, es decir, cualquier cosa entre &quot;comillas&quot;. Una matriz de caracteres lee una cadena como cada carácter individual.","Jaka jest główna różnica między ciągiem znaków, który jest wczytywany do zmiennej typu string, a zmienną typu char []?",Znak [] automatycznie doda znak null \ 0 na końcu ciągu.,"Tablica ciągów odczytuje literały ciągów, co oznacza wszystko w „cudzysłowach”. Tablica znaków odczytuje ciąg jako każdy pojedynczy znak.",Sự khác biệt chính giữa một chuỗi ký tự được đọc thành một biến kiểu chuỗi so với một biến kiểu char [] là gì?,Char [] sẽ tự động thêm ký tự null \ 0 vào cuối chuỗi.,"Một mảng các chuỗi đọc các ký tự của chuỗi, có nghĩa là bất kỳ thứ gì trong &quot;dấu ngoặc kép&quot;. Mảng char đọc một chuỗi dưới dạng từng ký tự riêng lẻ.",string型の変数とchar []型の変数に読み込まれる文字列の主な違いは何ですか？,char []は、文字列の最後にnull \ 0文字を自動的に追加します。,文字列の配列は、文字列リテラル、つまり「引用符」内のすべてを読み取ります。 char配列は、文字列を個々の文字として読み取ります。,读入string类型的变量与char []类型的变量的字符串之间的主要区别是什么？,char []将在字符串的末尾自动添加一个空\ 0字符。,字符串数组读取字符串文字，表示“引号”中的所有内容。一个char数组读取一个字符串作为每个单独的字符。,ما هو الفرق الرئيسي بين سلسلة الأحرف التي تتم قراءتها في متغير من نوع السلسلة مقابل متغير من النوع char []؟,سيضيف الحرف [] تلقائيًا حرفًا فارغًا \ 0 في نهاية السلسلة.,مصفوفة من السلاسل تقرأ السلسلة الحرفية ، أي أي شيء ضمن &quot;علامات الاقتباس&quot;. يقرأ صفيف char سلسلة مثل كل حرف فردي.,"Яка основна різниця між рядком символів, який зчитується у змінну типу string від змінної типу char []?",Char [] автоматично додасть нульовий символ \ 0 в кінці рядка.,"Масив рядків читає рядкові літерали, що означає все, що знаходиться в межах &quot;лапок&quot;. Масив char читає рядок як кожен окремий символ.",Qual é a principal diferença entre uma string de caracteres que é lida em uma variável do tipo string e uma variável do tipo char []?,O char [] adicionará automaticamente um caractere nulo \ 0 no final da string.,"Um array de strings lê os literais de string, significando qualquer coisa entre &quot;aspas&quot;. Uma matriz char lê uma string como cada caractere individual.",تفاوت اصلی یک رشته از کاراکترها در یک متغیر از نوع نوع در مقابل یک متغیر از نوع char [] چیست؟,char [] به طور خودکار در انتهای رشته یک کاراکتر null \ 0 اضافه می کند.,مجموعه ای از رشته ها رشته ها را به معنای واقعی کلمه می خوانند ، به معنی هر چیزی که در &quot;نقل قول ها&quot; باشد. یک آرایه char یک رشته را به عنوان هر کاراکتر جداگانه می خواند.,Quina és la diferència principal entre una cadena de caràcters que es llegeix en una variable de tipus cadena versus una variable de tipus char []?,El caràcter [] afegirà automàticament un caràcter \ 0 nul al final de la cadena.,"Una matriu de cadenes llegeix els literals de les cadenes, és a dir, qualsevol cosa dins de les &quot;cometes&quot;. Una matriu de caràcters llegeix una cadena com cada caràcter individual.",Која је главна разлика између низа знакова који се читају у променљиву типа стринг у односу на променљиву типа цхар []?,Цхар [] ће аутоматски додати нулл \ 0 знак на крају низа.,"Низ низова чита низ литерала, што значи било шта унутар „наводника“. Низ знакова чита низ као сваки појединачни знак.",Apa perbedaan utama antara string karakter yang dibaca menjadi variabel tipe string versus variabel tipe char []?,Karakter [] secara otomatis akan menambahkan karakter null \ 0 di akhir string.,"Array string membaca string literal, yang berarti apa pun di dalam &quot;tanda kutip&quot;. Array karakter membaca string sebagai masing-masing karakter individu.",Hva er hovedforskjellen mellom en streng med tegn som leses inn i en variabel av typen streng versus en variabel av typen char []?,Char [] vil automatisk legge til et null \ 0 tegn på slutten av strengen.,"En rekke strenger leser strenglitteralene, noe som betyr noe innenfor &quot;anførselstegn&quot;. En char-array leser en streng som hvert enkelt tegn.",문자열 유형의 변수와 char [] 유형의 변수로 읽어들이는 문자열의 주요 차이점은 무엇입니까?,char []는 문자열 끝에 null \ 0 문자를 자동으로 추가합니다.,문자열 배열은 문자열 리터럴을 읽습니다. 이는 &quot;따옴표&quot;내의 모든 것을 의미합니다. char 배열은 각 개별 문자로 문자열을 읽습니다.,"Mikä on tärkein ero merkkijonossa, joka luetaan merkkijonon muuttujaksi tyypin char [] muuttujaan?",Char [] lisää merkkijonon loppuun tyhjän merkin 0.,"Joukko merkkijonoja lukee merkkijonon literaalit, mikä tarkoittaa mitä tahansa &quot;lainausmerkeissä&quot;. Char-taulukko lukee merkkijonon jokaisena yksittäisenä merkkinä.","Mi a fő különbség a karakterláncok között, amelyeket string típusú változóba olvasnak, és a char [] típusú változókba?",A char [] automatikusan hozzáad egy null \ 0 karaktert a karakterlánc végéhez.,"A karakterláncok tömbje olvassa a karakterláncokat, ami bármit jelent az &quot;idézetek&quot; között. A char tömb minden egyes karakterként karakterláncot olvas.","Jaký je hlavní rozdíl mezi řetězcem znaků, který je načten do proměnné typu řetězec oproti proměnné typu char []?",Znak [] automaticky přidá znak null \ 0 na konec řetězce.,"Pole řetězců čte řetězcové literály, což znamená cokoli v rámci „uvozovek“. Pole char čte řetězec jako každý jednotlivý znak.",Koja je glavna razlika između niza znakova koji se čitaju u varijablu tipa string u odnosu na varijablu tipa char []?,Char [] automatski će dodati null \ 0 znak na kraju niza.,"Niz nizova čita niz literala, što znači bilo što unutar &quot;navodnika&quot;. Polje char čita niz kao svaki pojedinačni znak."
484,484,1653,9.6,push,push,What is the stack operation corresponding to the enqueue operation in queues?,5.0,drücken,"Was ist die Stapeloperation, die der Warteschlangenoperation in Warteschlangen entspricht?",drücken,Unsa ang operasyon sa stack nga katumbas sa enqueue nga operasyon sa mga pila?,iduso,iduso,Vad motsvarar stackoperationen enqueue-operationen i köer?,tryck,tryck,Quelle est l&#39;opération de pile correspondant à l&#39;opération de mise en file d&#39;attente dans les files d&#39;attente?,poussez,poussez,Wat is de stapelbewerking die overeenkomt met de bewerking in wachtrij plaatsen?,Duwen,Duwen,Какая операция стека соответствует операции постановки в очередь в очередях?,От себя,От себя,Qual è l&#39;operazione di stack corrispondente all&#39;operazione di accodamento nelle code?,spingere,spingere,¿Cuál es la operación de pila correspondiente a la operación de puesta en cola en colas?,empujar,empujar,Jaka jest operacja na stosie odpowiadająca operacji umieszczania w kolejce w kolejkach?,Pchać,Pchać,Hoạt động ngăn xếp tương ứng với hoạt động xếp hàng trong hàng đợi là gì?,đẩy,đẩy,キュー内のエンキュー操作に対応するスタック操作とは何ですか？,押す,押す,与队列中的入队操作相对应的堆栈操作是什么？,推,推,ما هي عملية المكدس المقابلة لعملية قائمة الانتظار في قوائم الانتظار؟,إدفع,إدفع,"Що таке операція стеку, що відповідає операції черги в чергах?",штовхати,штовхати,Qual é a operação de pilha correspondente à operação de enfileiramento nas filas?,empurrar,empurrar,عملیات پشته متناسب با عملیات enqueue در صف چیست؟,فشار دادن,فشار دادن,Quina és l&#39;operació de pila corresponent a l&#39;operació de cola a les cues?,empènyer,empènyer,Која је операција стека која одговара операцији чекања у редовима?,гурати,гурати,Apa operasi stack yang sesuai dengan operasi enqueue dalam antrian?,Dorong,Dorong,Hva tilsvarer stackoperasjonen enqueue-operasjonen i køer?,trykk,trykk,대기열에 넣는 작업에 해당하는 스택 작업은 무엇입니까?,푸시,푸시,Mikä pinooperaatio vastaa jonojen enqueue-operaatiota?,työntää,työntää,"Mi a verem művelet, amely megfelel a sorok enqueue műveletének?",nyom,nyom,Co je operace zásobníku odpovídající operaci zařazení do fronty?,tlačit,tlačit,Koja je operacija slaganja koja odgovara operaciji čekanja u redovima?,gurnuti,gurnuti
485,485,1375,8.3,if you used an array to implement a stack when you add an element just add it to the end of an array and remove items from end of array also.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",How can you implement a stack with an array?,4.5,"Halten Sie die Oberseite des Stapels gegen Ende des Arrays, damit durch die Push- und Pop-Vorgänge Elemente von der rechten Seite des Arrays hinzugefügt oder entfernt werden.",Wie können Sie einen Stack mit einem Array implementieren?,"Wenn Sie beim Hinzufügen eines Elements ein Array zum Implementieren eines Stapels verwendet haben, fügen Sie es einfach am Ende eines Arrays hinzu und entfernen Sie auch Elemente vom Ende des Arrays.",Giunsa nimo ipatuman ang usa ka stack nga adunay usa ka array?,"Ipadayon ang tumoy sa stack padulong sa katapusan sa laray, mao nga ang pagduso ug mga operasyon sa pop magdugang o magtangtang sa mga elemento gikan sa tuo nga bahin sa laray.",kung gigamit nimo ang usa ka array aron ipatuman ang usa ka stack kung magdugang ka usa ka elemento idugang ra kini sa katapusan sa usa ka laray ug tangtangon usab ang mga butang gikan sa katapusan sa laray.,Hur kan du implementera en stack med en array?,"Håll toppen av stacken mot slutet av arrayen, så push- och pop-operationerna lägger till eller tar bort element från arrayens högra sida.",om du använde en array för att implementera en stack när du lägger till ett element lägger du bara till det i slutet av en array och tar bort objekt från slutet av arrayen också.,Comment pouvez-vous implémenter une pile avec un tableau?,"Gardez le haut de la pile vers la fin du tableau, de sorte que les opérations push et pop ajoutent ou suppriment des éléments du côté droit du tableau.","si vous avez utilisé un tableau pour implémenter une pile lorsque vous ajoutez un élément, ajoutez-le simplement à la fin d&#39;un tableau et supprimez également les éléments de la fin du tableau.",Hoe kun je een stapel met een array implementeren?,"Houd de bovenkant van de stapel tegen het einde van de array, zodat de push- en pop-bewerkingen elementen aan de rechterkant van de array toevoegen of verwijderen.","als je een array hebt gebruikt om een stapel te implementeren wanneer je een element toevoegt, voeg je het gewoon toe aan het einde van een array en verwijder je ook items van het einde van de array.",Как можно реализовать стек с массивом?,"Держите верх стека ближе к концу массива, чтобы операции push и pop добавляли или удаляли элементы с правой стороны массива.","если вы использовали массив для реализации стека, когда вы добавляете элемент, просто добавьте его в конец массива и также удалите элементы из конца массива.",Come puoi implementare uno stack con un array?,"Mantieni la parte superiore dello stack verso la fine dell&#39;array, in modo che le operazioni push e pop aggiungeranno o rimuoveranno elementi dal lato destro dell&#39;array.","se hai usato un array per implementare uno stack quando aggiungi un elemento, aggiungilo semplicemente alla fine di un array e rimuovi anche gli elementi dalla fine dell&#39;array.",¿Cómo se puede implementar una pila con una matriz?,"Mantenga la parte superior de la pila hacia el final de la matriz, de modo que las operaciones de inserción y extracción agreguen o eliminen elementos del lado derecho de la matriz.","si usó una matriz para implementar una pila cuando agrega un elemento, simplemente agréguelo al final de una matriz y elimine los elementos del final de la matriz también.",Jak zaimplementować stos z tablicą?,"Zachowaj górę stosu w kierunku końca tablicy, aby operacje push i pop dodały lub usunęły elementy z prawej strony tablicy.","jeśli użyłeś tablicy do zaimplementowania stosu podczas dodawania elementu, po prostu dodaj go na końcu tablicy i usuń również elementy z końca tablicy.",Làm thế nào bạn có thể triển khai một ngăn xếp với một mảng?,"Giữ phần trên cùng của ngăn xếp về phía cuối của mảng, vì vậy các thao tác đẩy và bật sẽ thêm hoặc xóa các phần tử từ phía bên phải của mảng.","Nếu bạn đã sử dụng một mảng để triển khai ngăn xếp khi bạn thêm một phần tử, chỉ cần thêm nó vào cuối một mảng và cũng xóa các mục khỏi cuối mảng.",配列を使用してスタックを実装するにはどうすればよいですか？,スタックの一番上を配列の終わりに向けて保持します。これにより、プッシュおよびポップ操作によって、配列の右側に要素が追加または削除されます。,要素を追加するときに配列を使用してスタックを実装した場合は、それを配列の最後に追加し、配列の最後からもアイテムを削除します。,如何实现带有数组的堆栈？,将堆栈的顶部保持在数组的末尾，因此push和pop操作将在数组的右侧添加或删除元素。,如果您在添加元素时使用数组实现堆栈，则只需将其添加到数组的末尾并从数组末尾删除项。,كيف يمكنك تنفيذ مكدس بمصفوفة؟,احتفظ بأعلى المكدس في نهاية المصفوفة ، لذلك ستضيف عمليات الدفع والفرقعة عناصر أو تزيلها من الجانب الأيمن من المصفوفة.,إذا استخدمت مصفوفة لتنفيذ مكدس عند إضافة عنصر ، فما عليك سوى إضافته إلى نهاية المصفوفة وإزالة العناصر من نهاية المصفوفة أيضًا.,Як можна реалізувати стек з масивом?,"Тримайте верх стека до кінця масиву, так що операції push та pop будуть додавати або видаляти елементи з правої сторони масиву.","якщо ви використовували масив для реалізації стека при додаванні елемента, просто додайте його в кінець масиву і також видаліть елементи з кінця масиву.",Como você pode implementar uma pilha com um array?,"Mantenha o topo da pilha próximo ao final da matriz, para que as operações push e pop adicionem ou remova elementos do lado direito da matriz.","se você usou um array para implementar uma pilha ao adicionar um elemento, basta adicioná-lo ao final de um array e remover os itens do final do array também.",چگونه می توان پشته ای را با آرایه پیاده سازی کرد؟,قسمت بالای پشته را به سمت انتهای آرایه نگه دارید ، بنابراین با فشار دادن و پاپ ، عناصر سمت راست آرایه اضافه یا حذف می شوند.,اگر هنگام افزودن یک عنصر از یک آرایه برای پیاده سازی استفاده کردید ، آن را به انتهای آرایه اضافه کنید و موارد را از انتهای آرایه نیز حذف کنید.,Com es pot implementar una pila amb una matriu?,"Mantingueu la part superior de la pila cap al final de la matriu, de manera que les operacions push i pop afegiran o eliminaran elements del costat dret de la matriu.","si heu utilitzat una matriu per implementar una pila quan afegiu un element, només cal afegir-la al final d&#39;una matriu i eliminar també elements del final de la matriu.",Како можете применити стог низом?,"Држите врх стека према крају низа, тако да ће пусх и поп операције додати или уклонити елементе с десне стране низа.","ако сте за додавање елемента користили низ за додавање елемента, само га додајте на крај низа и уклоните ставке и са краја низа.",Bagaimana Anda bisa mengimplementasikan tumpukan dengan array?,"Pertahankan bagian atas tumpukan mendekati akhir larik, sehingga operasi push dan pop akan menambah atau menghapus elemen dari sisi kanan larik.","jika Anda menggunakan sebuah array untuk mengimplementasikan tumpukan saat Anda menambahkan elemen, tambahkan saja ke akhir array dan hapus juga item dari akhir array.",Hvordan kan du implementere en stabel med en matrise?,"Hold toppen av stabelen mot slutten av matrisen, slik at trykk- og popoperasjonene vil legge til eller fjerne elementer fra høyre side av matrisen.","hvis du brukte en matrise for å implementere en bunke når du legger til et element, bare legg den til slutten av en matrise og fjern også elementer fra slutten av matrisen.",어레이로 스택을 어떻게 구현할 수 있습니까?,스택의 맨 위를 배열의 끝쪽으로 유지하면 푸시 및 팝 작업이 배열의 오른쪽에서 요소를 추가하거나 제거합니다.,요소를 추가 할 때 스택을 구현하기 위해 배열을 사용한 경우 배열 끝에 추가하고 배열 끝에서도 항목을 제거합니다.,Kuinka pino voidaan toteuttaa matriisilla?,"Pidä pinon yläosaa matriisin loppua kohti, jotta push- ja pop-toiminnot lisäävät tai poistavat elementtejä ryhmän oikealta puolelta.","Jos käytit taulukkoa pinon toteuttamiseen, kun lisäät elementin, lisää se vain taulukon loppuun ja poista kohteet myös taulukon päästä.",Hogyan valósíthat meg egy halmot tömböt?,"Tartsa a verem tetejét a tömb vége felé, hogy a push és a pop műveletek hozzáadják vagy eltávolítsák az elemeket a tömb jobb oldalán.","Ha tömböt használtál a verem megvalósításához, amikor elemet adsz hozzá, csak add hozzá egy tömb végéhez, és távolíts el elemeket a tömb végéből is.",Jak můžete implementovat zásobník s polem?,"Udržujte horní část zásobníku směrem ke konci pole, takže operace push a pop přidají nebo odeberou prvky z pravé strany pole.","pokud jste použili pole k implementaci zásobníku, když přidáváte prvek, jednoduše jej přidejte na konec pole a také odeberte položky z konce pole.",Kako možete implementirati stog s nizom?,"Držite vrh stoga prema kraju niza, tako da će push i pop operacije dodati ili ukloniti elemente s desne strane niza.","ako ste koristili niz za implementaciju stoga kad dodajete element, samo ga dodajte na kraj niza i uklonite i stavke s kraja niza."
486,486,270,2.3,A constructor does not return any date and has no return type.  Functions can return date or not return data can have a return type.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",What is the difference between a constructor and a function?,4.0,"Ein Konstruktor wird immer dann aufgerufen, wenn ein Objekt erstellt wird, während eine Funktion explizit aufgerufen werden muss. Konstruktoren haben keinen Rückgabetyp, aber Funktionen müssen einen Rückgabetyp angeben.",Was ist der Unterschied zwischen einem Konstruktor und einer Funktion?,Ein Konstruktor gibt kein Datum zurück und hat keinen Rückgabetyp. Funktionen können das Datum zurückgeben oder nicht. Rückgabedaten können einen Rückgabetyp haben.,Unsa ang kalainan sa usa ka magtutukod ug usa ka pagpaandar?,"Ang usa nga magtutukod gitawag bisan kanus-a gimugna ang usa ka butang, samtang ang usa ka gimbuhaton kinahanglan tawgon nga dayag. Ang mga magtutukod wala&#39;y tipo sa pagbalik, apan ang mga gimbuhaton kinahanglan magpakita usa ka tipo sa pagbalik.",Ang usa ka magtutukod dili mobalik bisan unsang petsa ug wala’y klase sa pagbalik. Ang mga pagpaandar mahimo nga ibalik ang petsa o dili ibalik ang datos mahimong adunay usa ka tipo sa pagbalik.,Vad är skillnaden mellan en konstruktör och en funktion?,"En konstruktör anropas närhelst ett objekt skapas, medan en funktion måste anropas uttryckligen. Konstruktörer har inte returtyp, men funktioner måste ange en returtyp.",En konstruktör returnerar inget datum och har ingen returtyp. Funktioner kan returnera datum eller inte returnera data kan ha en returtyp.,Quelle est la différence entre un constructeur et une fonction?,"Un constructeur est appelé chaque fois qu&#39;un objet est créé, alors qu&#39;une fonction doit être appelée explicitement. Les constructeurs n&#39;ont pas de type de retour, mais les fonctions doivent indiquer un type de retour.",Un constructeur ne renvoie aucune date et n&#39;a pas de type de retour. Les fonctions peuvent retourner la date ou ne pas renvoyer les données peuvent avoir un type de retour.,Wat is het verschil tussen een constructor en een functie?,"Een constructor wordt aangeroepen wanneer een object wordt gemaakt, terwijl een functie expliciet moet worden aangeroepen. Constructors hebben geen retourtype, maar functies moeten een retourtype aangeven.","Een constructor retourneert geen datum en heeft geen retourtype. Functies kunnen datum retourneren of gegevens niet retourneren, kunnen een retourtype hebben.",В чем разница между конструктором и функцией?,"Конструктор вызывается всякий раз, когда создается объект, тогда как функция должна вызываться явно. Конструкторы не имеют типа возвращаемого значения, но функции должны указывать тип возвращаемого значения.","Конструктор не возвращает дату и не имеет возвращаемого типа. Функции могут возвращать дату или не возвращать данные, могут иметь возвращаемый тип.",Qual è la differenza tra un costruttore e una funzione?,"Un costruttore viene chiamato ogni volta che viene creato un oggetto, mentre una funzione deve essere chiamata esplicitamente. I costruttori non hanno un tipo di ritorno, ma le funzioni devono indicare un tipo di ritorno.",Un costruttore non restituisce alcuna data e non ha un tipo restituito. Le funzioni possono restituire la data o non restituire i dati possono avere un tipo restituito.,¿Cuál es la diferencia entre un constructor y una función?,"Se llama a un constructor cada vez que se crea un objeto, mientras que una función debe llamarse explícitamente. Los constructores no tienen tipo de retorno, pero las funciones deben indicar un tipo de retorno.",Un constructor no devuelve ninguna fecha y no tiene ningún tipo de retorno. Las funciones pueden devolver la fecha o no devolver los datos pueden tener un tipo de retorno.,Jaka jest różnica między konstruktorem a funkcją?,"Konstruktor jest wywoływany za każdym razem, gdy tworzony jest obiekt, podczas gdy funkcja musi być wywoływana jawnie. Konstruktory nie mają typu zwracanego, ale funkcje muszą wskazywać typ zwracany.","Konstruktor nie zwraca żadnej daty i nie zwraca typu. Funkcje mogą zwracać datę lub nie zwracać danych, mogą mieć typ zwracany.",Sự khác biệt giữa hàm tạo và hàm là gì?,"Một hàm tạo được gọi bất cứ khi nào một đối tượng được tạo, trong khi một hàm cần được gọi một cách rõ ràng. Các hàm tạo không có kiểu trả về, nhưng các hàm phải chỉ ra kiểu trả về.",Một hàm tạo không trả về bất kỳ ngày nào và không có kiểu trả về. Các hàm có thể trả về ngày tháng hoặc không trả về dữ liệu có thể có kiểu trả về.,コンストラクターと関数の違いは何ですか？,オブジェクトが作成されるたびにコンストラクターが呼び出されますが、関数は明示的に呼び出す必要があります。コンストラクターには戻り値の型はありませんが、関数は戻り値の型を示す必要があります。,コンストラクターは日付を返さず、戻り値の型もありません。関数は日付を返すことも、データを返さないことも戻り値の型を持つことができます。,构造函数和函数之间有什么区别？,每当创建对象时都会调用构造函数，而函数则需要显式调用。构造函数没有返回类型，但是函数必须指示返回类型。,构造函数不返回任何日期，并且没有返回类型。函数可以返回日期或不返回数据，可以具有返回类型。,ما هو الفرق بين المنشئ والدالة؟,يتم استدعاء المُنشئ كلما تم إنشاء كائن ، بينما يجب استدعاء الدالة بشكل صريح. ليس للمُنشئين نوع إرجاع ، ولكن يجب أن تشير الوظائف إلى نوع إرجاع.,لا يقوم المُنشئ بإرجاع أي تاريخ وليس له نوع إرجاع. يمكن للوظائف إرجاع التاريخ أو عدم إرجاع البيانات يمكن أن يكون لها نوع إرجاع.,У чому різниця між конструктором і функцією?,"Конструктор викликається щоразу, коли створюється об&#39;єкт, тоді як функцію потрібно викликати просто. Конструктори не мають типу повернення, але функції повинні вказувати тип повернення.",Конструктор не повертає жодної дати і не має типу повернення. Функції можуть повертати дату або не повертати дані можуть мати тип повернення.,Qual é a diferença entre um construtor e uma função?,"Um construtor é chamado sempre que um objeto é criado, enquanto uma função precisa ser chamada explicitamente. Construtores não possuem tipo de retorno, mas as funções devem indicar um tipo de retorno.","Um construtor não retorna nenhuma data e não tem tipo de retorno. As funções podem retornar a data ou não, os dados podem ter um tipo de retorno.",تفاوت بین سازنده و تابع چیست؟,هر زمان که یک شی created ایجاد می شود سازنده فراخوانی می شود ، در حالی که یک تابع باید به صراحت فراخوانی شود. سازنده ها نوع بازگشتی ندارند ، اما توابع باید نوع بازگشتی را نشان دهند.,سازنده هیچ تاریخی را بر نمی گرداند و نوع بازگشتی ندارد. توابع می توانند تاریخ برگردانند یا داده های برگشتی نمی توانند نوع بازگشتی داشته باشند.,Quina diferència hi ha entre un constructor i una funció?,"Es diu un constructor sempre que es crea un objecte, mentre que una funció s&#39;ha de cridar explícitament. Els constructors no tenen tipus de retorn, però les funcions han d’indicar un tipus de retorn.",Un constructor no retorna cap data i no té cap tipus de retorn. Les funcions poden retornar la data o no les dades de retorn poden tenir un tipus de retorn.,Која је разлика између конструктора и функције?,"Конструктор се позива кад год се објекат креира, док функцију треба позвати експлицитно. Конструктори немају тип повратка, али функције морају назначити тип повратка.","Конструктор не враћа ниједан датум и нема тип повратка. Функције могу да врате датум или не, подаци о враћању могу имати тип поврата.",Apa perbedaan antara konstruktor dan fungsi?,"Konstruktor dipanggil setiap kali objek dibuat, sedangkan fungsi perlu dipanggil secara eksplisit. Konstruktor tidak memiliki tipe kembalian, tetapi fungsi harus menunjukkan tipe kembalian.",Konstruktor tidak mengembalikan tanggal apa pun dan tidak memiliki tipe pengembalian. Fungsi dapat mengembalikan tanggal atau tidak mengembalikan data dapat memiliki tipe pengembalian.,Hva er forskjellen mellom en konstruktør og en funksjon?,"En konstruktør kalles når et objekt opprettes, mens en funksjon må kalles eksplisitt. Konstruktører har ikke returtype, men funksjoner må angi en returtype.",En konstruktør returnerer ingen dato og har ingen returtype. Funksjoner kan returnere dato eller ikke returnere data kan ha en returtype.,생성자와 함수의 차이점은 무엇입니까?,생성자는 객체가 생성 될 때마다 호출되는 반면 함수는 명시 적으로 호출되어야합니다. 생성자에는 반환 유형이 없지만 함수는 반환 유형을 나타내야합니다.,생성자는 날짜를 반환하지 않으며 반환 유형이 없습니다. 함수는 날짜를 반환 할 수 있거나 반환하지 않는 데이터는 반환 유형을 가질 수 있습니다.,Mikä on ero konstruktorin ja funktion välillä?,"Rakentaja kutsutaan aina, kun objekti luodaan, kun taas funktio on kutsuttava yksiselitteisesti. Rakentajilla ei ole palautustyyppiä, mutta toimintojen on ilmoitettava palautustyyppi.",Rakentaja ei palauta päivämäärää eikä palautustyyppiä ole. Toiminnot voivat palauttaa päivämäärän tai palauttamattomilla tiedoilla voi olla palautustyyppi.,Mi a különbség a konstruktor és a függvény között?,"A konstruktort akkor hívják meg, amikor egy objektum létrejön, míg egy függvényt kifejezetten meg kell hívni. A kivitelezőknek nincs visszatérési típusuk, de a függvényeknek meg kell jelölniük a visszatérés típusát.","A kivitelező nem ad vissza dátumot, és nincs visszatérési típusa. A funkciók visszaküldhetik a dátumot, vagy nem adhatják vissza az adatokat.",Jaký je rozdíl mezi konstruktorem a funkcí?,"Konstruktor je volán vždy, když je vytvořen objekt, zatímco funkce musí být volána explicitně. Konstruktory nemají návratový typ, ale funkce musí označovat návratový typ.",Konstruktor nevrací žádné datum a nemá žádný návratový typ. Funkce mohou vrátit datum nebo nevrátit data mohou mít návratový typ.,Koja je razlika između konstruktora i funkcije?,"Konstruktor se poziva kad god se stvori objekt, dok funkciju treba pozvati eksplicitno. Konstruktori nemaju tip povratka, ali funkcije moraju naznačiti tip povratka.","Konstruktor ne vraća nijedan datum i nema tip povrata. Funkcije mogu vratiti datum ili ne, podaci o vraćanju mogu imati tip povrata."
487,487,1766,10.4,"A tree data structure in which each done has at most two children, typical called left and right nodes.  The right node is usually greater than the left node and the parent node.",A tree for which the maximum number of children per node is two.,What is a binary tree?,4.5,"Ein Baum, für den die maximale Anzahl von untergeordneten Elementen pro Knoten zwei beträgt.",Was ist ein Binärbaum?,"Eine Baumdatenstruktur, in der jeder Vorgang höchstens zwei untergeordnete Knoten hat, die normalerweise als linke und rechte Knoten bezeichnet werden. Der rechte Knoten ist normalerweise größer als der linke Knoten und der übergeordnete Knoten.",Unsa ang usa ka binary nga kahoy?,Usa ka kahoy diin ang labing kadaghan nga mga bata matag node ang duha.,"Usa ka istruktura sa datos sa kahoy diin ang matag usa adunay labing daghan nga duha nga mga bata, tipikal nga gitawag nga wala ug tuo nga mga node. Ang tuo nga node kasagaran labi ka daghan kaysa sa wala nga node ug sa ginikanan nga node.",Vad är ett binärt träd?,Ett träd där det maximala antalet barn per nod är två.,"En träddatastruktur där varje gjort högst har två barn, typiskt kallade vänster- och högernoder. Den högra noden är vanligtvis större än den vänstra noden och föräldernoden.",Qu&#39;est-ce qu&#39;un arbre binaire?,Un arbre pour lequel le nombre maximum d&#39;enfants par nœud est de deux.,"Une structure de données arborescente dans laquelle chaque élément fait a au plus deux enfants, généralement appelés nœuds gauche et droit. Le nœud droit est généralement plus grand que le nœud gauche et le nœud parent.",Wat is een binaire boom?,Een boom waarvoor het maximale aantal kinderen per knooppunt twee is.,"Een datastructuur van een boom waarin elk gedaan maximaal twee kinderen heeft, typisch linker en rechter knooppunten genoemd. Het rechterknooppunt is meestal groter dan het linkerknooppunt en het bovenliggende knooppunt.",Что такое бинарное дерево?,"Дерево, для которого максимальное количество потомков на узел равно двум.","Древовидная структура данных, в которой каждый done имеет не более двух дочерних элементов, обычно называемых левым и правым узлами. Правый узел обычно больше, чем левый узел и родительский узел.",Cos&#39;è un albero binario?,Un albero per il quale il numero massimo di elementi secondari per nodo è due.,"Una struttura di dati ad albero in cui ogni fatto ha al massimo due figli, tipici chiamati nodi sinistro e destro. Il nodo destro è solitamente maggiore del nodo sinistro e del nodo padre.",¿Qué es un árbol binario?,Un árbol para el que el número máximo de hijos por nodo es dos.,"Una estructura de datos de árbol en la que cada hecho tiene como máximo dos hijos, típicos llamados nodos izquierdo y derecho. El nodo derecho suele ser mayor que el nodo izquierdo y el nodo principal.",Co to jest drzewo binarne?,"Drzewo, dla którego maksymalna liczba dzieci na węzeł wynosi dwa.","Drzewiasta struktura danych, w której każdy z nich ma co najwyżej dwoje dzieci, typowo zwane lewym i prawym węzłem. Prawy węzeł jest zwykle większy niż lewy węzeł i węzeł nadrzędny.",Cây nhị phân là gì?,Cây có số lượng nút con tối đa cho mỗi nút là hai.,"Cấu trúc dữ liệu cây trong đó mỗi cấu trúc được thực hiện có nhiều nhất hai nút con, điển hình được gọi là nút trái và nút phải. Nút bên phải thường lớn hơn nút bên trái và nút cha.",二分木とは何ですか？,ノードあたりの子の最大数が2であるツリー。,それぞれが行われるツリーデータ構造には、最大で2つの子があり、通常は左ノードと右ノードと呼ばれます。通常、右側のノードは左側のノードおよび親ノードよりも大きくなります。,什么是二叉树？,一棵树，每个节点的最大子节点数为2。,一个树数据结构，其中每个完成最多包含两个子节点，通常称为左节点和右节点。右节点通常大于左节点和父节点。,ما هي الشجرة الثنائية؟,شجرة بها الحد الأقصى لعدد الأطفال لكل عقدة هو اثنان.,هيكل بيانات شجرة يحتوي كل إجراء فيه على طفلين على الأكثر ، يُطلق عليهما نموذجي العقد اليسرى واليمنى. عادة ما تكون العقدة اليمنى أكبر من العقدة اليسرى والعقدة الأصلية.,Що таке бінарне дерево?,"Дерево, для якого максимальна кількість дітей на вузол - два.","Деревоподібна структура даних, у якій кожне виконане має щонайбільше двох дочірніх елементів, що зазвичай називається лівим і правим вузлами. Правий вузол зазвичай більший за лівий вузол і батьківський вузол.",O que é uma árvore binária?,Uma árvore para a qual o número máximo de filhos por nó é dois.,"Uma estrutura de dados em árvore na qual cada feito tem no máximo dois filhos, normalmente chamados de nós esquerdo e direito. O nó direito geralmente é maior do que o nó esquerdo e o nó pai.",درخت باینری چیست؟,درختی که حداکثر تعداد فرزندان در هر گره برای آن دو باشد.,یک ساختار داده درختی که هر کدام از آنها انجام شده حداکثر دارای دو فرزند است که معمولاً گره های چپ و راست نامیده می شوند. گره راست معمولاً بیشتر از گره سمت چپ و گره اصلی است.,Què és un arbre binari?,Un arbre per al qual el nombre màxim de fills per node és de dos.,"Una estructura de dades d’arbre en què cadascun dels fets té com a màxim dos fills, típicament anomenats nodes esquerre i dret. El node dret sol ser més gran que el node esquerre i el node pare.",Шта је бинарно стабло?,Стабло за које је максималан број деце по чвору две.,"Структура података стабла у којој свако урађено има највише двоје деце, типично зване леви и десни чворови. Десни чвор је обично већи од левог и родитељског чвора.",Apa itu pohon biner?,Pohon dengan jumlah anak maksimum per node adalah dua.,"Struktur data pohon di mana setiap done memiliki paling banyak dua turunan, biasanya disebut node kiri dan kanan. Node kanan biasanya lebih besar dari node kiri dan node induk.",Hva er et binært tre?,Et tre hvor det maksimale antall barn per node er to.,"En tredatastruktur der hver utførte har maksimalt to barn, typisk kalt venstre og høyre noder. Den høyre noden er vanligvis større enn den venstre noden og foreldrenoden.",이진 트리는 무엇입니까?,노드 당 최대 자식 수가 2 인 트리입니다.,각각 완료되는 트리 데이터 구조에는 일반적으로 왼쪽 및 오른쪽 노드라고하는 두 개의 하위가 있습니다. 오른쪽 노드는 일반적으로 왼쪽 노드 및 상위 노드보다 큽니다.,Mikä on binaarinen puu?,"Puu, jonka enimmäismäärä lapsia solmua kohden on kaksi.","Puun tietorakenne, jossa jokaisella tehdyllä on enintään kaksi lasta, tyypillisesti kutsutut vasen ja oikea solmu. Oikea solmu on yleensä suurempi kuin vasen solmu ja yläsolmu.",Mi az a bináris fa?,"Egy fa, amelynek csomópontonként legfeljebb két gyermeke van.","Egy fa adatszerkezet, amelyben minden elkészítettnek legfeljebb két gyermeke van, ezeket általában bal és jobb csomópontnak nevezik. A jobb csomópont általában nagyobb, mint a bal és a szülő csomópont.",Co je to binární strom?,"Strom, pro který jsou maximální počet dětí v uzlu dva.","Stromová datová struktura, ve které má každý z nich nanejvýš dvě podřízené položky, obvykle nazývané levý a pravý uzel. Pravý uzel je obvykle větší než levý uzel a nadřazený uzel.",Šta je binarno stablo?,Stablo za koje je maksimalni broj djece po čvoru dva.,"Struktura podataka stabla u kojoj svako urađeno ima najviše dvoje djece, tipično nazvane lijevi i desni čvor. Desni čvor je obično veći od lijevog i nadređenog čvora."
488,488,2167,12.1,a pointer points to a location in memory of a certain data type,The address of a location in memory.,What is a pointer?,5.0,Die Adresse eines Speicherorts.,Was ist ein Zeiger?,Ein Zeiger zeigt auf eine Stelle im Speicher eines bestimmten Datentyps,Unsa ang usa ka pointer?,Ang adres sa usa ka lokasyon sa memorya.,ang usa ka pointer nagpunting sa usa ka lokasyon sa panumduman sa usa ka piho nga tipo sa datos,Vad är en pekare?,Adressen till en plats i minnet.,en pekare pekar på en plats i minnet av en viss datatyp,Qu&#39;est-ce qu&#39;un pointeur?,L&#39;adresse d&#39;un emplacement en mémoire.,un pointeur pointe vers un emplacement en mémoire d&#39;un certain type de données,Wat is een aanwijzer?,Het adres van een locatie in het geheugen.,een aanwijzer wijst naar een locatie in het geheugen van een bepaald gegevenstype,Что такое указатель?,Адрес места в памяти.,указатель указывает на место в памяти определенного типа данных,Cos&#39;è un puntatore?,L&#39;indirizzo di una posizione in memoria.,un puntatore punta a una posizione nella memoria di un certo tipo di dati,¿Qué es un puntero?,La dirección de una ubicación en la memoria.,un puntero apunta a una ubicación en la memoria de un cierto tipo de datos,Co to jest wskaźnik?,Adres lokalizacji w pamięci.,wskaźnik wskazuje na lokalizację w pamięci określonego typu danych,Con trỏ là gì?,Địa chỉ của một vị trí trong bộ nhớ.,một con trỏ trỏ đến một vị trí trong bộ nhớ của một kiểu dữ liệu nhất định,ポインタとは何ですか？,メモリ内の場所のアドレス。,ポインタが特定のデータ型のメモリ内の場所を指している,什么是指针？,内存中位置的地址。,指针指向某种数据类型在内存中的位置,ما هو المؤشر؟,عنوان موقع في الذاكرة.,يشير المؤشر إلى موقع في الذاكرة لنوع بيانات معين,Що таке вказівник?,Адреса місця в пам&#39;яті.,вказівник вказує на місце в пам&#39;яті певного типу даних,O que é um ponteiro?,O endereço de um local na memória.,um ponteiro aponta para um local na memória de um certo tipo de dados,اشاره گر چیست؟,آدرس مکانی در حافظه.,یک نشانگر به مکانی از حافظه از نوع داده خاص اشاره می کند,Què és un punter?,L&#39;adreça d&#39;una ubicació a la memòria.,un punter apunta a una ubicació a la memòria d&#39;un determinat tipus de dades,Шта је показивач?,Адреса локације у меморији.,показивач показује на локацију у меморији одређеног типа података,Apa itu penunjuk?,Alamat lokasi di memori.,penunjuk menunjuk ke lokasi dalam memori dari tipe data tertentu,Hva er en peker?,Adressen til en plassering i minnet.,en peker peker på et sted i minnet av en bestemt datatype,포인터 란 무엇입니까?,메모리에있는 위치의 주소.,특정 데이터 유형의 메모리 위치를 가리키는 포인터,Mikä on osoitin?,Muistissa olevan sijainnin osoite.,osoitin osoittaa tietyn tietotyypin muistipaikkaan,Mi az a mutató?,A memóriában lévő hely címe.,egy mutató egy adott adattípus memóriájában található helyre mutat,Co je to ukazatel?,Adresa umístění v paměti.,ukazatel ukazuje na místo v paměti určitého datového typu,Šta je pokazivač?,Adresa lokacije u memoriji.,pokazivač pokazuje na mjesto u memoriji određenog tipa podataka
